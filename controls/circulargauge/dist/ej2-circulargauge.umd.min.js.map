{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    //tslint:disable\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n            updateBlazorTemplate(element.id + '_ContentTemplate', 'ContentTemplate');\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            var templateFn;\n            var templateElement;\n            var blazor = 'Blazor';\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content);\n                if (templateFn && (!window[blazor] ? templateFn(axis, null, null, element.id + '_ContentTemplate').length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!window[blazor] ? axis : {}, null, null, element.id + '_ContentTemplate'));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n            }\n            else {\n                resetBlazorTemplate(element.id + '_ContentTemplate', '_ContentTemplate');\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var roundValue = void 0;\n            roundValue = this.currentAxis.roundingPlaces ?\n                parseFloat(this.currentPointer.currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n                this.currentPointer.currentValue;\n            var content_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs_1 = {\n                name: tooltipRender, cancel: false, content: content_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs_1, function (observedArgs) {\n                var template = tooltipArgs_1.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!_this.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, content_1, tooltipArgs_1.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, content_1, tooltipArgs_1.location);\n                    }\n                }\n                else {\n                    tooltipArgs_1.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs_1.cancel && !samePointerEle) {\n                    tooltipArgs_1.tooltip.textStyle.color = tooltipArgs_1.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs_1.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs_1.tooltip.textStyle.fontFamily;\n                    tooltipArgs_1.tooltip.textStyle.opacity =\n                        _this.gauge.themeStyle.tooltipTextOpacity || tooltipArgs_1.tooltip.textStyle.opacity;\n                    _this.svgTooltip = new Tooltip({\n                        enable: true,\n                        data: { value: tooltipArgs_1.content },\n                        template: template,\n                        enableAnimation: tooltipArgs_1.tooltip.enableAnimation,\n                        content: [tooltipArgs_1.content],\n                        location: tooltipArgs_1.location,\n                        inverted: _this.arrowInverted,\n                        areaBounds: _this.tooltipRect,\n                        fill: tooltipArgs_1.tooltip.fill || _this.gauge.themeStyle.tooltipFillColor,\n                        textStyle: tooltipArgs_1.tooltip.textStyle,\n                        availableSize: _this.gauge.availableSize,\n                        border: tooltipArgs_1.tooltip.border\n                    });\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (_this.gauge.tooltip.template) {\n                        updateBlazorTemplate(_this.gauge.element.id + 'Template', 'Template');\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            });\n        }\n        else {\n            this.removeTooltip();\n            if (this.gauge.tooltip.template) {\n                resetBlazorTemplate(this.gauge.element.id + 'Template', 'Template');\n            }\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            if (end <= minRadius) {\n                radius = end === 1 || 2 ? 8 : radius;\n                radius /= 2;\n                minRadius = radius * 0.25;\n            }\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function (observedArgs) {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n            });\n            this_1.calculateVisibleLabels(axis);\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var _loop_2 = function (i, interval, max) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            this_2.gauge.trigger('axisLabelRender', argsData, function (observedArgs) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                }\n            });\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            _loop_2(i, interval, max);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            this.gauge.trigger('axisLabelRender', argsData, function (observedArgs) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            });\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y));\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue\n                });\n                _this.svgObject.setAttribute('cursor', 'pointer');\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","Annotations","elementId","renderAnnotation","axis","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","updateBlazorTemplate","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","resetBlazorTemplate","window","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","abs","currentPointer","currentAxis","angle_1","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","roundValue","roundingPlaces","parseFloat","toFixed","content_1","RegExp","tooltipArgs_1","pointer","event","showAtMousePosition","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","tooltipFillColor","tooltipFillOpacity","appendTo","removeTooltip","addLeft","addTop","addHeight","addWidth","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","lineColor","drawAxisLabels","label","labelElement","createGroup","labelCollection","labelColor","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","labelFontFamily","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","majorTickColor","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","theme","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleColor","needleTail","needleTailColor","capcolor","cap","capColor","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","isNullOrUndefined","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","_loop_2","this_2","lastLabel","maxVal","showLastLabel","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","render","setTheme","calculateBounds","renderElements","toLowerCase","backgroundColor","titleFontColor","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","isNaN","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","drawRectangle","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}