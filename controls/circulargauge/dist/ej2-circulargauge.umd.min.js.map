{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { SvgRenderer, compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    if (templateFn && templateFn(gauge).length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn(gauge);\n        while (templateElement.length > 0) {\n            element.appendChild(templateElement[0]);\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.split(gauge.element.id + '_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLineColor = null;\n    /** @private */\n    Theme.tickLineColor = null;\n    /** @private */\n    Theme.pointerColor = null;\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#000000')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: '#ffffff', size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(Theme.axisLineColor)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(Theme.tickLineColor)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#ffffff')\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: Theme.pointerColor, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(Theme.pointerColor)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: Theme.pointerColor, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(Theme.pointerColor)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger(annotationRender, argsData);\n        var templateFn;\n        var templateElement;\n        if (!argsData.cancel) {\n            templateFn = getTemplateFunction(argsData.content);\n            if (templateFn && templateFn(axis).length) {\n                templateElement = templateFn(axis);\n                while (templateElement.length > 0) {\n                    childElement.appendChild(templateElement[0]);\n                }\n            }\n            else {\n                childElement.appendChild(createElement('div', {\n                    innerHTML: argsData.content,\n                    styles: getFontStyle(argsData.textStyle)\n                }));\n            }\n            this.updateLocation(childElement, axis, annotation);\n            element.appendChild(childElement);\n        }\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var content = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(this.currentPointer.currentValue)) :\n                format(this.currentPointer.currentValue);\n            location = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: content, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && Object.keys(template).length === 1) {\n                template = template[Object.keys(template)[0]];\n            }\n            if (!this.tooltip.showAtMousePosition) {\n                if (template) {\n                    var pointerRect = target.getBoundingClientRect();\n                    var size = getElementSize(this.tooltip.template, this.gauge, this.tooltipEle);\n                    var width = Math.abs(svgRect.width - pointerRect.width) - Math.abs(pointerRect.left - svgRect.left);\n                    if (size.height > Math.abs(svgRect.height - tooltipArgs.location.y) - 20) {\n                        tooltipArgs.location.y += size.height / 2;\n                    }\n                    if (size.width > width) {\n                        tooltipArgs.location.x -= Math.abs((svgRect.left + svgRect.width) - (tooltipArgs.location.x + size.width));\n                        this.tooltipRect = rect;\n                    }\n                    else {\n                        this.tooltipRect = rect;\n                        this.findPosition(rect, angle, content, tooltipArgs.location);\n                    }\n                }\n                else {\n                    this.findPosition(rect, angle, content, tooltipArgs.location);\n                }\n            }\n            else {\n                tooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!tooltipArgs.cancel && !samePointerEle) {\n                var themes = this.gauge.theme.toLowerCase();\n                var tooltipColor = (themes.indexOf('dark') > -1 || themes === 'highcontrast') ? '#00000' : '#FFFFFF';\n                tooltipArgs['tooltip']['properties']['textStyle']['color'] = tooltipColor;\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    data: { value: tooltipArgs.content },\n                    template: template,\n                    enableAnimation: tooltipArgs.tooltip.enableAnimation,\n                    content: [tooltipArgs.content],\n                    location: tooltipArgs.location,\n                    inverted: this.arrowInverted,\n                    areaBounds: this.tooltipRect,\n                    fill: (themes.indexOf('dark') > -1 || themes === 'highcontrast') ? '#FFFFFF' : tooltipArgs.tooltip.fill,\n                    textStyle: tooltipArgs.tooltip.textStyle,\n                    border: tooltipArgs.tooltip.border\n                });\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (template && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, axis.lineStyle.color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, style.font.color) : style.font.color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, minorLineStyle.color) : minorLineStyle.color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, majorLineStyle.color) : majorLineStyle.color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (range.roundedCornerRadius / 4)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (range.roundedCornerRadius / 4)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    range.roundedCornerRadius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    range.roundedCornerRadius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, 1, '0', getRoundedPathArc(gauge.midPoint, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), Math.floor(oldStart), Math.ceil(oldEnd), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, 1, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, pointer.color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, pointer.cap.color, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var radius = pointer.roundedCornerRadius;\n        var process = radius * 0.25;\n        if (value <= process) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            process = radius * 0.25;\n        }\n        oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / process)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEnd = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / process)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundedStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundedEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var sweepAngle;\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this.gauge.moveToCenter && this.gauge.axes.length === 1 &&\n                isNullOrUndefined(this.gauge.centerX) && isNullOrUndefined(this.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this.gauge.midPoint;\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint) :\n                            this.gauge.midPoint;\n                        startYDiff = Math.abs(this.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint);\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(newPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 5 || endXDiff > 5) && (startYDiff > 5 || endYDiff > 5))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this.gauge.midPoint.x = this.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this.gauge.midPoint.y = this.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this.gauge.gaugeRect.width, this.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this.calculateNumericInterval(axis, axis.rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(i)) :\n                    format(i),\n                value: i\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, SvgRenderer, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.themeEffect();\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    CircularGauge.prototype.themeEffect = function () {\n        var themes = this.theme.toLowerCase();\n        if (themes === 'highcontrast') {\n            this.titleStyle.color = this.titleStyle.color || '#FFFFFF';\n            this.setThemeColors('#FFFFFF', '#FFFFFF');\n        }\n        else if (themes.indexOf('dark') > -1) {\n            for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n                var axis = _a[_i];\n                axis.labelStyle.font.color = axis.labelStyle.font.color || '#DADADA ';\n                axis.majorTicks.color = axis.majorTicks.color || '#C8C8C8';\n                axis.minorTicks.color = axis.minorTicks.color || '#9A9A9A';\n                for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                    var pointer = _c[_b];\n                    pointer.color = pointer.color || '#DADADA';\n                    pointer.needleTail.color = pointer.needleTail.color || '#9A9A9A';\n                    pointer.needleTail.border.color = pointer.needleTail.border.color || '#9A9A9A';\n                    pointer.cap.color = pointer.cap.color || '#9A9A9A';\n                    pointer.cap.border.color = pointer.cap.border.color || '#9A9A9A';\n                }\n            }\n        }\n        else {\n            this.titleStyle.color = this.titleStyle.color || '#424242';\n            this.setThemeColors('#212121', '#757575');\n        }\n    };\n    CircularGauge.prototype.setThemeColors = function (labelcolor, others) {\n        for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.lineStyle.color = axis.lineStyle.color || others;\n            axis.labelStyle.font.color = axis.labelStyle.font.color || labelcolor;\n            axis.majorTicks.color = axis.majorTicks.color || others;\n            axis.minorTicks.color = axis.minorTicks.color || others;\n            for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                var pointer = _c[_b];\n                pointer.color = pointer.color || others;\n                pointer.needleTail.color = pointer.needleTail.color || others;\n                pointer.needleTail.border.color = pointer.needleTail.border.color || others;\n                pointer.cap.color = pointer.cap.color || others;\n                pointer.cap.border.color = pointer.cap.border.color || others;\n            }\n        }\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.calculateBounds();\n        this.renderElements();\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger(gaugeMouseMove, args);\n        var dragArgs;\n        var tooltip = this.tooltipModule;\n        if (!args.cancel) {\n            if (this.enablePointerDrag && this.activePointer) {\n                dragArgs = {\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    previousValue: this.activePointer.currentValue,\n                    name: dragMove,\n                    currentValue: null\n                };\n                this.pointerDrag(new GaugeLocation(args.x, args.y));\n                dragArgs.currentValue = this.activePointer.currentValue;\n                this.trigger(dragMove, dragArgs);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.activePointer.value = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger(gaugeMouseDown, args);\n        if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n            args.target.id.indexOf(this.element.id + '_Axis_') >= 0) {\n            currentPointer = getPointer(args.target.id, this);\n            this.activeAxis = this.axes[currentPointer.axisIndex];\n            this.activePointer = this.activeAxis.pointers[currentPointer.pointerIndex];\n            this.trigger(dragStart, {\n                axis: this.activeAxis,\n                name: dragStart,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.svgObject.setAttribute('cursor', 'pointer');\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background !== null && this.background !== 'transparent')) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        pointer.currentValue = value;\n        pointer.value = value;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.removeSvg();\n            this.renderElements();\n        }\n        if (refreshBounds) {\n            this.removeSvg();\n            this.calculateBounds();\n            this.renderElements();\n        }\n        if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n            this.removeSvg();\n            this.calculateBounds();\n            this.renderElements(false);\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","getElementSize","elementSize","templateElement","height","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","axisLineColor","tickLineColor","pointerColor","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","annotationRender","gaugeMouseMove","gaugeMouseLeave","gaugeMouseDown","Annotations","elementId","renderAnnotation","axis","index","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect","svgObject","abs","currentPointer","currentAxis","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","replace","RegExp","tooltipArgs","pointer","event","keys","showAtMousePosition","tooltipRect","pointerRect","findPosition","themes","theme","toLowerCase","tooltipColor","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","appendTo","parseFloat","removeTooltip","addLeft","addTop","addHeight","addWidth","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","label","labelElement","createGroup","labelCollection","position","nearSize","maxLabelSize","farSize","length_1","hiddenLabel","findAnchor","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","toFixed","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","cap","process","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_i","_a","moveToCenter","isNullOrUndefined","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","availableSize","CircularGauge","preRender","unWireEvents","themeEffect","initPrivateVariable","setCulture","createSvg","wireEvents","titleStyle","setThemeColors","_b","_c","labelcolor","others","render","calculateBounds","renderElements","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","window","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","containerWidth","offsetWidth","containerHeight","offsetHeight","titleHeight","title","renderBorder","renderTitle","tabIndex","borderWidth","drawRectangle","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","Event","NotifyPropertyChanges","Component"],"mappings":"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"}