{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    if (templateFn && templateFn(gauge).length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn(gauge);\n        while (templateElement.length > 0) {\n            element.appendChild(templateElement[0]);\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'MaterialDark':\n        case 'FabricDark':\n        case 'BootstrapDark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'Highcontrast':\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = parseInt(this.gauge.width, 10);\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger(annotationRender, argsData);\n        var templateFn;\n        var templateElement;\n        if (!argsData.cancel) {\n            templateFn = getTemplateFunction(argsData.content);\n            if (templateFn && templateFn(axis).length) {\n                templateElement = Array.prototype.slice.call(templateFn(axis));\n                var length_1 = templateElement.length;\n                for (var i = 0; i < length_1; i++) {\n                    childElement.appendChild(templateElement[i]);\n                }\n            }\n            else {\n                childElement.appendChild(createElement('div', {\n                    innerHTML: argsData.content,\n                    styles: getFontStyle(argsData.textStyle)\n                }));\n            }\n            this.updateLocation(childElement, axis, annotation);\n            element.appendChild(childElement);\n        }\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var roundValue = void 0;\n            roundValue = this.currentAxis.roundingPlaces ?\n                parseFloat(this.currentPointer.currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n                this.currentPointer.currentValue;\n            var content = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: content, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && Object.keys(template).length === 1) {\n                template = template[Object.keys(template)[0]];\n            }\n            if (!this.tooltip.showAtMousePosition) {\n                if (template) {\n                    var elementSize = getElementSize(template, this.gauge, this.tooltipEle);\n                    this.tooltipRect = Math.abs(axisRect.left - svgRect.left) > elementSize.width ?\n                        this.findPosition(rect, angle, content, tooltipArgs.location) : rect;\n                }\n                else {\n                    this.findPosition(rect, angle, content, tooltipArgs.location);\n                }\n            }\n            else {\n                tooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!tooltipArgs.cancel && !samePointerEle) {\n                tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || this.gauge.themeStyle.tooltipFontColor;\n                tooltipArgs.tooltip.textStyle.fontFamily = this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                tooltipArgs.tooltip.textStyle.opacity = this.gauge.themeStyle.tooltipTextOpacity || tooltipArgs.tooltip.textStyle.opacity;\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    data: { value: tooltipArgs.content },\n                    template: template,\n                    enableAnimation: tooltipArgs.tooltip.enableAnimation,\n                    content: [tooltipArgs.content],\n                    location: tooltipArgs.location,\n                    inverted: this.arrowInverted,\n                    areaBounds: this.tooltipRect,\n                    fill: tooltipArgs.tooltip.fill || this.gauge.themeStyle.tooltipFillColor,\n                    textStyle: tooltipArgs.tooltip.textStyle,\n                    border: tooltipArgs.tooltip.border\n                });\n                this.svgTooltip.opacity = this.gauge.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (template && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (end <= minRadius) {\n            radius = end === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this.gauge.moveToCenter && this.gauge.axes.length === 1 &&\n                isNullOrUndefined(this.gauge.centerX) && isNullOrUndefined(this.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this.gauge.midPoint;\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint) :\n                            this.gauge.midPoint;\n                        startYDiff = Math.abs(this.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint);\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(newPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this.gauge.midPoint.x = this.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this.gauge.midPoint.y = this.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this.gauge.gaugeRect.width, this.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this.calculateNumericInterval(axis, axis.rect);\n            var args = void 0;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this.gauge,\n                midPoint: this.gauge.midPoint, axis: axis\n            };\n            this.gauge.trigger(radiusCalculate, args);\n            axis.currentRadius = args.currentRadius;\n            this.gauge.midPoint = args.midPoint;\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n            }\n        }\n        var lastLabel = axis.visibleLabels[axis.visibleLabels.length - 1].value;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger(gaugeMouseMove, args);\n        var dragArgs;\n        var tooltip = this.tooltipModule;\n        if (!args.cancel) {\n            if (this.enablePointerDrag && this.activePointer) {\n                dragArgs = {\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    previousValue: this.activePointer.currentValue,\n                    name: dragMove,\n                    currentValue: null\n                };\n                this.pointerDrag(new GaugeLocation(args.x, args.y));\n                dragArgs.currentValue = this.activePointer.currentValue;\n                this.trigger(dragMove, dragArgs);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger(gaugeMouseDown, args);\n        if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n            args.target.id.indexOf(this.element.id + '_Axis_') >= 0) {\n            currentPointer = getPointer(args.target.id, this);\n            this.activeAxis = this.axes[currentPointer.axisIndex];\n            this.activePointer = this.activeAxis.pointers[currentPointer.pointerIndex];\n            if (isNullOrUndefined(this.activePointer.pathElement)) {\n                this.activePointer.pathElement = [e.target];\n            }\n            this.trigger(dragStart, {\n                axis: this.activeAxis,\n                name: dragStart,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.svgObject.setAttribute('cursor', 'pointer');\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activePointer.value = this.activePointer.currentValue;\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","templateElement","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","radiusCalculate","tooltipRender","annotationRender","gaugeMouseMove","gaugeMouseLeave","gaugeMouseDown","Annotations","elementId","renderAnnotation","axis","index","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect","svgObject","axisRect","abs","currentPointer","currentAxis","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","roundValue","roundingPlaces","parseFloat","toFixed","RegExp","tooltipArgs","pointer","event","keys","showAtMousePosition","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","tooltipFillColor","tooltipFillOpacity","appendTo","removeTooltip","addLeft","addTop","addHeight","addWidth","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","lineColor","drawAxisLabels","label","labelElement","createGroup","labelCollection","labelColor","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","labelFontFamily","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","majorTickColor","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","theme","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleColor","needleTail","needleTailColor","capcolor","cap","capColor","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","isNullOrUndefined","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","lastLabel","maxVal","showLastLabel","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","availableSize","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","render","setTheme","calculateBounds","renderElements","backgroundColor","titleFontColor","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","window","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","borderWidth","drawRectangle","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","Event","NotifyPropertyChanges","Component"],"mappings":"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"}