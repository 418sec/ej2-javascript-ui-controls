{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/common/actions/common.js","../../src/pivotview/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/common/base/themes.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/base/pivotview.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        val = (value && value.getDay) ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : !isNaN(Number(value)) ?\n            'number' : typeof (value);\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                /* tslint:disable:no-any */\n                var framedSet = {};\n                /* tslint:enable:no-any */\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] = this.getClonedPivotValueObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotUtil.getClonedPivotValueObj = function (data) {\n        var keyPos = 0;\n        /* tslint:disable:no-any */\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.getDefinedObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                if (!(data[fields[keyPos]] === null || data[fields[keyPos]] === undefined)) {\n                    framedSet[fields[keyPos]] = data[fields[keyPos]];\n                }\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.isContainCommonElements = function (collection1, collection2) {\n        var isContain = false;\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    /* tslint:enable:no-any */\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = this.getDefinedObj({\n            type: dataSourceSettings.type,\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            fieldMapping: this.cloneFieldSettings(dataSourceSettings.fieldMapping),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings),\n            showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n            authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n        });\n        /* tslint:enable:no-any */\n        return clonesDataSource;\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            this.setPivotProperties(control, {\n                dataSourceSettings: this.getDefinedObj({\n                    type: dataSourceSettings.type,\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    fieldMapping: dataSourceSettings.fieldMapping,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings,\n                    showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n                    authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n                })\n                /* tslint:enable:no-any */\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                var field = {};\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type,\n                    dataType: set.dataType,\n                    showFilterIcon: set.showFilterIcon,\n                    showSortIcon: set.showSortIcon,\n                    showRemoveIcon: set.showRemoveIcon,\n                    showValueTypeIcon: set.showValueTypeIcon,\n                    showEditIcon: set.showEditIcon,\n                    allowDragAndDrop: set.allowDragAndDrop\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    order: set.order\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneAuthenticationObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                userName: collection.userName,\n                password: collection.password\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotUtil.getFieldInfo = function (fieldName, control) {\n        var rows = this.cloneFieldSettings(control.dataSourceSettings.rows);\n        var columns = this.cloneFieldSettings(control.dataSourceSettings.columns);\n        var values = this.cloneFieldSettings(control.dataSourceSettings.values);\n        var filters = this.cloneFieldSettings(control.dataSourceSettings.filters);\n        var fields = [rows, columns, values, filters];\n        for (var i = 0, len = fields.length; i < len; i++) {\n            for (var j = 0, cnt = (fields[i] ? fields[i].length : 0); j < cnt; j++) {\n                if (fields[i][j] && fields[i][j].name === fieldName) {\n                    /* tslint:disable-next-line:max-line-length */\n                    return { fieldName: fieldName, fieldItem: fields[i][j], axis: i === 0 ? 'rows' : i === 1 ? 'columns' : i === 2 ? 'values' : 'filters', position: j };\n                }\n            }\n        }\n        var fieldList = control.dataType === 'olap' ?\n            control.olapEngineModule.fieldList[fieldName] : control.engineModule.fieldList[fieldName];\n        var fieldItem = (fieldList ? {\n            name: fieldName,\n            caption: fieldList.caption,\n            baseField: fieldList.baseField,\n            baseItem: fieldList.baseItem,\n            isCalculatedField: fieldList.isCalculatedField,\n            isNamedSet: fieldList.isNamedSets,\n            showNoDataItems: fieldList.showNoDataItems,\n            showSubTotals: fieldList.showSubTotals,\n            type: fieldList.aggregateType,\n            showFilterIcon: fieldList.showFilterIcon,\n            showSortIcon: fieldList.showSortIcon,\n            showRemoveIcon: fieldList.showRemoveIcon,\n            showValueTypeIcon: fieldList.showValueTypeIcon,\n            showEditIcon: fieldList.showEditIcon,\n            allowDragAndDrop: fieldList.allowDragAndDrop\n        } : undefined);\n        return { fieldName: fieldName, fieldItem: fieldItem, axis: 'fieldlist', position: -1 };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.isButtonIconRefesh = function (prop, oldProp, newProp) {\n        var isButtonRefresh = false;\n        try {\n            if (prop === 'dataSourceSettings' && oldProp.dataSourceSettings && newProp.dataSourceSettings) {\n                var propValidation = ['notAvail', 'notAvail', 'notAvail', 'notAvail'];\n                var oldAxesProp = Object.keys(oldProp.dataSourceSettings);\n                var newAxesProp = Object.keys(newProp.dataSourceSettings);\n                if (oldAxesProp && newAxesProp && newAxesProp.length > 0 && oldAxesProp.length === newAxesProp.length) {\n                    var axes = ['rows', 'columns', 'values', 'filters'];\n                    /* tslint:disable:no-any */\n                    for (var i = 0; i < newAxesProp.length; i++) {\n                        var oldAxis = (newAxesProp[i] in oldProp.dataSourceSettings && !isNullOrUndefined(oldProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(oldProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        var newAxis = (newAxesProp[i] in newProp.dataSourceSettings && !isNullOrUndefined(newProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(newProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        if (axes.indexOf(newAxesProp[i]) !== -1 && axes.indexOf(oldAxesProp[i]) !== -1 &&\n                            oldAxis && newAxis && newAxis.length > 0 && oldAxis.length === newAxis.length) {\n                            /* tslint:disable-next-line:max-line-length */\n                            var options = ['showFilterIcon', 'showSortIcon', 'showRemoveIcon', 'showValueTypeIcon', 'showEditIcon', 'allowDragAndDrop'];\n                            for (var j = 0; j < newAxis.length; j++) {\n                                var oldAxisProp = Object.keys(oldProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                var newAxisProp = Object.keys(newProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                for (var k = 0; k < newAxisProp.length; k++) {\n                                    if (options.indexOf(newAxisProp[k]) !== -1 && options.indexOf(oldAxisProp[k]) !== -1) {\n                                        propValidation[i] = 'update';\n                                    }\n                                    else {\n                                        propValidation[i] = 'break';\n                                        break;\n                                    }\n                                }\n                                if (propValidation[i] === 'break') {\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            propValidation[i] = 'break';\n                        }\n                        if (propValidation[i] === 'break') {\n                            break;\n                        }\n                    }\n                    /* tslint:enable:no-any */\n                }\n                var a = 0;\n                var b = 0;\n                var c = 0;\n                for (var _i = 0, propValidation_1 = propValidation; _i < propValidation_1.length; _i++) {\n                    var validation = propValidation_1[_i];\n                    if (validation === 'break') {\n                        a++;\n                    }\n                    if (validation === 'notAvail') {\n                        b++;\n                    }\n                    if (validation === 'update') {\n                        c++;\n                    }\n                }\n                isButtonRefresh = (a > 0 || b === 4) ? false : (a === 0 && b < 4 && c > 0);\n            }\n        }\n        catch (exception) {\n            isButtonRefresh = false;\n        }\n        return isButtonRefresh;\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        /** @hidden */\n        this.fieldKeys = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        this.fieldMapping = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn) {\n        this.getValueCellInfo = fn;\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        var fields;\n        var val;\n        var filterRw;\n        this.globalize = new Internationalization();\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.enableSort = dataSource.enableSorting;\n        this.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true : dataSource.showHeaderWhenEmpty;\n        this.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true : dataSource.showColumnSubTotals;\n        this.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true : dataSource.showRowGrandTotals;\n        this.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true : dataSource.showColumnGrandTotals;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = dataSource;\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = (isBlazor() && !dataSource.dataSource && this.data && this.data.length > 0) ?\n                this.data : dataSource.dataSource;\n        }\n        if (this.data && this.data[0]) {\n            if (!this.fieldList) {\n                if (dataSource.type === 'CSV') {\n                    this.fields = this.data.shift();\n                }\n                else {\n                    this.fields = Object.keys(this.data[0]);\n                }\n                for (var i = 0; i < this.fields.length; i++) {\n                    this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n                }\n            }\n            if (customProperties && customProperties.pageSettings && customProperties.pageSettings.allowDataCompression) {\n                this.actualData = this.data;\n                this.data = this.getGroupedRawData(dataSource);\n            }\n            this.rows = dataSource.rows ? dataSource.rows : [];\n            this.columns = dataSource.columns ? dataSource.columns : [];\n            this.filters = dataSource.filters ? dataSource.filters : [];\n            this.values = dataSource.values ? dataSource.values : [];\n            this.formats = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.groups = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            fields = this.getGroupData(this.data);\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n            }\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMutiMeasures = this.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = this.pageSettings && this.pageSettings.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(dataSource, Object.keys(this.fieldList));\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var columnLength = this.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.columns[columnLength].name] = this.columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (dataSource, fields) {\n        var report = {};\n        report[0] = dataSource.rows;\n        report[1] = dataSource.columns;\n        report[2] = dataSource.values;\n        report[3] = dataSource.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if ((this.excludeFields.indexOf(report[pos][cnt].name) > -1) || (!isNullOrUndefined(fields) && fields.indexOf(report[pos][cnt].name) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                }\n            }\n            pos++;\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = this.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[this.fieldKeys[countFields[vPos]]] = isNullOrUndefined(currData[this.fieldKeys[countFields[vPos]]]) ? currData[this.fieldKeys[countFields[vPos]]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[this.fieldKeys[headerFields[hPos]]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[this.fieldKeys[currFieldName]];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                groupRawData[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    /* tslint:enable */\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getGroupData = function (data) {\n        var _this = this;\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if (group.type === 'Date' && this_1.groupingFields[fieldName]) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' || !this_1.groupingFields[fieldName]) {\n                        /* tslint:disable:typedef */\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (Number(a[_this.fieldKeys[fieldName]]) > Number(b[_this.fieldKeys[fieldName]]))\n                                ? 1 : ((Number(b[_this.fieldKeys[fieldName]]) > Number(a[_this.fieldKeys[fieldName]]))\n                                ? -1 : 0); });\n                        }\n                        /* tslint:enable:typedef */\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                else if (group.type === 'Custom' && this_1.fields.indexOf(fieldName + '_custom_group') > -1) {\n                    return { value: fieldkeySet };\n                }\n                var len = data.length;\n                /* tslint:disable:max-line-length */\n                while (len--) {\n                    var item = data[len];\n                    if (item[this_1.fieldKeys[fieldName]] && group.type === 'Date') {\n                        var date = new Date(item[this_1.fieldKeys[fieldName]].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setFullYear(date.getFullYear())).toString());\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), newDate.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setHours(date.getHours())).toString());\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMinutes(date.getMinutes())).toString());\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setSeconds(date.getSeconds())).toString());\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, Number(item[this_1.fieldKeys[fieldName]]));\n                        item[this_1.fieldKeys[fieldName]] = isInRangeAvail ? undefined : item[this_1.fieldKeys[fieldName]];\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Custom' && group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            {\n                                var cGroup = customGroups[i];\n                                if (cGroup.items && cGroup.items.length > 1) {\n                                    customGroupFieldName = newFieldName;\n                                    this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                    if (this_1.fields.indexOf(newFieldName) === -1) {\n                                        this_1.fields.push(newFieldName);\n                                    }\n                                    var isDataMatch = PivotUtil.inArray(item[this_1.fieldKeys[fieldName]].toString(), cGroup.items) === -1 ? false : true;\n                                    item[this_1.fieldKeys[newFieldName]] = (isDataMatch ? (cGroup.groupName && cGroup.groupName !== '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue && groupValue !== item[this_1.fieldKeys[fieldName]].toString()) ?\n                                        groupValue : item[this_1.fieldKeys[fieldName]].toString());\n                                    groupValue = item[this_1.fieldKeys[newFieldName]];\n                                }\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    //this.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.rows;\n                                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                                    while (gCnt--) {\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + (actualField.caption ? actualField.caption : actualField.name) + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                                showFilterIcon: actualField.showFilterIcon,\n                                                showSortIcon: actualField.showSortIcon,\n                                                showEditIcon: actualField.showEditIcon,\n                                                showRemoveIcon: actualField.showRemoveIcon,\n                                                showSubTotals: actualField.showValueTypeIcon,\n                                                allowDragAndDrop: actualField.allowDragAndDrop\n                                            };\n                                            axis.splice(i, 0, newField);\n                                        }\n                                    }\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.formats.length; i < len_3; i++) {\n                            if (this_1.formats[i].name === groupKeys[gCnt]) {\n                                this_1.formats.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.formats.push(formatSettings);\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var startValue = void 0;\n                    var endValue = void 0;\n                    var cStartValue = void 0;\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    while (cnt < dataLength) {\n                        unframedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        if (data[cnt][this_1.fieldKeys[fieldName]] && framedSet.indexOf(Number(data[cnt][this_1.fieldKeys[fieldName]])) === -1) {\n                            framedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        }\n                        cnt++;\n                    }\n                    var framedSetLength = Math.max.apply(Math, framedSet);\n                    for (var i = framedSet[0], len_4 = framedSetLength; i < len_4; i++) {\n                        if (unframedSet.indexOf(i) < 0) {\n                            var duplicateData = this_1.frameData(data[0]);\n                            duplicateData[this_1.fieldKeys[fieldName]] = i;\n                            var index = unframedSet.lastIndexOf(i - 1);\n                            unframedSet.splice(index + 1, 0, i);\n                            data.splice(index + 1, 0, duplicateData);\n                        }\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        if (data[cnt] && data[cnt][this_1.fieldKeys[fieldName]]) {\n                            cStartValue = Number(data[cnt][this_1.fieldKeys[fieldName]]);\n                            cEndValue = cStartValue + (group.rangeInterval - 1);\n                            startValue = (!startValue) ? cStartValue : startValue;\n                            endValue = ((!endValue) ? ((cEndValue > framedSetLength) ? framedSetLength : cEndValue) : ((endValue > framedSetLength) ? framedSetLength : endValue));\n                            if (cStartValue >= startValue && cStartValue <= endValue) {\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            else if (cStartValue > endValue && cStartValue === endValue + 1) {\n                                startValue = endValue + 1;\n                                endValue = ((startValue + (group.rangeInterval - 1) > framedSetLength) ? framedSetLength : startValue + (group.rangeInterval - 1));\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            var keys = Object.keys(data[cnt]);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((data[cnt][key]) ? true : false);\n                            }\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? data[cnt] : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_5 = this_1.formats.length; i < len_5; i++) {\n                        if (this_1.formats[i].name === fieldName) {\n                            this_1.formats.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var dataFields = this_1.rows;\n                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                    var pattern = [];\n                    if (!caption || caption === '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption === '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                        showSubTotals: actualField.showValueTypeIcon,\n                                        allowDragAndDrop: actualField.allowDragAndDrop,\n                                        showFilterIcon: actualField.showFilterIcon,\n                                        showSortIcon: actualField.showSortIcon,\n                                        showRemoveIcon: actualField.showRemoveIcon,\n                                        showEditIcon: actualField.showEditIcon\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption === '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                        showRemoveIcon: customGroupField.showRemoveIcon,\n                                        showSubTotals: customGroupField.showValueTypeIcon,\n                                        allowDragAndDrop: customGroupField.allowDragAndDrop,\n                                        showFilterIcon: customGroupField.showFilterIcon,\n                                        showSortIcon: customGroupField.showSortIcon,\n                                        showEditIcon: customGroupField.showEditIcon\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.formats));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.formats.push(formatfield);\n                    }\n                }\n                /* tslint:enable:max-line-length */\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        //this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.frameData = function (data) {\n        var fields = Object.keys(data);\n        var keyPos = 0;\n        var framedSet = {};\n        while (keyPos < fields.length) {\n            framedSet[fields[keyPos]] = undefined;\n            keyPos++;\n        }\n        return framedSet;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (startValue && cValue < startValue || endValue && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getFormattedFields = function (fields) {\n        var cnt = this.formats.length;\n        while (cnt--) {\n            this.formatFields[this.formats[cnt].name] = this.formats[cnt];\n            if (this.formats[cnt].type) {\n                this.dateFormatFunction[this.formats[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(this.formats[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: this.formats[cnt].type\n                    })\n                };\n            }\n            // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n            // if (fields[len] && fields[len].name === this.formats[cnt].name) {\n            //     this.formatFields[fields[len].name] = this.formats[cnt];\n            // }\n            // }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var keys = this.fields;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        this.getFormattedFields(dataFields);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var lenE = this.excludeFields.length;\n        lenE = lenE - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.excludeFields[lenE]);\n            this.fields.splice(index, 1);\n            if (this.fieldList) {\n                delete this.fieldList[this.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var len = keys.length;\n        var dataTypes = ['string', 'number', 'datetime', 'date', 'boolean'];\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    this.fieldList[key].showFilterIcon = (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true;\n                    this.fieldList[key].showRemoveIcon = (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true;\n                    this.fieldList[key].showSortIcon = (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true;\n                    this.fieldList[key].showEditIcon = (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true;\n                    this.fieldList[key].showValueTypeIcon = (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true;\n                    this.fieldList[key].allowDragAndDrop = (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true;\n                    this.fieldList[key].isCalculatedField = (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false;\n                    this.fieldList[key].showNoDataItems = (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false;\n                    this.fieldList[key].showSubTotals = (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true;\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].formattedMembers = {};\n                        this.fieldList[key].members = {};\n                    }\n                }\n                else {\n                    type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                        field.dataType.toLowerCase() : type;\n                    this.fieldList[key] = {\n                        caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                        id: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        isSelected: false,\n                        sort: isSort ? 'Ascending' : 'None',\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                        showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                            field.showRemoveIcon : true,\n                        showFilterIcon: (field && 'showFilterIcon' in field) ?\n                            field.showFilterIcon : true,\n                        showSortIcon: (field && 'showSortIcon' in field) ?\n                            field.showSortIcon : true,\n                        showNoDataItems: (field && 'showNoDataItems' in field) ?\n                            field.showNoDataItems : false,\n                        isCalculatedField: (field && 'isCalculatedField' in field) ?\n                            field.isCalculatedField : false,\n                        showEditIcon: (field && 'showEditIcon' in field) ?\n                            field.showEditIcon : true,\n                        showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                            field.showValueTypeIcon : true,\n                        allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                            field.allowDragAndDrop : true,\n                        showSubTotals: (field && 'showSubTotals' in field) ?\n                            field.showSubTotals : true\n                    };\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                    field.dataType.toLowerCase() : PivotUtil.getType(fields[this.fieldKeys[key]]);\n                this.fieldList[key] = {\n                    id: key,\n                    caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                    showFilterIcon: (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true,\n                    showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true,\n                    showSortIcon: (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true,\n                    showEditIcon: (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true,\n                    showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true,\n                    allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true,\n                    showSubTotals: (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true,\n                    showNoDataItems: (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false,\n                    isCalculatedField: (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false\n                };\n            }\n        }\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.getMappingField = function (key) {\n        var field = {};\n        if (this.fieldMapping.length > 0) {\n            for (var index = 0, cnt = this.fieldMapping.length; index < cnt; index++) {\n                if (this.fieldMapping[index].name === key) {\n                    field = this.fieldMapping[index];\n                    break;\n                }\n            }\n        }\n        return field;\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var cnt = fields.length;\n        var lnt = this.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n                field.allowDragAndDrop = fields[cnt].allowDragAndDrop;\n                field.showFilterIcon = fields[cnt].showFilterIcon;\n                field.showSortIcon = fields[cnt].showSortIcon;\n                field.showRemoveIcon = fields[cnt].showRemoveIcon;\n                field.showValueTypeIcon = fields[cnt].showValueTypeIcon;\n                field.showEditIcon = fields[cnt].showEditIcon;\n                field.showSubTotals = fields[cnt].showSubTotals;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.calculatedFieldSettings[lnt].name].isCalculatedField = true;\n                this.fieldList[this.calculatedFieldSettings[lnt].name].formula = this.calculatedFieldSettings[lnt].formula;\n            }\n        }\n    };\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).replace(/ +/g, '');\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            /* tslint:disable:typedef */\n            field.name = calcProperties ? calcProperties.name : field.name;\n            keys = keys.filter(function (key) { return key !== field.name; });\n            keys.push(field.name);\n            /* tslint:enable:typedef */\n            var formulaType = actualFormula.split('\\\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len];\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar'].indexOf(selectedString) !== -1) {\n                    var index = keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type,\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type,\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.validateValueFields = function () {\n        this.isValueHasAdvancedAggregate = false;\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var value = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(value.type) !== -1) {\n                this.isValueHasAdvancedAggregate = true;\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function (data, indMat) {\n        var keys = this.fields;\n        var dlen = data.length;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        for (var kl = 0; kl < kLn; kl++) {\n            var key = keys[kl];\n            if (!fList[key].members || this.allowDataCompression) {\n                fList[key].members = {};\n            }\n            if (!fList[key].formattedMembers || this.allowDataCompression) {\n                fList[key].formattedMembers = {};\n            }\n            if (!fList[key].dateMember || this.allowDataCompression) {\n                fList[key].dateMember = [];\n            }\n            var members = fList[key].members;\n            var isDataAvail = Object.keys(members).length > 0 ? true : false;\n            var formattedMembers = fList[key].formattedMembers;\n            var dateMember = fList[key].dateMember;\n            var type = fList[key].type;\n            var membersCnt = 0;\n            var fmembersCnt = 0;\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var mkey = data[dl][this.fieldKeys[key]];\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var fKey = mkey;\n                    var formattedValue = (this.pageSettings && !(this.formatFields[key] &&\n                        (['date', 'dateTime', 'time'].indexOf(this.formatFields[key].type) > -1))) ? ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    }) : this.getFormattedValue(mkey, key);\n                    if (formattedValue.formattedText) {\n                        fKey = formattedValue.formattedText;\n                    }\n                    if (!members.hasOwnProperty(mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                        /* tslint:disable-next-line:max-line-length */\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: (formattedValue.dateText ? formattedValue.dateText : formattedValue.actualText) });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                    if (!formattedMembers.hasOwnProperty(fKey)) {\n                        fmembersCnt++;\n                        formattedMembers[fKey] = {\n                            index: [dl], ordinal: fmembersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                    }\n                    else {\n                        formattedMembers[fKey].index.push(dl);\n                    }\n                }\n                if (!(indMat[dl])) {\n                    indMat[dl] = [];\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                else {\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                // }\n            }\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.generateValueMatrix = function (data) {\n        var keys = this.fields;\n        var len = data.length;\n        var vMat = [];\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var record = data[len];\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len])) {\n            vMat[len] = [];\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                vMat[len][tkln] = (flList[key].type === 'number' || isNullOrUndefined(data[len][this.fieldKeys[key]])) ?\n                    !isNaN(Number(data[len][this.fieldKeys[key]])) ?\n                        Number(data[len][this.fieldKeys[key]]) : undefined : 1;\n            }\n        }\n        return vMat;\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.indexMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var filters = this.filters;\n        var isInclude = false;\n        var filter = [];\n        //let type: string;\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln].filter ? cols[cln].filter.items : [];\n             if (filter.length && cols[cln].filter.type && cols[cln].filter.type === 'include') {\n                 //type = cols[cln].filter.type;\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            var field = this.fieldList[fieldName];\n            var members = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            isValidFilterElement = true;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var field_1 = _a[_i];\n                if (fieldName === field_1.name) {\n                    isValidFilterElement = false;\n                    break;\n                }\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _b = 0, dataFields_2 = dataFields; _b < dataFields_2.length; _b++) {\n                var field = dataFields_2[_b];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            /* tslint:disable:max-line-length */\n            if (filterElement.type === 'Label') {\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ? new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ? new Date(filterElement.value2) : filterElement.value2;\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            /* tslint:enable:max-line-length */\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        // }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = (this.formatFields[name] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[name].type) > -1)) ?\n            field.formattedMembers : field.members;\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (filter[fln]) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        /* tslint:disable-next-line:max-line-length */\n        var allMember = extend({}, (type === 'row' && this.rowGrandTotal ? this.rowGrandTotal : type === 'column' && this.columnGrandTotal ? this.columnGrandTotal : rows[rows.length - 1]), null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            if ((type === 'row' && this.rowGrandTotal === null) || (type === 'column' && this.columnGrandTotal === null)) {\n                rowFilterData.push(allMember);\n            }\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getCellSet(this.rawIndexObject),\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (index.hasOwnProperty(key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (index.hasOwnProperty(key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.data = dataSource.dataSource;\n        if (this.pageSettings && this.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        this.indexMatrix = [];\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].formattedMembers = {};\n            this.fieldList[field].dateMember = [];\n        }\n        this.fillFieldMembers(this.data, this.indexMatrix);\n        this.valueMatrix = this.generateValueMatrix(this.data);\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.generateGridData = function (dataSource, headerCollection) {\n        var keys = this.fields;\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        var size = 1;\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        var st1 = new Date().getTime();\n        this.validateValueFields();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0) {\n                    this.rMembers =\n                        this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                /* tslint:disable */\n                if (columns.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                        filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                /* tslint:enable */\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        this.pivotValues = [];\n        var gridData = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var valuesCount = (this.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders;\n            var columnHeaders = this.saveDataHeaders.columnHeaders;\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, (this.columnGrandTotal ? this.columnGrandTotal : columnHeaders[columnHeaders.length - 1]), valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, (this.rowGrandTotal ? this.rowGrandTotal : rowHeaders[rowHeaders.length - 1]), valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = extend({}, this.fieldList, null, true);\n            this.indexMatrix = [];\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var pageSize = 1;\n            this.updateFilterMembers(dataSource);\n            /* tslint:disable */\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            /* tslint:enable */\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.pageSettings) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        //this.getHeaderData(rmembers, rowheads, gridData, 0);              \n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        var st2 = new Date().getTime();\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n    };\n    PivotEngine.prototype.updateHeaders = function (rowFlag, columnFlag) {\n        /* removing the row grant-total members */\n        rowFlag = (isNullOrUndefined(rowFlag) ? (this.showGrandTotals && this.showRowGrandTotals) ?\n            true : (this.rows.length > 0) ? false : true : rowFlag);\n        if (((this.pageSettings && (this.removeRowGrandTotal)) || (!rowFlag && !this.rowGrandTotal)) &&\n            this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n            this.rMembers = this.rMembers.slice(0, this.rMembers.length - 1);\n        }\n        /* removing the column gran-total members */\n        columnFlag = (isNullOrUndefined(columnFlag) ? (this.showGrandTotals && this.showColumnGrandTotals) ?\n            true : (this.columns.length > 0) ? false : true : columnFlag);\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) || (!columnFlag && !this.columnGrandTotal)) &&\n            this.cMembers[this.cMembers.length - 1].type === 'grand sum') {\n            this.cMembers = this.cMembers.slice(0, this.cMembers.length - 1);\n        }\n    };\n    PivotEngine.prototype.updatePivotValues = function (updateHeaders) {\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (updateHeaders) {\n            this.updateHeaders(rowFlag, columnFlag);\n        }\n        /* removing the row grant-totals */\n        if (((this.pageSettings && (this.removeRowGrandTotal)) ||\n            (!rowFlag && !this.rowGrandTotal)) && this.valueContent.length > 0) {\n            var slicePos = 1;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1 + this.values.length;\n            }\n            if (this.pivotValues[this.pivotValues.length - slicePos] &&\n                this.pivotValues[this.pivotValues.length - slicePos][0].type === 'grand sum') {\n                this.pivotValues = this.pivotValues.slice(0, this.pivotValues.length - slicePos);\n                this.valueContent = this.valueContent.slice(0, this.valueContent.length - slicePos);\n            }\n        }\n        /* removing the column gran-totals */\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) ||\n            (!columnFlag && !this.columnGrandTotal)) && this.headerContent.length > 0) {\n            var slicePos = this.values.length;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1;\n            }\n            if (this.pivotValues[0][this.pivotValues[0].length - slicePos] &&\n                this.pivotValues[0][this.pivotValues[0].length - slicePos].type === 'grand sum') {\n                for (var ln = 0; ln < this.pivotValues.length; ln++) {\n                    if (this.pivotValues[ln]) {\n                        this.pivotValues[ln] = this.pivotValues[ln].slice(0, this.pivotValues[ln].length - slicePos);\n                    }\n                    if (this.headerContent[ln]) {\n                        for (var pos = this.pivotValues[ln].length; pos < (this.pivotValues[ln].length + slicePos); pos++) {\n                            delete this.headerContent[ln][pos];\n                        }\n                    }\n                }\n            }\n        }\n        this.removeRowGrandTotal = this.removeColumnGrandTotal = false;\n    };\n    /** @hidden */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        this.frameDrillObject();\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onSort = function (sortItem) {\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        /* tslint:disable:typedef */\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        /* tslint:enable:typedef */\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.rows[0] && this.rows[0].showNoDataItems) || (this.columns[0] && this.columns[0].showNoDataItems);\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onAggregation = function (field) {\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onCalcOperation = function (field) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.values.length - 1)) * this.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.values.length - 1)) * this.values.length;\n            }\n        }\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                if (drilledItem.memberName === headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter)\n                    .join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                        }\n                        else {\n                            var showSubTotals = this.showSubTotals && this.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    /* tslint:disable:typedef */\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return item.members.length > 0 ? item.members.length > 0 : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n        var filterObjects = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var item = _a[_i];\n            filterObjects[item] = item;\n        }\n        if (this.fieldFilterMem[filterItem.name]) {\n            rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n        }\n        if (addPos.length > 0) {\n            this.frameHeaderObjectsCollection = true;\n            if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                for (var i = 0; i < this.data.length; i++) {\n                    addPos.push(i);\n                }\n                //addPos = (this.data as any).map((item, pos) => { return pos; });\n            }\n            /* tslint:disable */\n            this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n            rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n            var headerNames_1 = {};\n            for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                var header = rawHeaders_1[_b];\n                headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n            }\n            var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                return !headerNames_1[header.valueSort.levelName.toString()];\n            });\n            /* tslint:enable: */\n            var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n            if (grandHeader.length > 0) {\n                rawHeaders.pop();\n            }\n            rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n        }\n        if (headersInfo.axis === 'row') {\n            this.rowCount = 0;\n        }\n        else {\n            this.columnCount = 0;\n        }\n        this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n        if (headersInfo.axis === 'row') {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n        }\n        else {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    /* tslint:enable:typedef */\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.rows : this.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateEngine = function () {\n        this.removeCount = 0;\n        this.validateValueFields();\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var valuesCount = (this.values.length);\n        this.getAggregatedHeaders(this.rows, this.columns, this.rMembers, this.cMembers, this.values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.showSubTotals && this.showColumnSubTotals && field.showSubTotals;\n        }\n        else {\n            showSubTotals = this.showSubTotals && this.showRowSubTotals && field.showSubTotals;\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.values.length : 1) :\n                    (this.valueAxis === 1 ? this.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var isNotDateType = !(this.formatFields && this.formatFields[headers[0].valueSort.axis] &&\n            this.formatFields[headers[0].valueSort.axis].type);\n        if (isNotDateType) {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                    headers;\n        }\n        else {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                    headers;\n        }\n    };\n    /* tslint:enable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.enableValueSorting && this.valueSortSettings.headerText &&\n            this.valueSortSettings.headerText !== '' && this.values.length > 0) {\n            var textArray = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.values.length; i++) {\n                if (this.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.values.length === 1 && this.columns.length === 0) || this.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortSettings.headerText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.values[0].name].index;\n                mType = this.fieldList[this.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.pageSettings) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getCellSet(this.rawIndexObject),\n                    /* tslint:disable-next-line:max-line-length */\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    /* tslint:disable-next-line:max-line-length */\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        /* tslint:disable */\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ?\n                ((b['value'] || b['header']['type'] === 'grand sum' ?\n                    b['value'] : 0) - (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) :\n                ((a['value'] || a['header']['type'] === 'grand sum' ?\n                    a['value'] : 0) - (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        rMembers = aggreColl.map(function (item) { return item['header']; });\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n        /* tslint:enable */\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        this.rowGrandTotal = this.columnGrandTotal = null;\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (this.isValueHasAdvancedAggregate) {\n            /* inserting the row grant-total members */\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n            if (rowFlag) {\n                this.rowCount += this.rowValuesLength;\n            }\n            /* inserting the column gran-total members */\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n            if (columnFlag) {\n                this.columnCount += this.colValuesLength;\n            }\n        }\n        else {\n            if (rowFlag) {\n                /* inserting the row grant-total members */\n                this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                this.rowCount += this.rowValuesLength;\n            }\n            else {\n                this.rowGrandTotal = this.insertAllMember([], this.filterMembers, '', 'row')[0];\n            }\n            if (columnFlag) {\n                /* inserting the column gran-total members */\n                this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                this.columnCount += this.colValuesLength;\n            }\n            else {\n                this.columnGrandTotal = this.insertAllMember([], this.filterMembers, '', 'column')[0];\n            }\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                for (var colCnt = colLength - 1; colCnt > 0; colCnt--) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            if (!this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] = this.headerContent[rowPos][colCnt] = {\n                                type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                    (cell.formattedText + ' Total')),\n                                axis: 'column', level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                            };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (this.pivotValues[rowCnt][colCnt].type !== 'sum' &&\n                                this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (this.pivotValues[rowCnt][colCnt].type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] = this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index = this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject = this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        rowCells[colCnt].colSpan = spanCnt;\n                        rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        savedCell.colSpan = spanCnt;\n                        savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.frameDrillObject = function () {\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            for (var memberCnt = 0; memberCnt < drillOption.items.length; memberCnt++) {\n                var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                    drillOption.items[memberCnt].split(drillOption.delimiter).join(this.valueSortSettings.headerDelimiter);\n                this.fieldDrillCollection[memberString] = memberString;\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        if (keys) {\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.showHeaderWhenEmpty || (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.indexMatrix[position[pos]][childrens.index];\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][this.fieldKeys[fieldName]];\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } :\n                    {\n                        formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                            headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                            (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : headerValue\n                    };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var pindx = void 0;\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ?\n                        true : (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                        this.isExpandAll ? false : true : childrens.members[headerValue].isDrilled;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += this.rowValuesLength;\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0 && !showNoDataItems) {\n                    var headerValue = data[hierarchy[iln].index[0]][this.fieldKeys[keys[keyInd + 1].name]];\n                    var hasChild = (isNullOrUndefined(headerValue) || (this.localeObj &&\n                        headerValue === this.localeObj.getConstant('undefined'))) && hierarchy[iln].index.length === 1 ? false : true;\n                    hierarchy[iln].hasChild = hasChild;\n                }\n                else if (!this.showHeaderWhenEmpty && showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                    Object.keys(this.fieldList[keys[keyInd + 1].name].members).length) {\n                    hierarchy[iln].hasChild = true;\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.showSubTotals && this.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    /* tslint:disable:align */\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember);\n                    /* tslint:enable:align */\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            /* tslint:disable:typedef */\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n                else {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n            }\n            else {\n                return hierarchy;\n            }\n            /* tslint:enable:typedef */\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.indexMatrix[position[pos]][childrens.index];\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var value = data[position[pos]][this.fieldKeys[field]];\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(value, field) :\n                    { formattedText: value.toString(), actualText: value.toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    /* tslint:disable:align */\n                    hierarchy[iln].members =\n                        this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                    /* tslint:enable:align */\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            /* tslint:disable:typedef */\n            var lt = void 0;\n            for (var ln = 0, lt_1 = this.filterMembers.length; ln < lt_1; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n            /* tslint:enable:typedef */\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.pageSettings) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.values.length;\n            }\n            else {\n                this.colValuesLength = this.values.length;\n            }\n            this.memberCnt = -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.rowCurrentPage * this.pageSettings.rowSize) -\n                (this.pageSettings.rowSize)) * this.rowValuesLength;\n            var exactStartPos = (this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength)) > this.rowCount ?\n                (this.rowCount - (this.pageSettings.rowSize * 3 * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.rowCurrentPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength);\n            this.endPos = this.endPos > this.rowCount ? this.rowCount : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.columnCurrentPage * this.pageSettings.columnSize) -\n                (this.pageSettings.columnSize)) * this.colValuesLength;\n            exactStartPos = (this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength)) >\n                this.columnCount ?\n                (this.columnCount - (this.pageSettings.columnSize * 3 * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.columnCurrentPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength);\n            this.endPos = this.endPos > this.columnCount ? this.columnCount : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n            if (this.isValueHasAdvancedAggregate) {\n                if (this.rMembers[this.rMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1].type === 'grand sum') {\n                    this.rMembers.push(this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1]);\n                    this.removeRowGrandTotal = true;\n                }\n                if (this.cMembers[this.cMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1].type === 'grand sum') {\n                    this.cMembers.push(this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1]);\n                    this.removeColumnGrandTotal = true;\n                }\n            }\n            else {\n                this.rowGrandTotal = this.rowGrandTotal ? this.rowGrandTotal :\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1];\n                this.columnGrandTotal = this.columnGrandTotal ? this.columnGrandTotal :\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1];\n            }\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            this.memberCnt += axis === 'column' ? this.colValuesLength : this.rowValuesLength;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ? this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    /* tslint:disable:no-any */\n                    this.memberCnt -= !(this.showSubTotals && this.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ? this.colValuesLength : 0;\n                    /* tslint:enable:no-any */\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    /* tslint:disable:no-any */\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        /* tslint:disable:no-string-literal */\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        /* tslint:enable:no-string-literal */\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        set[len] = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            formattedText: 'Grand' + customText,\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        set[len].valueSort[set[len].formattedText] = 1;\n        set[len].valueSort.levelName = set[len].formattedText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            set[len].indexObject[filter[ln]] = filter[ln];\n        }\n        // if (axis === 'row') {\n        //     this.rowCount += this.rowValuesLength;\n        // } else {\n        //     this.columnCount += this.colValuesLength;\n        // }\n        return set;\n    };\n    /* tslint:enable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, tnum, data, vlt, rTotal, cTotal) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            tnum = data.length;\n            reformAxis[tnum] = rows[rln];\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            //let rplus: number = rln + 1;\n            //let lvl: number = rows[rln].level;\n            var isLeastNode = !reformAxis[tnum].members.length;\n            rows[rln].colIndex = 0;\n            rows[rln].rowIndex = tnum;\n            if (!data[tnum]) {\n                data[tnum] = [];\n                this.valueContent[actCnt] = {};\n                //data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            else {\n                // data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader)) {\n                var hpos = tnum;\n                var actpos = actCnt;\n                var rowIndex = tnum;\n                if (!(rows[rln].hasChild && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n                    !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals))) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        tnum++;\n                        actCnt++;\n                        var name_1 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                        var calObj = {\n                            axis: 'row',\n                            actualText: this.values[vln].name,\n                            formattedText: name_1,\n                            level: 0,\n                            valueSort: {},\n                            colIndex: 0,\n                            rowIndex: tnum,\n                            type: 'value'\n                        };\n                        if (!data[tnum]) {\n                            data[tnum] = [];\n                            this.valueContent[actCnt] = {};\n                            data[tnum][0] = this.valueContent[actCnt][0] = calObj;\n                        }\n                        var vData = data[tnum][0].valueSort;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData[data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1] = 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData.levelName = data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1;\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            //for (let vln: number = 0; (!this.valueAxis && vln < vlt); vln++) {\n                            this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                            dln = data[tnum].length;\n                            data[hpos][dln - 1] = this.valueContent[actpos][dln - 1] = {\n                                axis: 'value', actualText: '', colSpan: 1,\n                                colIndex: dln, formattedText: '', hasChild: false\n                            };\n                            // }\n                        }\n                    }\n                    rowIndex = tnum;\n                }\n                else {\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        dln = data[tnum].length;\n                        data[hpos][dln] = this.valueContent[actpos][dln] = {\n                            axis: 'value', actualText: '', colSpan: 1,\n                            colIndex: dln, formattedText: '', hasChild: false\n                        };\n                    }\n                    rowIndex = tnum + vlt;\n                }\n                this.recursiveRowData(rows, reformAxis, columns, rowIndex, data, vlt, isLeastNode, rln, vlt, rTotal, cTotal);\n            }\n            else {\n                for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, rTotal, cTotal);\n            }\n        }\n        /* for (let rlt: number = rows.length, rln: number = 0; rln < rlt; rln++) {\n            if (!data[rln]) {\n                data[rln] = [];\n                data[rln][0] = rows[rln].name;\n            } else {\n                data[rln][0] = rows[rln].name;\n            }\n            for (let cln: number = 0, dln: number = 1, clt: number = columns.length; cln < clt; dln = ++cln) {\n                data[rln][dln] = this.getAggregateValue(rows[rln].index, columns[cln].index, 11);\n            }\n        } */\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split(this.valueSortSettings.headerDelimiter);\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : headers), vln + 1));\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if (rln.level === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _a = 0, _b = rln.members; _a < _b.length; _a++) {\n                                            var member = _b[_a];\n                                            aggregateHeaders.push(member);\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(rln);\n                                    }\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: headers,\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(data[rln][cln].actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                        this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                        for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                            var index = colIndex_1[_i];\n                            pivotIndex[rln + ',' + index] = [rln, index];\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n            this.updatePivotValues(true);\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable:all */\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_2 = headers.value;\n            var valueCount = (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    if (this.valueAxis === 0 || (this.valueAxis && data[rln + valueCount] &&\n                                        data[rln + valueCount][0].actualText === name_2)) {\n                                        selectedRowValues = data[rln + valueCount];\n                                    }\n                                    else {\n                                        selectedRowValues = [];\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_7 = data.length, i = 0; i < len_7; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                        axisObj[cln].axis === 'value' &&\n                                        this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (selectedColumnValues.length === 0 && rowindexCollection.length === 0) {\n                            for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                var isSelectedColumn = false;\n                                if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort.levelName.indexOf(uniqueName) === 0) {\n                                    activeValues = activeColumn[cln];\n                                    for (var lnt = data.length, j = 0; j < lnt; j++) {\n                                        var axisObj = data[j];\n                                        if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                            axisObj[cln].axis === 'value' &&\n                                            this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                            isSelectedColumn = true;\n                                            // selectedColumnValues[i] = axisObj[cln] as IAxisSet;\n                                            rowindexCollection.push(j);\n                                        }\n                                    }\n                                    if (isSelectedColumn) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _a = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _a < selectedHeaderCollection_1.length; _a++) {\n                                    var item = selectedHeaderCollection_1[_a];\n                                    for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _b = 0, colIndex_2 = colIndex; _b < colIndex_2.length; _b++) {\n                                                    var index = colIndex_2[_b];\n                                                    var currentSet = data[rln + valueCount][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                        indexCollection.push([rln + valueCount, index]);\n                                                        if (pivotIndex[rln + valueCount + ',' + index]) {\n                                                            delete pivotIndex[rln + valueCount + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _c = 0, colIndex_3 = colIndex; _c < colIndex_3.length; _c++) {\n                                                var index = colIndex_3[_c];\n                                                var currentSet = data[rlen + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([rlen + valueCount, index]);\n                                                    if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                        delete pivotIndex[rlen + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _d = 0, indexCollection_2 = indexCollection; _d < indexCollection_2.length; _d++) {\n                                var index = indexCollection_2[_d];\n                                var currentSet = data[index[0]][index[1]];\n                                // let cVal: number = currentSet.value - (selectedRowValues[index[1]] as IAxisSet).value;\n                                var cVal = currentSet.actualValue - selectedRowValues[index[1]].actualValue;\n                                cVal = isNaN(cVal) ? 0 : (currentSet.value === 0 && selectedRowValues[index[1]].value === 0) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                }\n                                else {\n                                    // cVal = ((selectedRowValues[index[1]] as IAxisSet).value === 0 ?\n                                    // 0 : (cVal / (selectedRowValues[index[1]] as IAxisSet).value));\n                                    cVal = (selectedRowValues[index[1]].actualValue === 0 ?\n                                        0 : (cVal / selectedRowValues[index[1]].actualValue));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _e = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _e < selectedHeaderCollection_2.length; _e++) {\n                                    var item = selectedHeaderCollection_2[_e];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _f = 0, rowindexCollection_1 = rowindexCollection; _f < rowindexCollection_1.length; _f++) {\n                                                var index = rowindexCollection_1[_f];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _g = 0, rowindexCollection_2 = rowindexCollection; _g < rowindexCollection_2.length; _g++) {\n                                                var index = rowindexCollection_2[_g];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedColumn = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedColumn = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _h = 0, indexCollection_3 = indexCollection; _h < indexCollection_3.length; _h++) {\n                                var index = indexCollection_3[_h];\n                                var currentSet = data[index[0]][index[1]];\n                                var selectedColumnValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColumnValue = this.getAggregateValue(selectedRow.index, selectedColumn.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColumnValue = selectedColumnValues[index[0]].value;\n                                }\n                                var cVal = currentSet.value - selectedColumnValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _j = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _j < selectedHeaderCollection_3.length; _j++) {\n                                var item = selectedHeaderCollection_3[_j];\n                                for (var rlt = rowheads.length, i = 0; i < rlt; i++) {\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _k = 0, colIndex_4 = colIndex; _k < colIndex_4.length; _k++) {\n                                                var index = colIndex_4[_k];\n                                                var currentSet = data[i + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([i + valueCount, index]);\n                                                    if (pivotIndex[i + valueCount + ',' + index]) {\n                                                        delete pivotIndex[i + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _l = 0, indexCollection_4 = indexCollection; _l < indexCollection_4.length; _l++) {\n                                var i = indexCollection_4[_l];\n                                var currentSet = data[i[0]][i[1]];\n                                // let cVal: number = currentSet.value / (selectedRowValues[i[1]] as IAxisSet).value;\n                                var selectedRowValue = 0;\n                                if (selectedRowValues.length === 0 && activeValues) {\n                                    selectedRowValue = this.getAggregateValue(activeValues.index, colheads[i[1] - 1].indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedRowValue = selectedRowValues[i[1]].actualValue;\n                                }\n                                var cVal = currentSet.value / selectedRowValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _m = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _m < selectedHeaderCollection_4.length; _m++) {\n                                var item = selectedHeaderCollection_4[_m];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _o = 0, rowindexCollection_3 = rowindexCollection; _o < rowindexCollection_3.length; _o++) {\n                                            var index = rowindexCollection_3[_o];\n                                            var currentSet = data[index][j];\n                                            if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                isSelectedColumn = true;\n                                                indexCollection.push([index, j]);\n                                                if (pivotIndex[index + ',' + j]) {\n                                                    delete pivotIndex[index + ',' + j];\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedCol = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedCol = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _p = 0, indexCollection_5 = indexCollection; _p < indexCollection_5.length; _p++) {\n                                var i = indexCollection_5[_p];\n                                var currentSet = data[i[0]][i[1]];\n                                var selectedColValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColValue = this.getAggregateValue(selectedRow.index, selectedCol.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColValue = selectedColumnValues[i[0]].value;\n                                }\n                                var val = currentSet.value / selectedColValue;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _q = 0, colIndex_5 = colIndex; _q < colIndex_5.length; _q++) {\n                                var index = colIndex_5[_q];\n                                var cVal = 0;\n                                for (var _r = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _r < selectedHeaderCollection_5.length; _r++) {\n                                    var item = selectedHeaderCollection_5[_r];\n                                    for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen + valueCount][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rlen].level === item.level && currentSet.axis === 'value' &&\n                                                currentSet.actualText === name_2) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = (cVal === 0 && (currentSet.actualValue && currentSet.actualValue !== 0) ? '' :\n                                                        this.getFormattedValue(cVal, name_2).formattedText);\n                                                    if (!this.aggregatedValueMatrix[rlen + valueCount]) {\n                                                        this.aggregatedValueMatrix[rlen + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen + valueCount][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                    delete pivotIndex[rlen + valueCount + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                if (rowheads[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _s = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _s < selectedHeaderCollection_6.length; _s++) {\n                                        var item = selectedHeaderCollection_6[_s];\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln + valueCount][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln + valueCount]) {\n                                                        this.aggregatedValueMatrix[rln + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln + valueCount][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + valueCount + ',' + cln]) {\n                                                    delete pivotIndex[rln + valueCount + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getSelectedColumn = function (name, colheads) {\n        var set = { axis: 'column', index: [], indexObject: {} };\n        for (var _i = 0, colheads_1 = colheads; _i < colheads_1.length; _i++) {\n            var head = colheads_1[_i];\n            if (head && head.valueSort && head.valueSort.levelName.indexOf(name) === 0) {\n                set.index = set.index.concat(head.index).sort(function (a, b) { return a - b; });\n                set.indexObject = __assign({}, set.indexObject, head.indexObject);\n            }\n        }\n        return set;\n    };\n    PivotEngine.prototype.getSelectedRow = function (name, rowheads) {\n        for (var _i = 0, rowheads_1 = rowheads; _i < rowheads_1.length; _i++) {\n            var head = rowheads_1[_i];\n            if (head) {\n                if (head.valueSort && head.valueSort.levelName === name) {\n                    return head;\n                }\n                else if (name === '' && head.type === 'grand sum') {\n                    return head;\n                }\n            }\n        }\n        return null;\n    };\n    /* tslint:enable:all */\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum - vln].members, reformAxis, columns, tnum, data, vlt, rTotal, cTotal);\n        }\n        if (!this.pageSettings) {\n            reformAxis[tnum - vln].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.values[vln].name].index;\n        var aggregate = this.fieldList[this.values[vln].name].aggregateType;\n        var field = this.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        var actualValue = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]], [rows[rln], cTotal], [rTotal, columns[cln]], [rTotal, cTotal]];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_1 = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showRowSubTotals || !this.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] : [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_2 = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                }\n                break;\n            default:\n                var val = this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate);\n                value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals)) ? undefined : val;\n                actualValue = val;\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.values[vln].name,\n            row: rows[rln],\n            column: columns[cln],\n            value: value,\n            cellSets: this.getCellSet(this.rawIndexObject),\n            /* tslint:disable-next-line:max-line-length */\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            /* tslint:disable-next-line:max-line-length */\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate,\n            skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild ||\n            rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var isGrand = rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            (aggregate === 'Count' || aggregate === 'DistinctCount') ? value.toLocaleString() :\n                this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) &&\n            (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: 2 });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n        }\n        //dln = data[tnum].length;\n        /* tslint:disable-next-line:max-line-length */\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ? this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: isNullOrUndefined(value) ? 0 : value,\n            actualValue: isNullOrUndefined(actualValue) ? 0 : actualValue,\n            rowIndex: tnum, colIndex: dln, isSum: isSum, isGrandSum: isGrand\n        };\n        this.rawIndexObject = {};\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.getHeaderData = function (axis, reformAxis, data, tnum, vcnt) {\n        var rlt = axis.length;\n        var colItmLn = this.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            if (axis[rln].members.length) {\n                this.getHeaderData(axis[rln].members, reformAxis, data, tnum, vcnt);\n            }\n            var isTotalHide = true;\n            if ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.showSubTotals || !this.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[reformAxis.length] = this.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = reformAxis.length - 1;\n            }\n            else {\n                tnum = reformAxis.length;\n                reformAxis[tnum] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            axis[rln].colIndex = (tnum * vcnt) + vcnt;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            var isSingleMeasure = (this.columns.length === 0 && this.values.length === 1) ? true : false;\n            if ((this.isMutiMeasures || this.alwaysShowValueHeader || isSingleMeasure) && !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_3 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'column',\n                        actualText: this.values[vln].name,\n                        formattedText: name_3,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln,\n                        rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.pageSettings) {\n                reformAxis[tnum].members = [];\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        var rlt = rowIndex.length;\n        //let clt: number = columnIndex.length;\n        var mirror = {};\n        var ri = 0;\n        var ci = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        if (type && type.toLowerCase() === 'count') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    cellValue += (isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value]) ?\n                        0 : (this.allowDataCompression ? this.valueMatrix[rowIndex[ri]][value] : 1));\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'distinctcount') {\n            var duplicateValues = [];\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var val = (this.data[rowIndex[ri]][this.fieldKeys[this.fields[value]]]);\n                    var currentVal = void 0;\n                    // let currentVal: number = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(val)) {\n                        currentVal = val.toString();\n                        if (duplicateValues.length === 0 || (duplicateValues.length > 0 && duplicateValues.indexOf(currentVal) === -1)) {\n                            cellValue += (this.allowDataCompression && typeof val === 'number') ? val : 1;\n                            duplicateValues.push(currentVal);\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'product') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                        cellValue *= currentVal;\n                    }\n                    else if (isInit) {\n                        cellValue = currentVal;\n                    }\n                    isInit = false;\n                }\n                ri++;\n            }\n        }\n        else if (type && (['populationstdev', 'samplestdev', 'populationvar', 'samplevar']).indexOf(type.toLowerCase()) !== -1) {\n            var i = 0;\n            var val = 0;\n            var indexVal = [];\n            var avgVal = 0;\n            var cVal = 0;\n            var avgDifferenceVal = 0;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        val += currentVal;\n                        indexVal.push(currentVal);\n                        i++;\n                    }\n                }\n                ri++;\n            }\n            if (i > 0) {\n                avgVal = val / i;\n                for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                    var index = indexVal_1[_i];\n                    avgDifferenceVal += Math.pow((index - avgVal), 2);\n                }\n                if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                    cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                }\n                else {\n                    cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                }\n                cellValue = (cVal === 0 ? NaN : cVal);\n            }\n            else {\n                cellValue = val;\n            }\n        }\n        else if (type && type.toLowerCase() === 'min') {\n            var isFirst = true;\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value])) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                    }\n                    else {\n                        if (isFirst) {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value];\n                            isFirst = false;\n                        }\n                        else {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value] < cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'max') {\n            var isMaxFirst = true;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isMaxFirst) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                        isMaxFirst = false;\n                    }\n                    else {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value] > cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'calculatedfield') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var calcField = this.calculatedFields[this.fields[value]];\n                    var actualFormula = calcField.formula;\n                    var aggregateField = {};\n                    if (this.calculatedFormulas[calcField.name]) {\n                        var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                        for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                            var aggregatedValue = calculatedFormulas[len];\n                            var value_1 = aggregateField[aggregatedValue.formula];\n                            if (value_1 === undefined) {\n                                var type_1 = aggregatedValue.type;\n                                value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1);\n                                aggregateField[aggregatedValue.formula] = value_1;\n                            }\n                            actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                        }\n                    }\n                    cellValue = this.evaluate(actualFormula);\n                    cellValue = (cellValue === Infinity || cellValue === -Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ? undefined : JSON.parse(String(cellValue)));\n                }\n                ri++;\n            }\n        }\n        else {\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                        cellValue = currentVal;\n                    }\n                    else {\n                        if (isNullOrUndefined(cellValue)) {\n                            cellValue = 0;\n                        }\n                        cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                    }\n                    if (!isNullOrUndefined(currentVal)) {\n                        avgCnt++;\n                    }\n                }\n                ri++;\n            }\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri] !== undefined) {\n                 if (mirror[rowIndex[ri]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                     sum += this.valueMatrix[rowIndex[ri]][value];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    ;\n    /* tslint:enable */\n    /** hidden */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && value) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                    formattedValue.actualText = value;\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        var pattern = formatSetting.format.match(this.customRegex);\n                        var flag = true;\n                        if (isNullOrUndefined(pattern)) {\n                            pattern = formatSetting.format.match(/^(('[^']+'|''|[^*@0])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@,.E])*)$/);\n                            delete formatSetting.useGrouping;\n                            flag = false;\n                        }\n                        var integerPart = pattern[6];\n                        if (flag) {\n                            formatSetting.useGrouping = integerPart.indexOf(',') !== -1;\n                        }\n                        var decimalPart = pattern[5];\n                        if (isBlazor() && decimalPart && decimalPart.indexOf('.') !== -1 && formatSetting.maximumFractionDigits) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                    }\n                    formattedValue.formattedText =\n                        this.globalize.formatNumber(!isNaN(Number(value)) ? Number(value) : value, formatSetting);\n                    formattedValue.actualText = !isNaN(Number(value)) ? Number(value) : value;\n                    formattedValue.dateText = !isNaN(Number(value)) ? Number(value) : value;\n                }\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^\\(\\)]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var fieldDrop = 'fieldDrop';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/** @hidden */\nexport var calculatedFieldCreate = 'calculatedFieldCreate';\n/** @hidden */\nexport var memberEditorOpen = 'memberEditorOpen';\n/** @hidden */\nexport var fieldRemove = 'fieldRemove';\n/** @hidden */\nexport var numberFormatting = 'numberFormatting';\n/** @hidden */\nexport var aggregateMenuOpen = 'aggregateMenuOpen';\n/** @hidden */\nexport var fieldDragStart = 'fieldDragStart';\n/** @hidden */\nexport var chartPointClick = 'chartPointClick';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n","/**\n * CSS Constants\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-wrapper';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-wrapper';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var MEMBER_SORT_CLASS = 'e-member-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DRAG_DISABLE_CLASS = 'e-disable-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-wrapper';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-wrapper';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-wrapper-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-wrapper-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var FILTER_SORT_CLASS = 'e-filter-sort';\n/** @hidden */\nexport var SORT_ASCEND_ICON_CLASS = 'e-sort-ascend-icon';\n/** @hidden */\nexport var SORT_DESCEND_ICON_CLASS = 'e-sort-descend-icon';\n/** @hidden */\nexport var SORT_SELECTED_CLASS = 'e-active';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-wrapper';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var EDITOR_SEARCH__INPUT_CLASS = 'e-editor-search-input';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-wrapper';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var CALC_CUSTOM_FORMAT_INPUTDIV = 'e-pivot-calc-custom-format-div';\n/** @hidden */\nexport var OLAP_CALC_CUSTOM_FORMAT_INPUTDIV = 'e-olap-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-olap-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-wrapper';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-wrapper';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var OLAP_FORMAT_TITLE_CLASS = 'e-olap-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var MOVABLECONTENT_DIV = 'e-movablecontent';\n/** @hidden */\nexport var FROZENCONTENT_DIV = 'e-frozencontent';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-movableheader';\n/** @hidden */\nexport var FROZENHEADER_DIV = 'e-frozenheader';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_ACCUMULATION_COLUMN = 'e-group-chart-accumulation-column';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN_DIV = 'e-group-chart-columns-dropdown-div';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN = 'e-group-chart-columns-dropdown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var EMPTY_FORMAT = 'e-pivot-conditional-empty-format';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n/** @hidden */\nexport var PIVOTCHART_INNER = 'e-pivotchart-inner';\n/** @hidden */\nexport var PIVOTCHART_TYPE_DIALOG = 'e-pivotchart-type-dialog';\n/** @hidden */\nexport var FORMAT_FONT_COLOR_PICKER = 'e-format-font-color-picker';\n/** @hidden */\nexport var GROUP_PIVOT_ROW = 'e-group-pivot-rows';\n","import { createElement, remove, extend, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.menuInfo = [];\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        var _this = this;\n        var fieldName = args.target.parentElement.id;\n        this.buttonElement = args.target.parentElement;\n        var isStringField = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 1 : 0;\n        this.summaryTypes = this.getMenuItem(isStringField).slice();\n        var eventArgs = {\n            cancel: false, fieldName: fieldName, aggregateTypes: this.summaryTypes\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.summaryTypes = observedArgs.aggregateTypes;\n                _this.createContextMenu(isStringField);\n                _this.currentMenu = args.target;\n                var pos = _this.currentMenu.getBoundingClientRect();\n                if (_this.parent.enableRtl) {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left - 105);\n                }\n                else {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left);\n                }\n            }\n        });\n    };\n    AggregateMenu.prototype.createContextMenu = function (isStringField) {\n        var _this = this;\n        var menuItems = [];\n        menuItems[isStringField] = [];\n        if (this.menuInfo[isStringField] && !this.menuInfo[isStringField].isDestroyed) {\n            this.menuInfo[isStringField].destroy();\n        }\n        var checkDuplicates = [];\n        for (var i = 0; i < this.summaryTypes.length; i++) {\n            var key = this.summaryTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + 'StringMenu_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + '_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n        }\n        if (menuItems[isStringField].length >= 7) {\n            menuItems[isStringField].splice(7);\n            menuItems[isStringField].push({\n                text: this.parent.localeObj.getConstant('MoreOption'),\n                id: this.parent.element.id + '_' + 'MoreOption'\n            });\n        }\n        var menuOptions;\n        menuOptions = {\n            items: menuItems[isStringField],\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this, isStringField),\n            onClose: function (args) {\n                _this.parentElement.querySelector('#' + _this.buttonElement.id).focus();\n            },\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var contextMenu = document.getElementById(this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu'));\n        if (contextMenu !== null) {\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu')\n            });\n        }\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo[isStringField] = new Menu(menuOptions);\n        this.menuInfo[isStringField].isStringTemplate = true;\n        this.menuInfo[isStringField].appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (isString, args) {\n        args.element.style.zIndex = (this.menuInfo[isString].element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /** @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement, type) {\n        var _this = this;\n        this.parentElement = parentElement;\n        var valueDialog = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.id }\n        });\n        this.parentElement.appendChild(valueDialog);\n        this.valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.valueDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            /* tslint:disable-next-line:max-line-length */\n            closeOnEscape: (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') ? false : true,\n            target: this.parentElement,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.valueDialog.isStringTemplate = true;\n        this.valueDialog.appendTo(valueDialog);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    /* tslint:disable:max-func-body-length */\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement, type) {\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = (type && type !== 'MoreOption') ? type : buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [];\n        var summaryItems = this.parent.aggregateTypes;\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryItems.length; i++) {\n            if (this.parent.getAllSummaryType().indexOf(summaryItems[i]) > -1 && checkDuplicates.indexOf(summaryItems[i]) < 0) {\n                summaryDataSource.push({ value: summaryItems[i], text: this.parent.localeObj.getConstant(summaryItems[i]) });\n                checkDuplicates.push(summaryItems[i]);\n            }\n        }\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        /* tslint:disable-next-line:max-line-length */\n        baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n        fieldItemDataSource = Object.keys(this.parent.engineModule.fieldList[(baseField.toString() !== 'undefined' ?\n            baseField : fieldDataSource[0].value)].formattedMembers);\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-wrapper', });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-wrapper' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-wrapper' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-wrapper' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-wrapper' });\n        /* tslint:disable-next-line:max-line-length */\n        var texttitle = createElement('div', { className: 'e-field-name-title', innerHTML: this.parent.localeObj.getConstant('sourceName') + '&nbsp;' });\n        var textContent = createElement('div', { className: 'e-field-name-content', innerHTML: buttonElement.id.toString() });\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('sourceCaption')\n        });\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text', innerHTML: this.parent.localeObj.getConstant('summarizeValuesBy')\n        });\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text', innerHTML: this.parent.localeObj.getConstant('baseField')\n        });\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('baseItem')\n        });\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.dataBind();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                fieldItemDataSource = Object.keys(popupInstance.parent.engineModule.fieldList[args.value].formattedMembers);\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3.dataBind();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: [fieldItemDataSource[0]], enableRtl: this.parent.enableRtl,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            value: fieldCaption, width: '100%'\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var type = menu.item.id.split('_').pop();\n            if (type === 'MoreOption' || type === 'PercentageOfDifferenceFrom'\n                || type === 'PercentageOfParentTotal' || type === 'DifferenceFrom') {\n                this.createValueSettingsDialog(buttonElement, this.parentElement, type);\n            }\n            else {\n                var field = buttonElement.getAttribute('data-uid');\n                var valuefields = this.parent.dataSourceSettings.values;\n                var contentElement = buttonElement.querySelector('.e-content');\n                var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                    this.parent.engineModule.fieldList[field].caption;\n                contentElement.innerHTML = captionName;\n                contentElement.setAttribute('title', captionName);\n                buttonElement.setAttribute('data-type', type);\n                for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                        /* tslint:disable:align */\n                        var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                            valuefields[vCnt].properties : valuefields[vCnt], null, true);\n                        /* tslint:enable:align */\n                        dataSourceItem.type = type;\n                        this.parent.engineModule.fieldList[field].aggregateType = type;\n                        valuefields.splice(vCnt, 1, dataSourceItem);\n                        this.parent.lastAggregationInfo = dataSourceItem;\n                    }\n                }\n                this.updateDataSource();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                /* tslint:disable:align */\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                /* tslint:enable:align */\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var dialogElement = this.valueDialog.element;\n        var captionInstance = getInstance('#' + this.parentElement.id + 'type_input_option', MaskedTextBox);\n        var summaryInstance = getInstance('#' + this.parentElement.id + '_type_option', DropDownList);\n        var baseFieldInstance = getInstance('#' + this.parentElement.id + '_base_field_option', DropDownList);\n        var baseItemInstance = getInstance('#' + this.parentElement.id + '_base_item_option', DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement = this.parentElement.\n                querySelector('.' + cls.PIVOT_BUTTON_CLASS + '.' + fieldName.replace(/[^A-Z0-9]/ig, ''));\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.e-content');\n            var captionName = this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value;\n            contentElement.innerHTML = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        this.valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        this.parentElement.querySelector('#' + this.buttonElement.id).focus();\n        if (this.valueDialog && !this.valueDialog.isDestroyed) {\n            this.valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo) {\n            if (this.menuInfo[1] !== undefined && !this.menuInfo[1].isDestroyed) {\n                this.menuInfo[1].destroy();\n            }\n            if (this.menuInfo[0] !== undefined && !this.menuInfo[0].isDestroyed) {\n                this.menuInfo[0].destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement } from '@syncfusion/ej2-base';\nimport { isBlazor, addClass, removeClass, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function () {\n        var parent = this.parent;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.parent.gridHeaderCellInfo = [];\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.e-grid')) {\n            if (!engine.isEngineUpdated) {\n                engine.headerContent = this.frameDataSource('header');\n                engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.enableValueSorting) {\n                    engine.valueContent = this.frameDataSource('value');\n                }\n                engine.isEngineUpdated = false;\n            }\n            /* tslint:disable */\n            this.parent.grid.setProperties({\n                columns: this.frameStackedHeaders(), dataSource: (this.parent.dataType === 'olap' ? true :\n                    parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData ? engine.valueContent :\n                    this.frameDataSource('value')\n            }, true);\n            /* tslint:enable */\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            var e = this.parent.element.querySelector('.e-movablecontent');\n            e.querySelector('colGroup').innerHTML =\n                this.parent.grid.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            this.parent.element.appendChild(createElement('div', { id: this.parent.element.id + '_grid' }));\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo('#' + this.parent.element.id + '_grid');\n        }\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.refreshHeader = function () {\n        if (this.parent.enableVirtualization) {\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            setStyleAttribute(mHdr.querySelector('.e-table'), {\n                transform: (mCont.querySelector('.e-table').style.transform).split(',')[0] + ',' + 0 + 'px)'\n            });\n            mHdr.scrollLeft = mCont.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? this.parent.width : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            allowReordering: (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering),\n            allowSelection: this.gridSettings.allowSelection,\n            /* tslint:disable-next-line */\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            /* tslint:disable-next-line */\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined\n        });\n        if (isBlazor()) {\n            var isJsComponent = 'isJsComponent';\n            /* tslint:disable-next-line */\n            this.parent.grid[isJsComponent] = true;\n        }\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.headerRefreshed = function (args) {\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1) {\n            this.parent.lastGridSettings = undefined;\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n        }\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    Render.prototype.dataBound = function (args) {\n        if (this.parent.cellTemplate && !isBlazor()) {\n            for (var _i = 0, _a = this.parent.gridHeaderCellInfo; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (this.parent.cellTemplate) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()(cell, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(cell.targetCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(cell.targetCell, element[0].outerHTML);\n                        }\n                    }\n                }\n            }\n            this.parent.gridHeaderCellInfo = [];\n        }\n        if (this.parent.element.querySelector('.e-firstcell')) {\n            if (this.parent.enableRtl) {\n                this.parent.element.querySelector('.e-firstcell').style.borderRight = 'none';\n            }\n            else {\n                this.parent.element.querySelector('.e-firstcell').style.borderLeft = 'none';\n            }\n        }\n        if (this.parent.grid && this.parent.grid.widthService) {\n            this.parent.grid.widthService.setWidthToTable();\n        }\n        /* tslint:disable-next-line */\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        if (this.parent.currentView !== 'Chart') {\n            this.parent.grid.hideScroll();\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        this.parent.notify(events.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            addClass([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    /* tslint:disable */\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked;\n            var elem = null;\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (cellTarget.classList.contains('e-stackedheadercelldiv') || cellTarget.classList.contains('e-cellvalue') ||\n                cellTarget.classList.contains('e-headercelldiv') || cellTarget.classList.contains('e-icons') || cellTarget.classList.contains('e-rhandler')) {\n                elem = cellTarget.parentElement;\n            }\n            else if (cellTarget.classList.contains('e-headercell') || cellTarget.classList.contains('e-rowcell') || cellTarget.classList.contains('e-columnsheader') ||\n                cellTarget.classList.contains('e-rowsheader') || cellTarget.classList.contains('e-valuescontent') || cellTarget.classList.contains('e-valuesheader')) {\n                elem = cellTarget;\n            }\n            else if (cellTarget.classList.contains('e-headertext')) {\n                elem = cellTarget.parentElement.parentElement;\n            }\n            if (!elem) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('aria-colindex'));\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var select = item.id;\n            switch (select) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('aria-colindex'))];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup') && isUngroupOption) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                                args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_CalculatedField').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_pdf').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_excel').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_csv').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_exporting').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if ((args.element.querySelector('#' + this_1.parent.element.id + '_aggregate')) &&\n                        (!args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.contains(cls.MENU_DISABLE))) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.add(cls.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice()\n                        };\n                        this_1.parent.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length >= 7) {\n                                    menuItem.splice(7);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    args.element.querySelector('#' + _this.parent.element.id + '_aggregate').classList.remove(cls.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var event = new MouseEvent('dblclick', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true\n        });\n        var exportArgs = {};\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv') || target.classList.contains('e-icons') || target.classList.contains('e-rhandler')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('aria-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.pdfExport(exportArgs.pdfExportProperties, exportArgs.isMultipleExport, exportArgs.pdfDoc, exportArgs.isBlob);\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.excelExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.csvExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case this.parent.element.id + '_drillthrough_menu':\n                ele.dispatchEvent(event);\n                break;\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = \"\";\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[headerPosKeys[pos]][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName == '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('aria-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    /* tslint:enable */\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering);\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        /* tslint:disable-next-line */\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        /* tslint:disable-next-line */\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                /* tslint:disable-next-line */\n                if (!isNullOrUndefined(this.parent.pivotColumns[colPos][key])) {\n                    /* tslint:disable-next-line */\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        removeClass(this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt) {\n        if (this.parent.enableValueSorting && this.parent.dataType === 'pivot') {\n            var vSort = this.parent.dataSourceSettings.valueSortSettings;\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (this.parent.engineModule.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (this.parent.engineModule.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && rCnt === len && this.parent.dataSourceSettings.valueAxis === 'column') {\n                if (tCell.querySelector('.e-sortfilterdiv')) {\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-descending' : 'e-ascending');\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending' : 'e-icon-ascending');\n                }\n                else {\n                    tCell.appendChild(createElement('div', {\n                        className: (vSort.sortOrder === 'Descending' ?\n                            'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                            'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                    }));\n                }\n                if (!isNullOrUndefined(cell.hasChild) && cell.type !== 'grand sum' && tCell.querySelector('.e-expand') &&\n                    (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'))) {\n                    var element = (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'));\n                    setStyleAttribute(element, { 'padding-top': '12px' });\n                }\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        /* tslint:disable-next-line */\n        var column = args.column.field === '0.formattedText' ? '0.formattedText' : args.column.customAttributes.cell.valueSort.levelName;\n        this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.e-frozenheader').querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.e-frozencontent').querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        /* tslint:disable-next-line */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        /* tslint:disable-next-line */\n        if (tCell && (this.parent.notEmpty)) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            tCell.setAttribute('index', (Number(tCell.getAttribute('index')) + this.engine.headerContent.length).toString());\n            var cell = args.data[0];\n            if (tCell.getAttribute('aria-colindex') === '0') {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var level = cell.level ? cell.level : (isValueCell ? (this.lastSpan + 1) : 0);\n                    do {\n                        if (level > 0) {\n                            tCell.appendChild(createElement('span', {\n                                className: level === 0 ? '' : cls.NEXTSPAN,\n                            }));\n                        }\n                        level--;\n                    } while (level > -1);\n                    level = cell.level ? cell.level : 0;\n                    this.lastSpan = !isValueCell ? level : this.lastSpan;\n                    if (!cell.hasChild && level > 0) {\n                        tCell.appendChild(createElement('span', {\n                            className: cls.LASTSPAN,\n                        }));\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        fieldName = level > -1 ? this.parent.dataSourceSettings.rows[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapRowCellBoundEvent(tCell, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        localizedText = this.parent.localeObj.getConstant('grandTotal');\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                tCell.classList.add(cls.ROWSHEADER);\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    tCell.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    /* tslint:disable-next-line */\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row'\n                        && this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            var style = (tCell.querySelector('.e-expand') || tCell.querySelector('.e-collapse')) ?\n                                'padding-top: 18px' : 'padding-top: 12px';\n                            tCell.appendChild(createElement('div', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                                styles: style\n                            }));\n                        }\n                    }\n                }\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('aria-colindex'))];\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                if (cell.isGrandSum || this.colGrandPos === Number(tCell.getAttribute('aria-colindex')) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(!isNullOrUndefined(cell.value) ? cell.colIndex : cell.colIndex - 1)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (cell.cssClass) {\n                    tCell.classList.add(cell.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering && !this.parent.showGroupingBar) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes.cell.colIndex.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                var index = tCell.getAttribute('index');\n                var colindex = tCell.getAttribute('aria-colindex');\n                var templateID = index + '_' + colindex;\n                /* tslint:disable-next-line */\n                if (!(window && isBlazor())) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()({ targetCell: tCell }, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                else if (index && colindex) {\n                    this.parent.gridCellCollection[templateID] = tCell;\n                }\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    /* tslint:disable */\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var memberPosition = tupInfo.uNameCollection.indexOf(cell.actualText.toString());\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos === fieldSep.length) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var levelName = cell.memberType === 3 ? (this.measurePos + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_1 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_1 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_2 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_2 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_2 + 1) ? (currPos_2 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                tCell.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN,\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return tCell;\n    };\n    /* tslint:enable */\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var level = cell.level ? cell.level : 0;\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns &&\n                        this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = level > -1 && this.parent.dataSourceSettings.columns[level] ?\n                            this.parent.dataSourceSettings.columns[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                if (cell.type) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var localizedText = cell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    tCell.children[0].classList.add(cls.CELLVALUE);\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    tCell.insertBefore(div, tCell.children[0]);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex);\n                if (this.parent.cellTemplate) {\n                    var index = tCell.getAttribute('index');\n                    var colindex = tCell.getAttribute('aria-colindex');\n                    var templateID = index + '_' + colindex;\n                    /* tslint:disable-next-line */\n                    if (!(window && isBlazor())) {\n                        this.parent.gridHeaderCellInfo.push({ targetCell: tCell });\n                    }\n                    else if (index && colindex) {\n                        this.parent.gridCellCollection[templateID] = tCell;\n                    }\n                }\n                var field = void 0;\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                            (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(cls.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            tCell.setAttribute('colspan', cell.colSpan.toString());\n            tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('aria-colindex'))],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    /* tslint:disable-next-line */\n    Render.prototype.frameEmptyData = function () {\n        /* tslint:disable-next-line */\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    Render.prototype.calculateColWidth = function (colCount) {\n        var offsetWidth = this.parent.element.offsetWidth ? this.parent.element.offsetWidth :\n            this.parent.element.getBoundingClientRect().width;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * offsetWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        colCount = colCount - 1;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.resizeColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (isNaN(parHeight)) {\n            parHeight = parHeight > 300 ? parHeight : 300;\n        }\n        if (this.parent.currentView !== 'Chart') {\n            if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) ?\n                    this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS).offsetHeight : 0);\n                var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                gridHeight = parHeight - (gBarHeight + toolBarHeight) - 1;\n                if (elementCreated) {\n                    var tableHeight = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight;\n                    var contentHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                    var tableWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV + ' .' + cls.TABLE).offsetWidth;\n                    var contentWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetWidth;\n                    var horizontalOverflow = contentWidth < tableWidth;\n                    var verticalOverflow = contentHeight < tableHeight;\n                    var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                    if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                        !verticalOverflow && !commonOverflow) {\n                        this.parent.grid.height = 'auto';\n                    }\n                    else {\n                        this.parent.grid.height = gridHeight;\n                        this.parent.grid.dataBind();\n                    }\n                }\n                else {\n                    if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                        gridHeight = 'auto';\n                    }\n                }\n            }\n            else {\n                gridHeight = this.gridSettings.height;\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    Render.prototype.frameStackedHeaders = function () {\n        var integrateModel = [];\n        if ((this.parent.dataType === 'olap' ? true : this.parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues ? this.engine.pivotValues[0].length : 0);\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                if (colField) {\n                    for (var cCnt = 0; cCnt < Object.keys(colField).length + (colField[0] ? 0 : 1); cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || headerCnt === 0) ?\n                                colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' ? 1 : colSpan;\n                        var rowSpan = (colField[cCnt] && colField[cCnt].rowSpan) ? colField[cCnt].rowSpan : 1;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            this.parent.localeObj.getConstant('grandTotal') : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': colField[cCnt] },\n                                /* tslint:disable-next-line */\n                                width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) : this.resColWidth,\n                                minWidth: 30,\n                                format: cCnt === 0 ? '' : this.formatList[colField[cCnt].actualText],\n                                allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true\n                            };\n                        }\n                        else if (headerSplit[cCnt]) {\n                            colSpan = (colField[cCnt] && colField[cCnt].type === 'grand sum' &&\n                                colField[cCnt].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!integrateModel[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(integrateModel[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        /* tslint:disable-next-line */\n                                        field: colField[cCnt] ? colField[cCnt].valueSort.levelName : '',\n                                        customAttributes: { 'cell': colField[cCnt] },\n                                        /* tslint:disable-next-line */\n                                        width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) :\n                                            this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true\n                                    };\n                                    innerModel = [integrateModel[splitPos[innerPos]]];\n                                }\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                integrateModel = columnModel.length > 0 ? columnModel : integrateModel;\n            } while (headerCnt > 0);\n            integrateModel[0] = {\n                field: (0 + '.formattedText'),\n                width: this.resColWidth,\n                minWidth: 30,\n                headerText: '',\n                allowReordering: false,\n                allowResizing: this.parent.gridSettings.allowResizing,\n                visible: true\n            };\n        }\n        else {\n            integrateModel = this.frameEmptyColumns();\n        }\n        if (integrateModel.length > 1) {\n            var lastColumn = integrateModel[integrateModel.length - 1];\n            lastColumn.minWidth = lastColumn.width;\n            lastColumn.width = 'auto';\n            if (lastColumn.columns && lastColumn.columns.length > 0 && !this.parent.allowPdfExport && !this.parent.allowExcelExport) {\n                this.configLastColumnWidth(lastColumn.columns[lastColumn.columns.length - 1]);\n            }\n        }\n        this.parent.triggerColumnRenderEvent(integrateModel);\n        return integrateModel;\n    };\n    Render.prototype.configLastColumnWidth = function (column) {\n        column.minWidth = column.width;\n        column.width = \"auto\";\n        if (column.columns && column.columns.length > 0) {\n            this.configLastColumnWidth(column.columns[column.columns.length - 1]);\n        }\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        /* tslint:disable-next-line */\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name]) {\n                    var fString = this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    format = fString.indexOf('#') > -1 ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    Render.prototype.excelColumnEvent = function (args) {\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    Render.prototype.excelRowEvent = function (args) {\n        if (args.column.field === '0.formattedText') {\n            var isValueCell = args.data[0].type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                /* tslint:disable-next-line */\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            /* tslint:disable-next-line */\n            if (isNullOrUndefined(args.data[this.colPos].value) || isNullOrUndefined(args.data[this.colPos].formattedText)) {\n                args.value = '';\n            }\n            else {\n                /* tslint:disable-next-line */\n                args.value = args.data[this.colPos].value || args.data[this.colPos].formattedText;\n            }\n        }\n        args = this.exportContentEvent(args);\n        this.parent.trigger(events.excelQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var isValueCell = args.data[0].type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level !== -1 ?\n                    args.data[0].level : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    ;\n    Render.prototype.exportHeaderEvent = function (args) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            if (this.actualText !== cell.actualText && cell.colSpan > 1 && cell.level > -1) {\n                args.gridCell.colSpan = args.cell.colSpan = cell.colSpan > -1 ? cell.colSpan : 1;\n            }\n            rowSpan = cell.rowSpan > -1 ? cell.rowSpan : 1;\n            if (args.name === 'excelHeaderQueryCellInfo') {\n                if (cell.rowSpan > -1) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!isNullOrUndefined(cell.type) && cell.level !== 0) {\n                    rowSpan = -1;\n                    args.cell.rowSpan = -1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > -1) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /* tslint:enable:no-any */\n    Render.prototype.exportContentEvent = function (args) {\n        args.value = args.data[Number(args.column.field.split('.formattedText')[0])].type === 'grand sum' ?\n            this.parent.localeObj.getConstant('grandTotal') : args.value;\n        return args;\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","import { KeyboardEvents, closest, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            shiftE: 'shift+E',\n            delete: 'delete',\n            enter: 'enter',\n            escape: 'escape',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'shiftE':\n                this.processEdit(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'escape':\n                this.processClose(e);\n                break;\n            case 'upArrow':\n            case 'downArrow':\n                this.processFilterNodeSelection(e);\n                break;\n        }\n    };\n    CommonKeyboardInteraction.prototype.getButtonElement = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        for (var i = 0, len = allPivotButtons.length; i < len; i++) {\n            if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                return allPivotButtons[i];\n            }\n        }\n        return target;\n    };\n    CommonKeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (target.querySelector('.' + cls.AXISFIELD_ICON_CLASS) && closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            }\n            else if (target.querySelector('.' + cls.CALC_EDIT)) {\n                target.querySelector('.' + cls.CALC_EDIT).click();\n            }\n            else if (target.querySelector('.' + cls.SORT_CLASS) &&\n                !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n                target.querySelector('.' + cls.SORT_CLASS).click();\n                this.getButtonElement(target).focus();\n            }\n            else if (target.querySelector('.' + cls.FILTER_COMMON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.SORT_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            this.getButtonElement(target).focus();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processEdit = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.CALC_EDIT)) {\n            target.querySelector('.' + cls.CALC_EDIT).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.FILTER_COMMON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            if (this.parent && this.parent.control && this.parent.moduleName === 'pivotview' &&\n                this.parent.control.grid && this.parent.control.showGroupingBar &&\n                this.parent.control.groupingBarModule && closest(target, '.' + cls.GROUP_ROW_CLASS) &&\n                this.parent.filterDialog && this.parent.filterDialog.dialogPopUp &&\n                !this.parent.filterDialog.dialogPopUp.isDestroyed && this.parent.filterDialog.dialogPopUp.element) {\n                var dialogElement_1 = this.parent.filterDialog.dialogPopUp.element;\n                var isExcelFilter_1 = this.parent.filterDialog.allowExcelLikeFilter;\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(function () {\n                    if (dialogElement_1 && dialogElement_1.classList.contains('e-popup-open')) {\n                        if (isExcelFilter_1 && dialogElement_1.querySelector('.e-dlg-closeicon-btn')) {\n                            dialogElement_1.querySelector('.e-dlg-closeicon-btn').focus();\n                        }\n                        else if (dialogElement_1.querySelector('input')) {\n                            dialogElement_1.querySelector('input').focus();\n                        }\n                    }\n                });\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilterNodeSelection = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.SELECT_ALL_CLASS) && e.keyCode === 40) {\n            /* tslint:disable-next-line:max-line-length */\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree && memberEditorTree.querySelector('li')) {\n                var firstLi = memberEditorTree.querySelector('li');\n                if (memberEditorTree.querySelector('li#_active')) {\n                    removeClass([memberEditorTree.querySelector('li#_active')], ['e-hover', 'e-node-focus']);\n                    memberEditorTree.querySelector('li#_active').removeAttribute('id');\n                }\n                firstLi.setAttribute('id', '_active');\n                addClass([firstLi], ['e-hover', 'e-node-focus']);\n                memberEditorTree.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS) && e.keyCode === 38) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree.querySelector('li#_active.e-hover.e-node-focus') && memberEditorTree.querySelector('li') &&\n                memberEditorTree.querySelector('li').classList.contains('e-prev-active-node') &&\n                memberEditorTree.querySelector('li') === memberEditorTree.querySelector('li#_active.e-hover.e-node-focus')) {\n                removeClass(memberEditorTree.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n                /* tslint:disable-next-line:max-line-length */\n                var allMemberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.SELECT_ALL_CLASS);\n                if (allMemberEditorTree && allMemberEditorTree.querySelector('li')) {\n                    var firstLi = allMemberEditorTree.querySelector('li');\n                    firstLi.setAttribute('id', '_active');\n                    addClass([firstLi], ['e-hover', 'e-node-focus']);\n                    allMemberEditorTree.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && target.id === this.parent.parentID + '_inputbox') {\n            if (e.action === 'upArrow') {\n                target.parentElement.querySelector('.e-spin-up').click();\n            }\n            else if (e.action === 'downArrow') {\n                target.parentElement.querySelector('.e-spin-down').click();\n            }\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.REMOVE_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            /* tslint:disable-next-line:max-line-length */\n            /* tslint:disable-next-line:no-any */\n            var dialogInstance = closest(target, '.e-popup.e-popup-open').ej2_instances[0];\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function EventBase(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.id;\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.id;\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            isDescending ? removeClass([target], cls.SORT_DESCEND_CLASS) : addClass([target], cls.SORT_DESCEND_CLASS);\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateFiltering\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                var members = PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember);\n                /* tslint:disable:typedef */\n                members =\n                    this.parent.engineModule.fieldList[fieldName].sort === 'Ascending' ?\n                        (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n                            ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        this.parent.engineModule.fieldList[fieldName].sort === 'Descending' ?\n                            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                                ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            members;\n                /* tslint:enable:typedef */\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                treeData =\n                    this.getTreeData(isInclude, members, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget;\n        popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n            this.parent.element : document.getElementById(this.parent.parentID + '_Wrapper');\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     * @method isValidFilterItemsAvail\n     * @param  {string} fieldName - Gets filter members for the given field name.\n     * @return {boolean}\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            var engineModule = this.parent.engineModule;\n            var field = engineModule.fieldList[fieldName];\n            var members = (engineModule.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData, isHierarchy);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     * @method sortFilterData\n     * @param  {{ [key: string]: Object }[]} treeData - Gets filter members for the given field name.\n     * @return {{ [key: string]: Object }[]}\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            /* tslint:disable:typedef */\n            treeData = order === 'Ascending' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                    ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                    ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n            /* tslint:enable:typedef */\n        }\n        return treeData;\n    };\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData, isHierarchy);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        this.parent.isDateField = engineModule.formatFields[fieldName] &&\n            ((['date', 'dateTime', 'time']).indexOf(engineModule.formatFields[fieldName].type) > -1);\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = this.parent.isDateField ? member.formattedText : member.actualText.toString();\n            /* tslint:disable */\n            var obj = {\n                id: member.actualText.toString(),\n                actualText: member.actualText,\n                name: memberName,\n                isSelected: isInclude ? false : true\n            };\n            /* tslint:enable */\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[member.actualText] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * get the parent node of particular filter members.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData, isHierarchy) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node].parent;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @method onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} fieldCaption - Defines dropped position to the axis based on field position.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        var draggedClass;\n        var row = this.parent.dataSourceSettings.rows;\n        var column = this.parent.dataSourceSettings.columns;\n        var value = this.parent.dataSourceSettings.values;\n        var filter = this.parent.dataSourceSettings.filters;\n        var field = [row, column, value, filter];\n        for (var len = 0, lnt = field.length; len < lnt; len++) {\n            if (field[len]) {\n                for (var i = 0, n = field[len].length; i < n; i++) {\n                    if (field[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        field[len][i].name.toLowerCase() === '[measures]' && field[len][i].name.toLowerCase() === fieldName)) {\n                        draggedClass = len === 0 ? 'rows' : len === 1 ? 'columns' : len === 2 ? 'values' : 'filters';\n                    }\n                    if (!draggedClass) {\n                        draggedClass = 'fieldList';\n                    }\n                }\n            }\n        }\n        var eventdrop = {\n            fieldName: fieldName, dropField: PivotUtil.getFieldInfo(fieldName, this.control).fieldItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            dropAxis: droppedClass, dropPosition: droppedPosition, draggedAxis: draggedClass, cancel: false\n        };\n        var control = this.control.getModuleName() === 'pivotfieldlist' && this.control.isPopupView ?\n            this.control.pivotGridModule : this.control;\n        control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                droppedClass = observedArgs.dropAxis;\n                droppedPosition = observedArgs.dropPosition;\n                fieldName = observedArgs.dropField ? observedArgs.dropField.name : observedArgs.fieldName;\n                dataSourceItem = observedArgs.dropField;\n                if (_this.control && _this.btnElement && _this.btnElement.getAttribute('isvalue') === 'true') {\n                    switch (droppedClass) {\n                        case '':\n                            _this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            break;\n                        case 'rows':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'row' } }, true);\n                            break;\n                        case 'columns':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'column' } }, true);\n                            break;\n                    }\n                }\n                else {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.parent.dataType === 'olap') {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (_this.parent.dataSourceSettings.values.length === 0) {\n                        _this.removeFieldFromReport('[measures]');\n                    }\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.control) {\n                    var eventArgs = {\n                        fieldName: fieldName, droppedField: dataSourceItem,\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this.parent.dataSourceSettings),\n                        droppedAxis: droppedClass, droppedPosition: droppedPosition\n                    };\n                    /* tslint:disable */\n                    var dataSourceUpdate_1 = _this;\n                    control.trigger(events.onFieldDropped, eventArgs, function (droppedArgs) {\n                        dataSourceItem = droppedArgs.droppedField;\n                        if (dataSourceItem) {\n                            droppedPosition = droppedArgs.droppedPosition;\n                            droppedClass = droppedArgs.droppedAxis;\n                            switch (droppedClass) {\n                                case 'filters':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.push(dataSourceItem) : _this.parent.dataSourceSettings.filters.push(dataSourceItem));\n                                    break;\n                                case 'rows':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.push(dataSourceItem) : _this.parent.dataSourceSettings.rows.push(dataSourceItem));\n                                    break;\n                                case 'columns':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.push(dataSourceItem) : _this.parent.dataSourceSettings.columns.push(dataSourceItem));\n                                    break;\n                                case 'values':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.push(dataSourceItem) : _this.parent.dataSourceSettings.values.push(dataSourceItem));\n                                    if (isBlazor()) {\n                                        if (dataSourceUpdate_1.parent.dataType === 'olap' && !dataSourceUpdate_1.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = dataSourceUpdate_1.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                dataSourceUpdate_1.parent.dataSourceSettings.rows : dataSourceUpdate_1.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    else {\n                                        if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    break;\n                            }\n                            if (isBlazor()) {\n                                dataSourceUpdate_1.parent.control.pivotButtonModule.updateDataSource();\n                                dataSourceUpdate_1.parent.control.axisFieldModule.render();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @method removeFieldFromReport\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties : fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     * @param  {string} fieldName - Defines dropped field name to add dataSource.\n     * @method getNewField\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName, fieldItem) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                isNamedSet: fieldItem ? fieldItem.isNamedSet : field.isNamedSets,\n                isCalculatedField: fieldItem ? fieldItem.isCalculatedField : field.isCalculatedField,\n                type: (fieldItem ? (fieldItem.type === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : fieldItem.type) :\n                    (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType)),\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                type: (fieldItem ? ((fieldItem.type === undefined || fieldItem.type === null) ?\n                    field.type === 'number' ? 'Sum' : 'Count' : fieldItem.type) :\n                    ((field.aggregateType === undefined || field.aggregateType === null) ?\n                        field.type === 'number' ? 'Sum' :\n                            'Count' : field.aggregateType)),\n                showNoDataItems: fieldItem ? fieldItem.showNoDataItems : field.showNoDataItems,\n                baseField: fieldItem ? fieldItem.baseField : field.baseField,\n                baseItem: fieldItem ? fieldItem.baseItem : field.baseItem,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createErrorDialog\n     * @return {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description, target) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var zIndex = target ? Number(target.style.zIndex) + 1 : (this.parent.moduleName === 'pivotfieldlist' &&\n            this.parent.renderMode === 'Popup' && this.parent.control ? this.parent.control.dialogRenderer.fieldListDialog.zIndex + 1 :\n            (this.parent.moduleName === 'pivotfieldlist' && this.parent.renderMode === 'Fixed' && this.parent.control ? 1000002 :\n                (this.parent.moduleName === 'pivotview' && this.parent.control ? 1000002 : 1000001)));\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: zIndex,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute, closest, EventHandler } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     * @method createFilterDialog\n     * @return {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var _this = this;\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption }\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            // content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            content: '',\n            isModal: true,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: this.parent.renderMode === 'Popup' ? false : true,\n            target: target,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        var filterArgs = {\n            cancel: false,\n            fieldName: fieldName,\n            fieldMembers: this.parent.dataSourceSettings.allowMemberFilter ? treeData : [],\n            filterSetting: this.filterObject\n        };\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        control.trigger(events.memberEditorOpen, filterArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                treeData = observedArgs.fieldMembers;\n                if (_this.allowExcelLikeFilter) {\n                    _this.createTabMenu(treeData, fieldCaption, fieldName);\n                    addClass([_this.dialogPopUp.element], 'e-excel-filter');\n                    _this.updateCheckedState(fieldCaption);\n                }\n                else {\n                    _this.dialogPopUp.content = _this.createTreeView(treeData, fieldCaption, fieldName);\n                    _this.updateCheckedState(fieldCaption);\n                }\n                setStyleAttribute(_this.dialogPopUp.element, { 'visibility': 'visible' });\n                if (_this.allowExcelLikeFilter) {\n                    _this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n                }\n                _this.parent.control.pivotButtonModule.memberTreeView = _this.parent.filterDialog.memberTreeView;\n                /* tslint:disable-next-line:max-line-length */\n                _this.memberTreeView.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n                /* tslint:disable-next-line:max-line-length */\n                _this.allMemberSelect.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n            }\n            else {\n                _this.dialogPopUp.close();\n                _this.dialogPopUp = undefined;\n            }\n        });\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-wrapper-class', attrs: { 'type': 'button' }\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', {\n            attrs: { 'type': 'text', className: cls.EDITOR_SEARCH__INPUT_CLASS }\n        });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        this.createSortOptions(fieldName, searchWrapper, treeData);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            searchWrapper.appendChild(levelWrapper);\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '\"' + filterCaption + '\"',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv, fieldCaption);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState(fieldCaption);\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName };\n        var data = [{ id: 'all', name: this.parent.localeObj.getConstant('all'), isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            expandOn: 'None'\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        editorTreeWrapper.appendChild(labelWrapper);\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createSortOptions = function (fieldName, target, treeData) {\n        if (this.parent.dataType === 'pivot' && treeData && treeData.length > 0) {\n            var sortOrder = this.parent.engineModule.fieldList[fieldName].sort;\n            var sortWrapper = createElement('div', {\n                className: cls.FILTER_SORT_CLASS + ' e-btn-group' + (this.parent.enableRtl ? ' ' + cls.RTL : ''),\n                id: this.parent.element.id + '_Member_Sort'\n            });\n            this.parent.element.appendChild(sortWrapper);\n            var sortAscendElement = createElement('button', {\n                className: (sortOrder === 'Ascending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Ascend', attrs: { 'type': 'button' }\n            });\n            var sortDescendElement = createElement('button', {\n                className: (sortOrder === 'Descending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Descend', attrs: { 'type': 'button' }\n            });\n            var sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_ASCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortAscendElement);\n            sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_DESCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortDescendElement);\n            sortWrapper.appendChild(sortAscendElement);\n            sortWrapper.appendChild(sortDescendElement);\n            target.appendChild(sortWrapper);\n            this.unWireEvent(sortAscendElement, fieldName);\n            this.unWireEvent(sortDescendElement, fieldName);\n            this.wireEvent(sortAscendElement, fieldName);\n            this.wireEvent(sortDescendElement, fieldName);\n        }\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop',\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv, fieldCaption) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ? engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState(fieldCaption);\n        }, 500);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-any */\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        var target = args.event.target;\n        if (target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n        else if (args.event.keyCode === 38 && !isAllMember) {\n            removeClass(this.memberTreeView.element.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n            addClass(checkedNode, 'e-prev-active-node');\n        }\n    };\n    /* tslint:enable:no-any */\n    FilterDialog.prototype.applySorting = function (fieldName, args) {\n        var target = closest(args.target, '.' + cls.MEMBER_SORT_CLASS);\n        if (target) {\n            var sortElements = [].slice.call(closest(target, '.' + cls.FILTER_SORT_CLASS).querySelectorAll('.' + cls.MEMBER_SORT_CLASS));\n            if (target.querySelector('.' + cls.SORT_ASCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Ascending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[1]], cls.SORT_SELECTED_CLASS);\n            }\n            else if (target.querySelector('.' + cls.SORT_DESCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Descending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[0]], cls.SORT_SELECTED_CLASS);\n            }\n            else {\n                this.updateFilterMembers('None', fieldName);\n                removeClass(sortElements, cls.SORT_SELECTED_CLASS);\n            }\n        }\n    };\n    FilterDialog.prototype.updateFilterMembers = function (order, fieldName) {\n        var members = order === 'None' ?\n            PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember) : this.parent.currentTreeItems.slice();\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        var treeData = [];\n        /* tslint:disable:typedef */\n        members = order === 'Ascending' ? (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n            ((b.actualText > a.actualText) ? -1 : 0); })) : order === 'Descending' ?\n            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                ((b.actualText < a.actualText) ? -1 : 0); })) : members;\n        /* tslint:enable:typedef */\n        for (var i = 0, lnt = members.length; i < lnt; i++) {\n            if (order === 'None') {\n                var memberName = (this.parent.isDateField ? members[i].formattedText : members[i].actualText).toString();\n                var obj = {\n                    id: members[i].actualText.toString(),\n                    actualText: members[i].actualText,\n                    name: memberName,\n                    isSelected: this.parent.currentTreeItemsPos[members[i].actualText].isSelected\n                };\n                this.parent.currentTreeItems.push(obj);\n                if (this.editorSearch.value !== '') {\n                    if (obj.name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(obj);\n                        treeData.push(obj);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(obj);\n                    treeData.push(obj);\n                }\n            }\n            else {\n                this.parent.currentTreeItems.push(members[i]);\n                if (this.editorSearch.value !== '') {\n                    if (members[i].name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(members[i]);\n                        treeData.push(members[i]);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(members[i]);\n                    treeData.push(members[i]);\n                }\n            }\n            this.parent.currentTreeItemsPos[members[i].actualText].index = i;\n        }\n        var dataCount = this.memberTreeView.fields.dataSource.length;\n        /* tslint:disable-next-line:max-line-length */\n        this.memberTreeView.fields = { dataSource: treeData.slice(0, dataCount), id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        this.memberTreeView.dataBind();\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount, isSelected: obj.isSelected };\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            className: 'e-filter-tab-wrapper'\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    /* tslint:disable-next-line:max-line-length */\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject : undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ? measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id && field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter',\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS,\n            innerHTML: this.parent.localeObj.getConstant(type + 'TextContent')\n        });\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : ''),\n            innerHTML: this.parent.localeObj.getConstant('And')\n        });\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-wrapper' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE),\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-wrapper' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : ''),\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-wrapper' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_wrapper' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_wrapper' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS, width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    /* tslint:enable */\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var value1;\n        var value2;\n        /* tslint:disable:no-any */\n        if (type === 'date') {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n            value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        }\n        else {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = inputObj1.value;\n            value2 = inputObj2.value;\n        }\n        /* tslint:enable:no-any */\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function (fieldCaption) {\n        var filterDialog = this.dialogPopUp.element;\n        setStyleAndAttributes(filterDialog, { 'role': 'menu', 'aria-haspopup': 'true' });\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length -\n                nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        /* tslint:disable-next-line:max-line-length */\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, PivotUtil.cloneFilterSettings(this.parent.dataSourceSettings.filterSettings));\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    FilterDialog.prototype.wireEvent = function (element, fieldName) {\n        EventHandler.add(element, 'click', this.applySorting.bind(this, fieldName), this);\n    };\n    FilterDialog.prototype.unWireEvent = function (element, fieldName) {\n        EventHandler.remove(element, 'click', this.applySorting);\n    };\n    /**\n     * To close filter dialog.\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class\n     * @param  {CommonArgs} control?\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    /** Constructor for Common module */\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateCommonModule\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initialLoad, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialLoad, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showEditIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"dataType\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Allows the style information to cusotmize the pivot table cell apprearance.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Allows to specify the custom group information of specific field to create custom groups.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Allows options to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Allows you to set the credential information to access the specified SSAS cube.\n * > It is applicable only for OLAP data source.\n */\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"userName\", void 0);\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"password\", void 0);\n    return Authentication;\n}(ChildProperty));\nexport { Authentication };\n/**\n * Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.\n * * `catalog`: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. **Note: It is applicable only for OLAP data source.**\n * * `cube`: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. **Note: It is applicable only for OLAP data source.**\n * * `providerType`: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.\n * * `url`: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. **Note: It is applicable only for OLAP data source.**\n * * `localeIdentifier`: Allows you to set the specific culture code as number type to render pivot table with desired localization.\n * By default, the pivot table displays with culture code **1033**, which indicates \"en-US\" locale. **Note: It is applicale only for OLAP data source.**\n * * `dataSource`: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\n * You can fetch JSON data from remote server by using DataManager. **Note: It is applicable only for relational data source.**\n * * `rows`: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.\n * * `columns`: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.\n * * `values`: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.\n * * `filters`: Allows to filter the values in other axis based on the collection of filter fields in pivot table.\n * * `excludeFields`: Allows you to restrict the specific field(s) from displaying it in the field list UI.\n * You may also be unable to render the pivot table with this field(s) by doing so. **Note: It is applicable only for relational data source.**\n * * `expandAll`: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\n * By default, all the headers are collapsed in the pivot table. **Note: It is applicable only for Relational data.**\n * * `valueAxis`: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.\n * * `filterSettings`: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n * * `sortSettings`: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n * By default, the data source containing fields are display with Ascending order alone. To use this option, it requires the `enableSorting` property to be **true**.\n * * `enableSorting`: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.\n * * `formatSettings`: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n * * `drilledMembers`: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n * * `valueSortSettings`: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n * * `calculatedFieldSettings`: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n * * `allowMemberFilter`: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.\n * * `allowLabelFilter`: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.\n * * `allowValueFilter`: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.\n * * `showSubTotals`: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.\n * * `showRowSubTotals`: Allows to show or hide sub-totals in row axis of the pivot table.\n * * `showColumnSubTotals`: Allows to show or hide sub-totals in column axis of the pivot table.\n * * `showGrandTotals`: Allows to show or hide grand totals in both rows and columns axis of the pivot table.\n * * `showRowGrandTotals`: Allows to show or hide grand totals in row axis of the pivot table.\n * * `showColumnGrandTotals`: Allows to show or hide grand totals in column axis of the pivot table.\n * * `showHeaderWhenEmpty`: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\n * For example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom >> Undefined” in the header section.\n * * `alwaysShowValueHeader`: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.\n * * `conditionalFormatSettings`: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n * * `emptyCellsTextContent`: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.\n * * `groupSettings`: Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n * * `showAggregationOnValueField`: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\n * For example, if the value field \"Sold Amount\" is aggregated with Sum, it will be displayed with caption \"Sum of Sold Amount\" in its pivot button.\n * * `authentication`: Allows you to set the credential information to access the specified SSAS cube. **Note: It is applicable only for OLAP data source**.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"fieldMapping\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property('JSON')\n    ], DataSourceSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, Authentication)\n    ], DataSourceSettings.prototype, \"authentication\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ wrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Method to perform excel export.\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues]\n        };\n        this.parent.trigger(events.beforeExport, args);\n        var fileName = args.fileName;\n        var header = args.header;\n        var footer = args.footer;\n        var dataCollections = args.dataCollections;\n        /** Fill data and export */\n        /* tslint:disable-next-line:no-any */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var actualrCnt = 0;\n            var formatList = this.parent.renderModule.getFormatList();\n            var rows = [];\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var cellValue = pivotCell.axis === 'value' ? pivotCell.value : pivotCell.formattedText;\n                                if (pivotCell.type === 'grand sum') {\n                                    cellValue = this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan),\n                                    });\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            cells[cells.length - 1].value = '';\n                                        }\n                                        var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                            this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                            pivotCell.actualText;\n                                        cells[cells.length - 1].style = {\n                                            numberFormat: formatList[field], bold: false, wrapText: true\n                                        };\n                                        if (pivotCell.style) {\n                                            cells[cells.length - 1].style.backColor = pivotCell.style.backgroundColor;\n                                            cells[cells.length - 1].style.fontColor = pivotCell.style.color;\n                                            cells[cells.length - 1].style.fontName = pivotCell.style.fontFamily;\n                                            cells[cells.length - 1].style.fontSize = Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    else {\n                                        cells[cells.length - 1].style = {\n                                            bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0\n                                        };\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            cells[cells.length - 1].style.hAlign = 'Left';\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                cells[cells.length - 1].style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                cells[cells.length - 1].style.indent = pivotCell.level * 2;\n                                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    cells[cells.length - 1].style.borders = { color: '#000000', lineStyle: 'Thin' };\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            cells.push({\n                                index: cCnt + 1, value: '', colSpan: 1, rowSpan: 1,\n                            });\n                        }\n                    }\n                    rows.push({ index: actualrCnt, cells: cells });\n                }\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv');\n        book.save(fileName + (type === 'Excel' ? '.xlsx' : '.csv'));\n    };\n    /**\n     * To destroy the excel export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    ExcelExport.prototype.destroy = function () {\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var header = eventParams.args.header;\n        var footer = eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    PDFExport.prototype.exportToPDF = function () {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        this.parent.trigger(events.beforeExport, args);\n        this.gridStyle = args.style;\n        var document = new PdfDocument();\n        return { document: document, args: args };\n    };\n    /**\n     * To destroy the pdf export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            shiftEnter: 'shift+enter',\n            ctrlEnter: 'ctrl+enter',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape',\n            ctrlShiftF: 'ctrl+shift+f'\n        };\n        this.parent = parent;\n        this.event = undefined;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'shiftTab':\n                this.processShiftTab(e);\n                break;\n            case 'enter':\n            case 'shiftEnter':\n            case 'ctrlEnter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlShiftF':\n                this.toggleFieldList(e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i + 1] ? allPivotButtons[i + 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getPrevButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i - 1] ? allPivotButtons[i - 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.allpivotButtons = function (target) {\n        var buttons;\n        var columnFilterValueGroup = closest(target, '.' + cls.GRID_GROUPING_BAR_CLASS);\n        var rowGroup = closest(target, '.' + cls.GROUP_PIVOT_ROW);\n        var chartGroup = closest(target, '.' + cls.CHART_GROUPING_BAR_CLASS);\n        var tableAxis = target.classList.contains(cls.ROWSHEADER);\n        var chartAxis;\n        var rowAxis;\n        var columnFilterValueAxis;\n        if (columnFilterValueGroup !== null) {\n            rowAxis = columnFilterValueGroup.classList.contains(cls.GRID_GROUPING_BAR_CLASS);\n        }\n        else if (rowGroup !== null) {\n            columnFilterValueAxis = rowGroup.classList.contains(cls.GROUP_PIVOT_ROW);\n        }\n        else if (chartGroup !== null) {\n            chartAxis = chartGroup.classList.contains(cls.CHART_GROUPING_BAR_CLASS);\n        }\n        if (rowAxis || columnFilterValueAxis || tableAxis) {\n            /* tslint:disable */\n            var groupingbarButton = [].slice.call(this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var headerButton = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            buttons = groupingbarButton.concat(headerButton);\n        }\n        else if (chartAxis) {\n            buttons = [].slice.call(this.parent.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        }\n        /* tslint:enable */\n        return buttons;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n                var nextButton = this.getNextButton(target);\n                if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    if (this.parent.element.querySelector('.e-focused')) {\n                        this.parent.element.querySelector('.e-focused').setAttribute('tabindex', '-1');\n                        removeClass(this.parent.element.querySelectorAll('.e-focus'), 'e-focus');\n                        removeClass(this.parent.element.querySelectorAll('.e-focused'), 'e-focused');\n                        gridFocus.setFocusedElement(this.parent.element.querySelector('.e-headercell'));\n                        this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '0');\n                    }\n                    else {\n                        gridFocus.currentInfo.skipAction = true;\n                    }\n                    addClass([nextButton], 'e-btn-focused');\n                    nextButton.focus();\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList &&\n            target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList &&\n            target && closest(target, '.' + cls.PIVOT_VIEW_CLASS) && !closest(target, '.e-popup.e-popup-open')) {\n            if (this.parent.grid) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) && this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processShiftTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    target = this.parent.element.querySelector('.e-btn-focused') ? this.parent.element.querySelector('.e-btn-focused') :\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS);\n                    var allPivotButtons = this.allpivotButtons(target);\n                    if (allPivotButtons.length > 0 && allPivotButtons[allPivotButtons.length - 1]) {\n                        gridFocus.currentInfo.skipAction = true;\n                        allPivotButtons[allPivotButtons.length - 1].focus();\n                        removeClass(allPivotButtons, 'e-btn-focused');\n                        addClass([allPivotButtons[allPivotButtons.length - 1]], 'e-btn-focused');\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                var prevButton = this.getPrevButton(target);\n                if (prevButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    gridFocus.currentInfo.skipAction = true;\n                    prevButton.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && this.parent.grid && (target.classList.contains('e-movablefirst') ||\n            (target.classList.contains('e-rowsheader') && closest(target, 'tr').getAttribute('data-uid') ===\n                this.parent.grid.element.querySelector('.e-frozencontent tr').getAttribute('data-uid')))) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (target.classList.contains('e-movablefirst')) {\n                target = (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) ?\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) :\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS));\n                var element = gridFocus.getFocusedElement();\n                removeClass([element], ['e-focused', 'e-focus']);\n            }\n            var allPivotButtons_1 = this.allpivotButtons(target);\n            if (allPivotButtons_1.length > 0) {\n                gridFocus.currentInfo.skipAction = true;\n                setTimeout(function () {\n                    allPivotButtons_1[allPivotButtons_1.length - 1].focus();\n                });\n                removeClass(allPivotButtons_1, 'e-btn-focused');\n                addClass([allPivotButtons_1[allPivotButtons_1.length - 1]], 'e-btn-focused');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) &&\n            this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (e.keyCode === 13 && !e.shiftKey && !e.ctrlKey) {\n                if (target.querySelector('.' + cls.ICON)) {\n                    this.event = e;\n                    target.querySelector('.' + cls.ICON).click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                else if (target.classList.contains('e-valuescontent')) {\n                    target.dispatchEvent(new MouseEvent('dblclick', {\n                        'view': window,\n                        'bubbles': true,\n                        'cancelable': true\n                    }));\n                    if (target.querySelector('.e-numerictextbox')) {\n                        target.click();\n                    }\n                }\n                else if (target.classList.contains('e-numerictextbox')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    removeClass([element], ['e-focused', 'e-focus']);\n                }\n            }\n            else if (e.keyCode === 13 && e.shiftKey && !e.ctrlKey) {\n                if (this.parent.enableValueSorting) {\n                    this.event = e;\n                    target.click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n            else if (e.keyCode === 13 && !e.shiftKey && e.ctrlKey) {\n                if (this.parent.hyperlinkSettings && target.querySelector('a')) {\n                    target.querySelector('a').click();\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        /* tslint:disable */\n        removeClass(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR), [cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n        this.parent.renderModule.selected();\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        var target = e.target;\n        if (this.parent.grid && this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row' &&\n            !target.classList.contains('e-numerictextbox')) {\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('aria-colIndex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            /* tslint:disable */\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('aria-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n        }\n        else if (target && (e.keyCode === 37 || e.keyCode === 38) &&\n            this.parent && this.parent.showGroupingBar && this.parent.groupingBarModule && !target.classList.contains('e-numerictextbox')) {\n            if (this.parent.grid && this.parent.element.querySelector('.e-frozenheader') && this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus').length > 0) {\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus'), 'e-focus');\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focused'), 'e-focused');\n                this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '-1');\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.setFocusedElement(target);\n                addClass([target], ['e-focused', 'e-focus']);\n                target.setAttribute('tabindex', '0');\n                target.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target.classList.contains('e-numerictextbox') && e.action === 'rightArrow' || e.action === 'leftArrow') {\n            target.click();\n        }\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[aria-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    KeyboardInteraction.prototype.toggleFieldList = function (e) {\n        var target = e.target;\n        if (this.parent && !this.parent.isDestroyed && this.parent.showFieldList &&\n            this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed &&\n            this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (!this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN)) {\n                this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                e.preventDefault();\n                return;\n            }\n            else if (this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN) &&\n                this.parent.pivotFieldListModule.dialogRenderer && this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog &&\n                !this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.hide();\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS,\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n            if (document.querySelector('#' + this.parent.element.id + '_PivotContextMenu')) {\n                remove(document.querySelector('#' + this.parent.element.id + '_PivotContextMenu'));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, isBlazor, } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.parent = parent;\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n        var fCont = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n        var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n        EventHandler.clearEvents(mCont);\n        EventHandler.clearEvents(fCont);\n        if (this.engineModule) {\n            EventHandler.add(mCont, 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mCont, 'scroll wheel touchmove pointermove keyup keydown', this.onVerticalScroll(fCont, mCont), this);\n            EventHandler.add(mCont, 'mouseup touchend', this.common(mHdr, mCont, fCont), this);\n            EventHandler.add(fCont, 'wheel', this.onWheelScroll(mCont, fCont), this);\n            EventHandler.add(fCont, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(fCont, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n        }\n        this.parent.grid.isPreventScrollEvent = true;\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            fCont.scrollTop = top;\n            element.scrollTop = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = element.scrollTop + (_this.pageXY.y - pageXY.y);\n            var left = element.scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.parent.element.querySelector('.' + cls.HEADERCONTENT).contains(e.target)) {\n                if (_this.frozenPreviousValues.left === left || left < 0) {\n                    return;\n                }\n                mHdr.scrollLeft = left;\n                element.scrollLeft = left;\n                _this.pageXY.x = pageXY.x;\n                _this.frozenPreviousValues.left = left;\n            }\n            else {\n                if (_this.frozenPreviousValues.top === top || top < 0) {\n                    return;\n                }\n                fCont.scrollTop = top;\n                element.scrollTop = top;\n                _this.pageXY.y = pageXY.y;\n                _this.frozenPreviousValues.top = top;\n            }\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (mHdr, mCont, top, left, e) {\n        var _this = this;\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (isBlazor()) {\n            engine.pageSettings = this.parent.pageSettings;\n        }\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var rowValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_1 = (this.parent.pageSettings.rowSize * rowValues_1 * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize_1);\n                if ((this.parent.scrollPosObject.vertical === section ||\n                    engine.pageSettings.rowSize >= engine.rowCount)) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                this.parent.scrollPosObject.vertical = section;\n                engine.pageSettings.rowCurrentPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var pivot_1 = this.parent;\n                        var sfBlazor = 'sfBlazor';\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.pivotValues = engine.pivotValues;\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                            var exactPage = Math.ceil(rowStartPos_1 / (pivot_1.pageSettings.rowSize * rowValues_1));\n                            var pos = exactSize_1 * exactPage -\n                                (engine.rowFirstLvl * rowValues_1 * pivot_1.gridSettings.rowHeight);\n                            pivot_1.scrollPosObject.verticalSection = pos;\n                        });\n                    }\n                    else {\n                        this.parent.engineModule.generateGridData(this.parent.dataSourceSettings, this.parent.engineModule.headerCollection);\n                        rowStartPos_1 = this.parent.engineModule.rowStartPos;\n                    }\n                }\n                else {\n                    this.parent.olapEngineModule.scrollPage('scroll');\n                    rowStartPos_1 = this.parent.olapEngineModule.pageRowStartPos;\n                }\n                if (!(isBlazor() && this.parent.dataType === 'pivot')) {\n                    this.parent.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowSize * rowValues_1));\n                    var pos = exactSize_1 * exactPage -\n                        (engine.rowFirstLvl * rowValues_1 * this.parent.gridSettings.rowHeight);\n                    this.parent.scrollPosObject.verticalSection = pos;\n                }\n            }\n            else {\n                var colValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_2 = (this.parent.pageSettings.columnSize *\n                    colValues_1 * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(left / exactSize_2);\n                if (this.parent.scrollPosObject.horizontal === section) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                var pivot = this.parent;\n                pivot.scrollPosObject.horizontal = section;\n                engine.pageSettings.columnCurrentPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                if (pivot.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var pivot_2 = this.parent;\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_2.dataSourceSettings], pivot_2.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            colStartPos_1 = pivot_2.engineModule.colStartPos;\n                            pivot_2.pivotValues = engine.pivotValues;\n                            var exactPage = Math.ceil(colStartPos_1 / (pivot_2.pageSettings.columnSize * colValues_1));\n                            var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                                colValues_1 * pivot_2.gridSettings.columnWidth);\n                            pivot_2.scrollPosObject.horizontalSection = pos;\n                        });\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, pivot.engineModule.headerCollection);\n                        colStartPos_1 = pivot.engineModule.colStartPos;\n                    }\n                }\n                else {\n                    pivot.olapEngineModule.scrollPage('scroll');\n                    colStartPos_1 = pivot.olapEngineModule.pageColStartPos;\n                }\n                if (!(isBlazor() && pivot.dataType === 'pivot')) {\n                    pivot.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(colStartPos_1 / (pivot.pageSettings.columnSize * colValues_1));\n                    var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                        colValues_1 * pivot.gridSettings.columnWidth);\n                    pivot.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n        };\n    };\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var left = mCont.scrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? mCont.scrollLeft : left;\n                    _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, left, e);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                fCont.scrollTop = mCont.scrollTop;\n                return;\n            }\n            _this.direction = 'horizondal';\n            var horiOffset = -((left - _this.parent.scrollPosObject.horizontalSection - mCont.scrollLeft));\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim();\n            if (mCont.scrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + mHdr.offsetWidth) -\n                (_this.parent.scrollPosObject.horizontalSection + mCont.querySelector('.e-table').offsetWidth));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - mCont.scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount\n                    - _this.parent.grid.columns[0].width);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = mCont.scrollLeft;\n        };\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (fCont, mCont) {\n        var _this = this;\n        var timeOutObj;\n        return function (e) {\n            var top = mCont.scrollTop * _this.parent.verticalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove' || e.type === 'keyup' || e.type === 'keydown') {\n                clearTimeout(timeOutObj);\n                timeOutObj = setTimeout(function () {\n                    _this.update(null, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n                }, 300);\n            }\n            /* tslint:enable */\n            if (_this.previousValues.top === top) {\n                return;\n            }\n            _this.direction = 'vertical';\n            var vertiOffset = -((top - _this.parent.scrollPosObject.verticalSection - mCont.scrollTop));\n            var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n            if (mCont.scrollTop < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                -(_this.parent.scrollPosObject.verticalSection - top) : ((top + fCont.clientHeight) -\n                (_this.parent.scrollPosObject.verticalSection + fCont.querySelector('.e-table').offsetHeight));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.verticalSection > top ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (top > fCont.clientHeight) {\n                    if (_this.parent.scrollPosObject.top < 1) {\n                        _this.parent.scrollPosObject.top = fCont.clientHeight;\n                    }\n                    _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                    excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                        (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.verticalSection;\n                }\n                var movableTable = _this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                vertiOffset = -((top - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.scrollTop));\n                var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                    - movableTable.clientHeight);\n                if (vHeight > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                    vHeight = _this.parent.scrollerBrowserLimit;\n                }\n                if (vertiOffset > vHeight && vertiOffset > top) {\n                    vertiOffset = top;\n                    excessMove = 0;\n                }\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n                _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n            }\n            _this.previousValues.top = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = '';\n            fCont.scrollTop = mCont.scrollTop;\n            mCont.scrollTop = fCont.scrollTop;\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.isUpdated = false;\n        this.gridIndexObjects = {};\n        this.gridData = [];\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    /** @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        this.gridData = eventArgs.rawData;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        if (this.engine.fieldList[actualText].aggregateType !== 'Count' && this.parent.editSettings.allowInlineEditing &&\n            this.parent.editSettings.allowEditing && eventArgs.rawData.length === 1 &&\n            this.engine.fieldList[actualText].aggregateType !== 'DistinctCount' && typeof (eventArgs.rawData[0][actualText]) !== 'string') {\n            this.editCell(eventArgs);\n        }\n        else {\n            this.removeDrillThroughDialog();\n            var drillThroughDialog = createElement('div', {\n                id: this.parent.element.id + '_drillthrough',\n                className: cls.DRILLTHROUGH_DIALOG\n            });\n            this.parent.element.appendChild(drillThroughDialog);\n            this.dialogPopUp = new Dialog({\n                animationSettings: { effect: 'Fade' },\n                allowDragging: false,\n                header: this.parent.localeObj.getConstant('details'),\n                content: this.createDrillThroughGrid(eventArgs),\n                beforeOpen: function () {\n                    /* tslint:disable:align */\n                    _this.drillThroughGrid.setProperties({\n                        dataSource: _this.parent.editSettings.allowEditing ?\n                            _this.dataWithPrimarykey(eventArgs) : _this.gridData,\n                        height: !_this.parent.editSettings.allowEditing ? 300 : 220,\n                        rowHeight: _this.parent.gridSettings.rowHeight\n                    }, false);\n                },\n                beforeClose: function () {\n                    if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                        if (_this.parent.dataSourceSettings.type === 'CSV') {\n                            _this.updateData(_this.drillThroughGrid.dataSource);\n                        }\n                        var count = Object.keys(_this.gridIndexObjects).length;\n                        var addItems = [];\n                        /* tslint:disable:no-string-literal */\n                        for (var _i = 0, _a = _this.drillThroughGrid.dataSource; _i < _a.length; _i++) {\n                            var item = _a[_i];\n                            if (isNullOrUndefined(item['__index']) || item['__index'] === '') {\n                                for (var _b = 0, _c = _this.engine.fields; _b < _c.length; _b++) {\n                                    var field = _c[_b];\n                                    if (isNullOrUndefined(item[field])) {\n                                        delete item[field];\n                                    }\n                                }\n                                delete item['__index'];\n                                addItems.push(item);\n                            }\n                            else if (count > 0) {\n                                if (isBlazor() && _this.parent.editSettings.allowCommandColumns) {\n                                    _this.parent.engineModule.data[Number(item['__index'])] = item;\n                                }\n                                delete _this.gridIndexObjects[item['__index'].toString()];\n                                count--;\n                            }\n                        }\n                        count = 0;\n                        if (isBlazor() && _this.parent.enableVirtualization) {\n                            var currModule_1 = _this;\n                            /* tslint:disable:no-any */\n                            currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'updateRawData', {\n                                'AddItem': addItems, 'RemoveItem': currModule_1.gridIndexObjects, 'ModifiedItem': currModule_1.gridData\n                            }).then(function (data) {\n                                currModule_1.parent.updateBlazorData(data, currModule_1.parent);\n                                currModule_1.parent.allowServerDataBinding = false;\n                                currModule_1.parent.setProperties({ pivotValues: currModule_1.parent.engineModule.pivotValues }, true);\n                                delete currModule_1.parent.bulkChanges.pivotValues;\n                                currModule_1.parent.allowServerDataBinding = true;\n                                currModule_1.isUpdated = false;\n                                currModule_1.gridIndexObjects = {};\n                            });\n                            /* tslint:enable:no-any */\n                        }\n                        else {\n                            var items = [];\n                            var data = (_this.parent.allowDataCompression && _this.parent.enableVirtualization) ?\n                                _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                            for (var _d = 0, _e = data; _d < _e.length; _d++) {\n                                var item = _e[_d];\n                                delete item['__index'];\n                                if (_this.gridIndexObjects[count.toString()] === undefined) {\n                                    items.push(item);\n                                }\n                                count++;\n                            }\n                            /* tslint:enable:no-string-literal */\n                            items = items.concat(addItems);\n                            _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                            _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                            _this.parent.pivotValues = _this.engine.pivotValues;\n                        }\n                    }\n                    if (!(isBlazor() && _this.parent.enableVirtualization)) {\n                        _this.isUpdated = false;\n                        _this.gridIndexObjects = {};\n                    }\n                },\n                isModal: true,\n                visible: true,\n                showCloseIcon: true,\n                locale: this.parent.locale,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.isAdaptive ? '100%' : '60%',\n                position: { X: 'center', Y: 'center' },\n                closeOnEscape: true,\n                target: document.body,\n                close: this.removeDrillThroughDialog.bind(this)\n            });\n            this.dialogPopUp.isStringTemplate = true;\n            this.dialogPopUp.appendTo(drillThroughDialog);\n            // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('details');\n            setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n        }\n    };\n    DrillThroughDialog.prototype.editCell = function (eventArgs) {\n        var _this = this;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        var indexObject = Number(Object.keys(eventArgs.currentCell.indexObject));\n        eventArgs.currentTarget.firstElementChild.style.display = 'none';\n        var cellValue = Number(eventArgs.rawData[0][actualText]);\n        this.numericTextBox = new NumericTextBox({\n            value: cellValue,\n            enableRtl: this.parent.enableRtl,\n            enabled: true,\n            format: '####.##',\n            locale: this.parent.locale,\n            change: function () {\n                var textBoxValue = _this.numericTextBox.value;\n                var indexValue = eventArgs.currentCell.indexObject[indexObject];\n                eventArgs.rawData[0][actualText] = textBoxValue;\n                _this.parent.engineModule.data[indexValue] = eventArgs.rawData[0];\n            },\n            blur: function () {\n                _this.parent.setProperties({ dataSourceSettings: { dataSource: _this.parent.engineModule.data } }, true);\n                _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                _this.parent.pivotValues = _this.engine.pivotValues;\n                _this.parent.gridSettings.allowResizing = true;\n            },\n        });\n        var textBoxElement = createElement('input', {\n            id: this.parent.element.id + '_inputbox',\n        });\n        eventArgs.currentTarget.appendChild(textBoxElement);\n        this.numericTextBox.appendTo(textBoxElement);\n        eventArgs.currentCell.value = this.numericTextBox.value;\n        this.numericTextBox.focusIn();\n        this.parent.gridSettings.allowResizing = false;\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThroughDialog.prototype.updateData = function (dataSource) {\n        var dataPos = 0;\n        var data = (this.parent.allowDataCompression && this.parent.enableVirtualization) ?\n            this.parent.engineModule.actualData : this.parent.engineModule.data;\n        while (dataPos < dataSource.length) {\n            var fields = Object.keys(dataSource[dataPos]);\n            var keyPos = 0;\n            var framedSet = [];\n            while (keyPos < fields.length) {\n                if (!isNullOrUndefined(this.parent.engineModule.fieldKeys[fields[keyPos]])) {\n                    framedSet[this.parent.engineModule.fieldKeys[fields[keyPos]]] = dataSource[dataPos][fields[keyPos]];\n                }\n                keyPos++;\n            }\n            data[dataSource[dataPos]['__index']] = framedSet;\n            dataPos++;\n        }\n        if (this.parent.allowDataCompression && this.parent.enableVirtualization) {\n            this.parent.engineModule.actualData = data;\n        }\n        else {\n            this.parent.engineModule.data = data;\n        }\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs) {\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> :<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            enableHover: false,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: !this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing\n        });\n        if (isBlazor()) {\n            /* tslint:disable-next-line */\n            this.drillThroughGrid['isJsComponent'] = true;\n        }\n        if (this.parent.dataType === 'olap') {\n            this.formatData();\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: isBlazor() ? undefined : this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            this.drillThroughGrid.editSettings = this.parent.editSettings;\n            if (this.parent.editSettings.allowCommandColumns) {\n                this.drillThroughGrid.editSettings.mode = 'Normal';\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                Grid.Inject(CommandColumn);\n                this.drillThroughGrid.columns.push({\n                    headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                    commands: [\n                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n                        { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n                        { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n                    ]\n                });\n            }\n            else {\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n            }\n            /* tslint:disable:align */\n            this.drillThroughGrid.columns.push({\n                field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false\n            });\n            /* tslint:disable-next-line:no-any */\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n            /* tslint:enable:align */\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function (rawData) {\n        var keys = this.parent.dataType === 'olap' ? rawData[0] ? Object.keys(rawData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    type: 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date') {\n                        editType = 'datepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    columns.push({\n                        field: key,\n                        headerText: this.engine.fieldList[key].caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        type: 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.formatData = function () {\n        var index = 0;\n        while (index < this.gridData.length) {\n            var data = this.gridData[index];\n            var keys = Object.keys(this.gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            this.gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = this.gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            /* tslint:disable-next-line:no-string-literal */\n            item['__index'] = indexString[count];\n            this.gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n            }\n        }\n    };\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName].caption;\n                aggType = engine.fieldList[measureName].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this;\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* tslint:disable:no-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n                        /* tslint:enable:no-any */\n                    });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization)) {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] =\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split('.').join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split('.').join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this;\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationChart, PieSeries, FunnelSeries, PyramidSeries } from '@syncfusion/ej2-charts';\nimport { SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries } from '@syncfusion/ej2-charts';\nimport { MultiColoredAreaSeries, SplineSeries, StepLineSeries, AccumulationLegend, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries } from '@syncfusion/ej2-charts';\nimport { RadarSeries } from '@syncfusion/ej2-charts';\nimport { ScrollBar, Zoom, PolarSeries } from '@syncfusion/ej2-charts';\nimport { ParetoSeries, Export, Crosshair, MultiLevelLabel } from '@syncfusion/ej2-charts';\nimport { BubbleSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDataLabel } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\nvar PivotChart = /** @class */ (function () {\n    function PivotChart() {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.fieldPosition = [];\n        this.measurePos = -1;\n        this.measuresNames = {};\n        this.accumulationType = ['Pie', 'Pyramid', 'Doughnut', 'Funnel'];\n        /* tslint:enable:no-empty */\n    }\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotchart';\n    };\n    /* tslint:disable */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : parent.dataSourceSettings.values.length > 0;\n        if (isDataAvail) {\n            if (!this.parent.chart && (this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart'))) {\n                remove(this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n            }\n            if (this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n            }\n        }\n        else if (this.parent.chart) {\n            if (this.parent.element.querySelector('.e-chart')) {\n                this.parent.chart.series = [];\n                this.parent.chart.rows = [];\n                this.parent.chart.primaryXAxis.title = '';\n                this.parent.chart.primaryYAxis.title = '';\n                this.parent.chart.primaryXAxis.multiLevelLabels = [];\n                this.parent.chart.primaryYAxis.multiLevelLabels = [];\n                if (this.parent.chart.axes.length > 0) {\n                    this.parent.chart.axes[0].title = '';\n                }\n                this.parent.chart.primaryXAxis.zoomFactor = 1;\n            }\n            else if (this.parent.element.querySelector('.e-accumulationchart')) {\n                this.parent.chart.series[0].dataSource = [{}];\n                this.parent.chart.series[0].dataLabel = {};\n            }\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            if (!this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                if (this.parent.displayOption.view === 'Both') {\n                    this.parent.displayOption.primary === 'Chart' ?\n                        (this.parent.element.insertBefore((createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                        (this.parent.element.appendChild(createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })));\n                }\n                else {\n                    this.parent.element.appendChild(createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }));\n                }\n                var width = this.parent.width.toString();\n                if (this.parent.showToolbar && this.parent.grid) {\n                    width = this.parent.getGridWidthAsNumber().toString();\n                }\n                var height = this.getChartHeight();\n                var tmpChart = void 0;\n                if (this.chartSettings && this.chartSettings.chartSeries && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1) {\n                    tmpChart = new AccumulationChart({ width: width, height: height });\n                }\n                else {\n                    tmpChart = new Chart({ width: width, height: height });\n                }\n                tmpChart.appendTo('#' + this.parent.element.id + '_chart');\n                if (this.parent.showToolbar) {\n                    if (this.parent.displayOption.view === 'Both' && this.parent.currentView === 'Chart') {\n                        this.parent.grid.element.style.display = 'none';\n                    }\n                    if (this.parent.currentView !== 'Chart') {\n                        this.parent.element.querySelector('#' + this.parent.element.id + '_chart').style.display = 'none';\n                    }\n                }\n            }\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        this.accEmptyPoint = false;\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = (chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        if (this.parent.dataType === 'olap') {\n            levelPos = this.groupHierarchyWithLevels(pivotValues);\n            lastHierarchy = this.fieldPosition[this.fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (this.fieldPosition.length - 1) && this.fieldPosition.length > 1) ?\n                this.fieldPosition[this.fieldPosition.length - 2] : lastHierarchy;\n        }\n        for (var _b = 0, rKeys_1 = rKeys; _b < rKeys_1.length; _b++) {\n            var rKey = rKeys_1[_b];\n            var rowIndex = Number(rKey);\n            if (!isNullOrUndefined(pivotValues[rowIndex])) {\n                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                    (this.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                    var firstRowCell = pivotValues[rowIndex][0];\n                    var tupInfo = this.parent.dataType === 'olap' ?\n                        this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                    var fieldPos = -1;\n                    var currrentLevel = firstRowCell.level;\n                    if (this.parent.dataType === 'olap') {\n                        fieldPos = tupInfo.uNameCollection.split('::[').length - 1;\n                        if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                            tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                            firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                            integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                            levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                            integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                                (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                    (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                    (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ?\n                                        (levelPos[firstRowCell.hierarchy].start) :\n                                        levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                            levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                            currrentLevel = integratedLevel;\n                            indexCount += (prevCell && lastDimension === prevCell.hierarchy && !prevCell.isDrilled) ? 1 : 0;\n                            prevLevel = integratedLevel;\n                            prevCell = firstRowCell;\n                        }\n                    }\n                    else if (firstRowCell.type !== 'value') {\n                        if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                            indexCount++;\n                        }\n                        prevLevel = currrentLevel;\n                    }\n                    this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                    var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                        (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                    var text = firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                    var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                        ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                    var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort.levelName.toString();\n                    var cellInfo = {\n                        name: name_1,\n                        text: caption,\n                        hasChild: firstRowCell.hasChild,\n                        isDrilled: firstRowCell.isDrilled,\n                        levelName: levelName,\n                        level: currrentLevel,\n                        fieldName: firstRowCell.valueSort.axis ? firstRowCell.valueSort.axis.toString() : '',\n                        rowIndex: rowIndex,\n                        colIndex: 0,\n                        cell: firstRowCell\n                    };\n                    if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                        if (this.headerColl[indexCount]) {\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                        else {\n                            this.headerColl[indexCount] = {};\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                    }\n                    var rows = pivotValues[rowIndex];\n                    var cKeys = Object.keys(rows);\n                    var prevMemberCell = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                    }\n                    else {\n                        memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                    }\n                    for (var _c = 0, cKeys_1 = cKeys; _c < cKeys_1.length; _c++) {\n                        var cKey = cKeys_1[_c];\n                        var cellIndex = Number(cKey);\n                        var cell = pivotValues[rowIndex][cellIndex];\n                        var measureAllow = cell.rowHeaders === '' ? this.dataSourceSettings.rows.length === 0 : true;\n                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                            tupInfo.measureName : cell.actualText;\n                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                            actualText !== '' && ((chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? true : actualText === this.currentMeasure)) {\n                            if (isNullOrUndefined(firstRowCell.members)) {\n                                firstRowCell.members = [];\n                            }\n                            if (this.parent.dataType === 'olap' ? (lastHierarchy === firstRowCell.hierarchy ?\n                                ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                    (fieldPos === this.measurePos ? prevMemberCell.isDrilled : true) : firstRowCell.isDrilled) : true)\n                                : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                    prevMemberCell.members.length > 0 : firstRowCell.members.length > 0) || !measureAllow)) {\n                                break;\n                            }\n                            var colHeaders = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.columnHeaders.toString().split('.').join(' - ');\n                            var rowHeaders = this.parent.dataType === 'olap' ? cell.rowHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.rowHeaders.toString().split('.').join(' - ');\n                            var columnSeries = colHeaders + ' | ' + actualText;\n                            var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                                !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                                Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) : Number(cell.value) : Number(cell.value));\n                            if (yValue === 0) {\n                                this.accEmptyPoint = true;\n                            }\n                            if (this.columnGroupObject[columnSeries]) {\n                                this.columnGroupObject[columnSeries].push({\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue,\n                                    rIndex: rowIndex,\n                                    cIndex: cellIndex\n                                });\n                            }\n                            else {\n                                this.columnGroupObject[columnSeries] = [{\n                                        x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                        y: yValue,\n                                        rIndex: rowIndex,\n                                        cIndex: cellIndex\n                                    }];\n                            }\n                        }\n                        prevMemberCell = memberCell;\n                    }\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     * @returns void\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n        var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n            this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n        var chartType = this.chartSettings.chartSeries ? this.chartSettings.chartSeries.type : undefined;\n        if (this.accumulationType.indexOf(chartType) > -1) {\n            this.currentColumn = (columnKeys.indexOf(columnHeader + ' | ' + this.currentMeasure) > -1 && columnHeader !== undefined) ? columnHeader + ' | ' + this.currentMeasure : columnKeys[0];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n            currentSeries.dataSource = this.columnGroupObject[this.currentColumn];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            if (isBlazor()) {\n                if (isNullOrUndefined(this.persistSettings.chartSeries.dataLabel.visible)) {\n                    this.persistSettings.chartSeries.dataLabel.visible = true;\n                    this.persistSettings.chartSeries.dataLabel.position = \"Outside\";\n                }\n            }\n            if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.dataLabel) {\n                currentSeries.dataLabel = this.persistSettings.chartSeries.dataLabel;\n                currentSeries.dataLabel.name = 'x';\n            }\n            else {\n                currentSeries.dataLabel = { visible: true, position: \"Outside\", name: 'x' };\n                this.parent.setProperties({ chartSettings: { chartSeries: { dataLabel: { visible: true, position: \"Outside\" } } } }, true);\n            }\n            if (this.accEmptyPoint && currentSeries.emptyPointSettings) {\n                currentSeries.emptyPointSettings.mode = 'Zero';\n            }\n            else if (this.accEmptyPoint) {\n                currentSeries.emptyPointSettings = { mode: 'Zero' };\n            }\n            currentSeries.name = this.currentColumn;\n            if (chartType === 'Doughnut') {\n                currentSeries.type = 'Pie';\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '40%';\n            }\n            else if (chartType === 'Pie') {\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '0';\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        else {\n            for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n                var key = columnKeys_1[_i];\n                var currentSeries = {};\n                currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n                currentSeries.dataSource = this.columnGroupObject[key];\n                currentSeries.xName = 'x';\n                currentSeries.yName = 'y';\n                currentSeries.name = this.chartSettings.enableMultiAxis ? key : key.split(' | ')[0];\n                if (['Radar', 'Polar'].indexOf(chartType) < 0) {\n                    var measure = key.split(' | ')[1];\n                    currentSeries.yAxisName = this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n                }\n                if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = this.persistSettings.chartSeries.emptyPointSettings;\n                }\n                this.chartSeries = this.chartSeries.concat(currentSeries);\n            }\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.frameChartSeries = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            if ((this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) > -1 && ['fill', 'dashArray', 'width', 'segmentAxis',\n                'drawType', 'isClosed', 'segments', 'stackingGroup', 'marker', 'errorBar', 'trendlines', 'minRadius',\n                'splineType', 'maxRadius', 'cardinalSplineTension', 'columnWidth', 'columnSpacing', 'cornerRadius'].indexOf(keys[keyPos]) > -1) ||\n                (this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 && ['endAngle', 'explode', 'explodeAll', 'explodeIndex',\n                    'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'neckHeight', 'neckWidth', 'pyramidMode', 'startAngle',\n                    'dataLabel', 'innerRadius'].indexOf(keys[keyPos]) > -1)) {\n                keyPos++;\n                continue;\n            }\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        this.parent.showWaitingPopup();\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ?\n                (this.parent.element.insertBefore((!this.element ?\n                    (createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }))\n                    : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!this.chartElement && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).innerHTML = '';\n            this.chartElement = this.parent.element.querySelector('.' + cls.PIVOTCHART).appendChild(createElement('div', {\n                className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n            }));\n        }\n        if (this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER)) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER).innerHTML = '';\n        }\n        if (this.parent.showGroupingBar) {\n            this.element.style.minWidth = '400px !important';\n        }\n        else {\n            this.element.style.minWidth = '310px !important';\n        }\n        var width = this.parent.width.toString();\n        if (this.parent.showToolbar && this.parent.grid) {\n            width = this.parent.getGridWidthAsNumber().toString();\n        }\n        var height = this.getChartHeight();\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.accumulationType.indexOf(type) < 0) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height =\n                (height === 'auto' ? this.getChartAutoHeight() : height) + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            if (this.parent.chartSettings.chartSeries.type !== 'Polar' && this.parent.chartSettings.chartSeries.type !== 'Radar') {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n        }\n        if (this.parent.chart && ((this.parent.chart.getModuleName() === 'accumulationchart' &&\n            this.accumulationType.indexOf(type) < 0) || (this.parent.chart.getModuleName() === 'chart' &&\n            this.accumulationType.indexOf(type) > -1))) {\n            this.parent.chart.destroy();\n            if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n            }\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart')) ||\n            (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange)) {\n            if (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange && this.parent.chart) {\n                if (!this.parent.chart.isDestroyed) {\n                    this.parent.chart.destroy();\n                }\n                this.parent.chart = undefined;\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n                this.parent.toolbarModule.isMultiAxisChange = false;\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair);\n            AccumulationChart.Inject(PieSeries, FunnelSeries, PyramidSeries, AccumulationDataLabel, AccumulationLegend, AccumulationTooltip, Export);\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart = new AccumulationChart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    width: width,\n                    height: height.toString(),\n                    title: this.chartSettings.title,\n                    enableSmartLabels: this.chartSettings.enableSmartLabels,\n                    center: this.chartSettings.pieCenter,\n                    enableBorderOnMouseMove: this.chartSettings.enableBorderOnMouseMove,\n                    highLightMode: this.chartSettings.highlightMode,\n                    highlightPattern: this.chartSettings.highlightPattern,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    theme: this.chartSettings.theme,\n                    selectionMode: this.chartSettings.accumulationSelectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    locale: this.parent.locale,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this)\n                });\n            }\n            else {\n                this.parent.chart = new Chart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    zoomSettings: currentZoomSettings,\n                    axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                    rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                    columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                    primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                    primaryXAxis: currentXAxis,\n                    width: width,\n                    height: (this.parent.chartSettings.chartSeries.type !== 'Polar' &&\n                        this.parent.chartSettings.chartSeries.type !== 'Radar' && this.parent.chartSettings.enableScrollOnMultiAxis &&\n                        this.parent.chartSettings.enableMultiAxis && this.parent.dataSourceSettings.values.length > 0) ?\n                        Number(height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(height)) ?\n                            height.toString() : (Number(height) - 5).toString() :\n                            (!isNaN(Number(height)) || this.parent.dataSourceSettings.values.length > 1) ?\n                                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                                height.toString() : height.toString(),\n                    title: this.chartSettings.title,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    chartArea: this.chartSettings.chartArea,\n                    palettes: this.chartSettings.palettes,\n                    theme: this.chartSettings.theme,\n                    crosshair: this.chartSettings.crosshair,\n                    selectionMode: this.chartSettings.selectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    isTransposed: this.chartSettings.isTransposed,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    description: this.chartSettings.description,\n                    tabIndex: this.chartSettings.tabIndex,\n                    locale: this.parent.locale,\n                    enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    dragComplete: this.chartSettings.dragComplete ? this.chartSettings.dragComplete.bind(this) : undefined,\n                    zoomComplete: this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete.bind(this) : undefined,\n                    scrollStart: this.chartSettings.scrollStart ? this.chartSettings.scrollStart.bind(this) : undefined,\n                    scrollEnd: this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd.bind(this) : undefined,\n                    scrollChanged: this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this),\n                    axisLabelRender: this.axisLabelRender.bind(this),\n                    multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n                });\n            }\n            this.parent.chart.isStringTemplate = true;\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else if ((this.accumulationType.indexOf(type) < 0) && this.parent.chart.getModuleName() === 'chart') {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultiAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n        }\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chartInner');\n        }\n        else {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chart');\n        }\n    };\n    PivotChart.prototype.pointClick = function (args) {\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.seriesIndex].dataSource;\n        if (['Pie', 'Funnel', 'Doughnut', 'Pyramid', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            this.pivotIndex = {\n                rIndex: dataSource ? dataSource[args.pointIndex].rIndex : undefined,\n                cIndex: dataSource ? dataSource[args.pointIndex].cIndex : undefined,\n            };\n            this.creatMenu();\n            var pos = this.parent.element.getBoundingClientRect();\n            var y = (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 0) +\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 0) +\n                (window.scrollY || document.documentElement.scrollTop) + pos.top;\n            this.accumulationMenu.open(y + args.y, args.x + pos.left + (window.scrollX || document.documentElement.scrollLeft));\n        }\n        else if ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && this.parent.drillThroughModule) {\n            var rIndex = dataSource[args.pointIndex].rIndex;\n            var cIndex = dataSource[args.pointIndex].cIndex;\n            this.parent.drillThroughModule.executeDrillThrough(this.parent.pivotValues[rIndex][cIndex], rIndex, cIndex);\n        }\n        this.parent.trigger(events.chartPointClick, args);\n    };\n    /* tslint:enable */\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultiAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                    this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ?\n                    this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n                currentYAxis.plotOffsetTop = currentYAxis.plotOffsetTop ? currentYAxis.plotOffsetTop :\n                    this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                        this.chartSettings.chartSeries.type === 'StackingBar100' ? 50 : 30;\n                currentYAxis.rowIndex = valCnt;\n                currentYAxis.columnIndex = valCnt;\n                if (!resFormat) {\n                    currentYAxis.name = this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                rows.push({ height: divider });\n                columns.push({ width: divider });\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var lengthofFormat = void 0;\n            if (formatSetting) {\n                lengthofFormat = formatSetting.format.length;\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (((formatSetting.format.toLowerCase().match(/n[0-10]|p[0-10]|c[0-10]/) === null) || lengthofFormat > 3) ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    /** @hidden */\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = void 0;\n            if (!isNullOrUndefined(rows)) {\n                cKeys = Object.keys(rows);\n                for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                    var cellIndex = cKeys_2[_a];\n                    var cell = rows[Number(cellIndex)];\n                    if (!isNullOrUndefined(cell)) {\n                        if (cell.axis !== 'column') {\n                            return colIndexColl;\n                        }\n                        else if ((cell.type === 'sum' || (this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum'))\n                            && cell.rowSpan !== -1) {\n                            colIndexColl[cell.colIndex] = cell.colIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues) {\n        var _a, _b;\n        this.fieldPosition = [];\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            this.fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        this.fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < this.fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[this.fieldPosition[pos]] = {\n                    start: (lastEnd + 1),\n                    end: (lastEnd + Object.keys(group[this.fieldPosition[pos]]).length)\n                };\n                lastEnd = levelPos[this.fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    /* tslint:disable */\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1,\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    /* tslint:enable */\n    PivotChart.prototype.getZoomFactor = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (tooltip.enable && tooltip.template) {\n            this.templateFn = this.parent.templateParser(tooltip.template);\n        }\n        if (this.parent.tooltipTemplate) {\n            tooltip.template = tooltip.template ? tooltip.template : this.parent.tooltipTemplate;\n        }\n        if (isBlazor()) {\n            this.parent.allowServerDataBinding = false;\n            this.parent.setProperties({ chartSettings: { tooltip: { header: tooltip.header ? tooltip.header : '' } } }, true);\n            this.parent.allowServerDataBinding = true;\n        }\n        else {\n            tooltip.header = tooltip.header ? tooltip.header : '';\n        }\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    /* tslint:disable:no-any */\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        if (this.chartSettings.legendSettings) {\n            var keyPos = 0;\n            var keys = Object.keys(this.chartSettings.legendSettings);\n            while (keyPos < keys.length) {\n                legendSettings[keys[keyPos]] = this.chartSettings.legendSettings[keys[keyPos]];\n                keyPos++;\n            }\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1 && legendSettings.visible === undefined) {\n            legendSettings.visible = false;\n        }\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    /* tslint:enable:no-any */\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) { return args.caption || args.name; }).join(' / ');\n        currentXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true :\n            zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n            ((this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) ?\n                args.series.name ? args.series.name.split(' | ')[1] : args.data.seriesName ?\n                    args.data.seriesName.split(' | ')[1] : this.currentMeasure : this.measuresNames[this.currentMeasure] ?\n                this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        /* tslint:disable:no-any */\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.data.seriesIndex].dataSource;\n        var rowIndex = dataSource ? dataSource[args.data.pointIndex].rIndex : undefined;\n        var colIndex = dataSource ? dataSource[args.data.pointIndex].cIndex : undefined;\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure] ? this.measuresNames[measure] : measure];\n        var aggregateType = this.parent.dataType === 'olap' ? '' : this.parent.localeObj.getConstant(measureField.aggregateType);\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : aggregateType + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ') + measureField.caption;\n        var formattedText = this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 ?\n            args.text.split('<b>')[1].split('</b>')[0] : this.engineModule.pivotValues[rowIndex][colIndex].formattedText;\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var formattedValue = ((formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText) :\n            this.parent.engineModule.getFormattedValue(args.point.y, measureField.id).formattedText :\n            formattedText);\n        var columnText = (args.series.name ? args.series.name.split(' | ')[0] : args.data.seriesName.split(' | ')[0]);\n        var rowText = args.point.x;\n        if (this.parent.tooltipTemplate && this.parent.getTooltipTemplate() !== undefined || this.chartSettings.tooltip.template) {\n            var rowFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'row') : '';\n            var columnFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'Column') : '';\n            var templateVariable = {\n                rowHeaders: rowText,\n                columnHeaders: columnText,\n                aggregateType: aggregateType,\n                value: formattedValue,\n                valueField: measureField.caption,\n                rowFields: rowFields,\n                columnFields: columnFields\n            };\n            var template = void 0;\n            if (this.parent.chartSettings && this.parent.chartSettings.tooltip &&\n                this.parent.chartSettings.tooltip.enable && this.parent.chartSettings.tooltip.template) {\n                template = this.tooltipTemplateFn()(templateVariable, this, 'tooltipTemplate', this.element.id + '1tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                /* tslint:enable:no-any */\n                template = this.parent.getTooltipTemplate()(templateVariable, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            args.template = template;\n        }\n        else {\n            args.text = measureAggregatedName + ': ' + formattedValue +\n                (this.dataSourceSettings.columns.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + columnText)) +\n                (this.dataSourceSettings.rows.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + rowText));\n            this.parent.trigger(events.chartTooltipRender, args);\n        }\n    };\n    PivotChart.prototype.tooltipTemplateFn = function () {\n        return this.templateFn;\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName))) {\n                this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) >= 0)\n            && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'visible';\n        }\n        else if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n        }\n        this.parent.chart.height = ['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) < 0 &&\n            this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.parent.dataSourceSettings.values.length > 0 ? Number(this.parent.chart.height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ?\n            isNaN(Number(this.getChartHeight())) ? this.getChartHeight().toString() : (Number(this.getChartHeight()) - 5).toString() :\n            (!isNaN(Number(this.getChartHeight())) || this.parent.dataSourceSettings.values.length > 1) ?\n                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                this.getChartHeight().toString() : this.getChartHeight().toString();\n        this.updateView();\n        this.parent.notify(events.contentReady, {});\n        this.parent.trigger(events.chartLoaded, args);\n        this.parent.hideWaitingPopup();\n    };\n    /** @hidden */\n    PivotChart.prototype.updateView = function () {\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                }\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = '';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = '';\n                }\n            }\n        }\n    };\n    PivotChart.prototype.creatMenu = function () {\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n        }\n        var items = ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing)\n            && this.parent.drillThroughModule) ? ['expand', 'collapse', 'drillThrough', 'exit'] :\n            ['expand', 'collapse', 'exit'];\n        var option = [];\n        for (var i = 0; i < items.length; i++) {\n            option.push({\n                id: this.parent.element.id + '_DrillMenuChart_' + items[i],\n                text: this.parent.localeObj.getConstant(items[i]),\n                items: [],\n            });\n        }\n        var getString = this.getMenuItems();\n        var expand = [];\n        var collapse = [];\n        for (var i = 0; i < getString.length; i++) {\n            if (getString[i].type === 'expand') {\n                expand.push({ id: this.element.id + 'drillExpand_' + getString[i].key, text: getString[i].value });\n            }\n            else {\n                collapse.push({ id: this.element.id + 'drillCollapse_' + getString[i].key, text: getString[i].value });\n            }\n        }\n        if (expand.length > 0) {\n            option[0].items = expand;\n        }\n        if (collapse.length > 0) {\n            option[1].items = collapse;\n        }\n        var menuOptions = {\n            cssClass: this.parent.element.id + '_accumulationChart',\n            items: option,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.drillMenuOpen.bind(this),\n            select: this.drillMenuSelect.bind(this),\n        };\n        this.accumulationMenu = new ContextMenu(menuOptions);\n        var contextMenu;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart')) {\n            contextMenu = this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart');\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + '_accumulationChart'\n            });\n            this.parent.element.appendChild(contextMenu);\n        }\n        this.accumulationMenu.isStringTemplate = true;\n        this.accumulationMenu.appendTo(contextMenu);\n    };\n    PivotChart.prototype.drillMenuOpen = function (args) {\n        if (args.items[0] && args.items[0].text === this.parent.localeObj.getConstant('expand') &&\n            args.items[0].items && args.items[0].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('expand')], false);\n        }\n        if (args.items[1] && args.items[1].text === this.parent.localeObj.getConstant('collapse') &&\n            args.items[1].items && args.items[1].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('collapse')], false);\n        }\n    };\n    PivotChart.prototype.getMenuItems = function () {\n        var rowIndex = this.pivotIndex.rIndex;\n        var menuItem = [];\n        var pivotValues = this.engineModule.pivotValues;\n        var levelCol = [];\n        var pivotValue = pivotValues[rowIndex][this.pivotIndex.cIndex];\n        // let hierarchy: string = pivotValues[rowIndex][0].hierarchy;\n        var level = (!pivotValues[rowIndex][0].isNamedSet && pivotValues[rowIndex][0].hasChild) ?\n            pivotValues[rowIndex][0].level : undefined;\n        var levels = this.parent.dataType === 'olap' ? pivotValue.rowHeaders.toString().split(/~~|::/)\n            : pivotValue.rowHeaders.toString().split(this.engineModule.valueSortSettings.headerDelimiter);\n        while (pivotValues[rowIndex][0]) {\n            pivotValue = pivotValues[rowIndex][0];\n            if ((levels.length !== 0) && (levels.indexOf(pivotValue.formattedText.toString()) === (levels.length - 1))) {\n                if (pivotValue.hasChild && !pivotValue.isNamedSet && levelCol.indexOf(pivotValue.level) < 0 &&\n                    (level ? level >= pivotValue.level : (level === 0 ? (pivotValue.level === 0) : true))) {\n                    if (!pivotValue.isDrilled) {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'expand',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    else {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'collapse',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    levelCol.push(pivotValue.level);\n                    level = level ? (level - 1) : (pivotValue.level - 1);\n                }\n                var index = levels.indexOf(pivotValue.formattedText.toString());\n                levels.splice(index, 1);\n            }\n            if (pivotValue.level === 0 && pivotValue.hasChild && !pivotValue.isNamedSet) {\n                level = undefined;\n                levelCol = [];\n            }\n            rowIndex--;\n        }\n        return menuItem;\n    };\n    PivotChart.prototype.drillMenuSelect = function (args) {\n        var pivotValues = (this.parent.dataType === 'olap' ?\n            this.parent.olapEngineModule.pivotValues : this.parent.engineModule.pivotValues);\n        var option = (args.element.id).split('_DrillMenuChart_')[1];\n        if (args.element.id.indexOf(this.element.id + 'drill') === 0) {\n            var type = args.element.id.split(this.element.id + 'drill')[1].indexOf('Expand') >= 0 ? 'drillExpand' : 'drillCollapse';\n            var rowIndex = Number(args.element.id.split(this.element.id + type + '_')[1]);\n            var pivotValue = pivotValues[rowIndex][0];\n            var name_2 = this.parent.dataType === 'olap' ? pivotValue.formattedText :\n                (pivotValue.actualText ? pivotValue.actualText.toString() : pivotValue.formattedText.toString());\n            var text = pivotValue.formattedText ? pivotValue.formattedText.toString() : name_2;\n            var caption = (pivotValue.hasChild && !pivotValue.isNamedSet) ?\n                ((pivotValue.isDrilled ? ' - ' : ' + ') + text) : text;\n            var tupInfo = this.parent.dataType === 'olap' ?\n                this.engineModule.tupRowInfo[pivotValue.ordinal] : undefined;\n            var levelName = tupInfo ? tupInfo.uNameCollection : pivotValue.valueSort.levelName.toString();\n            var customAttributes = {\n                fieldName: pivotValue.valueSort.axis,\n                level: pivotValue.level,\n                hasChild: pivotValue.hasChild,\n                levelName: levelName,\n                name: name_2,\n                text: caption,\n                rowIndex: rowIndex,\n                colIndex: 0,\n                isDrilled: pivotValue.isDrilled,\n                cell: pivotValue\n            };\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, customAttributes);\n            }\n            else {\n                this.onDrill({ customAttributes: customAttributes });\n            }\n        }\n        else if (option === 'drillThrough') {\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.drillThroughModule.executeDrillThrough(pivotValues[this.pivotIndex.rIndex][this.pivotIndex.cIndex], this.pivotIndex.rIndex, this.pivotIndex.rIndex);\n        }\n        else if (option === 'exit') {\n            this.accumulationMenu.close();\n        }\n    };\n    PivotChart.prototype.getChartHeight = function () {\n        var height = isNullOrUndefined(this.parent.getHeightAsNumber()) ? 'auto' :\n            this.parent.getHeightAsNumber().toString();\n        if (!isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            if (this.parent.showToolbar && this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                    (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                        this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if (this.parent.showToolbar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42)).toString();\n            }\n            else if (this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if ((this.parent.chart && parseInt(this.parent.chart.height, 10) < 200) || this.parent.getHeightAsNumber() < 200) {\n                height = '200';\n            }\n        }\n        else {\n            height = 'auto';\n        }\n        return height;\n    };\n    PivotChart.prototype.getChartAutoHeight = function () {\n        var height = this.parent.element.offsetHeight;\n        if (this.parent.showToolbar && this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        else if (this.parent.showToolbar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42);\n        }\n        else if (this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        return height;\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels) {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        /* tslint:disable-next-line:no-any */\n        if (args.customAttributes && args.customAttributes.hasChild && !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    /** @hidden */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        /* tslint:enable:no-any */\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({\n                dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] }\n            }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        var drillArgs = {\n            drillInfo: drilledItem,\n            pivotview: isBlazor() ? undefined : pivot.parent\n        };\n        pivot.parent.trigger(events.drill, drillArgs);\n        if (pivot.parent.enableVirtualization) {\n            if (isBlazor()) {\n                /* tslint:disable */\n                var sfBlazor = 'sfBlazor';\n                var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem], drilledItem);\n                var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs], drillArgs);\n                pivot.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                    pivot.parent.updateBlazorData(data, pivot.parent);\n                    pivot.parent.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                    pivot.parent.allowServerDataBinding = false;\n                    pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    delete pivot.parent.bulkChanges.pivotValues;\n                    pivot.parent.allowServerDataBinding = true;\n                    pivot.parent.renderPivotGrid();\n                });\n                /* tslint:enable */\n            }\n            else {\n                pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                pivot.engineModule.onDrill(drilledItem);\n            }\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings);\n        }\n        pivot.parent.allowServerDataBinding = false;\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        /* tslint:disable-next-line:no-any */\n        delete pivot.parent.bulkChanges.pivotValues;\n        pivot.parent.allowServerDataBinding = true;\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (isBlazor()) {\n            args.chart = this.parent.chart;\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) {\n            args.chart.primaryXAxis.zoomFactor = this.getZoomFactor();\n            if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n                args.chart.primaryXAxis.zoomFactor = 1;\n            }\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /**\n     * To destroy the chart module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.chart && !this.parent.chart.isDestroyed) {\n            if (this.accumulationMenu && this.accumulationMenu.isDestroyed) {\n                this.accumulationMenu.destroy();\n            }\n            this.parent.chart.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","/**\n * Specifies Chart Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartSubTitleFont = {\n        size: '11px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stockEventFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/base/themes';\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Allow options to customize the border of the chart such as color and border size in the pivot chart.\n * For example, to display the chart border color as red, set the properties `color` to either **\"red\"**\n * or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Allows to configure the position of the marker such as top and left in the chart.\n */\nvar Offset = /** @class */ (function (_super) {\n    __extends(Offset, _super);\n    function Offset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"y\", void 0);\n    return Offset;\n}(ChildProperty));\nexport { Offset };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * @public\n */\nvar Indexes = /** @class */ (function (_super) {\n    __extends(Indexes, _super);\n    function Indexes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"point\", void 0);\n    return Indexes;\n}(ChildProperty));\nexport { Indexes };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar ChartArea = /** @class */ (function (_super) {\n    __extends(ChartArea, _super);\n    function ChartArea() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Border)\n    ], ChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], ChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartArea.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartArea.prototype, \"backgroundImage\", void 0);\n    return ChartArea;\n}(ChildProperty));\nexport { ChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar CrosshairSettings = /** @class */ (function (_super) {\n    __extends(CrosshairSettings, _super);\n    function CrosshairSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], CrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], CrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], CrosshairSettings.prototype, \"lineType\", void 0);\n    return CrosshairSettings;\n}(ChildProperty));\nexport { CrosshairSettings };\n/**\n * Allows to configure the data label with different settings such as name, fill color, opacity, rotation angle, border, marging, etc in the chart.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartConnectorStyle = /** @class */ (function (_super) {\n    __extends(PivotChartConnectorStyle, _super);\n    function PivotChartConnectorStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Line')\n    ], PivotChartConnectorStyle.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartConnectorStyle.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartConnectorStyle.prototype, \"dashArray\", void 0);\n    return PivotChartConnectorStyle;\n}(ChildProperty));\nexport { PivotChartConnectorStyle };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartDataLabel = /** @class */ (function (_super) {\n    __extends(PivotChartDataLabel, _super);\n    function PivotChartDataLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartDataLabel.prototype, \"visible\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartDataLabel.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartDataLabel.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartDataLabel.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotChartDataLabel.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"ry\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartDataLabel.prototype, \"template\", void 0);\n    __decorate([\n        Complex({}, PivotChartConnectorStyle)\n    ], PivotChartDataLabel.prototype, \"connectorStyle\", void 0);\n    return PivotChartDataLabel;\n}(ChildProperty));\nexport { PivotChartDataLabel };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Allows to configure the error bar cap settings such as cap width, length, color, opacity.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\n/**\n * Allows options for customize the error bar chart with diffent settings such as type, direction, mode, color, width, etc.\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Allows to configure the trendlines of the chart such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar EmptyPointSettings = /** @class */ (function (_super) {\n    __extends(EmptyPointSettings, _super);\n    function EmptyPointSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], EmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], EmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], EmptyPointSettings.prototype, \"mode\", void 0);\n    return EmptyPointSettings;\n}(ChildProperty));\nexport { EmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar CornerRadius = /** @class */ (function (_super) {\n    __extends(CornerRadius, _super);\n    function CornerRadius() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomRight\", void 0);\n    return CornerRadius;\n}(ChildProperty));\nexport { CornerRadius };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar CrosshairTooltip = /** @class */ (function (_super) {\n    __extends(CrosshairTooltip, _super);\n    function CrosshairTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\n    return CrosshairTooltip;\n}(ChildProperty));\nexport { CrosshairTooltip };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar StripLineSettings = /** @class */ (function (_super) {\n    __extends(StripLineSettings, _super);\n    function StripLineSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], StripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], StripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], StripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], StripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], StripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], StripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], StripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], StripLineSettings.prototype, \"opacity\", void 0);\n    return StripLineSettings;\n}(ChildProperty));\nexport { StripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar LabelBorder = /** @class */ (function (_super) {\n    __extends(LabelBorder, _super);\n    function LabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], LabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], LabelBorder.prototype, \"type\", void 0);\n    return LabelBorder;\n}(ChildProperty));\nexport { LabelBorder };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar MajorGridLines = /** @class */ (function (_super) {\n    __extends(MajorGridLines, _super);\n    function MajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorGridLines.prototype, \"color\", void 0);\n    return MajorGridLines;\n}(ChildProperty));\nexport { MajorGridLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar MinorGridLines = /** @class */ (function (_super) {\n    __extends(MinorGridLines, _super);\n    function MinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorGridLines.prototype, \"color\", void 0);\n    return MinorGridLines;\n}(ChildProperty));\nexport { MinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar AxisLine = /** @class */ (function (_super) {\n    __extends(AxisLine, _super);\n    function AxisLine() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], AxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], AxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], AxisLine.prototype, \"color\", void 0);\n    return AxisLine;\n}(ChildProperty));\nexport { AxisLine };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar MajorTickLines = /** @class */ (function (_super) {\n    __extends(MajorTickLines, _super);\n    function MajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorTickLines.prototype, \"color\", void 0);\n    return MajorTickLines;\n}(ChildProperty));\nexport { MajorTickLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar MinorTickLines = /** @class */ (function (_super) {\n    __extends(MinorTickLines, _super);\n    function MinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorTickLines.prototype, \"color\", void 0);\n    return MinorTickLines;\n}(ChildProperty));\nexport { MinorTickLines };\n/**\n * Allows to configure the position of the legend such as top and left in the chart.\n */\nvar ChartLocation = /** @class */ (function (_super) {\n    __extends(ChartLocation, _super);\n    function ChartLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"y\", void 0);\n    return ChartLocation;\n}(ChildProperty));\nexport { ChartLocation };\n/**\n * Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\n/**\n * Allows options for customize the error bar chart series with diffent settings such as type, direction, mode, color, width, etc.\n */\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\n/**\n * Allows to configure the trendlines of the chart series such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\n/**\n * Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n */\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n */\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n * Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explodeAll\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"explodeIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property('30%')\n    ], PivotSeries.prototype, \"explodeOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"gapRatio\", void 0);\n    __decorate([\n        Property('Value')\n    ], PivotSeries.prototype, \"groupMode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"groupTo\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckHeight\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckWidth\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotSeries.prototype, \"pyramidMode\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"startAngle\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Complex(null, PivotChartDataLabel)\n    ], PivotSeries.prototype, \"dataLabel\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Allow options to customize the axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(Theme.axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('None')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(Theme.tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Allow options to customize the center of the pivot pie series chart.\n */\nvar PivotPieChartCenter = /** @class */ (function (_super) {\n    __extends(PivotPieChartCenter, _super);\n    function PivotPieChartCenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"x\", void 0);\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"y\", void 0);\n    return PivotPieChartCenter;\n}(ChildProperty));\nexport { PivotPieChartCenter };\n/**\n * Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n * Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\n * The following options are available to customize the pivot chart.\n * * `background`: Allows you to change the background color of the chart series in the pivot chart.\n * For example, to display the chart series with background color as red, set the property `background` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"**.\n * * `border`: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n * * `chartArea`: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n * * `chartSeries`: Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n * * `crosshair`: Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n * * `description`: Allows you to add a description of the pivot chart.\n * * `enableAnimation`: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.\n * * `enableExport`: Allows the pivot chart to be exported to either **PDF** or **PNG** or **JPEG** or **SVG** filter formats.\n * * `enableMultiAxis`: Allows you to draw the pivot chart with multiple value fields as separate chart area.\n * * `enableSideBySidePlacement`: Allows you to draw points of the column type pivot chart series as side by side.\n * * `isMultiSelect`: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property `selectionMode` to be **Point** or **Series** or **Cluster**.\n * * `isTransposed`: Allows you to render the pivot chart in a transposed manner or not.\n * * `legendSettings`: Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n * * `margin`: Allow options to customize the left, right, top and bottom margins of the pivot chart.\n * * `palettes`: Allows you to draw the chart series points with custom color in the pivot chart.\n * * `primaryXAxis`: Allow options to customize the horzontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `primaryYAxis`: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\n * title, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `selectedDataIndexes`: Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * * `selectionMode`: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\n * For example, to highlight a specific point in a specific series of the pivot chart, set the property `selectionMode` to **Point**.\n * * `showMultiLevelLabels`: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.\n * * `subTitle`: Allows you to add the subtitle to the pivot chart.\n * * `subTitleStyle`: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tabIndex`: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.\n * * `theme`: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.\n * * `title`: Allows you to add title to the pivot chart.\n * * `titleStyle`: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tooltip`: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n * * `useGroupingSeparator`: Allows the group separator to be shown to the values in the pivot chart.\n * * `value`: Allows you to draw a pivot chart with a specific value field during initial loading.\n * * `zoomSettings`: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"columnHeader\", void 0);\n    __decorate([\n        Property('-')\n    ], ChartSettings.prototype, \"columnDelimiter\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultiAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableScrollOnMultiAxis\", void 0);\n    __decorate([\n        Complex(Theme.chartTitleFont, Font)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.chartSubTitleFont, Font)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex(null, PivotPieChartCenter)\n    ], ChartSettings.prototype, \"pieCenter\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"accumulationSelectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    /* tslint:disable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        /* tslint:enable:no-any */\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        /* tslint:disable-next-line:max-line-length */\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        /* tslint:disable-next-line:max-line-length */\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        /* tslint:disable */\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n        /* tslint:enable */\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        /* tslint:disable */\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n        /* tslint:enable */\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            // if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n            //     query = query + ' * ' + measureQuery;\n            // }\n            /* tslint:disable:max-line-length */\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.drilledMembers.length > 0 ? '})' : '') + (this.isPaging && axis === 'columns' && drillQueryObj.query !== '' ? '-' + drillQueryObj.collection.join('-') : '') + ')';\n        }\n        // else if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n        //     query = 'NON EMPTY (' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE({' : '') + measureQuery;\n        //     query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n        //         (this.drilledMembers.length > 0 ? '})' : '') + ') ' + this.cellSetInfo + ' ON ' + axis.toUpperCase();\n        // }\n        /* tslint:enable:max-line-length */\n        return query;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                var item = _b[_a];\n                var drillQuery = [];\n                var rawQuery = [];\n                var i = 0;\n                var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                /* tslint:disable:max-line-length */\n                while (i < dimensions.length) {\n                    if (drillInfo_1[i] && drillInfo_1[i].indexOf(dimensions[i].name) !== -1) {\n                        if (drillInfo_1[drillInfo_1.length - 1].indexOf(dimensions[i].name) !== -1) {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '.CHILDREN})';\n                            }\n                            else {\n                                drillQuery.push('(' + drillInfo_1[i] + '.CHILDREN)');\n                                rawQuery.push('(' + drillInfo_1[i] + ')');\n                            }\n                        }\n                        else {\n                            if (drillInfo_1[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else if (drillInfo_1[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '})';\n                                }\n                                else {\n                                    drillQuery.push('({' + drillInfo_1[i] + '})');\n                                    rawQuery.push('({' + drillInfo_1[i] + '})');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_1[i] + ')');\n                                    rawQuery.push('(' + drillInfo_1[i] + ')');\n                                }\n                            }\n                        }\n                    }\n                    else if (!drillInfo_1[i] && dimensions[i]) {\n                        if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                            }\n                            else {\n                                drillQuery.push('(' + measureQuery + ')');\n                                rawQuery.push('(' + measureQuery + ')');\n                            }\n                        }\n                        else {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                            }\n                            else {\n                                drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                            }\n                        }\n                    }\n                    else {\n                        drillQuery = [];\n                        break;\n                    }\n                    i++;\n                }\n                if (drillQuery.length > 0 && drillQuery.length < drillInfo_1.length) {\n                    drillQuery = [];\n                    rawQuery = [];\n                }\n                // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                /* tslint:enable:max-line-length */\n                if (rawQuery.length > 0) {\n                    rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    /* tslint:disable */\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    /* tslint:enable */\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* tslint:disable:no-any */\n                    var filter = filters[field.name];\n                    /* tslint:enable:no-any */\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n            ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                /* tslint:disable-next-line:max-line-length */\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties) {\n        this.isEmptyData = false;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.enableValueSorting = false;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        /* tslint:disable:no-any */\n        this.locale = this.globalize.getCulture();\n        /* tslint:enable:no-any */\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.isPaging = this.pageSettings ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && this.savedFieldListData)) {\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function (direction, newPage, prevPage) {\n        MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.pivotValues = [];\n            this.valueContent = [];\n            this.headerContent = [];\n            this.colDepth = 0;\n            this.tupColumnInfo = [];\n            this.tupRowInfo = [];\n            this.colMeasures = {};\n            this.colMeasurePos = undefined;\n            this.rowMeasurePos = undefined;\n            this.rowStartPos = -1;\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var measureInfo = this.getMeasureInfo();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (customArgs.action === 'down') {\n            this.updateTupCollection(customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging) {\n                this.performColumnSorting();\n            }\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging) {\n                this.performRowSorting();\n            }\n        }\n        this.frameValues(valCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            var drillInfo = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            var drillEndPos = this.tupRowInfo[tupPos].drillEndPos;\n            var levelColl = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (allStartPos > drillStartPos) : true) : true;\n                /* tslint:disable-next-line:max-line-length */\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) || this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ? (allStartPos > withoutAllEndPos) : true;\n                if (members.length === allCount + (measure ? 1 : 0) && measure) {\n                    var levelName = 'Grand Total.' + members[measurePos].querySelector('Caption').textContent;\n                    gTotals.push({\n                        axis: 'row',\n                        actualText: this.getUniqueName(members[measurePos].querySelector('UName').textContent),\n                        colIndex: 0,\n                        formattedText: (typeColl[measurePos] === '3' &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                            members[measurePos].querySelector('Caption').textContent,\n                        hasChild: false,\n                        level: -1,\n                        rowIndex: position,\n                        index: [],\n                        ordinal: tupPos,\n                        colSpan: 1,\n                        rowSpan: 1,\n                        memberType: Number(typeColl[measurePos]),\n                        isDrilled: false,\n                        parentUniqueName: members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                            members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: members[measurePos].querySelector('LName').textContent,\n                        hierarchy: members[measurePos].getAttribute('Hierarchy'),\n                        valueSort: { levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy') }\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total.' + members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? prevParent.isDrilled : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            /* tslint:disable-next-line:no-string-literal */\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            var uniqueName = this.getUniqueName(member.querySelector('UName').textContent);\n                            pivotValues[position] = [{\n                                    axis: 'row',\n                                    actualText: uniqueName,\n                                    colIndex: 0,\n                                    formattedText: (typeColl[memPos] === '3' && this.dataFields[uniqueName] &&\n                                        this.dataFields[uniqueName].caption) ? this.dataFields[uniqueName].caption :\n                                        member.querySelector('Caption').textContent,\n                                    hasChild: Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                    level: lvl,\n                                    rowIndex: position,\n                                    index: [],\n                                    ordinal: tupPos,\n                                    type: 'header',\n                                    colSpan: 1,\n                                    rowSpan: 1,\n                                    memberType: Number(typeColl[memPos]),\n                                    isDrilled: this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                    parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                        member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                    levelUniqueName: member.querySelector('LName').textContent,\n                                    hierarchy: member.getAttribute('Hierarchy'),\n                                    isNamedSet: isNamedSet,\n                                    valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                }];\n                            prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                            if (!prevParent) {\n                                rowMembers.push(member.querySelector('Caption').textContent);\n                            }\n                            var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos]);\n                            pivotValues[position][0].valueSort.levelName = levelName;\n                            pivotValues[position][0].valueSort[levelName] = 1;\n                            valueContent[position - this.rowStartPos] = {};\n                            valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                            if (measure && measurePos > memPos) {\n                                prevUNArray[measurePos] = '';\n                            }\n                            for (var pos = memPos + 1; pos < members.length; pos++) {\n                                prevUNArray[pos] = '';\n                            }\n                            prevUNArray[memPos] = member.querySelector('UName').textContent;\n                            position++;\n                            lastMemPos = memPos;\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] === undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n    };\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            /* tslint:disable:no-any */\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.startsWith('[Measures]') ? '3' : '1';\n            }\n            var memberType = memberUName.startsWith('[Measures]') ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            /* tslint:enable:no-any */\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            /* tslint:disable-next-line:max-line-length */\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                allCount++;\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = { UName: (_a = {}, _a[memberlevel] = memberUName, _a), Caption: (_b = {}, _b[memberlevel] = memberCaption, _b) };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                /* tslint:disable:no-any */\n                var uNames = Object.values(this.headerGrouping[memPos].UName).join('~~');\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = Object.values(this.headerGrouping[memPos].Caption).join('~~');\n                /* tslint:enable:no-any */\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/~~|::\\[/).map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple) {\n        var captionColection = tuple.captionCollection;\n        if (tuple.measure) {\n            var measureName = tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~,::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join('.');\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionColection = captionCollectionArray.join('.');\n        }\n        return captionColection;\n    };\n    /** hidden */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            /* tslint:disable-next-line:max-line-length */\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] = this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        /* tslint:disable */\n        var _this = this;\n        /* tslint:enable */\n        /* tslint:disable-next-line:max-line-length */\n        maxLevel.map(function (item, pos) { _this.colDepth = _this.colDepth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) : (item === 0 ? 1 : item)); });\n        tupPos = 0;\n        var position = 1;\n        var lastAllStartPos;\n        var lastSavedInfo = {};\n        var drillLastAllStartPos;\n        var lastAllCount;\n        var drillLastAllCount;\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this.tupColumnInfo[tupPos].allStartPos;\n            var measure = this.tupColumnInfo[tupPos].measure;\n            var typeColl = this.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            if (isStartCol) {\n                if (allCount === 0) {\n                    var levelComp = [-1, -1, -1];\n                    if (this.tupColumnInfo[tupPos - 1] && this.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this.levelCompare(levelColl, this.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this.tupColumnInfo[tupPos].drillStartPos < 0) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this.setParentCollection(members);\n                        this.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        position++;\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this.totalCollection[this.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this.tupColumnInfo[tupPos];\n                }\n            }\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && withoutAllEndPos < allStartPos) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    /* tslint:disable-next-line:max-line-length */\n                    var endAllow = drillEndPos !== drillStartPos ? (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    /* tslint:disable-next-line:max-line-length */\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ? (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this.totalCollection[this.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, allStartPos: allStartPos, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/~~|::\\[/).map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        /* tslint:disable-next-line:max-line-length */\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                /* tslint:disable-next-line:max-line-length */\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ? this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.tupColumnInfo[tupPos].measurePosition !== memberPos) ?\n                    maxLevel[memberPos] :\n                    (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled && this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false :\n                        this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    if (memberType !== '2') {\n                        colMembers[member.querySelector('UName').textContent] = member.querySelector('Caption').textContent;\n                    }\n                    /* tslint:disable */\n                    var levelName = Object.values(colMembers).join('.');\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    var uName = this.getUniqueName(member.querySelector('UName').textContent);\n                    this.pivotValues[spanMemPos][position] = {\n                        axis: 'column',\n                        actualText: uName,\n                        colIndex: position,\n                        formattedText: (memberType === '3' && this.dataFields[uName] &&\n                            this.dataFields[uName].caption) ? this.dataFields[uName].caption :\n                            member.querySelector('Caption').textContent,\n                        hasChild: Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                        level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) - ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                        rowIndex: spanMemPos,\n                        ordinal: tupPos,\n                        memberType: Number(memberType),\n                        isDrilled: isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled,\n                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: member.querySelector('LName').textContent,\n                        hierarchy: member.getAttribute('Hierarchy'),\n                        isNamedSet: isNamedSet,\n                        valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                        /* tslint:enable */\n                    };\n                    if (!this.headerContent[spanMemPos]) {\n                        this.headerContent[spanMemPos] = {};\n                    }\n                    this.headerContent[spanMemPos][position] = this.pivotValues[spanMemPos][position];\n                    spanMemPos++;\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 && this.tupColumnInfo[tupPos].measurePosition !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n            }\n        }\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.performRowSorting = function () {\n        var _a;\n        if (this.enableSort && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? (currentTuple.measurePosition === 0 && currentCell.memberType === 3 ?\n                    currentTuple.measureName : currentTuple.uNameCollection) : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/~~|::\\[/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            /* tslint:disable:typedef */\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            /* tslint:enable:typedef */\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]]);\n                }\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = (tupInfo.measurePosition === 0 && axisSets[aPos].memberType === 3) ?\n                                tupInfo.measureName : tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                    var isLastMeasure = uName.lastIndexOf('::[') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::[').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                /* tslint:disable:no-string-literal */\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                /* tslint:enable:no-string-literal */\n                var currPos = gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[newPos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    OlapEngine.prototype.performColumnSorting = function () {\n        if (this.enableSort) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var key = void 0;\n                    var keys = void 0;\n                    var arrange = {};\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    for (k = k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType != 2 && header[k].hierarchy\n                                != '[Measures]' && header[k].level != -1) {\n                                if (isNullOrUndefined(arrange[header[k].formattedText]) || isNullOrUndefined(this.pivotValues[j - 1])) {\n                                    arrange[header[k].formattedText] = arrange[header[k].formattedText] ? arrange[header[k].formattedText] : [];\n                                    arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                }\n                                else if (arrange[header[k].formattedText] && this.pivotValues[j - 1]) {\n                                    var prevRowCell = this.pivotValues[j - 1][header[k].colIndex];\n                                    var prevColIndex = Object.values(arrange[header[k].formattedText])[0].colIndex;\n                                    var prevColRowCell = this.pivotValues[j - 1][prevColIndex];\n                                    if (prevRowCell.formattedText !== prevColRowCell.formattedText) {\n                                        var key_1 = Object.keys(arrange);\n                                        key_1 = this.sortColumnHeaders(key_1, this.sortObject[header[k - 1].levelUniqueName] ||\n                                            this.sortObject[header[k].hierarchy]);\n                                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                        for (var keyPos = 0; keyPos < key_1.length; keyPos++) {\n                                            var length_1 = Object.keys(arrange[key_1[keyPos]]).length;\n                                            for (var cellPos = 0; cellPos < length_1; cellPos++) {\n                                                value = temporary[index].length === 0 ? 1 : 0;\n                                                temporary[index][temporary[index].length + value] =\n                                                    arrange[key_1[keyPos]][Number(Object.keys(arrange[key_1[keyPos]])[cellPos])];\n                                            }\n                                        }\n                                        arrange = {};\n                                        arrange[header[k].formattedText] = [];\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                    else {\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                }\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                                key = Object.keys(arrange);\n                                key = this.sortColumnHeaders(key, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy]);\n                                isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                for (var l = 0; l < key.length; l++) {\n                                    var length_2 = Object.keys(arrange[key[l]]).length;\n                                    for (var q = 0; q < length_2; q++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[key[l]][Number(Object.keys(arrange[key[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy != '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                            }\n                            if (header[k].level != -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy != '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length === 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value] =\n                                            arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value] = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        keys = Object.keys(arrange);\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        key = this.sortColumnHeaders(keys, order);\n                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] =\n                                    arrange[key[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    != pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] = pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::[').length <= currentTuple.measurePosition;\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers) {\n        if (headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var order = (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]);\n            if (order === 'Ascending' || order === undefined) {\n                headers === headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                    ((b.formattedText > a.formattedText) ? -1 : 0); });\n            }\n            else if (order === 'Descending') {\n                headers === headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                    ((b.formattedText < a.formattedText) ? -1 : 0); });\n            }\n            else {\n                headers;\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (keys, order) {\n        if (order === 'Ascending' || order === undefined) {\n            keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n        }\n        else if (order === 'Descending') {\n            keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n        }\n        return keys;\n    };\n    /* tslint:enable */\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (tuple.measurePosition >= (uniqueNameColl.split('::[').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                /* tslint:disable-next-line:max-line-length */\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ? this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (tupColInfo.measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        currCell.type = 'sum';\n                        /* tslint:disable-next-line:max-line-length */\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort.levelName = currCell.valueSort.levelName;\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        var levelName = 'Grand Total';\n                        if (nextRowCell && colMeasureCount > 0) {\n                            levelName = nextRowCell.memberType === 3 ? ('Grand Total.' + nextRowCell.formattedText) :\n                                nextRowCell.valueSort.levelName;\n                        }\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        currCell.valueSort.levelName = levelName;\n                        currCell.valueSort[levelName.toString()] = 1;\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort.levelName = currCell.valueSort.levelName;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 && nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = currCell.isDrilled ? 1 : (spanCollection[rowPos + 1][colPos] + 1);\n                            /* tslint:disable-next-line:max-line-length */\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && currCell.level === -1 && nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        /* tslint:disable-next-line:max-line-length */\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !nextRowCell.isDrilled) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ? spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ? spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.frameValues = function (tuples, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        var valCollection = {};\n        for (var colPos = 0; colPos < tuples.length; colPos++) {\n            valCollection[Number(tuples[colPos].getAttribute('CellOrdinal'))] = tuples[colPos];\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                    ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                        this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                        columns[0].actualText);\n                if (columns[0].type === 'header') {\n                    columns[colPos] = {\n                        axis: 'value',\n                        actualText: this.getUniqueName(measure),\n                        formattedText: '',\n                        value: 0,\n                        colIndex: colPos,\n                        rowIndex: rowPos\n                    };\n                }\n                else {\n                    var valElement = void 0;\n                    var formattedText = void 0;\n                    var value = '0';\n                    var measureName = this.getUniqueName(measure);\n                    var showTotals = true;\n                    if (this.tupRowInfo[rowOrdinal]) {\n                        showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                    }\n                    else {\n                        showTotals = this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals;\n                    }\n                    valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                    formattedText = !showTotals ? '' :\n                        ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                            valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                    value = !showTotals ? '0' :\n                        ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                            valElement.querySelector('Value').textContent : null);\n                    formattedText = showTotals && !isNullOrUndefined(value) ?\n                        this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) :\n                        formattedText;\n                    var isSum = (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                        this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                        (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                            this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                    /* tslint:disable */\n                    var isGrand = (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].measurePosition === 0 ? this.tupRowInfo[rowOrdinal].allStartPos === 1 : this.tupRowInfo[rowOrdinal].allStartPos === 0) : false) ||\n                        (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].measurePosition === 0 ? this.tupColumnInfo[colOrdinal].allStartPos === 1 : this.tupColumnInfo[colOrdinal].allStartPos === 0) : false);\n                    /* tslint:enable */\n                    columns[colPos] = {\n                        axis: 'value',\n                        actualText: measureName,\n                        formattedText: formattedText,\n                        colOrdinal: colOrdinal,\n                        rowOrdinal: rowOrdinal,\n                        columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                        rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                        value: !isNullOrUndefined(value) ? Number(value) : null,\n                        colIndex: colPos,\n                        rowIndex: rowPos,\n                        isSum: isSum,\n                        isGrandSum: isGrand\n                    };\n                }\n                this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n            }\n        }\n    };\n    /** hidden */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                if ((formatObj.format) && !(this.formatRegex.test(formatObj.format))) {\n                    var pattern = formatObj.format.match(this.customRegex);\n                    var integerPart = pattern[6];\n                    formatObj.useGrouping = integerPart.indexOf(',') !== -1;\n                }\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 1) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = vTuples.length; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    vOrdinalIndex[vOrdinalIndex.length] = Number(vTuples[j].getAttribute('CellOrdinal'));\n                }\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[index] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[orderedVTuples.length] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            /* tslint:disable-next-line:max-line-length */\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) || tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                var splitLevels = memberArray[memPos].split('~~');\n                var drillLevel = splitLevels.indexOf(memberName);\n                var cropLevels = [];\n                for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                    cropLevels.push(splitLevels[lPos]);\n                }\n                joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n            }\n            else {\n                joinArray[joinArray.length] = memberArray[memPos];\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::[')[fieldPos];\n                    drillField = drillField[0] === '[' ? drillField : ('[' + drillField);\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n        this.getAxisFields();\n        this.frameSortObject();\n        this.updateFieldlist();\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ? this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldList[fieldName].allowDragAndDrop = true;\n                this.savedFieldList[fieldName].showFilterIcon = true;\n                this.savedFieldList[fieldName].showSortIcon = true;\n                this.savedFieldList[fieldName].showEditIcon = true;\n                this.savedFieldList[fieldName].showRemoveIcon = true;\n                this.savedFieldList[fieldName].showValueTypeIcon = true;\n                this.savedFieldListData[i].sort = sortOrder;\n                this.savedFieldListData[i].allowDragAndDrop = true;\n                this.savedFieldListData[i].showFilterIcon = true;\n                this.savedFieldListData[i].showSortIcon = true;\n                this.savedFieldListData[i].showEditIcon = true;\n                this.savedFieldListData[i].showRemoveIcon = true;\n                this.savedFieldListData[i].showValueTypeIcon = true;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            /* tslint:disable:max-line-length */\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] && this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldList[fieldName].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldList[fieldName].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldList[fieldName].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldList[fieldName].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldList[fieldName].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldList[fieldName].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldListData[i].isSelected = true;\n                this.savedFieldListData[i].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldListData[i].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldListData[i].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldListData[i].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldListData[i].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldListData[i].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] && this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            /* tslint:enable:max-line-length */\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if (!isAvail || (fieldName.toLowerCase() === '[calculated members].[_0]' &&\n                    this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES'\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><Header/><Body><Discover xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    /* tslint:enable:max-line-length */\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = {\n                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n            };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName]) {\n        //     return this.dataFields[fieldName].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this), \n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from [' +\n            this.dataSourceSettings.cube + ']';\n        drillQuery = drillQuery.replace(/&/g, '&amp;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/\\&/g, '&amp;');\n        if (!isAllFilterData) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n    };\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/\\&/g, '&amp;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchSearchMembers' });\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var nodeAttr = { 'data-fieldName': fieldName };\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    var nodeSelect = (customArgs.loadLevelMembers ? this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            hierarchyElements.push({\n                pid: field.querySelector('DIMENSION_UNIQUE_NAME').textContent,\n                id: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS'\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        allowDragAndDrop: (this.dataFields[field.name] ? this.dataFields[field.name].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showSortIcon : true),\n                        showEditIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showValueTypeIcon : true),\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName)\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: (this.isMondrian ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS'\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_4 = fields; _a < fields_4.length; _a++) {\n            var field = fields_4[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    /* tslint:disable-next-line:max-line-length */\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                /* tslint:disable-next-line:max-line-length */\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false,\n                allowDragAndDrop: (this.dataFields[id] ? this.dataFields[id].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[id] ? this.dataFields[id].showFilterIcon : true),\n                showSortIcon: (this.dataFields[id] ? this.dataFields[id].showSortIcon : true),\n                showEditIcon: (this.dataFields[id] ? this.dataFields[id].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[id] ? this.dataFields[id].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[id] ? this.dataFields[id].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[\\[\\]\\&']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0 && (dimensionName !== hierarchyName || this.isMondrian)) {\n                var parentID = dimensionName + (this.isMondrian ? '~#^Dim' : '');\n                if (hierarchyFolderName !== '') {\n                    var folderName = dimensionName + (this.isMondrian ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                    var curParentElement = [];\n                    for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                        var item = dimensionElements_2[_c];\n                        if (item.tag === folderName && item.pid === parentID) {\n                            curParentElement.push(item);\n                        }\n                    }\n                    if (curParentElement.length === 0) {\n                        var fieldObj_1 = {\n                            hasChildren: true,\n                            isSelected: false,\n                            pid: dimensionName + (this.isMondrian ? '~#^Dim' : ''),\n                            id: folderName,\n                            name: hierarchyFolderName,\n                            spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                            tag: folderName,\n                            caption: hierarchyFolderName,\n                            // aggregateType: this.getAggregateType(hierarchyFolderName),\n                            type: 'string'\n                        };\n                        dimensionElements.push(fieldObj_1);\n                    }\n                    parentID = folderName;\n                }\n                var fieldObj = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                    // hasChildren: true,\n                    isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                    pid: parentID,\n                    id: hierarchyName,\n                    name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                    hasAllMember: isAllMemberAvail,\n                    allMember: allMember,\n                    tag: hierarchyName,\n                    caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    // aggregateType: this.getAggregateType(hierarchyName),\n                    type: 'string',\n                    filter: [],\n                    dateMember: [],\n                    sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                    actualFilter: [],\n                    filterMembers: [],\n                    childMembers: [],\n                    searchMembers: [],\n                    members: {},\n                    currrentMembers: {},\n                    levels: [],\n                    levelCount: 1,\n                    /* tslint:disable-next-line:max-line-length */\n                    isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                    isExcelFilter: false,\n                    allowDragAndDrop: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].allowDragAndDrop : true),\n                    showFilterIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showFilterIcon : true),\n                    showSortIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showSortIcon : true),\n                    showEditIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showEditIcon : true),\n                    showRemoveIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showRemoveIcon : true),\n                    showValueTypeIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showValueTypeIcon : true)\n                };\n                dimensionElements.push(fieldObj);\n                this.fieldList[hierarchyName] = fieldObj;\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS'\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_6 = fields; _i < fields_6.length; _i++) {\n            var field = fields_6[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES'\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS'\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_7 = fields; _a < fields_7.length; _a++) {\n            var field = fields_7[_a];\n            /* tslint:disable-next-line:max-line-length */\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString,\n                allowDragAndDrop: (this.dataFields[measureName] ? this.dataFields[measureName].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showFilterIcon : true),\n                showSortIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showSortIcon : true),\n                showEditIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc, request, customArgs) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            beforeSend: this.beforeSend.bind(this),\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                return e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.beforeSend = function (args) {\n        if (this.dataSourceSettings.authentication.userName && this.dataSourceSettings.authentication.password) {\n            /* tslint:disable */\n            args.httpRequest.setRequestHeader(\"Authorization\", \"Basic \" + btoa(this.dataSourceSettings.authentication.userName + \":\" +\n                this.dataSourceSettings.authentication.password));\n            /* tslint:enable */\n        }\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        /* tslint:disable:max-line-length */\n        if (this.isMondrian) {\n            sourceInfo = '';\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" SOAP-ENV:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><SOAP-ENV:Body><Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            xmlMsg = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> <Header></Header> <Body> <Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        /* tslint:enable:max-line-length */\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: !isNullOrUndefined(locale) ? locale.toString() : '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* tslint:disable */\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/* tslint:enable */\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options?\n     * @param  {string|HTMLElement} element?\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({ args: [this], member: 'groupingbar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalformatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberformatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        if (this.showToolbar && this.toolbar.length > 0) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldlist' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.commonModule = new Common(this);\n        }\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            /* tslint:enable */\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axes',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormatingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen,\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                groupItems.push(this.buildDefaultItems('Group'));\n                groupItems.push(this.buildDefaultItems('Ungroup'));\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.setProperties({ pivotValues: [] }, true);\n        /* tslint:disable-next-line:no-any */\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            this.request = new XMLHttpRequest();\n            this.request.open(\"GET\", this.dataSourceSettings.url, true);\n            this.request.withCredentials = false;\n            this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n            this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n            this.request.send(null);\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            /* tslint:disable-next-line:max-line-length */\n            dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n                PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            }\n            else {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            }\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            _this_1.notify(events.initialLoad, {});\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string}\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* tslint:disable */\n        this.chartSettings['tooltipRender'] = undefined;\n        /* tslint:enable */\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* tslint:disable */\n        if (isBlazor()) {\n            pivotData = persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        /* tslint:enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        this.engineModule.fieldList = null;\n                        this.showWaitingPopup();\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                                    this.engineModule.fieldList = null;\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    this.notify(events.dataReady, {});\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        /* tslint:disable-next-line:max-line-length */\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultiAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    this.chartModule.loadChart(this, this.chartSettings);\n                    this.notify(events.uiUpdate, this);\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n                        var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    if (isBlazor()) {\n                        this.refresh();\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    this.renderPivotGrid();\n                    break;\n                case 'groupingBarSettings':\n                    this.axisFieldModule.render();\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        if (this.currentView === 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart) {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && this.element.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                this.element.querySelector('#' + this.element.id + '_PivotFieldList').style.display = 'none';\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                /* tslint:disable-next-line:no-any */\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        /* tslint:disable-next-line */\n                        var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* tslint:disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* tslint:enable */\n                }\n                else {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType\n                    };\n                    /* tslint:enable:align */\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.allowServerDataBinding = false;\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            delete pivot.bulkChanges.pivotValues;\n                            pivot.allowServerDataBinding = true;\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('Excel');\n        }\n        else {\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('CSV');\n        }\n        else {\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization) {\n            this.pdfExportModule.exportToPDF();\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param type - Defines the export type.\n     * @param fileName - Defines file name of export document.\n     * @param orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param width - Defines width of the export document.\n     * @param height - Defines height of the export document.\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    if (pivot_1.enableVirtualization) {\n                        if (isBlazor()) {\n                            /* tslint:disable */\n                            var sfBlazor = 'sfBlazor';\n                            var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                            var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                            var args = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                            pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                                pivot_1.updateBlazorData(data, pivot_1);\n                                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                                pivot_1.allowServerDataBinding = false;\n                                pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                                delete pivot_1.bulkChanges.pivotValues;\n                                pivot_1.allowServerDataBinding = true;\n                                pivot_1.renderPivotGrid();\n                            });\n                            /* tslint:enable */\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                    }\n                    if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                        pivot_1.allowServerDataBinding = false;\n                        pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot_1.bulkChanges.pivotValues;\n                        pivot_1.allowServerDataBinding = true;\n                        pivot_1.renderPivotGrid();\n                    }\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: isBlazor() ? undefined : pivot,\n            cancel: false\n        };\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        if (drillInfo && drillInfo.action === 'down') {\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            var fields = drillInfo.memberName.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _i = 0, _a = this.dataSourceSettings.drilledMembers; _i < _a.length; _i++) {\n                var field = _a[_i];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n            }\n            else {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!this.dataSourceSettings.drilledMembers) {\n                    this.dataSourceSettings.drilledMembers = [drilledMember];\n                }\n                else {\n                    this.dataSourceSettings.drilledMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = this.dataSourceSettings.drilledMembers.length; i < cnt; i++) {\n                    var drillItem = this.dataSourceSettings.drilledMembers[i];\n                    var member = drillSet;\n                    if (drillItem.delimiter) {\n                        member = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                        if (drillItem.items[itemPos].indexOf(member) !== 0) {\n                            items[items.length] = drillItem.items[itemPos];\n                        }\n                    }\n                    drillItem.items = items;\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, _d = this.dataSourceSettings.drilledMembers; _c < _d.length; _c++) {\n                var fields = _d[_c];\n                if (fields.items.length > 0) {\n                    drilledMembers_1.push(fields);\n                }\n            }\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onContentReady = function () {\n        if (this.currentView !== 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            this.hideWaitingPopup();\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = (this.gridSettings.columnWidth * engine.columnCount\n                    - this.grid.columns[0].width);\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                var verOffset = (mCnt.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.scrollTop)) + 'px)';\n                var horiOffset = (mCnt.scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((mCnt.scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - mCnt.scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    /* tslint:disable-next-line */\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    templateObject.rowHeaders = pivotCell.rowHeaders;\n                    templateObject.columnHeaders = pivotCell.columnHeaders;\n                    templateObject.rowIndex = pivotCell.rowIndex;\n                    templateObject.columnIndex = pivotCell.colIndex;\n                    templateObject.isGrandTotal = pivotCell.isGrandSum;\n                    templateObject.isTotal = pivotCell.isSum;\n                    templateObject.rowSpan = pivotCell.rowSpan;\n                    templateObject.columnSpan = pivotCell.colSpan;\n                    templateObject.isDrilled = pivotCell.isDrilled;\n                    templateObject.hasChild = pivotCell.hasChild;\n                    templateObject.valueSortInfo = pivotCell.valueSort;\n                    /* tslint:disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.pivotValues && this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[cell.actualText] &&\n                    this.olapEngineModule.dataFields[cell.actualText].caption) ?\n                    this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var rowHeaders = this.getRowText(rowIndex, 0);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = ((cell.formattedText === '0' || cell.formattedText === '') ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields,\n                };\n                /* tslint:disable-next-line:max-line-length */\n                this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((engineModule.rows[i].caption) ? engineModule.rows[i].caption : engineModule.rows[i].name);\n            }\n        }\n        else {\n            /* tslint:disable:max-line-length */\n            if (engineModule.columns.length > 0) {\n                var pos = engineModule.values.length === 0 ? 0 : Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = engineModule.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((engineModule.columns[j].caption) ? engineModule.columns[j].caption : engineModule.columns[j].name);\n            }\n            /* tslint:enable:max-line-length */\n        }\n        return fields;\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                /* tslint:disable */\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                /* tslint:enable */\n                this.showWaitingPopup();\n                var pivot_2 = this;\n                //setTimeout(() => {\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.allowServerDataBinding = false;\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            delete pivot_2.bulkChanges.pivotValues;\n                            pivot_2.allowServerDataBinding = true;\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_2.bulkChanges.pivotValues;\n                    pivot_2.allowServerDataBinding = true;\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* tslint:disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* tslint:enable */\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* tslint:disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* tslint:enable */\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString());\n            var colWidth = this.renderModule.calculateColWidth(this.pivotColumns ? this.pivotColumns.length : 0);\n            for (var i = 1; i < this.pivotColumns.length; i++) {\n                this.pivotColumns[i].width = colWidth;\n            }\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < 300) {\n            height = 300;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        /* tslint:disable */\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        /* tslint:enable */\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    /* tslint:disable-next-line */\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* tslint:disable */\n        if (ele) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode == 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_1 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            /* tslint:disable */\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            /* tslint:enable */\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            /* tslint:disable:no-empty */\n            this.grid.showSpinner = function () { };\n            this.grid.hideSpinner = function () { };\n            /* tslint:enable:no-empty */\n            this.element.appendChild(createElement('div', { id: this.element.id + '_grid' }));\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo('#' + this.element.id + '_grid');\n            /* tslint:disable-next-line:no-any */\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n                _this_1.grid.element.querySelector('.e-movablecontent').style.overflowY = 'auto';\n            });\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    if (isBlazor()) {\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var sfBlazor = 'sfBlazor';\n                    var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        if (data === 0) {\n                            _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), (pivot_3.dataSourceSettings.type === 'CSV' ?\n                                _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON')));\n                            return;\n                        }\n                        else {\n                            pivot_3.updateBlazorData(data, pivot_3);\n                            PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                            pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                        }\n                    });\n                }\n                else {\n                    _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                /* tslint:disable-next-line:no-any */\n                delete _this_1.bulkChanges.pivotValues;\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = blazPivot.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = blazPivot.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /** @hidden */\n    PivotView.prototype.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    /* tslint:enable */\n    PivotView.prototype.generateData = function () {\n        if (this.displayOption.view !== 'Chart') {\n            this.renderEmptyGrid();\n        }\n        this.showWaitingPopup();\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n    };\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this;\n        if (isBlazor()) {\n            if (pivot.dataType === 'olap') {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({\n                        dataSourceSettings: {\n                            dataSource: undefined\n                        }\n                    }, true);\n                    pivot.allowServerDataBinding = true;\n                }\n            }\n        }\n        if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n            if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                if (isBlazor() && pivot.enableVirtualization) {\n                    if (!pivot.element.querySelector('.e-spinner-pane')) {\n                        this.showWaitingPopup();\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                        if (!this.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        this.engineModule.data = pivot.remoteData;\n                        this.initEngine();\n                    }\n                    else {\n                        setTimeout(pivot.getData.bind(pivot), 100);\n                    }\n                }\n            }\n            else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0)) {\n                if (pivot.dataType === 'pivot') {\n                    this.hideWaitingPopup();\n                    pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                }\n                pivot.initEngine();\n            }\n            else {\n                this.hideWaitingPopup();\n            }\n        }\n        else if (isBlazor() && pivot.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        //setTimeout(() => {\n        pivot.engineModule.data = e.result;\n        if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            pivot.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n        //});\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            // (pivotValues[i][j] as IAxisSet).enableHyperlink = false;\n                            var label = this.hyperlinkSettings.headerText;\n                            var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                i : (this.dataType === 'pivot' ?\n                                this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                            var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                            if ((pivotValues[colIndex[label.split('.').length - 1]] &&\n                                pivotValues[colIndex[label.split('.').length - 1]][j] &&\n                                pivotValues[colIndex[label.split('.').length - 1]][j].\n                                    valueSort && pivotValues[colIndex[label.split('.').length - 1]][j].\n                                valueSort[label])) {\n                                for (var _i = 0, colIndex_2 = colIndex; _i < colIndex_2.length; _i++) {\n                                    var index = colIndex_2[_i];\n                                    if (pivotValues[index][j] &&\n                                        pivotValues[index][j].axis === 'column' &&\n                                        (pivotValues[index][j].valueSort.levelName.indexOf(label) > -1)) {\n                                        pivotValues[index][j].enableHyperlink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            if (isBlazor()) {\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n            else {\n                this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n            }\n        }\n        /* tslint:disable-next-line:max-line-length */\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            if (!isBlazor()) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            }\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        /* tslint:disable-next-line:max-line-length */\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n                var fieldName = fields_1[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        /* tslint:disable-next-line:max-line-length */\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n            /* tslint:disable */\n            if (isBlazor()) {\n                this.engineModule.data = data;\n                this.allowServerDataBinding = false;\n                this.setProperties({\n                    dataSourceSettings: {\n                        rows: axisFields[0], columns: axisFields[1], values: axisFields[2], filters: axisFields[3],\n                        filterSettings: fieldSettings[0], sortSettings: fieldSettings[1], formatSettings: fieldSettings[2],\n                        drilledMembers: fieldSettings[3], groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n                    }\n                }, true);\n                this.allowServerDataBinding = true;\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function (e) {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    /* tslint:enable */\n    /* tslint:enable:max-func-body-length */\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns void\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.isAdaptive && this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.chart) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && this.element.querySelector('#' + this.element.id + '_chart')) {\n                remove(this.element.querySelector('#' + this.element.id + '_chart'));\n            }\n        }\n        if (this.grid) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && this.element.querySelector('#' + this.element.id + '_grid')) {\n                remove(this.element.querySelector('#' + this.element.id + '_grid'));\n            }\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            if (this.element.querySelector('.e-spinner-pane')) {\n                remove(this.element.querySelector('.e-spinner-pane'));\n            }\n            if (this.showFieldList && document.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                remove(document.querySelector('#' + this.element.id + '_PivotFieldList'));\n            }\n        }\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     * @returns void\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     * @returns void\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Wrapper',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('staticFieldList')\n            });\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons();\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: true,\n                enableRtl: this.parent.enableRtl,\n                change: this.onCheckChange.bind(this)\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo('#' + this.parent.element.id + 'DeferUpdateCheckBox');\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.renderMode === 'Popup' ?\n                    (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                isPrimary: true\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton1');\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.renderMode === 'Popup' ?\n                (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton2');\n        this.deferUpdateCancelButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.cancelButtonClick.bind(this) :\n            this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1', attrs: { 'type': 'button' }\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2', attrs: { 'type': 'button' }\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        this.parent.allowDeferLayoutUpdate = !this.parent.allowDeferLayoutUpdate;\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n            this.deferUpdateCancelButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        this.cancelButtonClick();\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.pivotChange = false;\n        }\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        //setTimeout(() => {\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = extend({}, parent.dataSourceSettings, null, true);\n        parent.clonedFieldList = extend({}, parent.pivotFieldList, null, true);\n        //});\n    };\n    DialogRenderer.prototype.cancelButtonClick = function () {\n        /* tslint:disable:align */\n        if (isBlazor() && !this.parent.isPopupView) {\n            /* tslint:disable-next-line:max-line-length */\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.parent.clonedDataSource.properties));\n        }\n        else {\n            this.parent.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n        }\n        /* tslint:enable:align */\n        if (this.parent.dataType === 'olap') {\n            this.parent.olapEngineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                var name_1 = _a[_i];\n                var item = this.parent.clonedFieldList[name_1];\n                this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n            }\n        }\n        else {\n            this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n        }\n        this.parent.updateDataSource(false, true);\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList')\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                close: this.removeFieldListIcon.bind(this),\n                open: this.dialogOpen.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_dialog-content'), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: false,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons();\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_title'), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    DialogRenderer.prototype.dialogOpen = function () {\n        this.adaptiveElement.refresh();\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            selected: this.tabSelect.bind(this)\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('button', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'type': 'button',\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE,\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS,\n            innerHTML: this.parent.localeObj.getConstant('addPrompt')\n        });\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function (event) {\n        if (!this.parent.isAdaptive) {\n            if (this.parent.dialogRenderer.fieldListDialog) {\n                this.parent.dialogRenderer.fieldListDialog.hide();\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            }\n        }\n        this.parent.notify(events.initCalculatedField, {});\n    };\n    DialogRenderer.prototype.showFieldListDialog = function (event) {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    DialogRenderer.prototype.onShowFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            if (this.parent.isAdaptive) {\n                this.parent.axisFieldModule.render();\n            }\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        this.parent.dialogRenderer.fieldListDialog.show();\n        this.parent.dialogRenderer.fieldListDialog.element.style.top =\n            parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n    };\n    DialogRenderer.prototype.onCloseFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.dataSourceSettings =\n                extend({}, this.parent.clonedDataSource.properties, null, true);\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            /* tslint:disable:align */\n            this.parent.pivotGridModule.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n            /* tslint:enable:align */\n            if (Object.keys(this.parent.clonedFieldList).length > 0) {\n                this.parent.dataType === 'olap' ? this.parent.olapEngineModule.fieldList =\n                    extend({}, this.parent.clonedFieldList, null, true) :\n                    this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            }\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n            this.parent.pivotGridModule.notify(events.contentReady, this);\n        }\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (this.parent.isAdaptive && this.parent.allowCalculatedField && this.parent.calculatedFieldModule) {\n            if (this.adaptiveElement && this.adaptiveElement.selectedItem === 4) {\n                if (this.adaptiveElement.element.querySelector('#' + this.parent.element.id + 'droppable')) {\n                    /* tslint:disable */\n                    this.parent.calculatedFieldModule\n                        .updateAdaptiveCalculatedField(false);\n                    /* tslint:enable */\n                }\n                else {\n                    this.parent.notify(events.initCalculatedField, { edit: false });\n                }\n            }\n        }\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     * @returns void\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('allFields')\n            });\n            var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_CLASS + '-outer-div' });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: 'e-field-header-wrapper' });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS,\n                    innerHTML: this.parent.localeObj.getConstant('centerHeader')\n                });\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = { 'None': 'sortNone', 'Ascend': 'sortAscending', 'Descend': 'sortDescending' };\n        var keys = Object.keys(options);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var option = keys_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option,\n                    'title': this.parent.localeObj.getConstant(options[option])\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS,\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            enableRtl: this.parent.enableRtl,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            allowDrag = true;\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            /* tslint:disable */\n            var field = PivotUtil.getFieldInfo(args.nodeData.id, this.parent);\n            /* tslint:enable */\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: (field.fieldItem ? field.fieldItem.allowDragAndDrop ?\n                        this.parent.localeObj.getConstant('drag') : '' : this.parent.localeObj.getConstant('drag')),\n                    'aria-disabled': 'false'\n                },\n                className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' +\n                    (field.fieldItem ? field.fieldItem.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : '')\n            });\n            if (args.node.querySelector('.e-checkbox-wrapper') &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.e-checkbox-wrapper'));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.e-checkbox-wrapper').style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: false,\n            target: this.parentElement.parentElement,\n            close: this.dialogClose.bind(this)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.dialogClose = function () {\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            nodeChecked: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        /* tslint:disable-next-line:max-line-length */\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        var _this = this;\n        if (args.event.target.classList.contains(cls.DRAG_CLASS) &&\n            !args.event.target.classList.contains(cls.DRAG_DISABLE_CLASS)) {\n            var fieldInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n            var dragEventArgs = {\n                fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n                dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n            };\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.parent.isDragging = true;\n                    addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n                    var data = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        data = _this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    else {\n                        data = _this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                    if (data && data.aggregateType === 'CalculatedField') {\n                        for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                            var axisContent = axis_1[_i];\n                            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        }\n                    }\n                    var dragItem = args.clonedNode;\n                    if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                        _this.parent.renderMode) === 'Popup') {\n                        dragItem.style.zIndex = (_this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                    }\n                }\n                else {\n                    _this.parent.isDragging = false;\n                    args.cancel = true;\n                }\n            });\n        }\n        else {\n            this.parent.isDragging = false;\n            args.cancel = true;\n        }\n    };\n    // private getFieldDragArgs(args: DragAndDropEventArgs): FieldDragStartEventArgs {\n    //     let fieldInfo: FieldItemInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n    //     let dragEventArgs: any = {\n    //         fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n    //         dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n    //     }\n    //     let treeModule: TreeViewRenderer = this;\n    //     if (isBlazor()) {\n    //         dragEventArgs = this.getFieldDragEventArgs(dragEventArgs);\n    //         dragEventArgs.then((e: any) => {\n    //             return e;\n    //         });\n    //     }\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs);\n    //     return dragEventArgs;\n    // }\n    // private getFieldDragEventArgs(dragEventArgs: FieldDragStartEventArgs): FieldDragStartEventArgs | Deferred {\n    //     let callbackPromise: Deferred = new Deferred();\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs, (observedArgs: FieldDragStartEventArgs) => {\n    //         callbackPromise.resolve(observedArgs);\n    //     });\n    //     return callbackPromise;\n    // }\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.allowDeferLayoutUpdate) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].id === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args) {\n        var _this = this;\n        var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n        if (!isNullOrUndefined(node)) {\n            var li_1 = closest(node, 'li');\n            var id_1 = li_1.getAttribute('data-uid');\n            if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n                this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            }\n            var list = this.parent.pivotFieldList;\n            var selectedNode_1 = list[id_1];\n            var fieldInfo_1 = PivotUtil.getFieldInfo(id_1, this.parent);\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            if (args.action === 'check') {\n                var eventdrop = {\n                    fieldName: id_1, dropField: fieldInfo_1.fieldItem,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    dropAxis: (selectedNode_1.type === 'number' || (selectedNode_1.type === 'CalculatedField' &&\n                        selectedNode_1.formula && selectedNode_1.formula.indexOf('Measure') > -1 &&\n                        this.parent.dataType === 'olap')) ? 'values' : 'rows',\n                    dropPosition: fieldInfo_1.position, draggedAxis: 'fieldlist', cancel: false\n                };\n                control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        var addNode = _this.parent.pivotCommon.dataSourceUpdate.getNewField(id_1, fieldInfo_1.fieldItem);\n                        _this.updateReportSettings(addNode, observedArgs);\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n            else {\n                var removeFieldArgs = {\n                    cancel: false, fieldName: id_1,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    fieldItem: fieldInfo_1.fieldItem, axis: fieldInfo_1.axis\n                };\n                control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id_1);\n                        if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateReportSettings = function (newField, dropArgs) {\n        var dropPosition = dropArgs.dropPosition;\n        var dropClass = dropArgs.dropAxis;\n        switch (dropClass) {\n            case 'filters':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.filters.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.filters.push(newField);\n                break;\n            case 'rows':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.rows.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.rows.push(newField);\n                break;\n            case 'columns':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.columns.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.columns.push(newField);\n                break;\n            case 'values':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.values.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.values.push(newField);\n                if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                    !(this.parent.olapEngineModule).isMeasureAvail) {\n                    var measureField = {\n                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined,\n                    };\n                    var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                        this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                    fieldAxis.push(measureField);\n                }\n                break;\n        }\n    };\n    TreeViewRenderer.prototype.updateCheckState = function (selectedNode) {\n        var chkState = this.fieldTable.element.querySelectorAll('.e-checkbox-wrapper');\n        var innerText = this.fieldTable.element.querySelectorAll('.e-list-text');\n        var checkClass = this.fieldTable.element.querySelectorAll('.e-frame');\n        for (var i = 0; i < chkState.length; i++) {\n            if (selectedNode.caption === innerText[i].textContent) {\n                if (chkState[i].getAttribute('aria-checked') === 'false') {\n                    chkState[i].setAttribute('aria-checked', 'false');\n                    checkClass[i].classList.add(cls.NODE_CHECK_CLASS);\n                }\n                else {\n                    chkState[i].setAttribute('aria-checked', 'true');\n                    checkClass[i].classList.remove(cls.NODE_CHECK_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeStateChange = function (id, args, selectedNode) {\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            selectedNode.isSelected = args.action === 'check';\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.updateFieldlistData(id, args.action === 'check');\n            }\n            this.updateDataSource();\n        }\n        var parent = this.parent;\n        setTimeout(function () {\n            parent.axisFieldModule.render();\n        });\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args) {\n        var _this = this;\n        var fieldList = this.parent.pivotFieldList;\n        var selectedNode = fieldList[args.data[0].id.toString()];\n        var fieldInfo = PivotUtil.getFieldInfo(selectedNode.id.toString(), this.parent);\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        if (args.action === 'check') {\n            var eventdrop = {\n                fieldName: fieldInfo.fieldName, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: 'rows', draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedNodes.push(selectedNode.id.toString());\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: fieldInfo.fieldName,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var count = _this.selectedNodes.length;\n                    while (count--) {\n                        if (_this.selectedNodes[count] === selectedNode.id.toString()) {\n                            _this.selectedNodes.splice(count, 1);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = this.parent.pivotFieldList ? Object.keys(this.parent.pivotFieldList) : [];\n            var fieldList = {};\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var key = keys_2[_i];\n                var member = this.parent.pivotFieldList[key];\n                fieldList[key] = { id: member.id, caption: member.caption, isSelected: member.isSelected };\n            }\n            if (this.parent.isAdaptive) {\n                /* tslint:disable-next-line:max-line-length */\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns, this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    fieldList[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    fieldList[item.name].isSelected = true;\n                }\n            }\n            var list = fieldList;\n            for (var _b = 0, keys_3 = keys; _b < keys_3.length; _b++) {\n                var member = keys_3[_b];\n                var obj = list[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData ? this.parent.olapEngineModule.fieldListData : [];\n        if (this.parent.isAdaptive) {\n            /* tslint:disable-next-line:max-line-length */\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                /* tslint:disable */\n                var framedSet = void 0;\n                /* tslint:enable */\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        if (target.className.indexOf('e-selected') === -1) {\n            switch (option) {\n                case 'None':\n                    this.fieldListSort = 'None';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Ascend':\n                    this.fieldListSort = 'Ascend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Descend':\n                    this.fieldListSort = 'Descend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    break;\n            }\n            this.refreshTreeView();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (this.parent.dataType === 'olap') {\n            var measure = void 0;\n            var calcMember = void 0;\n            if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                calcMember = treeData[0];\n                measure = treeData[1];\n                treeData.splice(0, 2);\n            }\n            else {\n                measure = treeData[0];\n                treeData.splice(0, 1);\n            }\n            /* tslint:disable:typedef */\n            treeData = sortOrder === 'Ascend' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 : ((b.caption > a.caption) ? -1 : 0); })) :\n                sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 : ((b.caption < a.caption) ? -1 : 0); })) :\n                    treeData;\n            /* tslint:enable:typedef */\n            if (calcMember) {\n                treeData.splice(0, 0, calcMember, measure);\n            }\n            else {\n                treeData.splice(0, 0, measure);\n            }\n        }\n        else {\n            this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function (e) {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     * @return {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, Droppable, EventHandler, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     * @returns void\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-wrapper'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant(fieldLabels[len]) },\n                innerHTML: this.parent.localeObj.getConstant(fieldLabels[len])\n            });\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS,\n                innerHTML: localePrompt\n            });\n            var droppable = new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-wrapper'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (e.type === 'mouseleave') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    /* tslint:disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n                field.push({\n                    name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis, showRemoveIcon: true, allowDragAndDrop: true\n                });\n            }\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n                    var element = _b[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        this.parent.localeObj.getConstant('filterAxisPrompt') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _c = 0, _d = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _c < _d.length; _c++) {\n                        var element = _d[_c];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name,\n                                    'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                    'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                        this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                        this.parent.pivotGridModule !== undefined &&\n                                        this.parent.pivotGridModule.enableVirtualization)))) {\n                                    this.createSortOption(buttonElement, field[i].name, field[i]);\n                                }\n                                if (axis !== 'values' && valuePos !== i) {\n                                    this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                }\n                                if (axis === 'values') {\n                                    this.getTypeStatus(field, i, buttonElement);\n                                }\n                            }\n                            if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                var calcElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                    className: cls.ICON + ' ' + cls.CALC_EDIT\n                                });\n                                if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                                    removeClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                buttonElement.appendChild(calcElement);\n                            }\n                            var removeElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                            });\n                            if (this.parent.getModuleName() === 'pivotview') {\n                                if ((this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon)) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            else {\n                                if (field[i].showRemoveIcon) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            buttonElement.appendChild(removeElement);\n                            buttonWrapper.appendChild(dropIndicatorElement);\n                            buttonWrapper.appendChild(buttonElement);\n                            buttonWrapper.appendChild(dropLastIndicatorElement);\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultiAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    value: !parent_1.chartSettings.enableMultiAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n                        var element = _f[_e];\n                        _loop_1(element);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n                        var element = _h[_g];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n                            var currentMeasure = this.parent.chartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                                var rKey = rKeys_1[_j];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                                        var cKey = cKeys_1[_k];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split('.').join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                this.columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    this.columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this.columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                this.columnFieldDropDownList.isStringTemplate = true;\n                                this.columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    /* tslint:enable */\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n            this.createSummaryType(buttonElement, field[i].name, field[i]);\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.id;\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                this.parent.pivotFieldListModule &&\n                !this.parent.pivotFieldListModule.isDestroyed)) {\n                this.parent.pivotFieldListModule.element\n                    .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.pivotFieldListModule.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n            }\n            else {\n                if (!this.parent.isAdaptive) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n            }\n        }\n        else if (this.parent.getModuleName() === 'pivotfieldlist') {\n            if (this.parent.isAdaptive) {\n                this.parent.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n                this.parent.calculatedFieldModule.buttonCall = true;\n            }\n            else {\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                if (this.parent.calculatedFieldModule) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag'),\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        pivotButton.appendChild(dragWrapper);\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter'),\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                    }\n                }\n                if (isBlazor()) {\n                    e.bindEvents(e.dragElement);\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20, } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        /* tslint:disable-next-line:max-line-length */\n        if (args.target.classList && (args.target.classList.contains(cls.GROUP_CHART_VALUE) || args.target.classList.contains(cls.GROUP_CHART_VALUE_DROPDOWN))) {\n            args.target = this.parent.element.querySelector('.' + cls.GROUP_CHART_ROW);\n        }\n        if (args.target.classList && args.element && (args.target.classList.contains(cls.GROUP_CHART_COLUMN) || args.target.classList.contains(cls.GROUP_CHART_COLUMN_DROPDOWN))) {\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            var thisObj = this;\n            //setTimeout(() => {\n            thisObj.parent.axisFieldModule.render();\n            //});\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.id : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            /* tslint:disable-next-line:max-line-length */\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n                    this.updateDataSource(true);\n                }\n                var thisObj = this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n        }\n    };\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n            var fieldName_1 = args.target.parentElement.id;\n            var $this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName_1).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                $this_1.parent.engineModule.fieldList[fieldName_1].dateMember = dateMembers;\n                $this_1.parent.engineModule.fieldList[fieldName_1].formattedMembers = formattedMembers;\n                $this_1.parent.engineModule.fieldList[fieldName_1].members = members;\n                $this_1.updateFilterEvents(args);\n            });\n        }\n        else {\n            this.updateFilterEvents(args);\n        }\n        /* tslint:enable */\n    };\n    PivotButton.prototype.updateFilterEvents = function (args) {\n        this.parent.pivotCommon.eventBase.updateFiltering(args);\n        var target = args.target;\n        this.fieldName = target.parentElement.id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this);\n            // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n            // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n            // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n            this.bindDialogEvents();\n        }\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                /* tslint:disable:max-line-length */\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n                /* tslint:enable:max-line-length */\n            },\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var _this = this;\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n            value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = dialogElement.querySelector('#' + this.parent.element.id + '_' + inputElementString);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n            remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n        }\n    };\n    PivotButton.prototype.setFocus = function () {\n        if (this.parentElement) {\n            var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (target.parentElement.getAttribute('isvalue') === 'true') {\n                    _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    if (_this.parent.dataType === 'olap') {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                else {\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                    _this.parent.axisFieldModule.render();\n                }\n                _this.updateDataSource();\n            }\n        });\n    };\n    /** @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-uid') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        /* tslint:disable:no-any */\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.id] = item.id;\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.id] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.id].isSelected = state === 'check';\n            }\n        }\n        /* tslint:enable:no-any */\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.id);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n                var item = pivotButtons_2[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n            var item = pivotButtons_3[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        /* tslint:disable */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        /* tslint:enable */\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (fields[len]) {\n                var args = {\n                    field: fields[len],\n                    axis: axis[len].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex, getInstance } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { DataSourceSettings } from '../../pivotview/model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotFieldListModel} options?\n     * @param  {string|HTMLButtonElement} element?\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.pivotChange = false;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this.isPopupView = false;\n        /** @hidden */\n        _this.enableValueSorting = false;\n        _this.remoteData = [];\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        return modules;\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            /* tslint:enable */\n            apply: 'Apply',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            summarizeValuesBy: 'Summarize values by',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            yes: 'Yes',\n            no: 'No',\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.captionData = [];\n        this.wireEvent();\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n        var localeObj = this.pivotGridModule ? this.pivotGridModule.localeObj :\n            (this.staticPivotGridModule ? this.staticPivotGridModule.localeObj : this.localeObj);\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        return customProperties;\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            this.request = new XMLHttpRequest();\n            this.request.open(\"GET\", this.dataSourceSettings.url, true);\n            this.request.withCredentials = false;\n            this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n            this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n            this.request.send(null);\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    PivotFieldList.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotFieldList.prototype.initialLoad = function () {\n        var _this = this;\n        /* tslint:disable-next-line:max-line-length */\n        this.trigger(events.load, { dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings }, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this.dataSourceSettings.dataSource;\n            }\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass);\n            }\n            _this.notify(events.initialLoad, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Binding events to the Pivot Field List element.\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    if (isBlazor()) {\n                        break;\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    break;\n                case 'dataSourceSettings':\n                    if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                        if (this.isPopupView && this.pivotGridModule &&\n                            this.pivotGridModule.showGroupingBar && this.pivotGridModule.groupingBarModule) {\n                            var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                            var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                            var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                            var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                            /* tslint:disable-next-line:max-line-length */\n                            this.pivotGridModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                            this.pivotGridModule.axisFieldModule.render();\n                        }\n                        else if (!this.isPopupView && this.staticPivotGridModule && !this.staticPivotGridModule.isDestroyed) {\n                            var pivot = this.staticPivotGridModule;\n                            if (pivot.showGroupingBar && pivot.groupingBarModule) {\n                                pivot.axisFieldModule.render();\n                            }\n                            if (pivot.showFieldList && pivot.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                pivot.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                pivot.pivotFieldListModule.axisFieldModule.render();\n                                if (pivot.pivotFieldListModule.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                                    pivot.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        this.axisFieldModule.render();\n                        if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                            this.notify(events.treeViewUpdate, {});\n                        }\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = void 0;\n                    if (isBlazor()) {\n                        pivotDataSet = _this.engineModule.data;\n                    }\n                    else {\n                        pivotDataSet = _this.dataSourceSettings.dataSource;\n                    }\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : PivotUtil.getClonedData(pivotDataSet));\n                    if (isBlazor()) {\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                        _this.setProperties({ dataSourceSettings: { dataSource: pivotDataSet } }, true);\n                    }\n                }\n                var customProperties = _this.frameCustomProperties();\n                customProperties.enableValueSorting = _this.staticPivotGridModule ?\n                    _this.staticPivotGridModule.enableValueSorting : _this.enableValueSorting;\n                _this.engineModule.renderEngine(_this.dataSourceSettings, customProperties, _this.getValueCellInfo.bind(_this));\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                _this.olapEngineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(_this.olapEngineModule.fieldListData, _this.olapEngineModule.fieldList));\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                this.dataSourceSettings.dataSource.length > 0) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                if (this.dataType === 'pivot' && this.remoteData.length > 0) {\n                    this.engineModule.data = this.remoteData;\n                    this.initEngine();\n                }\n                else {\n                    setTimeout(this.getData.bind(this), 100);\n                }\n            }\n        }\n        else if (isBlazor() && this.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Wrapper'));\n        }\n        this.renderModule.render();\n        this.fieldListSpinnerElement = this.renderMode === 'Popup' ?\n            this.dialogRenderer.fieldListDialog.element : this.element.querySelector('.e-pivotfieldlist-wrapper');\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.fieldListSpinnerElement, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement }, this.createElement);\n        }\n        var args;\n        args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: document.getElementById(this.element.id + '_Wrapper'),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        this.getFields(dataSourceSettings);\n        if (this.captionData.length > 0) {\n            var lnt = this.captionData.length;\n            var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            while (lnt--) {\n                if (this.captionData[lnt]) {\n                    for (var _i = 0, _a = this.captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        /* tslint:disable-next-line:max-line-length */\n        this.captionData = [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values, dataSourceSettings.filters];\n    };\n    /* tslint:disable */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        var _this = this;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && pivot.pivotGridModule.enableVirtualization ?\n            pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var lastSortInfo = pivot.lastSortInfo;\n        if (pivot.pivotGridModule && pivot.dataType === 'pivot') {\n            pivot.pivotGridModule.lastSortInfo = {};\n        }\n        pivot.lastSortInfo = {};\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    if (!isSorted) {\n                        customProperties.enableValueSorting = pivot.staticPivotGridModule ?\n                            pivot.staticPivotGridModule.enableValueSorting : pivot.enableValueSorting;\n                    }\n                    else {\n                        pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                        customProperties.enableValueSorting = false;\n                    }\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                        var interopArguments = {};\n                        if (isSorted) {\n                            pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            if ((isBlazor())) {\n                                interopArguments = { 'key': 'onSort', 'arg': lastSortInfo };\n                            }\n                            else {\n                                pivot.engineModule.onSort(lastSortInfo);\n                            }\n                        }\n                        if (isFiltered) {\n                            if (isBlazor()) {\n                                var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                                interopArguments = {\n                                    'key': 'onFilter',\n                                    'arg': { 'lastFilterInfo': pivot.lastFilterInfo, 'filterSettings': dataArgs }\n                                };\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (isBlazor()) {\n                                interopArguments = { 'key': 'onAggregation', 'arg': pivot.lastAggregationInfo };\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (isBlazor()) {\n                                interopArguments = {\n                                    'key': 'onCalcOperation',\n                                    'arg': {\n                                        lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                        values: pivot.dataSourceSettings.values,\n                                        calculatedFieldSettings: pivot.dataSourceSettings.calculatedFieldSettings\n                                    }\n                                };\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        if (isBlazor()) {\n                            var args_1 = window['sfBlazor'].copyWithoutCircularReferences([interopArguments['arg']], interopArguments['arg']);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", interopArguments['key'], args_1).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                    if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                                        pivot.calculatedFieldModule.endDialog();\n                                        pivot.calculatedFieldModule.isRequireUpdate = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        if (isBlazor() && pageSettings) {\n                            var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'renderEngine', { 'dataSourceSettings': dataArgs, 'customProperties': customProperties }).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                }\n                            });\n                        }\n                        else {\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        }\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed);\n                }\n                if (!(isBlazor() && pageSettings)) {\n                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                }\n            }\n            else {\n                pivot.axisFieldModule.render();\n                pivot.isRequiredUpdate = false;\n            }\n            if (!(isBlazor() && pageSettings)) {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n        });\n        //});\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            var dataSource = pivot.dataSourceSettings.dataSource;\n            if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                observedArgs.dataSourceSettings.dataSource = dataSource;\n            }\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = isBlazor() ? pivot.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = isBlazor() ? pivot.engineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = extend({}, pivot.dataSourceSettings, null, true);\n                    pivot.clonedFieldList = extend({}, pivot.pivotFieldList, null, true);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (pivot.renderMode === 'Popup' && pivot.allowDeferLayoutUpdate) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                /* tslint:disable:align */\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n                /* tslint:enable:align */\n            }\n            if (pivot.renderMode === 'Popup' && pivot.pivotGridModule &&\n                pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n    };\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n        }\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     * @method updateControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            if (isBlazor() && !this.isPopupView) {\n                PivotUtil.updateDataSourceSettings(this, PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings));\n            }\n            else {\n                this.setProperties({ dataSourceSettings: control.dataSourceSettings }, true);\n            }\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.renderMode === 'Popup') {\n                this.pivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (this.renderMode === 'Fixed' && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n                this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n            }\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     * @method refreshTargetControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            control.clonedDataSet = this.clonedDataSet;\n            if (isBlazor()) {\n                PivotUtil.updateDataSourceSettings(control, PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings));\n            }\n            else {\n                control.setProperties({ dataSourceSettings: this.dataSourceSettings }, true);\n            }\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            if (!this.pivotChange) {\n                control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            }\n            var eventArgs = {\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings),\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n            if (control.enableVirtualization && isBlazor()) {\n                control.renderPivotGrid();\n            }\n            else {\n                control.dataBind();\n            }\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n            }\n        });\n    };\n    /**\n     * Destroys the Field Table component.\n     * @method destroy\n     * @return {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.allowDeferLayoutUpdate && this.dialogRenderer &&\n            this.dialogRenderer.deferUpdateCheckBox && !this.dialogRenderer.deferUpdateCheckBox.isDestroyed) {\n            this.dialogRenderer.deferUpdateCheckBox.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        if (this.renderMode === 'Popup') {\n            if (this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.dialogRenderer.fieldListDialog.destroy();\n            }\n            if (document.getElementById(this.element.id + '_Wrapper')) {\n                remove(document.getElementById(this.element.id + '_Wrapper'));\n            }\n        }\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotFieldList.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, isBlazor } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /** Constructor for calculatedfield module */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.inputObj = null;\n        this.treeObj = null;\n        this.droppable = null;\n        this.menuObj = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.formatText = null;\n        this.formatType = null;\n        this.fieldType = null;\n        this.parentHierarchy = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n        this.confirmPopUp = null;\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedfield';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-hover.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                case 'shiftE':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node);\n                    }\n                    break;\n                case 'delete':\n                    if (node.tagName === 'LI' && !node.querySelector('.e-list-icon.e-format') && !node.querySelector('.e-list-icon').classList.contains('.e-icons') && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                        node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon'))) {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n                    }\n                    break;\n                case 'enter':\n                    var field = node.getAttribute('data-field');\n                    var type = node.getAttribute('data-type');\n                    var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n                    if (this.parent.dataType === 'pivot') {\n                        if (dropField.value === '') {\n                            if (type === CALC) {\n                                dropField.value = node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                        else if (dropField.value !== '') {\n                            if (type === CALC) {\n                                dropField.value = dropField.value + node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                    }\n                    else {\n                        if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                            this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                            field = this.parent.olapEngineModule.fieldList[field].tag;\n                        }\n                        if (dropField.value === '') {\n                            dropField.value = field;\n                        }\n                        else if (dropField.value !== '') {\n                            dropField.value = dropField.value + field;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {NodeClickEventArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = closest(e.event.target, 'li');\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED) ||\n            e.event.target.classList.contains(cls.GRID_REMOVE)) {\n            if (!this.parent.isAdaptive) {\n                this.displayMenu(node, e.node, e.event.target);\n            }\n            else if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n                if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDIT) && e.event.target.classList.contains(cls.CALC_EDIT)) {\n                    this.isEdit = true;\n                    this.currentFieldName = node.getAttribute('data-field');\n                    this.fieldText = node.getAttribute('data-caption');\n                    this.formulaText = node.getAttribute('data-formula');\n                    this.formatType = node.getAttribute('data-formatString');\n                    this.formatText = this.formatType === 'Custom' ? node.getAttribute('data-customString') : null;\n                    this.fieldType = node.getAttribute('data-membertype');\n                    this.parentHierarchy = this.fieldType === 'Dimension' ? node.getAttribute('data-hierarchy') : null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDITED) && e.event.target.classList.contains(cls.CALC_EDITED)) {\n                    this.isEdit = false;\n                    this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                    this.parentHierarchy = this.fieldType = this.formatType = null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-icons') && e.event.target.classList.contains(cls.GRID_REMOVE)) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, e.node);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {AccordionClickArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.accordionClickHandler = function (e) {\n        if (e.item && e.item.iconCss.indexOf('e-list-icon') !== -1 &&\n            closest(e.originalEvent.target, '.e-acrdn-header-icon')) {\n            var node = closest(e.originalEvent.target, '.e-acrdn-header').querySelector('.' + cls.CALCCHECK);\n            var fieldName = node.getAttribute('data-field');\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            var optionElement = closest(e.originalEvent.target, '.e-acrdn-header-icon');\n            if (optionElement.querySelector('.' + cls.CALC_EDIT) && e.originalEvent.target.classList.contains(cls.CALC_EDIT)) {\n                this.isEdit = true;\n                this.currentFieldName = this.fieldText = fieldName;\n                this.formulaText = this.parent.engineModule.fieldList[fieldName].formula;\n                this.formatText = formatObj ? formatObj.format : '';\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n            }\n            else if (optionElement.querySelector('.' + cls.CALC_EDITED) &&\n                e.originalEvent.target.classList.contains(cls.CALC_EDITED)) {\n                this.isEdit = false;\n                this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n            }\n            else if (optionElement.querySelector('.' + cls.GRID_REMOVE) &&\n                e.originalEvent.target.classList.contains(cls.GRID_REMOVE)) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionCreated = function () {\n        var allElement = this.accordion.element.querySelectorAll('.e-acrdn-item');\n        for (var i = 0; i < allElement.length; i++) {\n            if (allElement[i].querySelector('.' + cls.CALC_EDIT) || allElement[i].querySelector('.' + cls.CALC_EDITED)) {\n                var element = createElement('span', {\n                    className: 'e-list-icon ' + cls.GRID_REMOVE + ' e-icons',\n                });\n                append([element], allElement[i].querySelector('.e-acrdn-header-icon'));\n            }\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     * @param  {HTMLElement} node\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.displayMenu = function (node, treeNode, target) {\n        var edit = target ? target.classList.contains(cls.CALC_EDIT) : true;\n        var edited = target ? target.classList.contains(cls.CALC_EDITED) : true;\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'pivot' && node.querySelector('.e-list-icon.e-format') &&\n            node.querySelector('.e-list-icon.e-format').classList.contains(cls.ICON) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.GRID_REMOVE) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n            if (this.menuObj && !this.menuObj.isDestroyed) {\n                this.menuObj.destroy();\n            }\n            this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n            this.openContextMenu(node);\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDIT) &&\n            node.querySelector('.' + cls.CALC_EDIT).classList.contains('e-list-icon') && edit ||\n            (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active') && ((target && !target.classList.contains(cls.GRID_REMOVE)) || !target)))) {\n            this.isEdit = true;\n            var fieldName = node.getAttribute('data-field');\n            var caption = node.getAttribute('data-caption');\n            this.currentFieldName = fieldName;\n            this.inputObj.value = caption;\n            this.inputObj.dataBind();\n            var formatString = node.getAttribute('data-formatString');\n            var dialogElement = this.dialog.element;\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            if (this.parent.dataType === 'olap') {\n                var memberType = node.getAttribute('data-membertype');\n                var parentHierarchy = node.getAttribute('data-hierarchy');\n                var expression = node.getAttribute('data-formula');\n                var customString = node.getAttribute('data-customString');\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('caption');\n                document.querySelector('#' + this.parentID + 'droppable').value = expression;\n                memberTypeDrop.readonly = true;\n                memberTypeDrop.value = memberType;\n                memberTypeDrop.dataBind();\n                if (memberType === 'Dimension') {\n                    hierarchyDrop.value = parentHierarchy;\n                }\n                if (formatString !== '') {\n                    formatDrop.value = formatString;\n                    formatDrop.dataBind();\n                }\n                customFormat.value = customString;\n            }\n            else {\n                customFormat.value = formatString;\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clearCalculatedField'));\n                document.querySelector('#' + this.parentID + 'droppable').value = node.getAttribute('data-uid');\n            }\n            customFormat.dataBind();\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDITED) &&\n            node.querySelector('.' + cls.CALC_EDITED).classList.contains('e-list-icon') && edited ||\n            (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.inputObj.dataBind();\n            var dialogElement = this.dialog.element;\n            /* tslint:disable:max-line-length */\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            customFormat.value = '';\n            customFormat.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('fieldTitle');\n                hierarchyDrop.index = 0;\n                hierarchyDrop.dataBind();\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n            }\n            else {\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n            }\n            document.querySelector('#' + this.parentID + 'droppable').value = '';\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.GRID_REMOVE) &&\n            node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon')) && !edit && !edited) {\n            var dropField = document.querySelector('#' + this.parentID + 'droppable');\n            var field = {\n                name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n                caption: this.inputObj.value,\n                formula: dropField.value\n            };\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), field, true, treeNode);\n        }\n    };\n    CalculatedField.prototype.removeCalcField = function (node) {\n        var dataSourceSettings = this.parent.dataSourceSettings;\n        var fieldName = node.getAttribute('data-field');\n        var calcfields = dataSourceSettings.calculatedFieldSettings;\n        var engineModule;\n        if (this.parent.dataType === 'pivot') {\n            if (!this.parent.isAdaptive) {\n                this.treeObj.removeNodes([node]);\n            }\n            else {\n                var index = parseInt(node.getAttribute('id').split(this.parentID + '_')[1], 10);\n                if (typeof index === 'number') {\n                    this.accordion.removeItem(index);\n                }\n            }\n        }\n        for (var i = 0; i < calcfields.length; i++) {\n            if (calcfields[i] && calcfields[i].name === fieldName) {\n                calcfields.splice(i, 1);\n                break;\n            }\n        }\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n            var fields_1 = engineModule.fieldListData ? engineModule.fieldListData : [];\n            /* tslint:disable:no-any */\n            for (var _i = 0, _a = Object.keys(fields_1); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (fields_1[item].name === fieldName) {\n                    var index = parseInt(item, 10);\n                    if (typeof (index) === 'number') {\n                        fields_1.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            /* tslint:enable:no-any */\n            var parentID = this.treeObj.getNode(node).parentID;\n            this.treeObj.removeNodes([node]);\n            if (calcfields.length <= 0) {\n                this.treeObj.removeNodes([parentID]);\n            }\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fields) {\n            for (var i = 0; i < engineModule.fields.length; i++) {\n                if (engineModule.fields[i] === fieldName) {\n                    engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (engineModule.savedFieldList && engineModule.savedFieldList[fieldName]) {\n            delete engineModule.savedFieldList[fieldName];\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName]) {\n            delete engineModule.fieldList[fieldName];\n        }\n        var formatFields = dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatFields.length; i++) {\n            if (formatFields[i] && formatFields[i].name === fieldName) {\n                formatFields.splice(i, 1);\n                break;\n            }\n        }\n        var fields = [dataSourceSettings.values, dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.filters];\n        for (var i = 0, n = fields.length; i < n; i++) {\n            for (var j = 0, length_1 = fields[i].length; j < length_1; j++) {\n                if (fields[i][j].name === fieldName) {\n                    fields[i].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        /* tslint:enable:max-line-length */\n        if (this.isEdit && this.currentFieldName === fieldName) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n        }\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n            this.parent.updateDataSource();\n        }\n        this.removeErrorDialog();\n    };\n    /**\n     * To set position for context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.openContextMenu = function (node) {\n        var _this = this;\n        var fieldName = node.getAttribute('data-field');\n        var type = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 'string' : 'number';\n        var validSummaryTypes = (type === 'string' ? this.getValidSummaryType().slice(0, 2) : this.getValidSummaryType());\n        var eventArgs = {\n            cancel: false, fieldName: fieldName,\n            aggregateTypes: this.getMenuItems(type).slice()\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var duplicateTypes = [];\n                var items = [];\n                for (var _i = 0, _a = observedArgs.aggregateTypes; _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (validSummaryTypes.indexOf(option) > -1 && duplicateTypes.indexOf(option) === -1) {\n                        duplicateTypes.push(option);\n                        items.push({\n                            id: _this.parent.element.id + 'Calc_' + option,\n                            text: _this.parent.localeObj.getConstant(option)\n                        });\n                    }\n                }\n                _this.createMenu(items, node);\n                var pos = node.getBoundingClientRect();\n                var offset = window.scrollY || document.documentElement.scrollTop;\n                if (_this.parent.enableRtl) {\n                    _this.menuObj.open(pos.top + offset, pos.left - 100);\n                }\n                else {\n                    _this.menuObj.open(pos.top + offset, pos.left + 150);\n                }\n            }\n        });\n    };\n    /**\n     * Triggers while select menu.\n     * @param  {MenuEventArgs} menu\n     * @returns void\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split('_').pop());\n            this.curMenu.textContent = field + ' (' + menu.element.textContent + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '-1');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.createMenu = function (menuItems, node) {\n        var _this = this;\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu',\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            // beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this),\n            onClose: function () {\n                _this.treeObj.element.focus();\n                addClass([node], ['e-hover', 'e-node-focus']);\n            }\n        };\n        var contextMenu;\n        if (document.querySelector('#' + this.parentID + 'CalcContextmenu')) {\n            contextMenu = document.querySelector('#' + this.parentID + 'CalcContextmenu');\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parentID + 'CalcContextmenu'\n            });\n        }\n        this.dialog.element.appendChild(contextMenu);\n        this.menuObj = new Menu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(contextMenu);\n    };\n    /**\n     * Triggers while click OK button.\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.applyFormula = function () {\n        var _this = this;\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        var eventArgs = {\n            fieldName: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            calculatedField: this.getCalculatedFieldInfo(),\n            calculatedFieldSettings: PivotUtil.cloneCalculatedFieldSettings(this.parent.dataSourceSettings.calculatedFieldSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.calculatedFieldCreate, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var calcInfo = observedArgs.calculatedField;\n                if (!_this.isEdit) {\n                    if (currentObj.parent.dataType === 'olap') {\n                        var field = calcInfo.name;\n                        if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                            currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                            isExist = true;\n                        }\n                    }\n                    else {\n                        for (var _i = 0, _a = Object.keys(currentObj.parent.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            if (calcInfo.name && calcInfo.name === key &&\n                                currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                                isExist = true;\n                            }\n                        }\n                    }\n                }\n                if (isExist) {\n                    currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n                    return;\n                }\n                _this.existingReport = extend({}, _this.parent.dataSourceSettings, null, true);\n                var report = _this.parent.dataSourceSettings;\n                if (!isNullOrUndefined(calcInfo.name) && calcInfo.name !== '' &&\n                    !isNullOrUndefined(calcInfo.caption) && calcInfo.caption !== '' && calcInfo.formula && calcInfo.formula !== '') {\n                    var field = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        field = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula,\n                            formatString: calcInfo.formatString\n                        };\n                        if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                            field.hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                        }\n                        _this.isFieldExist = false;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name) {\n                                    _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name && _this.isEdit) {\n                                    report.calculatedFieldSettings[i].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                                    _this.parent.olapEngineModule.fieldList[field.name].caption = calcInfo.caption;\n                                    report.calculatedFieldSettings[i].formatString = field.formatString;\n                                    report.calculatedFieldSettings[i].formula = field.formula;\n                                    field = report.calculatedFieldSettings[i];\n                                    _this.isFieldExist = true;\n                                    break;\n                                }\n                            }\n                            var axisFields = [report.rows, report.columns, report.values, report.filters];\n                            var isFieldExist = false;\n                            for (var _b = 0, axisFields_1 = axisFields; _b < axisFields_1.length; _b++) {\n                                var fields = axisFields_1[_b];\n                                for (var _c = 0, fields_2 = fields; _c < fields_2.length; _c++) {\n                                    var item = fields_2[_c];\n                                    if (item.isCalculatedField && field.name !== null &&\n                                        item.name === field.name && _this.isEdit) {\n                                        item.caption = calcInfo.caption;\n                                        _this.isFieldExist = true;\n                                        isFieldExist = true;\n                                        break;\n                                    }\n                                }\n                                if (isFieldExist) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (!_this.isFieldExist) {\n                            report.calculatedFieldSettings.push(field);\n                        }\n                        _this.parent.lastCalcFieldInfo = field;\n                    }\n                    else {\n                        field = {\n                            name: calcInfo.name,\n                            caption: calcInfo.caption,\n                            type: 'CalculatedField'\n                        };\n                        var cField = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula\n                        };\n                        if (!isNullOrUndefined(calcInfo.formatString)) {\n                            cField.formatString = calcInfo.formatString;\n                        }\n                        _this.isFieldExist = true;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                            return;\n                                        }\n                                    }\n                                    _this.isFieldExist = false;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && field.name !== null &&\n                                    report.values[i].name === field.name && _this.isEdit) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            report.values[i].caption = calcInfo.caption;\n                                            _this.currentFormula = report.calculatedFieldSettings[j].formula;\n                                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                                            _this.parent.engineModule.fieldList[field.name].caption = calcInfo.caption;\n                                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                            _this.isFieldExist = false;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (_this.isFieldExist) {\n                            report.values.push(field);\n                            report.calculatedFieldSettings.push(cField);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                        }\n                        _this.parent.lastCalcFieldInfo = cField;\n                    }\n                    _this.addFormula(report, field.name);\n                }\n                else {\n                    if (isNullOrUndefined(calcInfo.name) || calcInfo.name === '' ||\n                        isNullOrUndefined(calcInfo.caption) || calcInfo.caption === '') {\n                        _this.inputObj.value = '';\n                        addClass([document.getElementById(_this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                        document.getElementById(_this.parentID + 'ddlelement').focus();\n                    }\n                    else {\n                        _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormula'));\n                    }\n                }\n            }\n            else {\n                _this.endDialog();\n                _this.parent.lastCalcFieldInfo = {};\n                _this.isFormula = false;\n            }\n        });\n    };\n    /* tslint:disable:max-line-length */\n    CalculatedField.prototype.getCalculatedFieldInfo = function () {\n        var field;\n        var dropField = document.querySelector('#' + this.parentID + 'droppable');\n        var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.adaptiveElement.element : this.dialog.element;\n        var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n        field = {\n            name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            caption: this.inputObj.value,\n            formula: dropField.value\n        };\n        if (this.parent.dataType === 'olap') {\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            field.formatString = (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value);\n            if (memberTypeDrop.value === 'Dimension') {\n                field.hierarchyUniqueName = hierarchyDrop.value;\n            }\n        }\n        else {\n            field.formatString = customFormat.value;\n        }\n        return field;\n    };\n    /* tslint:enable:max-line-length */\n    CalculatedField.prototype.updateFormatSettings = function (report, fieldName, formatString) {\n        var newFormat = { name: fieldName, format: formatString, useGrouping: true };\n        var isFormatExist = false;\n        for (var i = 0; i < report.formatSettings.length; i++) {\n            if (report.formatSettings[i].name === fieldName) {\n                if (formatString === 'undefined' || formatString === undefined || formatString === '') {\n                    report.formatSettings.splice(i, 1);\n                    isFormatExist = true;\n                    break;\n                }\n                else {\n                    var formatObj = report.formatSettings[i].properties ?\n                        report.formatSettings[i].properties : report.formatSettings[i];\n                    formatObj.format = formatString;\n                    report.formatSettings.splice(i, 1, formatObj);\n                    isFormatExist = true;\n                    break;\n                }\n            }\n        }\n        if (!isFormatExist && formatString !== '') {\n            report.formatSettings.push(newFormat);\n        }\n    };\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        if (isBlazor()) {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(report));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: report }, true);\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            this.parent.updateDataSource(false);\n            var pivot = this.parent.getModuleName() === 'pivotfieldlist' ?\n                this.parent.pivotGridModule : this.parent;\n            if (!(isBlazor() && pivot && pivot.enableVirtualization)) {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode === 'Fixed' && this.parent.allowDeferLayoutUpdate) {\n                this.parent.pivotChange = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        if (this.dialog) {\n            this.dialog.close();\n        }\n        else {\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n            /* tslint:disable:max-line-length */\n            var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.parentElement : this.dialog.element;\n            this.parent.dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable').value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'Custom_Format_Element').value = '';\n            if (this.parent.dataType === 'olap') {\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n                hierarchyDrop.index = 0;\n                hierarchyDrop.enabled = false;\n                hierarchyDrop.dataBind();\n                customFormat.enabled = false;\n                customFormat.dataBind();\n            }\n            /* tslint:enable:max-line-length */\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        if (isBlazor()) {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.existingReport));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        }\n        if (this.isEdit) {\n            var calcFields = this.parent.dataSourceSettings.calculatedFieldSettings;\n            for (var i = 0; calcFields && i < calcFields.length; i++) {\n                if (calcFields[i].name === this.field) {\n                    calcFields[i].formula = this.currentFormula;\n                    break;\n                }\n            }\n        }\n        else if (this.parent.engineModule.fields) {\n            for (var i = 0; i < this.parent.engineModule.fields.length; i++) {\n                if (this.parent.engineModule.fields[i] === this.field) {\n                    this.parent.engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     * @param  {PivotGrid|PivotFieldList} parent\n     * @returns Object\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            fields = PivotUtil.getClonedData(parent.olapEngineModule.fieldListData ? parent.olapEngineModule.fieldListData : []);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-calcMemberGroupCDB') > -1)) {\n                    item.expanded = this.isEdit;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = (parent.engineModule.fieldList ? Object.keys(parent.engineModule.fieldList) : []); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var type = null;\n                var typeVal = null;\n                if ((parent.engineModule.fieldList[key].type !== 'number' || parent.engineModule.fieldList[key].type === 'include' ||\n                    parent.engineModule.fieldList[key].type === 'exclude') &&\n                    (parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                    typeVal = COUNT;\n                }\n                else {\n                    typeVal = parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                        (parent.engineModule.fieldList[key].aggregateType) : SUM;\n                }\n                type = this.parent.localeObj.getConstant(typeVal);\n                fields.push({\n                    index: parent.engineModule.fieldList[key].index,\n                    name: parent.engineModule.fieldList[key].caption + ' (' + type + ')',\n                    type: typeVal,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: parent.engineModule.fieldList[key].formula,\n                    field: key,\n                    caption: parent.engineModule.fieldList[key].caption ? parent.engineModule.fieldList[key].caption : key\n                });\n            }\n        }\n        return fields;\n    };\n    /**\n     * Triggers before menu opens.\n     * @param  {BeforeOpenCloseMenuEventArgs} args\n     * @returns void\n     */\n    /**\n     * Trigger while drop node in formula field.\n     * @param  {DragAndDropEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     * @returns void\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (document.querySelector('#' + this.parentID + 'calculateddialog') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'calculateddialog'));\n            while (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n                remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n            }\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        }));\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn',\n                    content: this.parent.localeObj.getConstant('clear'),\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        this.dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (_this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement')) {\n                    _this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement').focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: false,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'calculateddialog');\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        this.dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function (args) {\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('createCalculatedField');\n        this.dialog.element.querySelector('.e-dlg-header').\n            setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function (args) {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.treeObj.destroy();\n        this.dialog.destroy();\n        this.newFields = null;\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n        }\n        remove(document.getElementById(this.parentID + 'calculateddialog'));\n        if (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n            remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n        }\n        var timeOut = ((this.parent.getModuleName() === 'pivotview') ||\n            ((this.parent.getModuleName() === 'pivotfieldlist') &&\n                this.parent.renderMode === 'Fixed')) ? 0 : 500;\n        if (this.buttonCall) {\n            this.buttonCall = false;\n            setTimeout(this.setFocus.bind(this), timeOut);\n        }\n    };\n    CalculatedField.prototype.setFocus = function () {\n        var parentElement;\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.element) {\n            parentElement = this.parent.element;\n        }\n        else if (document.getElementById(this.parent.element.id + '_Wrapper')) {\n            parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        }\n        if (parentElement) {\n            var pivotButtons = [].slice.call(parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.currentFieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * To render dialog elements.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var olapCalcDiv = createElement('div', { id: this.parentID + 'Olap_Calc_Div', className: 'e-olap-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn', innerHTML: this.parent.localeObj.getConstant('add'),\n                className: cls.CALCADDBTN, attrs: { 'type': 'button' }\n            });\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn', innerHTML: this.parent.localeObj.getConstant('cancel'),\n                className: cls.CALCCANCELBTN, attrs: { 'type': 'button' }\n            });\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle',\n                    innerHTML: this.parent.localeObj.getConstant('fieldTitle')\n                });\n                olapCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'outerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(inputDiv) : outerDiv.appendChild(inputDiv));\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                        this.parent.localeObj.getConstant('formulaField'))\n                });\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-wrapper' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        width: 220\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            treeOuterDiv.appendChild(createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW }));\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapFieldTreeDiv.appendChild(wrapDiv) : outerDiv.appendChild(wrapDiv));\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                        this.parent.localeObj.getConstant('formula'))\n                });\n                (this.parent.dataType === 'olap' ? olapCalcDiv.appendChild(formulaTitle) : outerDiv.appendChild(formulaTitle));\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA,\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(dropDiv) : outerDiv.appendChild(dropDiv));\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn', innerHTML: this.parent.localeObj.getConstant('apply'),\n                    className: cls.CALCOKBTN, attrs: { 'type': 'button' }\n                });\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('memberType')\n                    });\n                    olapCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(memberTypeDrop) : olapCalcDiv.appendChild(memberTypeDrop));\n                if (!this.parent.isAdaptive) {\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('selectedHierarchy')\n                    });\n                    olapCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', { id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(hierarchyDrop) : olapCalcDiv.appendChild(hierarchyDrop));\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    olapCalcDiv.appendChild(formatTitle);\n                }\n                var formatDrop = createElement('div', { id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(formatDrop) : olapCalcDiv.appendChild(formatDrop));\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.OLAP_CALC_CUSTOM_FORMAT_INPUTDIV });\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                olapCalcDiv.appendChild(customFormatDiv);\n                (this.parent.isAdaptive ? outerDiv.appendChild(customFormatDiv) : olapCalcDiv.appendChild(customFormatDiv));\n                if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                    var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                    outerDiv.appendChild(okBtn);\n                }\n                else {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                    outerDiv.appendChild(olapCalcDiv);\n                }\n            }\n            else {\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.CALC_CUSTOM_FORMAT_INPUTDIV });\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    customFormatDiv.appendChild(formatTitle);\n                }\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                (this.parent.isAdaptive ? outerDiv.insertBefore(customFormatDiv, outerDiv.querySelector('#' + this.parentID + 'buttonDiv')) : outerDiv.appendChild(customFormatDiv));\n            }\n        }\n        return outerDiv;\n    };\n    /**\n     * To create calculated field adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function (isEdit) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement;\n        if (isEdit) {\n            if (dialogElement.element.querySelector('#' + this.parentID + 'droppable')) {\n                this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value;\n                this.fieldText = this.inputObj.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n                var memberTypeDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                this.fieldType = memberTypeDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n                var hierarchyDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                this.parentHierarchy = this.fieldType === 'Dimension' ? hierarchyDrop.value : null;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n                var formatDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                this.formatType = formatDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n                var customFormat = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                this.formatText = this.parent.dataType === 'olap' ? this.formatType === 'Custom' ? customFormat.value : null : customFormat.value;\n            }\n        }\n        else {\n            this.currentFieldName = this.formulaText = this.fieldText = this.formatText = null;\n            this.fieldType = this.formatType = this.parentHierarchy = null;\n        }\n        this.renderMobileLayout(dialogElement);\n    };\n    /**\n     * To update calculated field info in adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.updateAdaptiveCalculatedField = function (isEdit, fieldName) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement.element;\n        this.isEdit = isEdit;\n        var calcInfo = (isEdit ? (this.parent.dataType === 'pivot' ?\n            this.parent.engineModule.fieldList[fieldName] : this.parent.olapEngineModule.fieldList[fieldName]) :\n            {\n                id: null, caption: null, formula: null, fieldType: 'Measure',\n                formatString: (this.parent.dataType === 'pivot' ? null : 'Standard'), parentHierarchy: null\n            });\n        this.currentFieldName = calcInfo.id;\n        if (dialogElement.querySelector('#' + this.parentID + 'droppable')) {\n            this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value = calcInfo.formula;\n            this.fieldText = this.inputObj.value = calcInfo.caption;\n            this.inputObj.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            this.fieldType = memberTypeDrop.value = calcInfo.fieldType;\n            memberTypeDrop.readonly = isEdit ? true : false;\n            memberTypeDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            if (this.fieldType === 'Dimension') {\n                this.parentHierarchy = hierarchyDrop.value = calcInfo.parentHierarchy;\n            }\n            else {\n                this.parentHierarchy = null;\n                hierarchyDrop.index = 0;\n            }\n            hierarchyDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n            var formatStringData = ['Standard', 'Currency', 'Percent'];\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            this.formatType = formatDrop.value = (formatStringData.indexOf(calcInfo.formatString) > -1 ? calcInfo.formatString : 'Custom');\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            if (this.parent.dataType === 'pivot') {\n                this.formatText = customFormat.value = formatObj ? formatObj.format : null;\n            }\n            else {\n                this.formatText = customFormat.value = (this.formatType === 'Custom' ? calcInfo.formatString : null);\n            }\n            customFormat.dataBind();\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createOlapDropElements = function () {\n        var _this = this;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : this.dialog.element);\n        var mData = [];\n        var fData = [];\n        var fieldData = [];\n        var memberTypeData = ['Measure', 'Dimension'];\n        var formatStringData = ['Standard', 'Currency', 'Percent', 'Custom'];\n        for (var _i = 0, memberTypeData_1 = memberTypeData; _i < memberTypeData_1.length; _i++) {\n            var type = memberTypeData_1[_i];\n            mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n        }\n        for (var _a = 0, formatStringData_1 = formatStringData; _a < formatStringData_1.length; _a++) {\n            var format = formatStringData_1[_a];\n            fData.push({ value: format, text: this.parent.localeObj.getConstant(format) });\n        }\n        var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        for (var _b = 0, _c = fields; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (item.spriteCssClass &&\n                (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                    item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                fieldData.push({ value: item.id, text: item.caption });\n            }\n        }\n        var memberTypeObj = new DropDownList({\n            dataSource: mData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.fieldType !== null ? this.fieldType : mData[0].value,\n            readonly: this.isEdit,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                hierarchyListObj.enabled = args.value === 'Dimension' ? true : false;\n                _this.fieldType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                hierarchyListObj.dataBind();\n            }\n        });\n        memberTypeObj.isStringTemplate = true;\n        memberTypeObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'));\n        var hierarchyListObj = new DropDownList({\n            dataSource: fieldData, enableRtl: this.parent.enableRtl,\n            allowFiltering: true,\n            enabled: memberTypeObj.value === 'Dimension' ? true : false,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n            fields: { value: 'value', text: 'text' },\n            value: this.parentHierarchy !== null && memberTypeObj.value === 'Dimension' ?\n                this.parentHierarchy : fieldData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                _this.parentHierarchy = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        hierarchyListObj.isStringTemplate = true;\n        hierarchyListObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'));\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.formatType !== null ? this.formatType : fData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                _this.formatType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Format_Div'));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            value: this.formatText !== null && formatStringObj.value === 'Custom' ? this.formatText : null,\n            enabled: formatStringObj.value === 'Custom' ? true : false,\n            change: function (args) {\n                _this.formatText = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                /* tslint:disable-next-line:max-line-length */\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None'\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                keyPress: function (args) {\n                    if (args.event.keyCode === 39) {\n                        args.cancel = true;\n                    }\n                },\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parentID + 'tree');\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-dimensionCDB-icon,.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            dragItem.style.zIndex = (this.dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     * @param  {DrawNodeEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatStringData = ['Standard', 'Currency', 'Percent'];\n                var formatString = void 0;\n                formatString = (field.formatString ? formatStringData.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : '');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customString', (formatString === 'Custom' ? field.formatString : ''));\n                var removeElement = createElement('span', {\n                    className: cls.GRID_REMOVE + ' e-icons e-list-icon'\n                });\n                liTextElement.classList.add('e-calcfieldmember');\n                if (this.parent.isAdaptive) {\n                    var editElement = createElement('span', {\n                        className: 'e-list-edit-icon' + (this.isEdit && this.currentFieldName === field.id ?\n                            ' e-edited ' : ' e-edit ') + cls.ICON\n                    });\n                    var editWrapper = createElement('div', { className: 'e-list-header-icon' });\n                    editWrapper.appendChild(editElement);\n                    editWrapper.appendChild(removeElement);\n                    liTextElement.appendChild(editWrapper);\n                }\n                else {\n                    liTextElement.appendChild(removeElement);\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var formatObj = PivotUtil.getFieldByName(field, this.parent.dataSourceSettings.formatSettings);\n            args.node.setAttribute('data-formatString', formatObj ? formatObj.format : '');\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            var spaceElement = createElement('div', {\n                className: ' e-iconspace'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            /* tslint:disable-next-line:max-line-length */\n            append([spaceElement, args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.getMenuItems(this.parent.engineModule.fieldList[field].type).length <= 0) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('remove'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.GRID_REMOVE);\n                addClass([args.node.querySelector('.' + 'e-iconspace')], [cls.CALC_EDIT, cls.ICON, 'e-list-icon']);\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('aria-disabled', 'false');\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('tabindex', '-1');\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n                removeClass([args.node.querySelector('.e-iconspace')], 'e-iconspace');\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     * @param  {string} key\n     * @returns HTMLElement\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n        var type = this.getMenuItems(this.parent.engineModule.fieldList[key].type);\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + key + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key, 'data-value': type[i] },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    CalculatedField.prototype.getMenuItems = function (fieldType, summaryType) {\n        var menuItems = !isNullOrUndefined(summaryType) ? summaryType : this.parent.aggregateTypes;\n        var type = [];\n        var menuTypes = this.getValidSummaryType();\n        for (var i = 0; i < menuItems.length; i++) {\n            if ((menuTypes.indexOf(menuItems[i]) > -1) && (type.indexOf(menuItems[i]) < 0)) {\n                if (((menuItems[i] === COUNT || menuItems[i] === DISTINCTCOUNT) && fieldType !== 'number')\n                    || (fieldType === 'number')) {\n                    type.push(menuItems[i]);\n                }\n            }\n        }\n        return type;\n    };\n    CalculatedField.prototype.getValidSummaryType = function () {\n        return [COUNT, DISTINCTCOUNT, SUM, AVG,\n            MIN, MAX, PRODUCT, STDEV, STDEVP,\n            VAR, VARP];\n    };\n    /**\n     * To get Accordion Data.\n     * @param  {PivotView | PivotFieldList} parent\n     * @returns AccordionItemModel\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var data = [];\n        var keys = Object.keys(parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            data.push({\n                header: '<input id=' + this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=' + this.parent.engineModule.fieldList[key].caption + ' data-type=' +\n                    this.parent.engineModule.fieldList[key].type + '/>',\n                content: (this.parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    (this.getMenuItems(this.parent.engineModule.fieldList[key].type).length < 1)) ? '' :\n                    this.createTypeContainer(key).outerHTML,\n                iconCss: this.parent.engineModule.fieldList[key].aggregateType === CALC ? 'e-list-icon' + ' ' +\n                    (this.isEdit && this.currentFieldName === key ? 'e-edited' : 'e-edit') : ''\n            });\n        }\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     * @param  {Tab} tabObj\n     * @returns void\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        var _this = this;\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        if (this.parent.dataType === 'olap' && this.parent.isAdaptive && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null) {\n            this.createOlapDropElements();\n        }\n        var cancelBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo('#' + this.parentID + 'cancelBtn');\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({ cssClass: cls.FLAT + ' ' + cls.OUTLINE_CLASS, isPrimary: true });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo('#' + this.parentID + 'okBtn');\n            this.inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName'),\n                change: function (args) {\n                    _this.fieldText = args.value;\n                    _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                }\n            });\n            this.inputObj.isStringTemplate = true;\n            this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n            if (this.parent.dataType === 'pivot') {\n                var formatInputObj = new MaskedTextBox({\n                    placeholder: this.parent.localeObj.getConstant('numberFormatString'),\n                    change: function (args) {\n                        _this.formatText = args.value;\n                        _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                    }\n                });\n                formatInputObj.isStringTemplate = true;\n                formatInputObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n                if (this.formatText !== null && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT) !== null) {\n                    this.parent.\n                        /* tslint:disable-next-line:max-line-length */\n                        dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT).value = this.formatText;\n                    formatInputObj.value = this.formatText;\n                }\n            }\n            if (this.formulaText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable') !== null) {\n                var drop = this.parent.\n                    dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable');\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                this.inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo('#' + this.parentID + 'addBtn');\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    /* tslint:disable-next-line:max-line-length */\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    nodeClicked: this.fieldClickHandler.bind(this),\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this),\n                    nodeSelected: function (args) {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo('#' + this.parentID + 'accordDiv');\n            }\n            else {\n                this.accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    expanding: this.accordionExpand.bind(this),\n                    clicked: this.accordionClickHandler.bind(this),\n                    created: this.accordionCreated.bind(this)\n                });\n                this.accordion.isStringTemplate = true;\n                this.accordion.appendTo('#' + this.parentID + 'accordDiv');\n                this.updateType();\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            var keys = Object.keys(this.parent.engineModule.fieldList);\n            for (var index = 0, i = keys.length; index < i; index++) {\n                var key = keys[index];\n                var type = this.parent.engineModule.fieldList[key].type !== 'number' ? [COUNT, DISTINCTCOUNT] :\n                    [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton = void 0;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i_1 = 0; i_1 < type.length; i_1++) {\n                        radiobutton = new RadioButton({\n                            label: this.parent.localeObj.getConstant(type[i_1]),\n                            name: AGRTYPE + key,\n                            checked: args.element.querySelector('[data-type').getAttribute('data-type') === type[i_1],\n                            change: this.onChange.bind(this),\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo('#' + this.parentID + 'radio' + key + type[i_1]);\n                    }\n                }\n            }\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.parentElement.querySelector('.e-label')\n            .innerText;\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', args.event.target.getAttribute('data-value'));\n    };\n    CalculatedField.prototype.updateType = function () {\n        var keys = Object.keys(this.parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            var type = null;\n            if ((this.parent.engineModule.fieldList[key].type !== 'number' ||\n                this.parent.engineModule.fieldList[key].type === 'include' ||\n                this.parent.engineModule.fieldList[key].type === 'exclude') &&\n                (this.parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                type = COUNT;\n            }\n            else {\n                type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                    this.parent.engineModule.fieldList[key].aggregateType : SUM;\n            }\n            var checkbox = new CheckBox({\n                label: this.parent.engineModule.fieldList[key].caption + ' (' + this.parent.localeObj.getConstant(type) + ')'\n            });\n            checkbox.isStringTemplate = true;\n            checkbox.appendTo('#' + this.parentID + '_' + index);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-field', key);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-type', type);\n        }\n    };\n    /**\n     * Trigger while click cancel button.\n     * @returns void\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     * @returns void\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function (args) {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout(args && args.edit !== undefined ? args.edit : true);\n            this.isEdit = (args && args.edit !== undefined ? args.edit : this.isEdit);\n        }\n        else if (!this.parent.isAdaptive) {\n            this.isEdit = (args && args.edit !== undefined ? args.edit : false);\n            this.renderDialogLayout();\n            if (args && args.edit) {\n                var target = this.treeObj.element.querySelector('li[data-field=\"' + args.fieldName + '\"]');\n                if (target) {\n                    addClass([target], ['e-active', 'e-node-focus']);\n                    target.setAttribute('aria-selected', 'true');\n                    target.id = this.treeObj.element.id + '_active';\n                    if (this.parent.dataType === 'pivot') {\n                        /* tslint:disable-next-line */\n                        var e = { event: { target: target.querySelector('.e-list-icon.e-edit.e-icons') } };\n                        this.fieldClickHandler(e);\n                    }\n                    else {\n                        this.displayMenu(target);\n                    }\n                }\n            }\n            this.dialog.element.style.top = parseInt(this.dialog.element.style.top, 10) < 0 ? '0px' : this.dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        this.dialog.content = this.renderDialogElements();\n        this.dialog.refresh();\n        this.inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName')\n        });\n        this.inputObj.isStringTemplate = true;\n        this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n        if (this.parent.dataType === 'pivot') {\n            var customerFormatObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('numberFormatString')\n            });\n            customerFormatObj.isStringTemplate = true;\n            customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n        }\n        if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        this.createTreeView();\n        this.droppable = new Droppable(this.dialog.element.querySelector('#' + this.parentID + 'droppable'));\n        this.keyboardEvents = new KeyboardEvents(this.parent.calculatedFieldModule.dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter', shiftE: 'shift+E', delete: 'delete' },\n            eventName: 'keydown'\n        });\n    };\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createConfirmDialog\n     * @return {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createConfirmDialog = function (title, description, calcInfo, isRemove, node) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        /* tslint:disable:max-line-length */\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: isRemove ? this.removeCalcField.bind(this, node) : this.replaceFormula.bind(this, calcInfo),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + ' ' + cls.FLAT_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('yes') : this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.removeErrorDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('no') : this.parent.localeObj.getConstant('cancel'), isPrimary: true\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this),\n        });\n        /* tslint:enable:max-line-length */\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        // this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    CalculatedField.prototype.replaceFormula = function (calcInfo) {\n        var report = this.parent.dataSourceSettings;\n        if (this.parent.dataType === 'olap') {\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                    if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                    }\n                    report.calculatedFieldSettings[j].formatString = calcInfo.formatString;\n                    report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === calcInfo.name) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                            this.updateFormatSettings(report, calcInfo.name, calcInfo.formatString);\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, calcInfo.name);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        if (document.getElementById(this.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parentID + '_ErrorDialog').parentElement);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /** Constructor for Field List module */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldlist';\n    };\n    FieldList.prototype.initiateModule = function () {\n        this.element = createElement('div', {\n            id: this.parent.element.id + '_PivotFieldList',\n            styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                ';display:none'\n        });\n        this.parent.element.parentElement.setAttribute('id', 'ContainerWrapper');\n        this.parent.element.parentElement.appendChild(this.element);\n        this.parent.element.parentElement.appendChild(this.parent.element);\n        this.parent.pivotFieldListModule = new PivotFieldList({\n            dataSourceSettings: {\n                providerType: this.parent.dataSourceSettings.providerType,\n                rows: [],\n                columns: [],\n                values: [],\n                filters: []\n            },\n            spinnerTemplate: this.parent.spinnerTemplate,\n            allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n            renderMode: 'Popup',\n            allowCalculatedField: this.parent.allowCalculatedField,\n            showValuesButton: this.parent.showValuesButton,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            target: this.parent.element.parentElement,\n            aggregateTypes: this.parent.aggregateTypes,\n            maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n            aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n        });\n        this.parent.pivotFieldListModule.isPopupView = true;\n        this.parent.pivotFieldListModule.pivotGridModule = this.parent;\n        this.parent.pivotFieldListModule.appendTo('#' + this.element.id);\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.element) {\n            this.element.style.display = 'block';\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else if (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)))) {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth && (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS))))) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateModule,\n            update: this.updateControl\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.update, this);\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.update);\n    };\n    /**\n     * To destroy the Field List\n     * @return {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule) {\n            this.parent.pivotFieldListModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import { PivotButton } from '../actions/pivot-button';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, prepend } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the grouping bar pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        /* tslint:disable:no-any */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        this.createPivotButtons();\n        var pivotButtons = [];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!element.classList.contains(cls.GROUP_CHART_ROW)) {\n                pivotButtons = pivotButtons.concat([].slice.call(element.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n            }\n        }\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            var indentDiv = createElement('span', {\n                className: 'e-indent-div',\n                styles: 'width:' + j * indentWidth + 'px'\n            });\n            prepend([indentDiv], pivotButtons[j]);\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.'\n            + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if ((this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) ||\n                (this.parent.dataSourceSettings.columns.length > 0 ? !element.classList.contains(cls.GROUP_CHART_COLUMN) : true)) {\n                element.innerHTML = '';\n            }\n        }\n        /* tslint:enable:no-any */\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        var count = axis.length;\n        for (var i = 0, lnt = fields.length; i < lnt; i++) {\n            if (fields[i]) {\n                var args = {\n                    field: fields[i],\n                    axis: axis[i].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingbar';\n    };\n    /** @hidden */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(this.leftAxisPanel);\n        this.groupingTable.appendChild(this.rightAxisPanel);\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    /* tslint:disable-next-line:no-any */\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                /* tslint:disable:no-any */\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                /* tslint:enable:no-any */\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                if (columns[cCnt].width != \"auto\") {\n                    columns[cCnt].width = width;\n                }\n                else {\n                    columns[cCnt].minWidth = width;\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.fieldsDropDown = [];\n        this.conditionsDropDown = [];\n        this.fontNameDropDown = [];\n        this.fontSizeDropDown = [];\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalformatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n        }));\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON,\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition'),\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_APPLY_BUTTON,\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_CANCEL_BUTTON,\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.isAdaptive) {\n            this.dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, header: this.parent.localeObj.getConstant('conditionalFormating'), target: document.body\n            });\n        }\n        else {\n            this.dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, isModal: false, closeOnEscape: true, enableRtl: this.parent.enableRtl,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormating'), target: this.parent.element\n            });\n        }\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'conditionalformatting');\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function (args) {\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).\n            setAttribute('title', this.parent.localeObj.getConstant('conditionalFormating'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var _this = this;\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            _this.destroyColorPickers();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            this.parent.renderPivotGrid();\n            this.dialog.close();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        this.dialog.close();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ||\n                document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value === '') {\n                document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ?\n                    document.querySelector('#' + this.parentID + 'conditionvalue1' + i).focus() :\n                    document.querySelector('#' + this.parentID + 'conditionvalue2' + i).focus();\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value);\n            this.newFormat[i].value2 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                className: cls.EMPTY_FORMAT,\n                innerHTML: this.parent.localeObj.getConstant('emptyFormat')\n            });\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        this.dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { type: 'button', 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.FORMAT_INNER });\n            var table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            var tRow = createElement('tr');\n            var td = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('value')\n            });\n            td.appendChild(valuelabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            measureDropdown.appendChild(measureInput);\n            td.appendChild(measureDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            td.appendChild(conditionDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var style = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ? 'display:none; width:10px' : '';\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: this.parent.isAdaptive ? style === '' ? 'width: 35%' : 'width: 100%' : style === '' ? 'width: 45px' :\n                    'width: 120px',\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE1\n            });\n            td.appendChild(value1);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i, className: cls.FORMAT_VALUE_SPAN,\n                innerHTML: '&', styles: style\n            });\n            td.appendChild(valuespan);\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: (this.parent.isAdaptive && style === '') ? 'width: 35%' : style === '' ? 'width: 45px' : style,\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE2\n            });\n            td.appendChild(value2);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            if (this.parent.isAdaptive) {\n                innerDiv.appendChild(table);\n                table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            }\n            tRow = createElement('tr');\n            td = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('formatLabel')\n            });\n            td.appendChild(formatlabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            td.appendChild(fontNameDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            td.appendChild(fontSizeDropdown);\n            tRow.appendChild(td);\n            if (this.parent.isAdaptive) {\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n            }\n            td = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_FONT_COLOR\n            });\n            td.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_BACK_COLOR\n            });\n            td.appendChild(colorPicker2);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var valuePreview = createElement('div', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                innerHTML: '123.45',\n            });\n            td.appendChild(valuePreview);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            innerDiv.appendChild(table);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            fields.push({\n                index: i_1 + 1,\n                name: this.parent.dataSourceSettings.values[i_1].caption || this.parent.dataSourceSettings.values[i_1].name,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        this.fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.measureChange.bind(this, i)\n        });\n        this.fieldsDropDown[i].isStringTemplate = true;\n        this.fieldsDropDown[i].appendTo('#' + this.parentID + 'measureinput' + i);\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        this.conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.conditionChange.bind(this, i)\n        });\n        this.conditionsDropDown[i].isStringTemplate = true;\n        this.conditionsDropDown[i].appendTo('#' + this.parentID + 'conditioninput' + i);\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        this.fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupWidth: '150px', popupHeight: '200px',\n            change: this.fontNameChange.bind(this, i)\n        });\n        this.fontNameDropDown[i].isStringTemplate = true;\n        this.fontNameDropDown[i].appendTo('#' + this.parentID + 'fontnameinput' + i);\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        this.fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px',\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            change: this.fontSizeChange.bind(this, i)\n        });\n        this.fontSizeDropDown[i].isStringTemplate = true;\n        this.fontSizeDropDown[i].appendTo('#' + this.parentID + 'fontsizeinput' + i);\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.width =\n                this.parent.isAdaptive ? '10%' : '10px';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n        }\n        else {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '100%' : '120px';\n        }\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + ' ' + cls.FORMAT_FONT_COLOR_PICKER,\n            value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i)\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo('#' + this.parentID + 'fontcolor' + i);\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor = color;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = format.style.fontFamily;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i)\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo('#' + this.parentID + 'backgroundcolor' + i);\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo('#' + this.parentID + 'removeButton' + i);\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.destroyColorPickers();\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     * @returns boolean\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     * @returns { r: number, g: number, b: number } | null\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     * @returns string\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        return '#d5d5d5';\n    };\n    ConditionalFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.destroyColorPickers();\n            this.dialog.destroy();\n        }\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting')) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n    };\n    ConditionalFormatting.prototype.destroyColorPickers = function () {\n        for (var i = 0; i < (this.newFormat ? this.newFormat.length : 0); i++) {\n            if (this.fontColor && this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                this.fontColor[i].destroy();\n            }\n            if (this.backgroundColor && this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                this.backgroundColor[i].destroy();\n            }\n        }\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     * @returns void\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        this.dialog.refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     * @returns void\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.close();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, isBlazor, getInstance, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { Deferred } from '@syncfusion/ej2-data';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        /** @hidden */\n        this.isMultiAxisChange = false;\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList'));\n        }\n        else if (this.parent.showGroupingBar &&\n            this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar'));\n        }\n        else {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_grid'));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            items: this.getItems(),\n            allowKeyboard: false,\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo('#' + this.parent.element.id + 'pivot-toolbar');\n        this.toolbar.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n        if (this.parent.chart) {\n            this.parent.chart.setProperties({ width: this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString() }, true);\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        /* tslint:disable:no-any */\n        var reports = { reportName: [] };\n        var tool = this;\n        if (isBlazor()) {\n            reports = this.fetchReportsArgs();\n            reports.then(function (e) {\n                tool.reportList.dataSource = e.reportName;\n                return e;\n            });\n        }\n        else {\n            /* tslint:enable:no-any */\n            this.parent.trigger(events.fetchReport, reports);\n        }\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    /* tslint:disable */\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    var toDisable = this.parent.displayOption.view === 'Chart';\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                        id: this.parent.element.id + 'grid', cssClass: toDisable ? cls.MENU_DISABLE : '',\n                        click: this.menuItemClick.bind(this)\n                    });\n                    break;\n                case 'Chart':\n                    var validTypes = (this.parent.displayOption.view === 'Table');\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                        id: this.parent.element.id + 'chartmenu', cssClass: validTypes ? cls.MENU_DISABLE : ''\n                    });\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType === 'olap') {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf('FieldList') === -1 && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList') &&\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display === 'none') {\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    /* tslint:enable */\n    Toolbar.prototype.reportChange = function (args) {\n        this.dropArgs = args;\n        if (this.parent.isModified && this.currentReport !== '') {\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n        }\n        else {\n            this.reportLoad(args);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this_1 = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this_1.currentReport = observedArgs.reportName;\n                _this_1.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else if (this.currentReport === '' && (args.item.id === (this.parent.element.id + 'save') || args.item.id === (this.parent.element.id + 'saveas'))) {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function (args) {\n        if (!(this.mdxDialog && !this.mdxDialog.isDestroyed)) {\n            this.renderMDXDialog();\n        }\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            innerHTML: this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim(),\n            attrs: { 'readonly': 'readonly' }\n        });\n        outerDiv.appendChild(textarea);\n        this.mdxDialog.content = outerDiv;\n        this.mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        if (args) {\n            this.dialog.header = args.item.tooltipText;\n            var outerDiv = createElement('div', {\n                className: cls.GRID_REPORT_OUTER\n            });\n            var label = createElement('div', {\n                className: cls.GRID_REPORT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('reportName')\n            });\n            var input = createElement('input', {\n                className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n                innerHTML: (action && action === 'rename' ? this.currentReport : ''),\n                attrs: {\n                    'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                    'value': (action && action === 'rename' ? this.currentReport : '')\n                },\n            });\n            input.setSelectionRange(input.textContent.length, input.textContent.length);\n            outerDiv.appendChild(label);\n            outerDiv.appendChild(input);\n            this.dialog.content = outerDiv;\n            this.dialog.refresh();\n            this.dialog.show();\n        }\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        switch (args.item.id) {\n            case (this.parent.element.id + 'save'):\n            case (this.parent.element.id + 'saveas'):\n                this.saveReport(args);\n                break;\n            case (this.parent.element.id + 'remove'):\n                this.action = 'Remove';\n                if (this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                }\n                else {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                }\n                return;\n            case (this.parent.element.id + 'rename'):\n                this.renameReport(args);\n                break;\n            case (this.parent.element.id + 'new'):\n                this.action = 'New';\n                this.newArgs = args;\n                if (this.parent.isModified && this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                }\n                else {\n                    this.createNewReport(args);\n                }\n                break;\n            case (this.parent.element.id + 'load'):\n                this.action = 'Load';\n                break;\n            case (this.parent.element.id + 'fieldlist'):\n                if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                    this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.show();\n                }\n                break;\n            case (this.parent.element.id + 'formatting'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'mdxQuery'):\n                this.mdxQueryDialog(args);\n                break;\n            case (this.parent.element.id + 'numberFormatting'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'report-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'report-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        }));\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parent.element.id + 'report-dialog');\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'mdx-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'mdx-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        }));\n        this.mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.mdxDialog.isStringTemplate = true;\n        this.mdxDialog.appendTo('#' + this.parent.element.id + 'mdx-dialog');\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var textArea = this.mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var reportInput = this.dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        if ((this.dialog.header === this.parent.localeObj.getConstant('save') ||\n            this.dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'Save';\n            this.currentReport = reportInput.value;\n            var isExist_1 = false;\n            /* tslint:disable */\n            var _this_2 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_1 = true;\n                        break;\n                    }\n                }\n                if (isExist_1) {\n                    _this_2.createConfirmDialog(_this_2.parent.localeObj.getConstant('alert'), _this_2.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_2.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var saveArgs = {\n                    report: _this_2.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_2.parent.trigger(events.saveReport, saveArgs);\n                _this_2.parent.isModified = false;\n                _this_2.updateReportList();\n                _this_2.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('new') &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'New';\n            this.currentReport = reportInput.value;\n            var isExist_2 = false;\n            /* tslint:disable */\n            var _this_3 = this;\n            /* tslint:enable */\n            var reports_1 = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports_1, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === reports_1.reportName[i]) {\n                        isExist_2 = true;\n                        break;\n                    }\n                }\n                if (isExist_2) {\n                    _this_3.createConfirmDialog(_this_3.parent.localeObj.getConstant('alert'), _this_3.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_3.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                _this_3.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    _this_3.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: _this_3.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_3.parent.trigger(events.saveReport, saveArgs);\n                _this_3.parent.isModified = false;\n                _this_3.updateReportList();\n                _this_3.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            if (this.currentReport === reportInput.value) {\n                this.dialog.hide();\n                return;\n            }\n            this.action = 'Rename';\n            var isExist_3 = false;\n            /* tslint:disable */\n            var _this_4 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_4.renameText = reportInput.value;\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_3 = true;\n                        break;\n                    }\n                }\n                if (isExist_3) {\n                    _this_4.createConfirmDialog(_this_4.parent.localeObj.getConstant('alert'), _this_4.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_4.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var renameArgs = {\n                    reportName: _this_4.currentReport,\n                    rename: reportInput.value\n                };\n                _this_4.parent.trigger(events.renameReport, renameArgs);\n                _this_4.currentReport = reportInput.value;\n                _this_4.updateReportList();\n                _this_4.dialog.hide();\n            });\n        }\n    };\n    Toolbar.prototype.createNewReport = function (args) {\n        this.dialogShow(args);\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        this.dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('yes'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('no'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        var _this_1 = this;\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.removeReport, removeArgs);\n            var reports = this.fetchReports();\n            if (reports.reportName && reports.reportName.length > 0) {\n                var loadArgs = {\n                    reportName: reports.reportName[reports.reportName.length - 1]\n                };\n                this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                    _this_1.currentReport = observedArgs.reportName;\n                    _this_1.parent.isModified = false;\n                });\n                this.currentReport = reports.reportName[reports.reportName.length - 1];\n            }\n            else {\n                this.currentReport = '';\n                this.parent.isModified = false;\n                this.action = '';\n            }\n            this.updateReportList();\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '' && this.parent.isModified) {\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.createNewReport(this.newArgs);\n                }\n                else {\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else if (this.action === 'New') {\n                this.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                this.updateReportList();\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: this.renameText,\n                isReportExists: true\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = this.renameText;\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        this.confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        if (this.action === 'New') {\n            if (this.parent.isModified) {\n                this.createNewReport(this.newArgs);\n            }\n            else {\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            this.currentReport = this.reportList.value;\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            this.dialog.hide();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        this.confirmPopUp.hide();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.createChartMenu = function () {\n        var _this_1 = this;\n        if (document.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            var menuItems = [];\n            var types = this.getValidChartType();\n            for (var i = 0; (i < types.length && i < 7); i++) {\n                var type = types[i];\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant(type.toLowerCase()),\n                    id: this.parent.element.id + '_' + type,\n                });\n            }\n            if (menuItems.length === 7) {\n                menuItems.splice(6);\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant('MoreOption'),\n                    id: this.parent.element.id + '_' + 'ChartMoreOption',\n                });\n            }\n            var toDisable = (menuItems.length <= 0 || this.parent.displayOption.view === 'Table');\n            menuItems.push({\n                separator: true\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('multipleAxes'),\n                id: this.parent.element.id + '_' + 'multipleAxes'\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('showLegend'),\n                id: this.parent.element.id + '_' + 'showLegend'\n            });\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : menuItems,\n                }];\n            if (this.chartMenu && !this.chartMenu.isDestroyed) {\n                this.chartMenu.destroy();\n            }\n            this.chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this),\n                beforeOpen: this.whitespaceRemove.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                },\n                beforeItemRender: this.multipleAxesCheckbox.bind(this)\n            });\n            this.chartMenu.isStringTemplate = true;\n            this.chartMenu.appendTo('#' + this.parent.element.id + 'chart_menu');\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.create = function () {\n        var _this_1 = this;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            this.createChartMenu();\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'export_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            this.exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.exportMenu.isStringTemplate = true;\n            this.exportMenu.appendTo('#' + this.parent.element.id + 'export_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'subtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.subTotalMenu.isStringTemplate = true;\n            this.subTotalMenu.appendTo('#' + this.parent.element.id + 'subtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'grandtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.grandTotalMenu.isStringTemplate = true;\n            this.grandTotalMenu.appendTo('#' + this.parent.element.id + 'grandtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'formatting_menu')) {\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormatMenu'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormatingMenu'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            this.formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.formattingMenu.isStringTemplate = true;\n            this.formattingMenu.appendTo('#' + this.parent.element.id + 'formatting_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_reportlist')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.parent.localeObj.getConstant('defaultReport')\n            };\n            if (isBlazor()) {\n                var pivotData = JSON.parse(saveArgs.report);\n                pivotData.dataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n                saveArgs.report = JSON.stringify(pivotData);\n            }\n            this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n            this.parent.trigger(events.saveReport, saveArgs);\n            var reports = this.fetchReports();\n            this.reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                cssClass: cls.REPORT_LIST_DROP,\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            this.reportList.isStringTemplate = true;\n            this.reportList.appendTo('#' + this.parent.element.id + '_reportlist');\n        }\n        this.updateItemElements();\n    };\n    Toolbar.prototype.updateItemElements = function () {\n        var itemElements = [].slice.call(this.toolbar.element.querySelectorAll('.e-toolbar-item'));\n        for (var _i = 0, itemElements_1 = itemElements; _i < itemElements_1.length; _i++) {\n            var element = itemElements_1[_i];\n            if (element.querySelector('button')) {\n                element.querySelector('button').setAttribute('tabindex', '0');\n            }\n            else if (element.querySelector('.e-menu.e-menu-parent')) {\n                element.querySelector('.e-menu.e-menu-parent').setAttribute('tabindex', '-1');\n                if (element.querySelector('.e-menu-item.e-menu-caret-icon')) {\n                    element.querySelector('.e-menu-item.e-menu-caret-icon').setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.whitespaceRemove = function (args) {\n        args.element.style.padding = '0px';\n        var separator = args.element.querySelector('.e-separator');\n        if (separator) {\n            separator.style.margin = '0px';\n        }\n    };\n    Toolbar.prototype.multipleAxesCheckbox = function (args) {\n        if (this.parent.element.id + '_' + 'multipleAxes' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'checkBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('multipleAxes'),\n                cssClass: 'e-multipleAxes',\n                checked: this.parent.chartSettings.enableMultiAxis,\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'checkBox');\n            if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) &&\n                !args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.add(cls.MENU_DISABLE);\n                checkbox.disabled = true;\n            }\n            else if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) &&\n                args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.remove(cls.MENU_DISABLE);\n                checkbox.disabled = false;\n            }\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-multipleAxes');\n            args.element.appendChild(checkboxObj);\n        }\n        else if (this.parent.element.id + '_' + 'showLegend' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'showLegendCheckBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('showLegend'),\n                checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n                cssClass: 'e-showLegend',\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'showLegendCheckBox');\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-showLegend');\n            args.element.appendChild(checkboxObj);\n        }\n    };\n    Toolbar.prototype.getLableState = function (type) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.showLableState = chartSettings.legendSettings.visible;\n        }\n        else {\n            this.showLableState = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1 ?\n                false : true;\n        }\n        return this.showLableState;\n    };\n    Toolbar.prototype.getAllChartItems = function () {\n        return ['Line', 'Column', 'Area', 'Bar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea',\n            'SplineArea', 'Scatter', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto',\n            'Polar', 'Radar', 'Pie', 'Pyramid', 'Funnel', 'Doughnut'];\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        if (this.parent.currentView === 'Table') {\n            addClass(items.slice(3), cls.MENU_HIDE);\n            removeClass(items.slice(1, 3), cls.MENU_HIDE);\n        }\n        else {\n            addClass(items.slice(1, 3), cls.MENU_HIDE);\n            removeClass(items.slice(3), cls.MENU_HIDE);\n        }\n    };\n    /* tslint:disable:max-line-length */\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    /* tslint:enable:max-line-length */\n    Toolbar.prototype.updateReportList = function () {\n        var reports;\n        if (isBlazor()) {\n            /* tslint:disable */\n            var _this_5 = this;\n            /* tslint:enable */\n            reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_5.reportList.dataSource = observedArgs.reportName;\n                if (_this_5.currentReport === '' && _this_5.reportList.dataSource.length > 0) {\n                    _this_5.reportList.value = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.reportList.text = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.currentReport = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                }\n                else {\n                    _this_5.reportList.value = _this_5.currentReport;\n                    _this_5.reportList.text = _this_5.currentReport;\n                }\n                _this_5.reportList.refresh();\n            });\n        }\n        else {\n            reports = this.fetchReports();\n            this.reportList.dataSource = reports.reportName;\n            if (this.currentReport === '' && this.reportList.dataSource.length > 0) {\n                this.reportList.value = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.reportList.text = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.currentReport = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            }\n            else {\n                this.reportList.value = this.currentReport;\n                this.reportList.text = this.currentReport;\n            }\n            this.reportList.refresh();\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.menuItemClick = function (args) {\n        var exportArgs = {};\n        var type;\n        if (this.getAllChartItems().indexOf(args.item.id.split(this.parent.element.id + '_')[1]) > -1 ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'ChartMoreOption') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'multipleAxes') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'showLegend')) {\n            type = args.item.id.split(this.parent.element.id + '_')[1];\n        }\n        /* tslint:disable:max-line-length */\n        switch (args.item.id) {\n            case (this.parent.element.id + 'grid'):\n                if (this.parent.grid && this.parent.chart) {\n                    this.parent.grid.element.style.display = '';\n                    this.parent.chart.element.style.display = 'none';\n                    if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                        this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                    this.parent.currentView = 'Table';\n                    this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                    if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    this.parent.layoutRefresh();\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + 'pdf'):\n                if (this.parent.currentView === 'Table') {\n                    exportArgs = {\n                        pdfExportProperties: { fileName: 'Export.pdf' },\n                        pdfDoc: undefined,\n                        isBlob: false,\n                        isMultipleExport: false\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.pdfExport(exportArgs.pdfExportProperties, exportArgs.isMultipleExport, exportArgs.pdfDoc, exportArgs.isBlob);\n                }\n                else {\n                    exportArgs = {\n                        width: undefined,\n                        height: undefined,\n                        orientation: PdfPageOrientation.Landscape,\n                        type: 'PDF',\n                        fileName: 'result',\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                }\n                break;\n            case (this.parent.element.id + 'excel'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.excelExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case (this.parent.element.id + 'csv'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.csv' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.csvExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case (this.parent.element.id + 'png'):\n                exportArgs = {\n                    type: 'PNG',\n                    width: undefined,\n                    height: undefined,\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'jpeg'):\n                exportArgs = {\n                    type: 'JPEG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                    width: undefined,\n                    height: undefined,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'svg'):\n                exportArgs = {\n                    width: undefined,\n                    height: undefined,\n                    type: 'SVG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'notsubtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: false, showColumnSubTotals: false, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: false, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'notgrandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: false, showColumnGrandTotals: false, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: false, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'numberFormattingMenu'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'conditionalFormattingMenu'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + '_' + type):\n                if (args.item && args.item.text) {\n                    if (type === 'ChartMoreOption') {\n                        this.createChartTypeDialog();\n                    }\n                    else if (type === 'multipleAxes') {\n                        if (this.parent.chartSettings.enableScrollOnMultiAxis) {\n                            this.isMultiAxisChange = true;\n                        }\n                        this.parent.chartSettings.enableMultiAxis = !this.parent.chartSettings.enableMultiAxis;\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                    else if (this.getAllChartItems().indexOf(type) > -1) {\n                        this.updateChartType(type, false);\n                    }\n                    else if (type === 'showLegend') {\n                        this.parent.chart.legendSettings.visible = !this.showLableState;\n                        if (this.parent.chartSettings.legendSettings) {\n                            this.parent.chartSettings.legendSettings.visible = !this.showLableState;\n                        }\n                        else {\n                            this.parent.setProperties({ chartSettings: { legendSettings: { visible: !this.showLableState } } }, true);\n                        }\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n        }\n        /* tslint:enable:max-line-length */\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    Toolbar.prototype.getValidChartType = function () {\n        var menuItems = [];\n        for (var i = 0; (i <= this.parent.chartTypes.length); i++) {\n            var type = this.parent.chartTypes[i];\n            if ((this.getAllChartItems().indexOf(type) > -1) && (menuItems.indexOf(type) < 0)) {\n                menuItems.push(type);\n            }\n        }\n        return menuItems;\n    };\n    Toolbar.prototype.createChartTypeDialog = function () {\n        var _this_1 = this;\n        var chartDialog = this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + '_ChartTypeDialog',\n            className: cls.PIVOTCHART_TYPE_DIALOG\n        }));\n        this.chartTypesDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('chartTypeSettings'),\n            content: this.getDialogContent(),\n            isModal: true,\n            beforeOpen: this.beforeOpen.bind(this),\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: function () { _this_1.chartTypeDialogUpdate(); },\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true },\n                },\n                {\n                    click: function () { _this_1.removeDialog(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            close: this.removeDialog.bind(this)\n        });\n        this.chartTypesDialog.isStringTemplate = true;\n        this.chartTypesDialog.appendTo(chartDialog);\n    };\n    Toolbar.prototype.removeDialog = function () {\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_ChartTypeDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ChartTypeDialog'));\n        }\n    };\n    Toolbar.prototype.chartTypeDialogUpdate = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var chartType = getInstance('#' + this.parent.element.id + '_ChartTypeOption', DropDownList).value;\n        var checked = getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).checked;\n        var checkedShow = getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked;\n        this.parent.chart.legendSettings.visible = checkedShow;\n        if (this.chartLableState) {\n            this.parent.chart.legendSettings.visible = checkedShow;\n            if (this.parent.chartSettings.legendSettings) {\n                this.parent.chartSettings.legendSettings.visible = checkedShow;\n            }\n            else {\n                this.parent.setProperties({ chartSettings: { legendSettings: { visible: checkedShow } } }, true);\n            }\n        }\n        this.updateChartType(chartType, false);\n        this.parent.chartSettings.enableMultiAxis = checked;\n        this.chartTypesDialog.close();\n    };\n    Toolbar.prototype.updateChartType = function (type, isMultiAxis) {\n        if (this.getAllChartItems().indexOf(type) > -1) {\n            if (this.parent.chart) {\n                this.parent.currentView = 'Chart';\n                this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                /* tslint:disable:max-line-length */\n                this.parent.chart.element.style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                this.parent.chart.setProperties({ width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()) }, true);\n                if (this.parent.chartSettings.chartSeries.type === type && !isMultiAxis) {\n                    this.parent.chartModule.updateView();\n                }\n                else {\n                    this.parent.chartSettings.chartSeries.type = type;\n                }\n            }\n        }\n    };\n    Toolbar.prototype.getDialogContent = function () {\n        var mainWrapper = createElement('div', { className: 'e-chart-type-div-content' });\n        var optionWrapperDiv = createElement('div', { className: 'e-chart-type-option-wrapper' });\n        var optionTextDiv = createElement('div', {\n            className: 'e-chart-type-option-text', innerHTML: this.parent.localeObj.getConstant('ChartType')\n        });\n        var dropOptionDiv = createElement('div', { id: this.parent.element.id + '_ChartTypeOption' });\n        optionWrapperDiv.appendChild(optionTextDiv);\n        optionWrapperDiv.appendChild(dropOptionDiv);\n        var chartTypeDatasource = [];\n        var chartType = this.getValidChartType();\n        for (var i = 0; i < chartType.length; i++) {\n            chartTypeDatasource.push({ value: chartType[i], text: this.parent.localeObj.getConstant(chartType[i].toLowerCase()) });\n        }\n        var optionWrapper = new DropDownList({\n            dataSource: chartTypeDatasource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.chartSeries.type ? this.parent.chartSettings.chartSeries.type : this.getValidChartType()[0],\n            width: '100%',\n            change: this.changeDropDown.bind(this)\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(dropOptionDiv);\n        mainWrapper.appendChild(optionWrapperDiv);\n        var checkboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogMultipleAxis',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(checkboxWrap);\n        var labelCheckboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogShowLabel',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(labelCheckboxWrap);\n        return mainWrapper;\n    };\n    Toolbar.prototype.changeDropDown = function (args) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (!(chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined)) {\n            var checked = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1 ?\n                false : true;\n            getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked = checked;\n        }\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1) {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = true;\n        }\n        else {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = false;\n        }\n    };\n    Toolbar.prototype.beforeOpen = function () {\n        var _this_1 = this;\n        var checkbox = new CheckBox({\n            label: this.parent.localeObj.getConstant('multipleAxes'),\n            cssClass: 'e-dialog-multiple-axis',\n            checked: this.parent.chartSettings.enableMultiAxis ? this.parent.chartSettings.enableMultiAxis : false,\n            enableRtl: this.parent.enableRtl,\n        });\n        var checkbox1 = new CheckBox({\n            label: this.parent.localeObj.getConstant('showLegend'),\n            checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n            change: function () { _this_1.chartLableState = true; },\n            cssClass: 'e-dialog-show-legend',\n            enableRtl: this.parent.enableRtl,\n        });\n        checkbox1.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogShowLabel'));\n        checkbox.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogMultipleAxis'));\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            checkbox.disabled = true;\n        }\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.chartLableState = true;\n        }\n        else {\n            this.chartLableState = false;\n        }\n    };\n    /**\n     * To refresh the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.createToolbar();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.confirmPopUp && !this.confirmPopUp.isDestroyed) {\n            this.confirmPopUp.destroy();\n        }\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (this.mdxDialog && !this.mdxDialog.isDestroyed) {\n            this.mdxDialog.destroy();\n        }\n        if (this.chartMenu && !this.chartMenu.isDestroyed) {\n            this.chartMenu.destroy();\n        }\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (this.exportMenu && !this.exportMenu.isDestroyed) {\n            this.exportMenu.destroy();\n        }\n        if (this.subTotalMenu && !this.subTotalMenu.isDestroyed) {\n            this.subTotalMenu.destroy();\n        }\n        if (this.grandTotalMenu && !this.grandTotalMenu.isDestroyed) {\n            this.grandTotalMenu.destroy();\n        }\n        if (this.formattingMenu && !this.formattingMenu.isDestroyed) {\n            this.formattingMenu.destroy();\n        }\n        if (this.reportList && !this.reportList.isDestroyed) {\n            this.reportList.destroy();\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n        }\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar')) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n    };\n    Toolbar.prototype.focusToolBar = function () {\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-selected'), 'e-selected');\n        if (document.querySelector('.e-toolbar-items')) {\n            addClass([document.querySelector('.e-toolbar-items')], 'e-focused');\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberformatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     * @returns void\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.dialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerHTML = this.parent.localeObj.getConstant('numberFormat');\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('values')\n        });\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('formatType')\n        });\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('grouping')\n        });\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('decimalPlaces')\n        });\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('customFormatString')\n        });\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatValueDrop')) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                valueFields.push({\n                    index: i + 1, name: this.parent.dataSourceSettings.values[i].caption || this.parent.dataSourceSettings.values[i].name,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            this.valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP, change: this.valueChange.bind(this), width: '100%'\n            });\n            this.valuesDropDown.isStringTemplate = true;\n            this.valuesDropDown.appendTo('#' + this.parent.element.id + '_FormatValueDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 2, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            this.formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl,\n                cssClass: cls.FORMATTING_FORMAT_DROP, width: '100%'\n            });\n            this.formatDropDown.isStringTemplate = true;\n            this.formatDropDown.appendTo('#' + this.parent.element.id + '_FormatDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_GroupingDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            this.groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP, width: '100%'\n            });\n            this.groupingDropDown.isStringTemplate = true;\n            this.groupingDropDown.appendTo('#' + this.parent.element.id + '_GroupingDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_DecimalDrop')) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 },\n            ];\n            this.decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP, popupHeight: 150, width: '100%'\n            });\n            this.decimalDropDown.isStringTemplate = true;\n            this.decimalDropDown.appendTo('#' + this.parent.element.id + '_DecimalDrop');\n        }\n        if (this.formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.parent.dataSourceSettings.formatSettings;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString.split('')[0].toLowerCase();\n                if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n                    this.formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                        this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                        this.parent.localeObj.getConstant('number');\n                    this.decimalDropDown.value = Number(fString.split('')[1]);\n                    this.groupingDropDown.value = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                        this.parent.localeObj.getConstant('false');\n                }\n                else {\n                    this.formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n                    this.customText.value = fString;\n                }\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = 0;\n            this.groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            this.groupingDropDown.enabled = false;\n            this.decimalDropDown.enabled = false;\n        }\n        else {\n            this.customText.disabled = true;\n            this.groupingDropDown.enabled = true;\n            this.decimalDropDown.enabled = true;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text;\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = this.formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                this.formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            text += this.decimalDropDown.value;\n        }\n        else {\n            text = this.customText.value;\n        }\n        var format = extend([], this.parent.dataSourceSettings.formatSettings, true);\n        if (this.valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            var fieldList = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule.fieldList : this.parent.engineModule.fieldList;\n            for (var _i = 0, _a = Object.keys(fieldList); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (fieldList[key].type === 'number') {\n                    this.insertFormat(key, text);\n                }\n            }\n        }\n        else {\n            this.insertFormat(this.valuesDropDown.value.toString(), text);\n        }\n        var eventArgs = {\n            formatSettings: PivotUtil.cloneFormatSettings(this.parent.dataSourceSettings.formatSettings),\n            formatName: this.valuesDropDown.value.toString(),\n            cancel: false\n        };\n        this.parent.trigger(events.numberFormatting, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: observedArgs.formatSettings } }, true);\n                try {\n                    _this.parent.updateDataSource(false);\n                    _this.dialog.close();\n                }\n                catch (exception) {\n                    _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n                    /* tslint:disable-next-line:max-line-length */\n                    _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormat'), _this.dialog.element);\n                    _this.parent.hideWaitingPopup();\n                }\n            }\n            else {\n                _this.dialog.close();\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            }\n        });\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text) {\n        var isExist = false;\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false\n        };\n        var format = this.parent.dataSourceSettings.formatSettings;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     * @hidden\n     */\n    function Grouping(parent) {\n        /* tslint:disable-next-line:max-line-length */\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        this.parentElement = parentElement;\n        this.selectedCellsInfo = [];\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('aria-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        this.selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        this.selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedOptions\n     * @param  {SelectedCellsInfo[]} axis - Get the members name from the given selected cells information\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (this.selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (this.selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            if (isBlazor()) {\n                PivotUtil.setPivotProperties(this.parent, { dataSourceSettings: { groupSettings: groupFields } });\n            }\n            else {\n                this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            }\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            this.parent.notify(events.initialLoad, {});\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames, type) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        /* tslint:disable */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        /* tslint:enable */\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type) {\n        var _this = this;\n        var groupDialog = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialog);\n        this.groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.groupDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            overlayClick: function () { _this.removeDialog(); },\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement\n        });\n        this.groupDialog.isStringTemplate = true;\n        this.groupDialog.appendTo(groupDialog);\n    };\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-wrapper' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    /* tslint:disable:max-line-length */\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text', innerHTML: this.parent.localeObj.getConstant('groupFieldCaption')\n                    });\n                    /* tslint:enable:max-line-length */\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-wrapper' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text', innerHTML: this.parent.localeObj.getConstant('groupTitle')\n                    });\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-wrapper' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        value: caption, width: '100%'\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        width: '100%'\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-wrapper'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-wrapper'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-wrapper'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text', innerHTML: this.parent.localeObj.getConstant('groupBy')\n                    });\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') },\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        /* tslint:disable */\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            select: function () {\n                                groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                if (intervalObj_1.checkBoxSelectionModule.activeLi.length === 0) {\n                                    groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                            }\n                        });\n                        /* tslint:enable */\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%'\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%'\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    /* tslint:disable:max-func-body-length */\n    Grouping.prototype.updateGroupSettings = function () {\n        var dialogElement = this.groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance('#' + this.parentElement.id + 'group_input_option', MaskedTextBox);\n            var captionInputInstance = getInstance('#' + this.parentElement.id + 'group_caption_option', MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            /* tslint:disable-next-line:max-line-length */\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ? customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_start_option', CheckBox);\n            var endCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_end_option', CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_start_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_start_input', NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_end_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_end_input', NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_interval_input', MultiSelect) :\n                getInstance('#' + this.parentElement.id + 'group_interval_input', NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        this.groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item, pos) { return item.name; });\n                if (newItems) {\n                    /* tslint:disable-next-line:max-line-length */\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item, pos) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        return orderedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            var selectedOptions = [];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if (this.parent.grid && this.parent.grid.isDestroyed) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        if (this.groupDialog && !this.groupDialog.isDestroyed) {\n            this.groupDialog.destroy();\n        }\n        if (this.parentElement && document.getElementById(this.parentElement.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_GroupDialog'));\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.render\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.handlers.load, this); //For initial rendering\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","getDay","getHours","getMinutes","getSeconds","getMilliseconds","isNaN","Number","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedPivotValues","pivotValues","clonedSets","i","j","this","getClonedPivotValueObj","undefined","getDefinedObj","inArray","collection","cnt","isContainCommonElements","collection1","collection2","lnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","type","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","slice","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","fieldMapping","showSubTotals","showRowSubTotals","showColumnSubTotals","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","showAggregationOnValueField","authentication","CloneAuthenticationObject","updateDataSourceSettings","clonedCollection","collection_1","set","name","caption","axis","baseField","baseItem","isCalculatedField","isNamedSet","showNoDataItems","dataType","showFilterIcon","showSortIcon","showRemoveIcon","showValueTypeIcon","showEditIcon","allowDragAndDrop","collection_2","condition","items","levelCount","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_3","order","collection_4","delimiter","collection_5","calendar","currency","format","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","userName","password","collection_6","formatString","formula","hierarchyUniqueName","collection_7","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_8","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_9","groupName","getFilterItemByName","fieldName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","getFieldInfo","len","fieldItem","position","fieldList","olapEngineModule","engineModule","isNamedSets","aggregateType","isButtonIconRefesh","prop","oldProp","newProp","isButtonRefresh","propValidation","oldAxesProp","newAxesProp","axes","oldAxis","newAxis","indexOf","options","oldAxisProp","newAxisProp","k","a","b","c","propValidation_1","validation","exception","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","PivotEngine","aggregatedValueMatrix","valueContent","formatFields","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeaders","columnHeaders","rowHeadersCount","columnHeadersCount","rMembers","cMembers","groupingFields","valueMatrix","indexMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rowGrandTotal","columnGrandTotal","removeRowGrandTotal","removeColumnGrandTotal","isValueHasAdvancedAggregate","rawIndexObject","isEditing","actualData","groupRawIndex","fieldKeys","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","customRegex","formatRegex","renderEngine","dataSource","customProperties","fn","getValueCellInfo","globalize","Internationalization","localeObj","fieldsType","enableSort","isValueFilterEnabled","isDrillThrough","isBlazor","shift","pageSettings","getGroupedRawData","formats","groups","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMutiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fillFieldMembers","updateSortSettings","generateValueMatrix","filterMembers","columnLength","updateFilterMembers","generateGridData","report","pos","splice","frameHeaderWithKeys","countFields","filter","map","hasCountField","realData","headerFields","concat","groupRawData","finalData","groupKeys","indexLength","currData","members","vPos","hPos","memberJoin","join","currFieldName","currValue","savedData","summType","_this","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","sort","Date","toString","len_1","interval","isInRangeAvail","getRange","getTime","newDate","newFieldName","setFullYear","getFullYear","month","Math","ceil","getMonth","getConstant","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","newField","len_3","startValue","endValue","cStartValue","cEndValue","unframedSet","dataLength","framedSetLength","max","len_4","duplicateData","frameData","index","lastIndexOf","_b","keys_2","_c","axisFields_2","field","len_5","customFieldName","pattern","match","parentField","replace","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","parseInt","getFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","getCalculatedField","lenE","dataTypes","getMappingField","isSelected","isExcelFilter","filterType","dateMember","formattedMembers","toLowerCase","id","isCustomField","updateTreeViewData","updateFieldList","actualFormula","this_2","calc","calcProperties","powerFunction","formulaType","split","lmt","aggregateValue","selectedString","filterElements","filterElements_1","dataFields_1","validateValueFields","indMat","dlen","fList","kLn","kl","isDataAvail","membersCnt","fmembersCnt","dl","mkey","fKey","formattedValue","getFormattedValue","formattedText","String","actualText","ordinal","isDrilled","dateText","vMat","keyLen","flList","tkln","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","indexObject","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","member","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","level","valueFilter","rowFilterData","isValueFiltered","allMember","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","row","column","cellSets","getCellSet","rowCellType","hasChild","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","valueSort","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","isEmptyData","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","isEngineUpdated","updateHeaders","rowFlag","columnFlag","updatePivotValues","slicePos","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","memberName","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","engine","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","header","grandHeader","pop","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","framedHeader","isNullArgument","textArray","hText","mIndex","mType","getMember","sortByValueRow","vlen","aggreColl","rMembers_1","rMembers_2","insertAllMember","rowLength","rowCnt","rowCells","savedCell","spanCnt","indexObj","colCnt","cell","colSpan","colIndex","rowPos","rowSpan","cellType","rowIndex","isSpanned","fieldCnt","drillOption","memberString","keyInd","parentMember","valueFil","hierarchy","rlen","decisionObj","childrens","isNoData","isDateType","savedMembers","lt","memInd","headerValue","availData","filterPosition","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","lt_1","rowCurrentPage","rowSize","exactStartPos","performSlicing","columnCurrentPage","columnSize","startPos","removeChildMembers","framedMember","customText","reformAxis","tnum","vlt","rTotal","cTotal","actCnt","isLeastNode","hpos","actpos","vln","name_1","calObj","vData","cln","clt","updateRowData","recursiveRowData","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","updateSelectedHeaders","childMembers","aggregateHeaders","children","vCount","isChild","uniqueName","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_2","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","len_6","cLevelName","axisObj","isSelectedColumn","len_7","uniqueLevelName","colIndex_3","currentSet","selectedHeaderCollection_1","colIndex_2","indexCollection_2","cVal","actualValue","formatNumber","clen","_g","rowindexCollection_2","selectedHeaderCollection_2","rowindexCollection_1","selectedColumn","getSelectedColumn","_h","indexCollection_3","selectedColumnValue","selectedRow","getSelectedRow","_j","selectedHeaderCollection_3","_k","colIndex_4","_l","indexCollection_4","selectedRowValue","_m","selectedHeaderCollection_4","_o","rowindexCollection_3","selectedCol","_p","indexCollection_5","selectedColValue","_q","colIndex_5","_r","selectedHeaderCollection_5","_s","selectedHeaderCollection_6","colheads_1","head","rowheads_1","gTotalIndex","totalValues","gTotalIndex_1","rIndex","val_1","gTotalIndex_2","val_2","isSum","isGrand","subTotal","toLocaleString","isGrandSum","currentCellSets","keys_3","vcnt","colItmLn","sortText","isTotalHide","lvl","isSingleMeasure","name_3","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","formatField","test","flag","integerPart","decimalPart","items_1","text","RegExp","initialLoad","uiUpdate","contentReady","dataReady","ROOT","RTL","DEVICE","ICON","COLLAPSE","EXPAND","TABLE","CALCINPUT","FLAT","FORMAT","FORMULA","MENU_HIDE","INPUT","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","GRID_REMOVE","GRID_TOOLBAR","PIVOTCHART","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","AggregateMenu","parent","menuInfo","render","args","parentElement","openContextMenu","target","buttonElement","isStringField","summaryTypes","getMenuItem","eventArgs","cancel","aggregateTypes","getModuleName","isPopupView","trigger","observedArgs","createContextMenu","currentMenu","getBoundingClientRect","enableRtl","open","top","window","scrollY","document","documentElement","scrollTop","left","menuItems","isDestroyed","destroy","checkDuplicates","element","getAllSummaryType","menuOptions","beforeOpen","beforeMenuOpen","bind","onClose","querySelector","focus","select","selectOptionInContextMenu","contextMenu","getElementById","innerHTML","createElement","appendChild","Menu","isStringTemplate","appendTo","isString","zIndex","display","createValueSettingsDialog","valueDialog","className","attrs","data-field","Dialog","animationSettings","effect","allowDragging","content","createFieldOptions","isModal","visible","showCloseIcon","width","height","X","Y","buttons","click","updateValueSettings","buttonModel","cssClass","isPrimary","hide","closeOnEscape","renderMode","overlayClick","removeDialog","close","fieldCaption","getAttribute","summaryType","summaryDataSource","summaryItems","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","textContent","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","dataBind","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","allowDeferLayoutUpdate","notify","events.uiUpdate","triggerPopulateEvent","dialogElement","captionInstance","getInstance","summaryInstance","baseFieldInstance","baseItemInstance","remove","Render","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","gridSettings","formatList","getFormatList","aggMenu","gridHeaderCellInfo","gridCellCollection","injectGridModules","getRowStartPos","grid","frameDataSource","frameStackedHeaders","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","getHeaderContent","calculateGridWidth","calculateGridHeight","bindGrid","on","headerRefreshed","refreshHeader","enableVirtualization","mHdr","mCont","vtr","virtualHeaderDiv","setStyleAttribute","transform","scrollLeft","isEmpty","Grid","frozenColumns","frozenRows","enableHover","frameEmptyData","frameEmptyColumns","locale","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","rowHeight","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","excelDataBound","lastGridSettings","gridObject","pivotColumns","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","startIndex","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","cellTemplate","getCellTemplate","enableHtmlSanitizer","appendHtml","targetCell","SanitizeHtmlHelper","sanitize","outerHTML","borderRight","borderLeft","widthService","setWidthToTable","notEmpty","currentView","hideScroll","setFocusOnLastCell","events.contentReady","keyboardModule","event","nodeName","gridFocus","serviceLocator","getService","setFocusedElement","addClass","cellTarget","lastCellClicked","elem","bool","isGroupElement","classList","contains","allowGrouping","groupingModule","validateField","pivotValue1","querySelectorAll","cls.EXPAND","add","cls.MENU_HIDE","cls.COLLAPSE","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","innerText","allowCalculatedField","fieldType_1","menuItem","MouseEvent","view","bubbles","cancelable","exportArgs","ele","rowIndx","colIndx","pivotValue","pdfDoc","isBlob","isMultipleExport","pdfExportProperties","fileName","pdfExport","workbook","excelExportProperties","excelExport","csvExport","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","validateColumnTotalcell","headerPosKeys","sumLock","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","rCnt","cCnt","vSort","lock","padding-top","customAttributes","refreshUI","offsetWidth","firstColWidth","gridColumn","firstRowHeight","offsetHeight","e","clearTimeout","timeOutObj","setTimeout","onSelect","pivotArgs","currentCell","selectedElements_1","customClass","hyperlinkSettings","isValueCell","onOlapRowCellBoundEvent","localizedText","rowGrandPos","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","styles","colGrandPos","isSummaryCellHyperlink","isValueCellHyperlink","colindex","templateID","unWireEvents","wireEvents","pivotview","rowMeasurePos","tupRowInfo","tupInfo","memberPosition","uNameCollection","fieldSep","substring","memberType","nxtIndextCount","lastIndextCount","prevHasChild","fPos","indent","iPos","maxIndent","hierarchyName","levelUniqueName","currPos_1","lvlPosition","hierarchyPOs","currPos_2","currHierarchyPos","currPos","lvlPos","hasChild_1","measurePosition","allStartPos","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnCellHyperlink","hdrdiv","lineHeight","div","navigator","userAgent","insertBefore","tupColumnInfo","prevCell","isSpannedCell","colLength","currCell","parentCellSpan","parentCellPos","onHyperCellClick","nativeEvent","getElement","dataContent","start","end","0","1","calculateColWidth","colCount","parWidth","parseFloat","columnWidth","colWidth","floor","resizeColWidth","eleWidth","elementCreated","gridHeight","parHeight","getHeightAsNumber","cls.GRID_TOOLBAR","tableHeight","cls.TABLE","contentHeight","tableWidth","horizontalOverflow","verticalOverflow","commonOverflow","integrateModel","headerCnt","headerSplit","splitPos","columnModel","actualCnt","colField","setSavedWidth","minWidth","tmpSpan","innerModel","innerPos","clipMode","lastColumn","configLastColumnWidth","triggerColumnRenderEvent","formatArray","fString","fCnt","exportHeaderEvent","hAlign","exportContentEvent","paragraphIndent","excelRows","cells","tmpCell","gridCell","EventHandler","CommonKeyboardInteraction","keyConfigs","shiftF","shiftS","shiftE","delete","enter","escape","upArrow","downArrow","tabIndex","KeyboardEvents","keyAction","keyActionHandler","eventName","processFilter","processSort","processEdit","processDelete","processEnter","processClose","processFilterNodeSelection","getButtonElement","allPivotButtons","closest","preventDefault","moduleName","filterDialog","dialogPopUp","dialogElement_1","isExcelFilter_1","allowExcelLikeFilter","keyCode","memberEditorTree","firstLi","removeAttribute","allMemberEditorTree","parentID","dialogInstance","ej2_instances","button","pivotButtons_1","EventBase","updateSorting","checkisDescending","isDescending","sortObj","newSortObj","lastSortInfo","updateFiltering","treeData","getOlapData","isValidFilterItemsAvail","getTreeData","popupTarget","createFilterDialog","isItemAvail","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","levels","getFilterMembers","getMembers","currrentMembers","searchMembers","isHierarchy","filterItemObj","dummyfilterItems","memberObject","filterItems_1","getParentNode","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","getParentIDs","treeObj","pid","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","isDataOverflow","isChecked","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","isDateField","filterItems_3","isSearchRender","hasChildren","updateChildNodeStates","members_4","state","sMembers","members_5","parentItem","parentNodes","selectedNodes_1","parent_1","members_6","isNodeExpand","NodeStateModified","onStateModified","droppedClass","nodeDropped","droppedPosition","dataSourceUpdate","btnElement","actualFieldName","tag","description","errorDialog","createErrorDialog","getButtonPosition","updateFieldlistData","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","draggedClass","eventdrop","dropField","dropAxis","dropPosition","draggedAxis","removeFieldFromReport","getNewField","droppedField","droppedAxis","dataSourceUpdate_1","droppedArgs","isMeasureAvail","measureField","fieldAxis","pivotButtonModule","axisFieldModule","ErrorDialog","dialogRenderer","fieldListDialog","errorPopUp","closeErrorDialog","body","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","data-fieldName","aria-label","filterCaption","headerTemplate","filterObject","getFilterObject","iconCss","disabled","closeFilterDialog","removeFilterDialog","filterArgs","fieldMembers","filterSetting","createTabMenu","updateCheckedState","createTreeView","visibility","memberTreeView","nodeChecked","nodeStateModified","allMemberSelect","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","createSortOptions","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","nodeAttr","htmlAttributes","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeSelected","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","sortWrapper","cls.FILTER_SORT_CLASS","cls.RTL","sortAscendElement","cls.SORT_SELECTED_CLASS","sortDescendElement","sortBtnElement","Button","unWireEvent","wireEvent","dropMenu","DropDownButton","selectedLevel","nodeLimit","getSearchMembers","isAllMember","checkedNode","getNode","uncheckAll","checkAll","applySorting","sortElements","dataCount","nodeData","childNodes","getChildMembers","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","fieldType","formatObj","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","measures","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","unshift","levelObj","fieldlistData_1","fieldListData","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","cloneNode","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","valueIndex","lDataSource","levelIndex","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","NumericTextBox","inputObj2_2","inputObj1_3","inputObj2_3","role","aria-haspopup","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","PivotCommon","pivotEngine","Common","commonModule","addEventListener","initiateCommonModule","pivotCommon","Browser","isDevice","handlers","load","events.initialLoad","removeEventListener","off","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","Filter","FieldListFieldOptions","Style","ConditionalFormatSettings","Sort","FormatSettings","GroupSettings","CalculatedFieldSettings","CustomGroups","DrillOptions","ValueSortSettings","Authentication","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","mode","cellSelectionMode","wrapMode","Event","exportToExcel","clonedValues","currentPivotValues","exportAllPages","applyFormatting","footer","dataCollections","workSheets","dataColl","colLen","rowLen","actualrCnt","maxLevel","pivotCell","rowOrdinal","measureName","numberFormat","bold","wrapText","backColor","fontColor","fontName","vAlign","borders","lineStyle","Workbook","worksheets","save","PDFExport","addPage","eventParams","page","pages","font","PdfStandardFont","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","brush","PdfSolidBrush","PdfColor","pen","PdfPen","PdfPageTemplateElement","RectangleF","graphics","clientSize","drawString","PdfStringFormat","PdfTextAlignment","Center","template","footerTemplate","bottom","hexDecToRgb","hexDec","Error","bigint","g","getFontStyle","theme","fontType","Bold","italic","Italic","underline","Underline","strikeout","Strikeout","getBorderStyle","borderStyle","PdfBorders","pdfColor","all","borderWidth","borderColor","dashStyle","getDashStyle","dashType","getStyle","border","gridStyle","Helvetica","getFontFamily","fontStyle","penBrushColor","setRecordThemeStyle","record","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","applyEvent","headerStyle","firstColumnWidth","size","dataCollIndex","vLen","allowRepeatHeader","integratedCnt","pdfGrid","PdfGrid","pageSize","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","columnSpan","applyStyle","processCellStyle","stringFormat","indent_1","alignment","Right","Left","lineAlignment","PdfVerticalAlignment","Middle","getColumn","draw","PointF","conditionalFormattingModule","hexToRgb","backgroundBrush","textBrush","family","getFont","cellStyle","arg","textBrushColor","textPenColor","textColor","textPen","PdfDocument","KeyboardInteraction","tab","shiftTab","shiftUp","shiftDown","shiftLeft","shiftRight","shiftEnter","ctrlEnter","leftArrow","rightArrow","ctrlShiftF","pivotViewKeyboardModule","processTab","processShiftTab","processSelection","clearSelection","toggleFieldList","getNextButton","allpivotButtons","getPrevButton","chartAxis","rowAxis","columnFilterValueAxis","columnFilterValueGroup","rowGroup","chartGroup","tableAxis","groupingbarButton","headerButton","getFocusedElement","nextButton","currentInfo","skipAction","showFieldList","toolbar","toolbarModule","activeElement","gridElement","getElementsByTagName","lastChild","prevButton","allPivotButtons_1","shiftKey","ctrlKey","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","rowIndex_1","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","pivotFieldListModule","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldElement","items_2","items_3","dropClass","VirtualScroll","previousValues","frozenPreviousValues","eventType","addInternalEvents","fCont","clearEvents","onHorizondalScroll","onVerticalScroll","common","onWheelScroll","setPageXY","onTouchScroll","isPreventScrollEvent","deltaMode","deltaY","getPointXY","pageXY","x","y","touches","pageX","pageY","pointerType","update","direction","rowValues_1","exactSize_1","section","scrollPosObject","vertical","hideWaitingPopup","showWaitingPopup","rowStartPos_1","pivot_1","sfBlazor","copyWithoutCircularReferences","interopAdaptor","invokeMethodAsync","then","updateBlazorData","exactPage","verticalSection","scrollPage","pageRowStartPos","colValues_1","exactSize_2","horizontal","pivot","colStartPos_1","pivot_2","horizontalSection","pageColStartPos","verticalScrollScale","horizontalScrollScale","horiOffset","vertiOffset","trim","scrollerBrowserLimit","excessMove","notLastPage","clientWidth","vWidth","clientHeight","movableTable","vHeight","removeInternalEvents","DrillThroughDialog","indexString","isUpdated","gridIndexObjects","gridData","showDrillThroughDialog","rawData","editSettings","allowInlineEditing","allowEditing","editCell","removeDrillThroughDialog","drillThroughDialog","createDrillThroughGrid","drillThroughGrid","dataWithPrimarykey","beforeClose","updateData","addItems","allowCommandColumns","currModule_1","AddItem","RemoveItem","ModifiedItem","bulkChanges","currentTarget","firstElementChild","numericTextBox","textBoxValue","indexValue","blur","textBoxElement","focusIn","dataPos","drillThroughBody","drillThroughBodyHeader","toolbarItems","Toolbar","ColumnChooser","showColumnChooser","gridColumns","allowPaging","formatData","dialogModule","gridObj","Edit","Page","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","isPrimaryKey","actionComplete","requestType","beforeBatchSave","frameGridColumns","reverse","validationRules","required","editType","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","valueCaption","aggType","tupleInfo","colOrdinal","getUniqueName","getDrillThroughData","maxRowsInDrillThrough","gridJSON","RowIndex","ColumnIndex","parsedObj","Key","Value","triggerDialog","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","valuetText","drillThrough","PivotChart","headerColl","columnGroupObject","fieldPosition","measuresNames","accumulationType","loadChart","chartSettings","colMeasurePos","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","zoomFactor","dataLabel","refresh","displayOption","primary","cls.PIVOTCHART","showToolbar","getGridWidthAsNumber","getChartHeight","chartSeries","AccumulationChart","Chart","enableMultiAxis","measureList","accEmptyPoint","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","groupHierarchyWithLevels","rKeys_1","rKey","firstRowCell","fieldPos","currrentLevel","cKeys","prevMemberCell","cKeys_1","cKey","cellIndex","measureAllow","colHeaders","columnSeries","yValue","refreshChart","persistSettings","getPersistData","columnDelimiter","columnHeader","chartType","currentColumn","currentSeries","frameChartSeries","xName","yName","emptyPointSettings","innerRadius","columnKeys_1","yAxisName","seriesEvent","pivotChart","bindChart","frameObjectWithKeys","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","chartElement","enableScrollOnMultiAxis","getChartAutoHeight","overflow","overflowX","isMultiAxisChange","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","PieSeries","FunnelSeries","PyramidSeries","AccumulationDataLabel","AccumulationLegend","AccumulationTooltip","legendSettings","tooltip","enableSmartLabels","center","pieCenter","enableBorderOnMouseMove","highLightMode","highlightMode","highlightPattern","titleStyle","subTitle","subTitleStyle","margin","background","selectionMode","accumulationSelectionMode","isMultiSelect","enableExport","selectedDataIndexes","enableAnimation","useGroupingSeparator","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","tooltipRender","loaded","resized","zoomSettings","chartArea","palettes","crosshair","isTransposed","enableSideBySidePlacement","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","axisLabelRender","multiLevelLabelClick","seriesIndex","pointIndex","creatMenu","accumulationMenu","scrollX","drillThroughModule","percentChart","percentAggregateTypes","valCnt","divider","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","plotOffsetTop","lengthofFormat","colIndexColl","rKeys_2","cKeys_2","fieldCount","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","span","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","getZoomFactor","calculatedWidth","seriesLength","templateFn","templateParser","tooltipTemplate","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","showMultiLevelLabels","majorTickLines","enableSelectionZooming","seriesName","point","columnText","rowText","getTooltipTemplate","rowFields","getHeaderField","columnFields","templateVariable","valueField","tooltipTemplateFn","isChartLoaded","alignIcon","multilabelAxisName","updateView","getString","getMenuItems","expand","collapse","drillMenuOpen","drillMenuSelect","enableItems","levelCol","labelInfo","memberUqName","fieldAvail","memIndex","drillArgs","drillInfo","drillItem","renderPivotGrid","zoomModule","isZoomed","Theme","axisLabelFont","fontWeight","axisTitleFont","chartTitleFont","chartSubTitleFont","crosshairLabelFont","tooltipLabelFont","legendLabelFont","stripLineLabelFont","stockEventFont","Animation","ChartSegment","Font","Margin","Border","Offset","Indexes","ChartArea","CrosshairSettings","DataLabelSettings","right","PivotChartConnectorStyle","PivotChartDataLabel","MarkerSettings","ErrorBarCapSettings","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","CrosshairTooltip","StripLineSettings","LabelBorder","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","ChartLocation","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","PivotChartSeriesErrorSettings","PivotChartSeriesTrendline","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","PivotChartSettingsIndexes","PivotChartSettingsMargin","PivotAxis","PivotTooltipSettings","PivotPieChartCenter","PivotZoomSettings","ChartSettings","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isPaging","updateDrilledItems","fieldDataObj","fieldListObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","query","frameMDXQuery","request","LCID","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","calColumnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","updateValueSortQuery","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_1","drillQuery","rawQuery","drillInfo_1","heirarchize","slicers","i_1","colUqName","getDimensionUniqueName","slicerUqName","dimension","hasAllMember","hierarchyNode","curElement","hierarchyNode_1","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","namedSetsPosition","colDepth","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","getCulture","getAxisFields","frameSortObject","setNamedSetsPosition","updateFieldlist","loadCalculatedMemberElements","updateFilterItems","xmlDoc","xmlaCellSet","countCells","newPage","prevPage","colMeasures","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","rowTuples","valCollection","measureInfo","getMeasureInfo","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","tuples","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","startTupPos","memPos","prevParent","typeColl","typeCollection","drillStartPos","startDrillUniquename","drillEndPos","firstTupMembers","drillAllow","withoutAllAllow","parentUniqueName","lastPos","lastMemPos","withoutAllDrilled","getCaptionCollectionWithMeasure","showTotals","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","memberUName","startsWith","memberCaption","parentUName","UName","Caption","currUName","currCaption","currLevel","uNames","captions","uName","uCollection","parentLevel","setDrillInfo","tuple","captionColection","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberPos","memberDepth","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","childMember","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","rPos","currentTuple","frameUniqueName","getParentUname","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","newPos","temporary","grandTotal","arrange","prevRowCell","prevColIndex","prevColRowCell","key_1","sortColumnHeaders","length_1","cellPos","l","length_2","q","weight","hgt","height1","hgt1","leng","m","pElement","cElement","o","hasLastMeasure","measureAvail","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","rowEndPos","startRowOrdinal","lastColCell","valElement","formatDate","mAxis","measureAxis","measureIndex","valueInfo","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","values_2","vOrdinalIndex","cRow","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillField","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","actualFilter","expression","parentHierarchy","isSelect","getFieldListItems","getAggregateType","isMembersAvail","selectedElements","parentNodes_1","currentItems","selectedElement","drilledItems","maxRows","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","isSearchFilter","loadLevelMember","isAllFilterData","filterParentQuery","dimProp","generateMembers","loadLevelMembers","memberUQName","getCalcChildMembers","searchString","maxNodeLimit","parentUqName","expanded","nodeSelect","fieldDate","hierarchyElements","fields_2","isAllMemberAvail","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","spriteCssClass","fields_3","dimensionName","dimensionCaption","defaultHierarchy","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_4","fieldObj","loadHierarchyElements","dataFields_4","fields_5","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_6","levelCaption","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_7","measureGRPName","measuresGroups","success","Ajax","contentType","beforeSend","onSuccess","DOMParser","parseFromString","onFailure","send","httpRequest","setRequestHeader","btoa","connectionInfo","getMDXQuery","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","_this_1","lastFilterInfo","lastCalcFieldInfo","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","remoteData","defaultItems","isCellBoxMultiSelection","scrollDirection","totColWidth","posCount","isModified","isInitialRendering","needsID","pivotRefresh","Component","setValue","mergePersistPivotData","PivotView_1","requiredModules","modules","allowConditionalFormatting","allowNumberFormatting","preRender","isIE","info","isTouchMode","initProperties","renderToolTip","defaultLocale","total","noValue","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Min","SampleVar","PopulationVar","RunningTotals","Max","Index","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","pdf","excel","csv","png","jpeg","svg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","grouping","true","false","decimalPlaces","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Currency","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormatingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","L10n","isDragging","onBeforeTooltipOpen","showTooltip","showTipPointer","mouseTrail","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","aggregateGroup","buildDefaultItems","exportGroupItems","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","chartPointClick","updatePageSettings","chartModule","colValues","rowValues","heightAsNumber","getWidthAsNumber","loadData","XMLHttpRequest","withCredentials","onreadystatechange","onReadyStateChange","readyState","DONE","jsonObject","responseText","cellTemplateFn","spinnerTemplate","createSpinner","loadArgs","updateClass","renderComplete","generateData","events.dataReady","onContentReady","keyEntity","addOnPersist","loadPersistData","persistData","pivotData","blazdataSource","localStorage","getItem","showConditionalFormattingDialog","withHeader","onPropertyChanged","updateGroupingReport","refreshData","treeViewModule","fieldTable","renderEmptyGrid","renderLayout","clonedDataSet","dataSet","refreshToolbar","createChartMenu","compile","innerHtml","tempElement","firstChild","resetBlazorTemplate","clonedDataSource","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","formatUnit","showSpinner","hideSpinner","isRefreshGrid","isSorted","isFiltered","isAggChange","isCalcChange","interopArguments","enginePopulatedEventMethod","isRequireUpdate","endDialog","datasourceSettings","excelExportModule","pdfExportModule","chartExport","orientation","exportModule","printChart","print","chartDrillInfo","clonedDrillMembers_1","drillMembers","drilledItem_1","drillArgs_1","onOlapDrill","clonedDrillMembers","drilledMember","drillSet","itemPos","fieldListSpinnerElement","isEmptyGrid","virtualDiv","mCnt","verOffset","unwireEvents","gridCells","gridCells_1","templateObject","isGrandTotal","isTotal","valueSortInfo","updateBlazorTemplate","hasField","getRowText","getColText","limit","colText","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","parentAt","lastSelectedElement","mouseMoveHandler","mouseUpHandler","CellClicked","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","setCommonColumnsWidth","onWindowResize","rowDeselect","selectRow","cellClick","getSelectedCellsPos","setSavedSelectedCells","applyRowSelection","rCount","colStart","colEnd","rowStart","isCtrl","showPopup","queryStringArray","isToggle","activeColumns","actColPos","rowSelectedList","isTargetSelected","scrollModule","setWidth","setHeight","overflowY","initEngine","isArray","clonedReport","pivot_3","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalLen","blazPivotValues","valLen","frameContent","rowPosition","getData","aggregateObj","bindTriggerEvents","getObject","executeQuery","requiresCount","result","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","insertRule","createTextNode","conditionalSettings","ilen","jlen","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","isDateGroupUpdated","drillObj","settingsObj","isExists","removeButtonFocus","numberFormattingModule","isServerRendered","cls.ROOT","showNumberFormattingDialog","NotifyPropertyChanges","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","cancelButtonClick","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldList","pivotFieldList","pivotChange","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","dialogOpen","offsetTop","adaptiveElement","selectedNodes","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","onShowFieldList","show","updateAdaptiveCalculatedField","TreeViewRenderer","fieldListSort","renderTreeDialog","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","centerDiv","axisHeader","renderTreeView","headerWrapper","None","Ascend","Descend","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeStateChange","autoCheck","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","dialogClose","textChange","addNode","liList","disabledList","fieldInfo","draggedNode","dragEventArgs","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","droppableButton","wrapperElement","li_1","id_1","selectedNode_1","fieldInfo_1","updateCheckState","updateSelectedNodes","updateReportSettings","updateNodeStateChange","removeFieldArgs","dropArgs","chkState","checkClass","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","updateDropIndicator","PivotButton","menuOption","PivotFieldList","axisField","AxisFieldRenderer","renderPivotButton","valuePos","showValuesButton","groupingBarSettings","isMeasureFieldsAvail","buttonWrapper","data-tag","cls.PIVOT_BUTTON_CLASS","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","calcElement","removeElement","pivotButton","createDraggable","valueData","valueFiedDropDownList","ddlDiv","availColindex","columnData","firstValueRow","columnFieldDropDownList","delimiter_1","aggregation","filterMem","updateButtontext","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","validateDropdown","createSummaryType","createMenuOption","openCalculatedFieldDialog","buttonCall","draggable","Draggable","clone","enableTailMode","enableAutoScroll","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","filterCLass","cls.FILTER_COMMON_CLASS","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","loop","actualFilterItems","updatedFilterItems_1","cloneElement","intDestroy","detach","fieldListPopup","bindEvents","cursorAt","isNOU","targetTouches","cursor","isButtonDropped","droppableTarget","thisObj","pivotObj","fieldName_1","$this_1","parsedData","dateMembers","FormattedText","ActualText","updateFilterEvents","bindDialogEvents","updateDialogButtonEvents","ClearFilter","updateFilterState","updateCustomFilter","removeDataSourceSettings","inputElementString","focusElement","filterEventArgs","refreshPivotButtonState","setFocus","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","currentMembers","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","sNodeLength","pivotButtons_2","selectedButton","pivotButtons_3","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","captionData","frameCustomProperties","staticPivotGridModule","fieldListRender","requireRefresh","pivotDataSet","this$_2","getFieldCaption","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","dataArgs","updateOlapDataSource","pivotId","ID","VARP","CALC","isFormula","existingReport","dialog","inputObj","droppable","newFields","isFieldExist","formulaText","fieldText","formatText","isEdit","currentFieldName","confirmPopUp","displayMenu","cls.GRID_REMOVE","createConfirmDialog","fieldClickHandler","cls.FORMAT","renderMobileLayout","accordionClickHandler","originalEvent","optionElement","accordionCreated","allElement","accordion","append","clearFormula","treeNode","edited","customString","memberTypeDrop","hierarchyDrop","formatDrop","readonly","curMenu","removeCalcField","calcfields","removeItem","removeNodes","validSummaryTypes","getValidSummaryType","duplicateTypes","createMenu","offset","selectContextMenu","applyFormula","currentObj","isExist","calculatedField","getCalculatedFieldInfo","calcInfo","cField","currentFormula","updateFormatSettings","addFormula","newFormat","isFormatExist","showError","cls.CALCINPUT","calcFields","getFieldListData","typeVal","icon","fieldDropped","textCovered","currentValue","cursorPos","selectionStart","textAfterText","textBeforeText","setSelectionRange","createDialog","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","timeOut","renderDialogElements","outerDiv","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","olapCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","formatStringData","createOlapDropElements","mData","fData","fieldData","memberTypeData_1","formatStringData_1","memberTypeObj","hierarchyListObj","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","editElement","editWrapper","liTextElement_1","spaceElement","prepend","createTypeContainer","input","data-ftxt","data-value","menuTypes","getAccordionData","cls.FLAT","cancelBtnClick","formatInputObj","Accordion","expanding","accordionExpand","clicked","created","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","isRemove","replaceFormula","cls.OK_BUTTON_CLASS","FieldList","initiateModule","aggregateCellInfo","updateControl","currentWidth","actualWidth","abs","AxisFields","indentDiv","GroupingBar","touchObj","Touch","tapHold","tapHoldHandler","groupingTable","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","rowPanel","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","axisPanels_1","displayMode","groupingChartTable","appendToElement","emptyRowCount","emptyHeader","colGroupElement","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","rowHeader_1","rhElement","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","valueColWidth","setColWidth","dropIndicatorUpdate","ConditionalFormatting","fieldsDropDown","conditionsDropDown","fontNameDropDown","fontSizeDropDown","addButtonClick","cls.FLAT_CLASS","refreshConditionValues","destroyColorPickers","addFormat","createDialogElements","renderDropDowns","renderColorPicker","innerDiv","table","tRow","td","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","cls.INPUT","valuespan","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","popupHeight","popupWidth","measureChange","conditionChange","fontNames","fontNameChange","fontSizeChange","ColorPicker","cls.FORMAT_COLOR_PICKER","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","charAt","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","currentReport","createToolbar","renderDialog","tool","getItems","allowKeyboard","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","resolve","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","toDisable","cls.TOOLBAR_GRID","menuItemClick","validTypes","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","reportLoad","itemData","saveReport","saveArgs","dialogShow","mdxQueryDialog","mdxDialog","renderMDXDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","newArgs","createNewReport","okBtnClick","copyMDXQuery","textArea","execCommand","err","reportInput","isExist_2","_this_3","reports_1","updateReportList","isExist_3","_this_4","renameText","renameArgs","isExist_1","_this_2","okButtonClick","removeArgs","isReportExists","getValidChartType","separator","cls.TOOLBAR_CHART","chartMenu","whitespaceRemove","focusToolBar","beforeItemRender","multipleAxesCheckbox","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","subTotalMenu","updateSubtotalSelection","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","stringify","updateItemElements","itemElements_1","inputCheckbox","checkboxObj","getLableState","showLableState","getAllChartItems","cls.PIVOT_DISABLE_ICON","_this_5","PdfPageOrientation","Landscape","createChartTypeDialog","updateChartType","chartTypes","chartDialog","chartTypesDialog","getDialogContent","chartTypeDialogUpdate","checkedShow","chartLableState","isMultiAxis","mainWrapper","optionWrapperDiv","optionTextDiv","dropOptionDiv","chartTypeDatasource","changeDropDown","checkboxWrap","labelCheckboxWrap","NumberFormatting","updateFormatting","renderControls","outerElement","tValue","valueLable","valueDrop","formatLable","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","valueChange","formatDropDown","dropDownChange","groupingDropDown","decimalDropDown","first","insertFormat","formatName","Grouping","isUpdate","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","currentField","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","checkBoxSelectionModule","activeLi","selectedInterval","intervalObj","min","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupOrders_1","orderedSettings","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.PivotView","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping"],"mappings":"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AAYomC,KACbK,EAAUloF,UAAW,0BAAuB,IAC/C+/C,IACI0B,aAAYumC,KACbE,EAAUloF,UAAW,wBAAqB,IAC7C+/C,IACI0B,aAAYF,KACb2mC,EAAUloF,UAAW,yBAAsB,IAC9C+/C,IACI0B,aAAYqmC,KACbI,EAAUloF,UAAW,mBAAgB,IACxC+/C,IACI0B,aAAYwmC,KACbC,EAAUloF,UAAW,oBAAiB,IACzC+/C,IACIU,cACDynC,EAAUloF,UAAW,kBAAe,IACvC+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,sBAAmB,IAC3C+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,kBAAe,IACvC+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,kBAAe,IACvC+/C,IACIU,gBACDynC,EAAUloF,UAAW,cAAW,IACnC+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,uBAAoB,IAC5C+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,2BAAwB,IAChD+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,yBAAsB,IAC9C+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,iCAA8B,IACtD+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,4BAAyB,IACjD+/C,IACIU,WAAS,SACVynC,EAAUloF,UAAW,aAAU,IAClC+/C,IACIU,WAAS,SACVynC,EAAUloF,UAAW,YAAS,IACjC+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,uBAAoB,IAC5C+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,2BAAwB,IAChD+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,wBAAqB,IAC7C+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,qBAAkB,IAC1C+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,6BAA0B,IAClD+/C,IACIU,YAAS,IACVynC,EAAUloF,UAAW,2BAAwB,IAChD+/C,IACIU,WAAS,MACVynC,EAAUloF,UAAW,iCAA8B,IACtD+/C,IACIU,WAAS,MACVynC,EAAUloF,UAAW,4BAAyB,IACjD+/C,IACIU,YAAS,IACVy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"}