{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/common/actions/common.js","../../src/pivotview/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/common/base/themes.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/base/pivotview.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        val = (value && value.getDay) ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : !isNaN(Number(value)) ?\n            'number' : typeof (value);\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                /* tslint:disable:no-any */\n                var framedSet = {};\n                /* tslint:enable:no-any */\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] = this.getClonedPivotValueObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotUtil.getClonedPivotValueObj = function (data) {\n        var keyPos = 0;\n        /* tslint:disable:no-any */\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.getDefinedObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                if (!(data[fields[keyPos]] === null || data[fields[keyPos]] === undefined)) {\n                    framedSet[fields[keyPos]] = data[fields[keyPos]];\n                }\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.isContainCommonElements = function (collection1, collection2) {\n        var isContain = false;\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    /* tslint:enable:no-any */\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = this.getDefinedObj({\n            type: dataSourceSettings.type,\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            fieldMapping: this.cloneFieldSettings(dataSourceSettings.fieldMapping),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings),\n            showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n            authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n        });\n        /* tslint:enable:no-any */\n        return clonesDataSource;\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            this.setPivotProperties(control, {\n                dataSourceSettings: this.getDefinedObj({\n                    type: dataSourceSettings.type,\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    fieldMapping: dataSourceSettings.fieldMapping,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings,\n                    showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n                    authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n                })\n                /* tslint:enable:no-any */\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                var field = {};\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type,\n                    dataType: set.dataType,\n                    showFilterIcon: set.showFilterIcon,\n                    showSortIcon: set.showSortIcon,\n                    showRemoveIcon: set.showRemoveIcon,\n                    showValueTypeIcon: set.showValueTypeIcon,\n                    showEditIcon: set.showEditIcon,\n                    allowDragAndDrop: set.allowDragAndDrop\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    order: set.order\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneAuthenticationObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                userName: collection.userName,\n                password: collection.password\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotUtil.getFieldInfo = function (fieldName, control) {\n        var rows = this.cloneFieldSettings(control.dataSourceSettings.rows);\n        var columns = this.cloneFieldSettings(control.dataSourceSettings.columns);\n        var values = this.cloneFieldSettings(control.dataSourceSettings.values);\n        var filters = this.cloneFieldSettings(control.dataSourceSettings.filters);\n        var fields = [rows, columns, values, filters];\n        for (var i = 0, len = fields.length; i < len; i++) {\n            for (var j = 0, cnt = (fields[i] ? fields[i].length : 0); j < cnt; j++) {\n                if (fields[i][j] && fields[i][j].name === fieldName) {\n                    /* tslint:disable-next-line:max-line-length */\n                    return { fieldName: fieldName, fieldItem: fields[i][j], axis: i === 0 ? 'rows' : i === 1 ? 'columns' : i === 2 ? 'values' : 'filters', position: j };\n                }\n            }\n        }\n        var fieldList = control.dataType === 'olap' ?\n            control.olapEngineModule.fieldList[fieldName] : control.engineModule.fieldList[fieldName];\n        var fieldItem = (fieldList ? {\n            name: fieldName,\n            caption: fieldList.caption,\n            baseField: fieldList.baseField,\n            baseItem: fieldList.baseItem,\n            isCalculatedField: fieldList.isCalculatedField,\n            isNamedSet: fieldList.isNamedSets,\n            showNoDataItems: fieldList.showNoDataItems,\n            showSubTotals: fieldList.showSubTotals,\n            type: fieldList.aggregateType,\n            showFilterIcon: fieldList.showFilterIcon,\n            showSortIcon: fieldList.showSortIcon,\n            showRemoveIcon: fieldList.showRemoveIcon,\n            showValueTypeIcon: fieldList.showValueTypeIcon,\n            showEditIcon: fieldList.showEditIcon,\n            allowDragAndDrop: fieldList.allowDragAndDrop\n        } : undefined);\n        return { fieldName: fieldName, fieldItem: fieldItem, axis: 'fieldlist', position: -1 };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.isButtonIconRefesh = function (prop, oldProp, newProp) {\n        var isButtonRefresh = false;\n        try {\n            if (prop === 'dataSourceSettings' && oldProp.dataSourceSettings && newProp.dataSourceSettings) {\n                var propValidation = ['notAvail', 'notAvail', 'notAvail', 'notAvail'];\n                var oldAxesProp = Object.keys(oldProp.dataSourceSettings);\n                var newAxesProp = Object.keys(newProp.dataSourceSettings);\n                if (oldAxesProp && newAxesProp && newAxesProp.length > 0 && oldAxesProp.length === newAxesProp.length) {\n                    var axes = ['rows', 'columns', 'values', 'filters'];\n                    /* tslint:disable:no-any */\n                    for (var i = 0; i < newAxesProp.length; i++) {\n                        var oldAxis = (newAxesProp[i] in oldProp.dataSourceSettings && !isNullOrUndefined(oldProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(oldProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        var newAxis = (newAxesProp[i] in newProp.dataSourceSettings && !isNullOrUndefined(newProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(newProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        if (axes.indexOf(newAxesProp[i]) !== -1 && axes.indexOf(oldAxesProp[i]) !== -1 &&\n                            oldAxis && newAxis && newAxis.length > 0 && oldAxis.length === newAxis.length) {\n                            /* tslint:disable-next-line:max-line-length */\n                            var options = ['showFilterIcon', 'showSortIcon', 'showRemoveIcon', 'showValueTypeIcon', 'showEditIcon', 'allowDragAndDrop'];\n                            for (var j = 0; j < newAxis.length; j++) {\n                                var oldAxisProp = Object.keys(oldProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                var newAxisProp = Object.keys(newProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                for (var k = 0; k < newAxisProp.length; k++) {\n                                    if (options.indexOf(newAxisProp[k]) !== -1 && options.indexOf(oldAxisProp[k]) !== -1) {\n                                        propValidation[i] = 'update';\n                                    }\n                                    else {\n                                        propValidation[i] = 'break';\n                                        break;\n                                    }\n                                }\n                                if (propValidation[i] === 'break') {\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            propValidation[i] = 'break';\n                        }\n                        if (propValidation[i] === 'break') {\n                            break;\n                        }\n                    }\n                    /* tslint:enable:no-any */\n                }\n                var a = 0;\n                var b = 0;\n                var c = 0;\n                for (var _i = 0, propValidation_1 = propValidation; _i < propValidation_1.length; _i++) {\n                    var validation = propValidation_1[_i];\n                    if (validation === 'break') {\n                        a++;\n                    }\n                    if (validation === 'notAvail') {\n                        b++;\n                    }\n                    if (validation === 'update') {\n                        c++;\n                    }\n                }\n                isButtonRefresh = (a > 0 || b === 4) ? false : (a === 0 && b < 4 && c > 0);\n            }\n        }\n        catch (exception) {\n            isButtonRefresh = false;\n        }\n        return isButtonRefresh;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPivotValues = function (pivotValues) {\n        var values = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                values[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        values[i][j] = {\n                            axis: pivotValues[i][j].Axis,\n                            actualText: pivotValues[i][j].ActualText,\n                            indexObject: pivotValues[i][j].IndexObject,\n                            index: pivotValues[i][j].Index,\n                            rowHeaders: pivotValues[i][j].RowHeaders,\n                            columnHeaders: pivotValues[i][j].ColumnHeaders,\n                            formattedText: pivotValues[i][j].FormattedText,\n                            actualValue: pivotValues[i][j].ActualValue,\n                            rowIndex: pivotValues[i][j].RowIndex,\n                            colIndex: pivotValues[i][j].ColIndex,\n                            colSpan: pivotValues[i][j].ColSpan,\n                            level: pivotValues[i][j].Level,\n                            rowSpan: pivotValues[i][j].RowSpan,\n                            isSum: pivotValues[i][j].IsSum,\n                            isGrandSum: pivotValues[i][j].IsGrandSum,\n                            valueSort: pivotValues[i][j].ValueSort,\n                            ordinal: pivotValues[i][j].Ordinal,\n                            hasChild: pivotValues[i][j].HasChild,\n                            isDrilled: pivotValues[i][j].IsDrilled,\n                            value: pivotValues[i][j].Value,\n                            type: pivotValues[i][j].Type,\n                            members: pivotValues[i][j].Members\n                        };\n                    }\n                }\n            }\n        }\n        return values;\n    };\n    PivotUtil.formatPdfHeaderFooter = function (pdf) {\n        var contents = [];\n        if (!isNullOrUndefined(pdf)) {\n            for (var i = 0; i < pdf.length; i++) {\n                var a = pdf[i];\n                var content = {\n                    type: a.Type,\n                    pageNumberType: a.PageNumberType,\n                    style: a.Style ? {\n                        penColor: a.Style.PenColor,\n                        penSize: a.Style.PenSize,\n                        dashStyle: a.Style.DashStyle,\n                        textBrushColor: a.Style.TextBrushColor,\n                        textPenColor: a.Style.TextPenColor,\n                        fontSize: a.Style.FontSize,\n                        hAlign: a.Style.HAlign,\n                        vAlign: a.Style.VAlign\n                    } : a.Style,\n                    points: a.Points !== null ? {\n                        x1: a.Points.X1,\n                        y1: a.Points.Y1,\n                        x2: a.Points.X2,\n                        y2: a.Points.Y2\n                    } : null,\n                    format: a.Format,\n                    position: a.Position !== null ? {\n                        x: a.Position.X,\n                        y: a.Position.Y,\n                    } : null,\n                    size: a.Size !== null ? {\n                        height: a.Size.Height,\n                        width: a.Size.Width,\n                    } : null,\n                    src: a.Src,\n                    value: a.Value,\n                    font: a.Font\n                };\n                contents.push(content);\n            }\n        }\n        return contents;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPdfExportProperties = function (pdf) {\n        var values;\n        values = this.getDefinedObj({\n            pageOrientation: typeof pdf.PageOrientation === 'string' ? pdf.PageOrientation : null,\n            pageSize: typeof pdf.PageSize === 'string' ? pdf.PageSize : null,\n            header: !isNullOrUndefined(pdf.Header) ? {\n                fromTop: pdf.Header.FromTop,\n                height: pdf.Header.Height,\n                contents: this.formatPdfHeaderFooter(pdf.Header.Contents),\n            } : null,\n            columns: pdf.Columns,\n            footer: !isNullOrUndefined(pdf.Footer) ? {\n                fromTop: pdf.Footer.FromBottom,\n                height: pdf.Footer.Height,\n                contents: this.formatPdfHeaderFooter(pdf.Footer.Contents),\n            } : null,\n            includeHiddenColumn: pdf.IncludeHiddenColumn,\n            dataSource: pdf.DataSource,\n            exportType: typeof pdf.ExportType === 'string' ? pdf.ExportType : null,\n            theme: !isNullOrUndefined(pdf.Theme) ? {\n                header: pdf.Theme.Header,\n                record: pdf.Theme.Record,\n                caption: pdf.Theme.Caption\n            } : null,\n            fileName: pdf.FileName,\n            hierarchyExportMode: typeof pdf.HierarchyExportMode === 'string' ? pdf.HierarchyExportMode : null,\n            allowHorizontalOverflow: pdf.AllowHorizontalOverflow\n        });\n        return values;\n    };\n    PivotUtil.formatExcelStyle = function (style) {\n        var prop;\n        if (!isNullOrUndefined(style)) {\n            prop = this.getDefinedObj({\n                fontColor: style.FontColor,\n                fontName: style.FontName,\n                fontSize: style.FontSize,\n                hAlign: style.HAlign === String ? style.HAlign : null,\n                vAlign: style.VAlign === String ? style.VAlign : null,\n                bold: style.Bold,\n                indent: style.Indent,\n                italic: style.Italic,\n                underline: style.Underline,\n                backColor: style.BackColor,\n                wrapText: style.WrapText,\n                borders: style.Borders,\n                numberFormat: style.NumberFormat,\n                type: style.Type\n            });\n        }\n        return prop;\n    };\n    PivotUtil.formatExcelCell = function (cell) {\n        var cells = [];\n        if (!isNullOrUndefined(cell)) {\n            for (var i = 0; i < cell.length; i++) {\n                var prop = this.getDefinedObj({\n                    index: !isNullOrUndefined(cell[i].Index) ? cell[i].Index : null,\n                    colSpan: !isNullOrUndefined(cell[i].ColSpan) ? cell[i].ColSpan : null,\n                    value: !isNullOrUndefined(cell[i].Value) ? cell[i].Value : null,\n                    hyperlink: {\n                        target: !isNullOrUndefined(cell[i].Hyperlink) ? cell[i].Hyperlink.Target : null,\n                        displayText: !isNullOrUndefined(cell[i].Hyperlink) ? cell[i].Hyperlink.DisplayText : null\n                    },\n                    styles: this.formatExcelStyle(cell[i].Style),\n                    rowSpan: !isNullOrUndefined(cell[i].RowSpan) ? cell[i].RowSpan : null\n                });\n            }\n        }\n        return cells;\n    };\n    PivotUtil.formatExcelHeaderFooter = function (excel) {\n        var rows = [];\n        if (!isNullOrUndefined(excel)) {\n            for (var i = 0; i < excel.Rows.length; i++) {\n                var row = excel.Rows[i];\n                var prop = this.getDefinedObj({\n                    index: !isNullOrUndefined(row.Index) ? row.Index : null,\n                    cells: this.formatExcelCell(row.Cells),\n                    grouping: !isNullOrUndefined(row.Grouping) ? row.Grouping : null\n                });\n                rows.push(prop);\n            }\n        }\n        return rows;\n    };\n    PivotUtil.formatExcelExportProperties = function (excel) {\n        var prop;\n        prop = this.getDefinedObj({\n            dataSource: excel.DataSource,\n            query: excel.Query,\n            multipleExport: this.getDefinedObj({\n                type: !isNullOrUndefined(excel.MultipleExport) ? excel.MultipleExport.Type : null,\n                blankRows: !isNullOrUndefined(excel.MultipleExport) ? excel.MultipleExport.BlankRows : null\n            }),\n            header: this.getDefinedObj({\n                headerRows: !isNullOrUndefined(excel.Header) ? excel.Header.HeaderRows : null,\n                rows: this.formatExcelHeaderFooter(excel.Header)\n            }),\n            footer: this.getDefinedObj({\n                footerRows: !isNullOrUndefined(excel.Footer) ? excel.Footer.FooterRows : null,\n                rows: this.formatExcelHeaderFooter(excel.Footer)\n            }),\n            columns: excel.Columns,\n            exportType: typeof excel.ExportType === 'string' ? excel.ExportType : undefined,\n            includeHiddenColumn: excel.IncludeHiddenColumn,\n            theme: !isNullOrUndefined(excel.Theme) ? {\n                header: this.formatExcelStyle(excel.Theme.Header),\n                record: this.formatExcelStyle(excel.Theme.Record),\n                caption: this.formatExcelStyle(excel.Theme.Caption)\n            } : undefined,\n            fileName: excel.FileName,\n            hierarchyExportMode: typeof excel.HierarchyExportMode === 'string' ? excel.HierarchyExportMode : undefined\n        });\n        return prop;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatFieldList = function (fieldList) {\n        var keys = Object.keys(fieldList);\n        var fList = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (fieldList[keys[i]]) {\n                fList[keys[i]] = {\n                    id: fieldList[keys[i]].Id,\n                    caption: fieldList[keys[i]].Caption,\n                    type: fieldList[keys[i]].Type,\n                    formatString: fieldList[keys[i]].FormatString,\n                    index: fieldList[keys[i]].Index,\n                    members: fieldList[keys[i]].Members,\n                    formattedMembers: fieldList[keys[i]].FormattedMembers,\n                    dateMember: fieldList[keys[i]].DateMember,\n                    filter: fieldList[keys[i]].Filter,\n                    sort: fieldList[keys[i]].Sort,\n                    aggregateType: fieldList[keys[i]].AggregateType,\n                    baseField: fieldList[keys[i]].BaseField,\n                    baseItem: fieldList[keys[i]].BaseItem,\n                    filterType: fieldList[keys[i]].FilterType,\n                    format: fieldList[keys[i]].Format,\n                    formula: fieldList[keys[i]].Formula,\n                    isSelected: fieldList[keys[i]].IsSelected,\n                    isExcelFilter: fieldList[keys[i]].IsExcelFilter,\n                    showNoDataItems: fieldList[keys[i]].ShowNoDataItems,\n                    isCustomField: fieldList[keys[i]].IsCustomField,\n                    showFilterIcon: fieldList[keys[i]].ShowFilterIcon,\n                    showSortIcon: fieldList[keys[i]].ShowSortIcon,\n                    showRemoveIcon: fieldList[keys[i]].ShowRemoveIcon,\n                    showEditIcon: fieldList[keys[i]].ShowEditIcon,\n                    showValueTypeIcon: fieldList[keys[i]].ShowValueTypeIcon,\n                    allowDragAndDrop: fieldList[keys[i]].AllowDragAndDrop,\n                    isCalculatedField: fieldList[keys[i]].IsCalculatedField,\n                    showSubTotals: fieldList[keys[i]].ShowSubTotals\n                };\n            }\n        }\n        return fList;\n    };\n    PivotUtil.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    PivotUtil.getLocalizedObject = function (control) {\n        var locale = new Object();\n        locale[\"Null\"] = control.localeObj.getConstant('null');\n        locale[\"Years\"] = control.localeObj.getConstant('Years');\n        locale[\"Quarters\"] = control.localeObj.getConstant('Quarters');\n        locale[\"Months\"] = control.localeObj.getConstant('Months');\n        locale[\"Days\"] = control.localeObj.getConstant('Days');\n        locale[\"Hours\"] = control.localeObj.getConstant('Hours');\n        locale[\"Minutes\"] = control.localeObj.getConstant('Minutes');\n        locale[\"Seconds\"] = control.localeObj.getConstant('Seconds');\n        locale[\"QuarterYear\"] = control.localeObj.getConstant('QuarterYear');\n        locale[\"Of\"] = control.localeObj.getConstant('of');\n        locale[\"Qtr\"] = control.localeObj.getConstant('qtr');\n        locale[\"Undefined\"] = control.localeObj.getConstant('undefined');\n        locale[\"GroupOutOfRange\"] = control.localeObj.getConstant('groupOutOfRange');\n        locale[\"Group\"] = control.localeObj.getConstant('group');\n        return locale;\n    };\n    PivotUtil.updateReport = function (control, report) {\n        control.setProperties({ dataSourceSettings: { rows: [] } }, true);\n        control.setProperties({ dataSourceSettings: { columns: [] } }, true);\n        control.setProperties({ dataSourceSettings: { formatSettings: [] } }, true);\n        for (var i = 0; i < report.Rows.length; i++) {\n            control.dataSourceSettings.rows.push({\n                name: report.Rows[i].Name,\n                caption: report.Rows[i].Caption,\n                showNoDataItems: report.Rows[i].ShowNoDataItems,\n                baseField: report.Rows[i].BaseField,\n                baseItem: report.Rows[i].BaseItem,\n                showFilterIcon: report.Rows[i].ShowFilterIcon,\n                showSortIcon: report.Rows[i].ShowSortIcon,\n                showEditIcon: report.Rows[i].ShowEditIcon,\n                showRemoveIcon: report.Rows[i].ShowRemoveIcon,\n                showSubTotals: report.Rows[i].ShowValueTypeIcon,\n                allowDragAndDrop: report.Rows[i].AllowDragAndDrop,\n                axis: report.Rows[i].Axis,\n                dataType: report.Rows[i].DataType,\n                isCalculatedField: report.Rows[i].IsCalculatedField,\n                showValueTypeIcon: report.Rows[i].ShowValueTypeIcon,\n                type: report.Rows[i].Type\n            });\n        }\n        for (var i = 0; i < report.Columns.length; i++) {\n            control.dataSourceSettings.columns.push({\n                name: report.Columns[i].Name,\n                caption: report.Columns[i].Caption,\n                showNoDataItems: report.Columns[i].ShowNoDataItems,\n                baseField: report.Columns[i].BaseField,\n                baseItem: report.Columns[i].BaseItem,\n                showFilterIcon: report.Columns[i].ShowFilterIcon,\n                showSortIcon: report.Columns[i].ShowSortIcon,\n                showEditIcon: report.Columns[i].ShowEditIcon,\n                showRemoveIcon: report.Columns[i].ShowRemoveIcon,\n                showSubTotals: report.Columns[i].ShowValueTypeIcon,\n                allowDragAndDrop: report.Columns[i].AllowDragAndDrop,\n                axis: report.Columns[i].Axis,\n                dataType: report.Columns[i].DataType,\n                isCalculatedField: report.Columns[i].IsCalculatedField,\n                showValueTypeIcon: report.Columns[i].ShowValueTypeIcon,\n                type: report.Columns[i].Type\n            });\n        }\n        for (var i = 0; i < report.FormatSettings.length; i++) {\n            control.dataSourceSettings.formatSettings.push({\n                name: report.FormatSettings[i].Name,\n                format: report.FormatSettings[i].Format,\n                type: report.FormatSettings[i].Type,\n                currency: report.FormatSettings[i].Currency,\n                maximumFractionDigits: report.FormatSettings[i].MaximumFractionDigits,\n                maximumSignificantDigits: report.FormatSettings[i].MaximumSignificantDigits,\n                minimumFractionDigits: report.FormatSettings[i].MinimumFractionDigits,\n                minimumIntegerDigits: report.FormatSettings[i].MinimumIntegerDigits,\n                minimumSignificantDigits: report.FormatSettings[i].MinimumSignificantDigits,\n                skeleton: report.FormatSettings[i].Skeleton,\n                useGrouping: report.FormatSettings[i].UseGrouping\n            });\n        }\n    };\n    PivotUtil.generateUUID = function () {\n        var d = new Date().getTime();\n        var d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16;\n            if (d > 0) {\n                r = (d + r) % 16 | 0;\n                d = Math.floor(d / 16);\n            }\n            else {\n                r = (d2 + r) % 16 | 0;\n                d2 = Math.floor(d2 / 16);\n            }\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        /** @hidden */\n        this.fieldKeys = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        this.fieldMapping = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn) {\n        this.getValueCellInfo = fn;\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        var fields;\n        var val;\n        var filterRw;\n        this.globalize = new Internationalization();\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.clonedReport = customProperties ? customProperties.clonedReport : {};\n        this.enableSort = dataSource.enableSorting;\n        this.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true : dataSource.showHeaderWhenEmpty;\n        this.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true : dataSource.showColumnSubTotals;\n        this.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true : dataSource.showRowGrandTotals;\n        this.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true : dataSource.showColumnGrandTotals;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = dataSource;\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = (isBlazor() && !dataSource.dataSource && this.data && this.data.length > 0) ?\n                this.data : dataSource.dataSource;\n        }\n        if (this.data && this.data[0]) {\n            if (!this.fieldList) {\n                if (dataSource.type === 'CSV') {\n                    this.fields = this.data.shift();\n                }\n                else {\n                    this.fields = Object.keys(this.data[0]);\n                }\n                for (var i = 0; i < this.fields.length; i++) {\n                    this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n                }\n            }\n            if (customProperties && customProperties.pageSettings && customProperties.pageSettings.allowDataCompression) {\n                this.actualData = this.data;\n                this.data = this.getGroupedRawData(dataSource);\n            }\n            this.rows = dataSource.rows ? dataSource.rows : [];\n            this.columns = dataSource.columns ? dataSource.columns : [];\n            this.filters = dataSource.filters ? dataSource.filters : [];\n            this.values = dataSource.values ? dataSource.values : [];\n            this.formats = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.groups = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            fields = this.getGroupData(this.data);\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n            }\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMutiMeasures = this.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = this.pageSettings && this.pageSettings.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(dataSource, Object.keys(this.fieldList));\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var columnLength = this.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.columns[columnLength].name] = this.columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (dataSource, fields) {\n        var report = {};\n        report[0] = dataSource.rows;\n        report[1] = dataSource.columns;\n        report[2] = dataSource.values;\n        report[3] = dataSource.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if ((this.excludeFields.indexOf(report[pos][cnt].name) > -1) || (!isNullOrUndefined(fields) && fields.indexOf(report[pos][cnt].name) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                }\n            }\n            pos++;\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = this.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[this.fieldKeys[countFields[vPos]]] = isNullOrUndefined(currData[this.fieldKeys[countFields[vPos]]]) ? currData[this.fieldKeys[countFields[vPos]]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[this.fieldKeys[headerFields[hPos]]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[this.fieldKeys[currFieldName]];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                groupRawData[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    /* tslint:enable */\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getGroupData = function (data) {\n        var _this = this;\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if (group.type === 'Date' && this_1.groupingFields[fieldName]) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' || !this_1.groupingFields[fieldName]) {\n                        /* tslint:disable:typedef */\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (Number(a[_this.fieldKeys[fieldName]]) > Number(b[_this.fieldKeys[fieldName]]))\n                                ? 1 : ((Number(b[_this.fieldKeys[fieldName]]) > Number(a[_this.fieldKeys[fieldName]]))\n                                ? -1 : 0); });\n                        }\n                        /* tslint:enable:typedef */\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                else if (group.type === 'Custom' && this_1.fields.indexOf(fieldName + '_custom_group') > -1) {\n                    return { value: fieldkeySet };\n                }\n                var len = data.length;\n                /* tslint:disable:max-line-length */\n                while (len--) {\n                    var item = data[len];\n                    if (item[this_1.fieldKeys[fieldName]] && group.type === 'Date') {\n                        var date = new Date(item[this_1.fieldKeys[fieldName]].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : (fieldName === newFieldName ? date : new Date(newDate.setFullYear(date.getFullYear())).toString()));\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : (fieldName === newFieldName ? date : new Date(newDate.setMonth(date.getMonth(), newDate.getDate())).toString()));\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : (fieldName === newFieldName ? date : new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString()));\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : (fieldName === newFieldName ? date : new Date(newDate.setHours(date.getHours())).toString()));\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : (fieldName === newFieldName ? date : new Date(newDate.setMinutes(date.getMinutes())).toString()));\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : (fieldName === newFieldName ? date : new Date(newDate.setSeconds(date.getSeconds())).toString()));\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, Number(item[this_1.fieldKeys[fieldName]]));\n                        item[this_1.fieldKeys[fieldName]] = isInRangeAvail ? undefined : item[this_1.fieldKeys[fieldName]];\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Custom' && group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            {\n                                var cGroup = customGroups[i];\n                                if (cGroup.items && cGroup.items.length > 1) {\n                                    customGroupFieldName = newFieldName;\n                                    this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                    if (this_1.fields.indexOf(newFieldName) === -1) {\n                                        this_1.fields.push(newFieldName);\n                                    }\n                                    var isDataMatch = PivotUtil.inArray(item[this_1.fieldKeys[fieldName]].toString(), cGroup.items) === -1 ? false : true;\n                                    item[this_1.fieldKeys[newFieldName]] = (isDataMatch ? (cGroup.groupName && cGroup.groupName !== '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue && groupValue !== item[this_1.fieldKeys[fieldName]].toString()) ?\n                                        groupValue : item[this_1.fieldKeys[fieldName]].toString());\n                                    groupValue = item[this_1.fieldKeys[newFieldName]];\n                                }\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    //this.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.rows;\n                                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                                    while (gCnt--) {\n                                        var caption_1 = actualField.caption ? actualField.caption : actualField.name;\n                                        if (this_1.clonedReport) {\n                                            var clonedFields = this_1.clonedReport.rows;\n                                            clonedFields = clonedFields.concat(this_1.clonedReport.columns, this_1.clonedReport.values, this_1.clonedReport.filters);\n                                            var cloneField = PivotUtil.getFieldByName(groupKeys[gCnt], clonedFields);\n                                            if (cloneField) {\n                                                caption_1 = cloneField.caption ? cloneField.caption : cloneField.name;\n                                            }\n                                        }\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + caption_1 + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                                showFilterIcon: actualField.showFilterIcon,\n                                                showSortIcon: actualField.showSortIcon,\n                                                showEditIcon: actualField.showEditIcon,\n                                                showRemoveIcon: actualField.showRemoveIcon,\n                                                showSubTotals: actualField.showValueTypeIcon,\n                                                allowDragAndDrop: actualField.allowDragAndDrop\n                                            };\n                                            axis.splice(i, 0, newField);\n                                        }\n                                    }\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.formats.length; i < len_3; i++) {\n                            if (this_1.formats[i].name === groupKeys[gCnt]) {\n                                this_1.formats.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.formats.push(formatSettings);\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var startValue = void 0;\n                    var endValue = void 0;\n                    var cStartValue = void 0;\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    while (cnt < dataLength) {\n                        unframedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        if (data[cnt][this_1.fieldKeys[fieldName]] && framedSet.indexOf(Number(data[cnt][this_1.fieldKeys[fieldName]])) === -1) {\n                            framedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        }\n                        cnt++;\n                    }\n                    var framedSetLength = Math.max.apply(Math, framedSet);\n                    for (var i = framedSet[0], len_4 = framedSetLength; i < len_4; i++) {\n                        if (unframedSet.indexOf(i) < 0) {\n                            var duplicateData = this_1.frameData(data[0]);\n                            duplicateData[this_1.fieldKeys[fieldName]] = i;\n                            var index = unframedSet.lastIndexOf(i - 1);\n                            unframedSet.splice(index + 1, 0, i);\n                            data.splice(index + 1, 0, duplicateData);\n                        }\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        if (data[cnt] && data[cnt][this_1.fieldKeys[fieldName]]) {\n                            cStartValue = Number(data[cnt][this_1.fieldKeys[fieldName]]);\n                            cEndValue = cStartValue + (group.rangeInterval - 1);\n                            startValue = (!startValue) ? cStartValue : startValue;\n                            endValue = ((!endValue) ? ((cEndValue > framedSetLength) ? framedSetLength : cEndValue) : ((endValue > framedSetLength) ? framedSetLength : endValue));\n                            if (cStartValue >= startValue && cStartValue <= endValue) {\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            else if (cStartValue > endValue && cStartValue === endValue + 1) {\n                                startValue = endValue + 1;\n                                endValue = ((startValue + (group.rangeInterval - 1) > framedSetLength) ? framedSetLength : startValue + (group.rangeInterval - 1));\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            var keys = Object.keys(data[cnt]);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((data[cnt][key]) ? true : false);\n                            }\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? data[cnt] : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_5 = this_1.formats.length; i < len_5; i++) {\n                        if (this_1.formats[i].name === fieldName) {\n                            this_1.formats.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var dataFields = this_1.rows;\n                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                    var pattern = [];\n                    if (!caption || caption === '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption === '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                        showSubTotals: actualField.showValueTypeIcon,\n                                        allowDragAndDrop: actualField.allowDragAndDrop,\n                                        showFilterIcon: actualField.showFilterIcon,\n                                        showSortIcon: actualField.showSortIcon,\n                                        showRemoveIcon: actualField.showRemoveIcon,\n                                        showEditIcon: actualField.showEditIcon\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption === '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                        showRemoveIcon: customGroupField.showRemoveIcon,\n                                        showSubTotals: customGroupField.showValueTypeIcon,\n                                        allowDragAndDrop: customGroupField.allowDragAndDrop,\n                                        showFilterIcon: customGroupField.showFilterIcon,\n                                        showSortIcon: customGroupField.showSortIcon,\n                                        showEditIcon: customGroupField.showEditIcon\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.formats));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.formats.push(formatfield);\n                    }\n                }\n                /* tslint:enable:max-line-length */\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        //this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.frameData = function (data) {\n        var fields = Object.keys(data);\n        var keyPos = 0;\n        var framedSet = {};\n        while (keyPos < fields.length) {\n            framedSet[fields[keyPos]] = undefined;\n            keyPos++;\n        }\n        return framedSet;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (startValue && cValue < startValue || endValue && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getFormattedFields = function (fields) {\n        var cnt = this.formats.length;\n        while (cnt--) {\n            this.formatFields[this.formats[cnt].name] = this.formats[cnt];\n            if (this.formats[cnt].type) {\n                this.dateFormatFunction[this.formats[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(this.formats[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: this.formats[cnt].type\n                    })\n                };\n            }\n            // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n            // if (fields[len] && fields[len].name === this.formats[cnt].name) {\n            //     this.formatFields[fields[len].name] = this.formats[cnt];\n            // }\n            // }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var keys = this.fields;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        this.getFormattedFields(dataFields);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var lenE = this.excludeFields.length;\n        lenE = lenE - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.excludeFields[lenE]);\n            this.fields.splice(index, 1);\n            if (this.fieldList) {\n                delete this.fieldList[this.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var len = keys.length;\n        var dataTypes = ['string', 'number', 'datetime', 'date', 'boolean'];\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    this.fieldList[key].showFilterIcon = (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true;\n                    this.fieldList[key].showRemoveIcon = (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true;\n                    this.fieldList[key].showSortIcon = (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true;\n                    this.fieldList[key].showEditIcon = (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true;\n                    this.fieldList[key].showValueTypeIcon = (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true;\n                    this.fieldList[key].allowDragAndDrop = (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true;\n                    this.fieldList[key].isCalculatedField = (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false;\n                    this.fieldList[key].showNoDataItems = (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false;\n                    this.fieldList[key].showSubTotals = (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true;\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].formattedMembers = {};\n                        this.fieldList[key].members = {};\n                    }\n                }\n                else {\n                    type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                        field.dataType.toLowerCase() : type;\n                    this.fieldList[key] = {\n                        caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                        id: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        isSelected: false,\n                        sort: isSort ? 'Ascending' : 'None',\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                        showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                            field.showRemoveIcon : true,\n                        showFilterIcon: (field && 'showFilterIcon' in field) ?\n                            field.showFilterIcon : true,\n                        showSortIcon: (field && 'showSortIcon' in field) ?\n                            field.showSortIcon : true,\n                        showNoDataItems: (field && 'showNoDataItems' in field) ?\n                            field.showNoDataItems : false,\n                        isCalculatedField: (field && 'isCalculatedField' in field) ?\n                            field.isCalculatedField : false,\n                        showEditIcon: (field && 'showEditIcon' in field) ?\n                            field.showEditIcon : true,\n                        showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                            field.showValueTypeIcon : true,\n                        allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                            field.allowDragAndDrop : true,\n                        showSubTotals: (field && 'showSubTotals' in field) ?\n                            field.showSubTotals : true\n                    };\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                    field.dataType.toLowerCase() : PivotUtil.getType(fields[this.fieldKeys[key]]);\n                this.fieldList[key] = {\n                    id: key,\n                    caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                    showFilterIcon: (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true,\n                    showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true,\n                    showSortIcon: (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true,\n                    showEditIcon: (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true,\n                    showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true,\n                    allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true,\n                    showSubTotals: (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true,\n                    showNoDataItems: (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false,\n                    isCalculatedField: (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false\n                };\n            }\n        }\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.getMappingField = function (key) {\n        var field = {};\n        if (this.fieldMapping.length > 0) {\n            for (var index = 0, cnt = this.fieldMapping.length; index < cnt; index++) {\n                if (this.fieldMapping[index].name === key) {\n                    field = this.fieldMapping[index];\n                    break;\n                }\n            }\n        }\n        return field;\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var cnt = fields.length;\n        var lnt = this.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n                field.allowDragAndDrop = fields[cnt].allowDragAndDrop;\n                field.showFilterIcon = fields[cnt].showFilterIcon;\n                field.showSortIcon = fields[cnt].showSortIcon;\n                field.showRemoveIcon = fields[cnt].showRemoveIcon;\n                field.showValueTypeIcon = fields[cnt].showValueTypeIcon;\n                field.showEditIcon = fields[cnt].showEditIcon;\n                field.showSubTotals = fields[cnt].showSubTotals;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.calculatedFieldSettings[lnt].name].isCalculatedField = true;\n                this.fieldList[this.calculatedFieldSettings[lnt].name].formula = this.calculatedFieldSettings[lnt].formula;\n            }\n        }\n    };\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).replace(/ +/g, '');\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            /* tslint:disable:typedef */\n            field.name = calcProperties ? calcProperties.name : field.name;\n            keys = keys.filter(function (key) { return key !== field.name; });\n            keys.push(field.name);\n            /* tslint:enable:typedef */\n            var formulaType = actualFormula.split('\\\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len];\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar'].indexOf(selectedString) !== -1) {\n                    var index = keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type,\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type,\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.validateValueFields = function () {\n        this.isValueHasAdvancedAggregate = false;\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var value = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(value.type) !== -1) {\n                this.isValueHasAdvancedAggregate = true;\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function (data, indMat) {\n        var keys = this.fields;\n        var dlen = data.length;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        for (var kl = 0; kl < kLn; kl++) {\n            var key = keys[kl];\n            if (!fList[key].members || this.allowDataCompression) {\n                fList[key].members = {};\n            }\n            if (!fList[key].formattedMembers || this.allowDataCompression) {\n                fList[key].formattedMembers = {};\n            }\n            if (!fList[key].dateMember || this.allowDataCompression) {\n                fList[key].dateMember = [];\n            }\n            var members = fList[key].members;\n            var isDataAvail = Object.keys(members).length > 0 ? true : false;\n            var formattedMembers = fList[key].formattedMembers;\n            var dateMember = fList[key].dateMember;\n            var type = fList[key].type;\n            var membersCnt = 0;\n            var fmembersCnt = 0;\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var mkey = data[dl][this.fieldKeys[key]];\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var fKey = mkey;\n                    var formattedValue = (this.pageSettings && !(this.formatFields[key] &&\n                        (['date', 'dateTime', 'time'].indexOf(this.formatFields[key].type) > -1))) ? ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    }) : this.getFormattedValue(mkey, key);\n                    if (formattedValue.formattedText) {\n                        fKey = formattedValue.formattedText;\n                    }\n                    if (!members.hasOwnProperty(mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                        /* tslint:disable-next-line:max-line-length */\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: (formattedValue.dateText ? formattedValue.dateText : formattedValue.actualText) });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                    if (!formattedMembers.hasOwnProperty(fKey)) {\n                        fmembersCnt++;\n                        formattedMembers[fKey] = {\n                            index: [dl], ordinal: fmembersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                    }\n                    else {\n                        formattedMembers[fKey].index.push(dl);\n                    }\n                }\n                if (!(indMat[dl])) {\n                    indMat[dl] = [];\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                else {\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                // }\n            }\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.generateValueMatrix = function (data) {\n        var keys = this.fields;\n        var len = data.length;\n        var vMat = [];\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var record = data[len];\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len])) {\n            vMat[len] = [];\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                vMat[len][tkln] = (flList[key].type === 'number' || isNullOrUndefined(data[len][this.fieldKeys[key]])) ?\n                    !isNaN(Number(data[len][this.fieldKeys[key]])) ?\n                        Number(data[len][this.fieldKeys[key]]) : undefined : 1;\n            }\n        }\n        return vMat;\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.indexMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var filters = this.filters;\n        var isInclude = false;\n        var filter = [];\n        //let type: string;\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln].filter ? cols[cln].filter.items : [];\n             if (filter.length && cols[cln].filter.type && cols[cln].filter.type === 'include') {\n                 //type = cols[cln].filter.type;\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            var field = this.fieldList[fieldName];\n            var members = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            isValidFilterElement = true;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var field_1 = _a[_i];\n                if (fieldName === field_1.name) {\n                    isValidFilterElement = false;\n                    break;\n                }\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _b = 0, dataFields_2 = dataFields; _b < dataFields_2.length; _b++) {\n                var field = dataFields_2[_b];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            /* tslint:disable:max-line-length */\n            if (filterElement.type === 'Label') {\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ? new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ? new Date(filterElement.value2) : filterElement.value2;\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            /* tslint:enable:max-line-length */\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        // }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = (this.formatFields[name] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[name].type) > -1)) ?\n            field.formattedMembers : field.members;\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (filter[fln]) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        /* tslint:disable-next-line:max-line-length */\n        var allMember = extend({}, (type === 'row' && this.rowGrandTotal ? this.rowGrandTotal : type === 'column' && this.columnGrandTotal ? this.columnGrandTotal : rows[rows.length - 1]), null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            if ((type === 'row' && this.rowGrandTotal === null) || (type === 'column' && this.columnGrandTotal === null)) {\n                rowFilterData.push(allMember);\n            }\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getCellSet(this.rawIndexObject),\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (index.hasOwnProperty(key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (index.hasOwnProperty(key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.data = dataSource.dataSource;\n        if (this.pageSettings && this.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        this.indexMatrix = [];\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].formattedMembers = {};\n            this.fieldList[field].dateMember = [];\n        }\n        this.fillFieldMembers(this.data, this.indexMatrix);\n        this.valueMatrix = this.generateValueMatrix(this.data);\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.generateGridData = function (dataSource, headerCollection) {\n        var keys = this.fields;\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        var size = 1;\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        var st1 = new Date().getTime();\n        this.validateValueFields();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0) {\n                    this.rMembers =\n                        this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                /* tslint:disable */\n                if (columns.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                        filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                /* tslint:enable */\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        this.pivotValues = [];\n        var gridData = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var valuesCount = (this.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders;\n            var columnHeaders = this.saveDataHeaders.columnHeaders;\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, (this.columnGrandTotal ? this.columnGrandTotal : columnHeaders[columnHeaders.length - 1]), valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, (this.rowGrandTotal ? this.rowGrandTotal : rowHeaders[rowHeaders.length - 1]), valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = extend({}, this.fieldList, null, true);\n            this.indexMatrix = [];\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var pageSize = 1;\n            this.updateFilterMembers(dataSource);\n            /* tslint:disable */\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            /* tslint:enable */\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.pageSettings) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        //this.getHeaderData(rmembers, rowheads, gridData, 0);              \n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        var st2 = new Date().getTime();\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n    };\n    PivotEngine.prototype.updateHeaders = function (rowFlag, columnFlag) {\n        /* removing the row grant-total members */\n        rowFlag = (isNullOrUndefined(rowFlag) ? (this.showGrandTotals && this.showRowGrandTotals) ?\n            true : (this.rows.length > 0) ? false : true : rowFlag);\n        if (((this.pageSettings && (this.removeRowGrandTotal)) || (!rowFlag && !this.rowGrandTotal)) &&\n            this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n            this.rMembers = this.rMembers.slice(0, this.rMembers.length - 1);\n        }\n        /* removing the column gran-total members */\n        columnFlag = (isNullOrUndefined(columnFlag) ? (this.showGrandTotals && this.showColumnGrandTotals) ?\n            true : (this.columns.length > 0) ? false : true : columnFlag);\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) || (!columnFlag && !this.columnGrandTotal)) &&\n            this.cMembers[this.cMembers.length - 1].type === 'grand sum') {\n            this.cMembers = this.cMembers.slice(0, this.cMembers.length - 1);\n        }\n    };\n    PivotEngine.prototype.updatePivotValues = function (updateHeaders) {\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (updateHeaders) {\n            this.updateHeaders(rowFlag, columnFlag);\n        }\n        /* removing the row grant-totals */\n        if (((this.pageSettings && (this.removeRowGrandTotal)) ||\n            (!rowFlag && !this.rowGrandTotal)) && this.valueContent.length > 0) {\n            var slicePos = 1;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1 + this.values.length;\n            }\n            if (this.pivotValues[this.pivotValues.length - slicePos] &&\n                this.pivotValues[this.pivotValues.length - slicePos][0].type === 'grand sum') {\n                this.pivotValues = this.pivotValues.slice(0, this.pivotValues.length - slicePos);\n                this.valueContent = this.valueContent.slice(0, this.valueContent.length - slicePos);\n            }\n        }\n        /* removing the column gran-totals */\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) ||\n            (!columnFlag && !this.columnGrandTotal)) && this.headerContent.length > 0) {\n            var slicePos = this.values.length;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1;\n            }\n            if (this.pivotValues[0][this.pivotValues[0].length - slicePos] &&\n                this.pivotValues[0][this.pivotValues[0].length - slicePos].type === 'grand sum') {\n                for (var ln = 0; ln < this.pivotValues.length; ln++) {\n                    if (this.pivotValues[ln]) {\n                        this.pivotValues[ln] = this.pivotValues[ln].slice(0, this.pivotValues[ln].length - slicePos);\n                    }\n                    if (this.headerContent[ln]) {\n                        for (var pos = this.pivotValues[ln].length; pos < (this.pivotValues[ln].length + slicePos); pos++) {\n                            delete this.headerContent[ln][pos];\n                        }\n                    }\n                }\n            }\n        }\n        this.removeRowGrandTotal = this.removeColumnGrandTotal = false;\n    };\n    /** @hidden */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        this.frameDrillObject();\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onSort = function (sortItem) {\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        /* tslint:disable:typedef */\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        /* tslint:enable:typedef */\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.rows[0] && this.rows[0].showNoDataItems) || (this.columns[0] && this.columns[0].showNoDataItems);\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onAggregation = function (field) {\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onCalcOperation = function (field) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.values.length - 1)) * this.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.values.length - 1)) * this.values.length;\n            }\n        }\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                if (drilledItem.memberName === headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter)\n                    .join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                        }\n                        else {\n                            var showSubTotals = this.showSubTotals && this.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    /* tslint:disable:typedef */\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return item.members.length > 0 ? item.members.length > 0 : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n        var filterObjects = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var item = _a[_i];\n            filterObjects[item] = item;\n        }\n        if (this.fieldFilterMem[filterItem.name]) {\n            rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n        }\n        if (addPos.length > 0 && headersInfo.fields.length > 0) {\n            this.frameHeaderObjectsCollection = true;\n            if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                for (var i = 0; i < this.data.length; i++) {\n                    addPos.push(i);\n                }\n                //addPos = (this.data as any).map((item, pos) => { return pos; });\n            }\n            /* tslint:disable */\n            this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n            rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n            var headerNames_1 = {};\n            for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                var header = rawHeaders_1[_b];\n                headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n            }\n            var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                return !headerNames_1[header.valueSort.levelName.toString()];\n            });\n            /* tslint:enable: */\n            var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n            if (grandHeader.length > 0) {\n                rawHeaders.pop();\n            }\n            rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n        }\n        if (headersInfo.axis === 'row') {\n            this.rowCount = 0;\n        }\n        else {\n            this.columnCount = 0;\n        }\n        this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n        if (headersInfo.axis === 'row') {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n        }\n        else {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    /* tslint:enable:typedef */\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.rows : this.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateEngine = function () {\n        this.removeCount = 0;\n        this.validateValueFields();\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var valuesCount = (this.values.length);\n        this.getAggregatedHeaders(this.rows, this.columns, this.rMembers, this.cMembers, this.values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.showSubTotals && this.showColumnSubTotals && field ? field.showSubTotals : true;\n        }\n        else {\n            showSubTotals = this.showSubTotals && this.showRowSubTotals && field ? field.showSubTotals : true;\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.values.length : 1) :\n                    (this.valueAxis === 1 ? this.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var isNotDateType = !(this.formatFields && this.formatFields[headers[0].valueSort.axis] &&\n            this.formatFields[headers[0].valueSort.axis].type);\n        var childrens = this.fieldList[headers[0].valueSort.axis];\n        if (isNotDateType) {\n            if (childrens && childrens.type == 'number' && headers.length > 0 && (typeof (headers[0].actualText) == 'string')) {\n                var stringValue = [];\n                var alphaNumbervalue = [];\n                for (var i = 0; i < headers.length; i++) {\n                    if (isNaN(headers[i].actualText.toString().charAt(0))) {\n                        stringValue.push(headers[i]);\n                    }\n                    else {\n                        alphaNumbervalue.push(headers[i]);\n                    }\n                }\n                if (stringValue.length > 0) {\n                    stringValue = childrens.sort === 'Ascending' ? (stringValue.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ? (stringValue.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) : stringValue;\n                }\n                if (alphaNumbervalue.length > 0) {\n                    alphaNumbervalue = childrens.sort === 'Ascending' ?\n                        (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                            alphaNumbervalue;\n                }\n                return headers = alphaNumbervalue.concat(stringValue);\n            }\n            else {\n                return sortOrder === 'Ascending' ?\n                    (headers.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                    sortOrder === 'Descending' ?\n                        (headers.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                        headers;\n            }\n        }\n        else {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                    headers;\n        }\n    };\n    /* tslint:enable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.enableValueSorting && this.valueSortSettings.headerText &&\n            this.valueSortSettings.headerText !== '' && this.values.length > 0) {\n            var textArray = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.values.length; i++) {\n                if (this.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.values.length === 1 && this.columns.length === 0) || this.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortSettings.headerText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.values[0].name].index;\n                mType = this.fieldList[this.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.pageSettings) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getCellSet(this.rawIndexObject),\n                    /* tslint:disable-next-line:max-line-length */\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    /* tslint:disable-next-line:max-line-length */\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        /* tslint:disable */\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ?\n                ((b['value'] || b['header']['type'] === 'grand sum' ?\n                    b['value'] : 0) - (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) :\n                ((a['value'] || a['header']['type'] === 'grand sum' ?\n                    a['value'] : 0) - (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        rMembers = aggreColl.map(function (item) { return item['header']; });\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n        /* tslint:enable */\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        this.rowGrandTotal = this.columnGrandTotal = null;\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (this.isValueHasAdvancedAggregate) {\n            /* inserting the row grant-total members */\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n            if (rowFlag) {\n                this.rowCount += this.rowValuesLength;\n            }\n            /* inserting the column gran-total members */\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n            if (columnFlag) {\n                this.columnCount += this.colValuesLength;\n            }\n        }\n        else {\n            if (rowFlag) {\n                /* inserting the row grant-total members */\n                this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                this.rowCount += this.rowValuesLength;\n            }\n            else {\n                this.rowGrandTotal = this.insertAllMember([], this.filterMembers, '', 'row')[0];\n            }\n            if (columnFlag) {\n                /* inserting the column gran-total members */\n                this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                this.columnCount += this.colValuesLength;\n            }\n            else {\n                this.columnGrandTotal = this.insertAllMember([], this.filterMembers, '', 'column')[0];\n            }\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                for (var colCnt = colLength - 1; colCnt > 0; colCnt--) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            if (!this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] = this.headerContent[rowPos][colCnt] = {\n                                type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                    (cell.formattedText + ' Total')),\n                                axis: 'column', level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                            };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (this.pivotValues[rowCnt][colCnt].type !== 'sum' &&\n                                this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (this.pivotValues[rowCnt][colCnt].type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] = this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index = this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject = this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        rowCells[colCnt].colSpan = spanCnt;\n                        rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        savedCell.colSpan = spanCnt;\n                        savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.frameDrillObject = function () {\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            for (var memberCnt = 0; memberCnt < drillOption.items.length; memberCnt++) {\n                var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                    drillOption.items[memberCnt].split(drillOption.delimiter).join(this.valueSortSettings.headerDelimiter);\n                this.fieldDrillCollection[memberString] = memberString;\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        if (keys) {\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            if (isNullOrUndefined(this.reportDataType)) {\n                this.reportDataType = {};\n                for (var i = 0; i < this.dataSourceSettings.rows.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.rows[i].name] = this.dataSourceSettings.rows[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.columns[i].name] = this.dataSourceSettings.columns[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.values.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.values[i].name] = this.dataSourceSettings.values[i].dataType;\n                }\n            }\n            childrens.type = !isNullOrUndefined(this.reportDataType[childrens.id]) ? this.reportDataType[childrens.id] : childrens.type;\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.showHeaderWhenEmpty || (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.indexMatrix[position[pos]][childrens.index];\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][this.fieldKeys[fieldName]];\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } :\n                    {\n                        formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                            headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                            (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : headerValue\n                    };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var pindx = void 0;\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ?\n                        true : (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                        this.isExpandAll ? false : true : childrens.members[headerValue].isDrilled;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += this.rowValuesLength;\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0 && !showNoDataItems) {\n                    var headerValue = data[hierarchy[iln].index[0]][this.fieldKeys[keys[keyInd + 1].name]];\n                    var hasChild = (isNullOrUndefined(headerValue) || (this.localeObj &&\n                        headerValue === this.localeObj.getConstant('undefined'))) && hierarchy[iln].index.length === 1 ? false : true;\n                    hierarchy[iln].hasChild = hasChild;\n                }\n                else if (!this.showHeaderWhenEmpty && showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                    Object.keys(this.fieldList[keys[keyInd + 1].name].members).length) {\n                    hierarchy[iln].hasChild = true;\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.showSubTotals && this.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    /* tslint:disable:align */\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember);\n                    /* tslint:enable:align */\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            /* tslint:disable:typedef */\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n                else {\n                    if (childrens.type === 'number' && hierarchy.length > 0 && (typeof (hierarchy[0].actualText) === 'string')) {\n                        var stringValue = [];\n                        var alphaNumbervalue = [];\n                        for (var i = 0; i < hierarchy.length; i++) {\n                            if (isNaN(hierarchy[i].actualText.toString().charAt(0))) {\n                                stringValue.push(hierarchy[i]);\n                            }\n                            else {\n                                alphaNumbervalue.push(hierarchy[i]);\n                            }\n                        }\n                        if (stringValue.length > 0) {\n                            stringValue = childrens.sort === 'Ascending' ? (stringValue.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                                childrens.sort === 'Descending' ? (stringValue.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) : stringValue;\n                        }\n                        if (alphaNumbervalue.length > 0) {\n                            alphaNumbervalue = childrens.sort === 'Ascending' ?\n                                (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                childrens.sort === 'Descending' ?\n                                    (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                    alphaNumbervalue;\n                        }\n                        return hierarchy = alphaNumbervalue.concat(stringValue);\n                    }\n                    else {\n                        return childrens.sort === 'Ascending' ?\n                            (hierarchy.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                            childrens.sort === 'Descending' ?\n                                (hierarchy.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                                hierarchy;\n                    }\n                }\n            }\n            else {\n                return hierarchy;\n            }\n            /* tslint:enable:typedef */\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.indexMatrix[position[pos]][childrens.index];\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var value = data[position[pos]][this.fieldKeys[field]];\n                value = value === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(value)) : value;\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(value, field) :\n                    { formattedText: value.toString(), actualText: value.toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    /* tslint:disable:align */\n                    hierarchy[iln].members =\n                        this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                    /* tslint:enable:align */\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            /* tslint:disable:typedef */\n            var lt = void 0;\n            for (var ln = 0, lt_1 = this.filterMembers.length; ln < lt_1; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n            /* tslint:enable:typedef */\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.pageSettings) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.values.length;\n            }\n            else {\n                this.colValuesLength = this.values.length;\n            }\n            this.memberCnt = -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.rowCurrentPage * this.pageSettings.rowSize) -\n                (this.pageSettings.rowSize)) * this.rowValuesLength;\n            var exactStartPos = (this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength)) > this.rowCount ?\n                (this.rowCount - (this.pageSettings.rowSize * 3 * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.rowCurrentPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength);\n            this.endPos = this.endPos > this.rowCount ? this.rowCount : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.columnCurrentPage * this.pageSettings.columnSize) -\n                (this.pageSettings.columnSize)) * this.colValuesLength;\n            exactStartPos = (this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength)) >\n                this.columnCount ?\n                (this.columnCount - (this.pageSettings.columnSize * 3 * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.columnCurrentPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength);\n            this.endPos = this.endPos > this.columnCount ? this.columnCount : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n            if (this.isValueHasAdvancedAggregate) {\n                if (this.rMembers[this.rMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1].type === 'grand sum') {\n                    this.rMembers.push(this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1]);\n                    this.removeRowGrandTotal = true;\n                }\n                if (this.cMembers[this.cMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1].type === 'grand sum') {\n                    this.cMembers.push(this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1]);\n                    this.removeColumnGrandTotal = true;\n                }\n            }\n            else {\n                this.rowGrandTotal = this.rowGrandTotal ? this.rowGrandTotal :\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1];\n                this.columnGrandTotal = this.columnGrandTotal ? this.columnGrandTotal :\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1];\n            }\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            this.memberCnt += axis === 'column' ? this.colValuesLength : this.rowValuesLength;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ? this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    /* tslint:disable:no-any */\n                    this.memberCnt -= !(this.showSubTotals && this.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ? this.colValuesLength : 0;\n                    /* tslint:enable:no-any */\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    /* tslint:disable:no-any */\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        /* tslint:disable:no-string-literal */\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        /* tslint:enable:no-string-literal */\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        set[len] = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            formattedText: 'Grand' + customText,\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        set[len].valueSort[set[len].formattedText] = 1;\n        set[len].valueSort.levelName = set[len].formattedText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            set[len].indexObject[filter[ln]] = filter[ln];\n        }\n        // if (axis === 'row') {\n        //     this.rowCount += this.rowValuesLength;\n        // } else {\n        //     this.columnCount += this.colValuesLength;\n        // }\n        return set;\n    };\n    /* tslint:enable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, tnum, data, vlt, rTotal, cTotal) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            tnum = data.length;\n            reformAxis[tnum] = rows[rln];\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            //let rplus: number = rln + 1;\n            //let lvl: number = rows[rln].level;\n            var isLeastNode = !reformAxis[tnum].members.length;\n            rows[rln].colIndex = 0;\n            rows[rln].rowIndex = tnum;\n            if (!data[tnum]) {\n                data[tnum] = [];\n                this.valueContent[actCnt] = {};\n                //data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            else {\n                // data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader)) {\n                var hpos = tnum;\n                var actpos = actCnt;\n                var rowIndex = tnum;\n                if (!(rows[rln].hasChild && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n                    !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals))) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        tnum++;\n                        actCnt++;\n                        var name_1 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                        var calObj = {\n                            axis: 'row',\n                            actualText: this.values[vln].name,\n                            formattedText: name_1,\n                            level: 0,\n                            valueSort: {},\n                            colIndex: 0,\n                            rowIndex: tnum,\n                            type: 'value'\n                        };\n                        if (!data[tnum]) {\n                            data[tnum] = [];\n                            this.valueContent[actCnt] = {};\n                            data[tnum][0] = this.valueContent[actCnt][0] = calObj;\n                        }\n                        var vData = data[tnum][0].valueSort;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData[data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1] = 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData.levelName = data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1;\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            //for (let vln: number = 0; (!this.valueAxis && vln < vlt); vln++) {\n                            this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                            dln = data[tnum].length;\n                            data[hpos][dln - 1] = this.valueContent[actpos][dln - 1] = {\n                                axis: 'value', actualText: '', colSpan: 1,\n                                colIndex: dln, formattedText: '', hasChild: false\n                            };\n                            // }\n                        }\n                    }\n                    rowIndex = tnum;\n                }\n                else {\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        dln = data[tnum].length;\n                        data[hpos][dln] = this.valueContent[actpos][dln] = {\n                            axis: 'value', actualText: '', colSpan: 1,\n                            colIndex: dln, formattedText: '', hasChild: false\n                        };\n                    }\n                    rowIndex = tnum + vlt;\n                }\n                this.recursiveRowData(rows, reformAxis, columns, rowIndex, data, vlt, isLeastNode, rln, vlt, rTotal, cTotal);\n            }\n            else {\n                for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, rTotal, cTotal);\n            }\n        }\n        /* for (let rlt: number = rows.length, rln: number = 0; rln < rlt; rln++) {\n            if (!data[rln]) {\n                data[rln] = [];\n                data[rln][0] = rows[rln].name;\n            } else {\n                data[rln][0] = rows[rln].name;\n            }\n            for (let cln: number = 0, dln: number = 1, clt: number = columns.length; cln < clt; dln = ++cln) {\n                data[rln][dln] = this.getAggregateValue(rows[rln].index, columns[cln].index, 11);\n            }\n        } */\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split(this.valueSortSettings.headerDelimiter);\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : headers), vln + 1));\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if (rln.level === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _a = 0, _b = rln.members; _a < _b.length; _a++) {\n                                            var member = _b[_a];\n                                            aggregateHeaders.push(member);\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(rln);\n                                    }\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: headers,\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(data[rln][cln].actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                        this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                        for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                            var index = colIndex_1[_i];\n                            pivotIndex[rln + ',' + index] = [rln, index];\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n            this.updatePivotValues(true);\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable:all */\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_2 = headers.value;\n            var valueCount = (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    if (this.valueAxis === 0 || (this.valueAxis && data[rln + valueCount] &&\n                                        data[rln + valueCount][0].actualText === name_2)) {\n                                        selectedRowValues = data[rln + valueCount];\n                                    }\n                                    else {\n                                        selectedRowValues = [];\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_7 = data.length, i = 0; i < len_7; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                        axisObj[cln].axis === 'value' &&\n                                        this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (selectedColumnValues.length === 0 && rowindexCollection.length === 0) {\n                            for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                var isSelectedColumn = false;\n                                if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort.levelName.indexOf(uniqueName) === 0) {\n                                    activeValues = activeColumn[cln];\n                                    for (var lnt = data.length, j = 0; j < lnt; j++) {\n                                        var axisObj = data[j];\n                                        if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                            axisObj[cln].axis === 'value' &&\n                                            this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                            isSelectedColumn = true;\n                                            // selectedColumnValues[i] = axisObj[cln] as IAxisSet;\n                                            rowindexCollection.push(j);\n                                        }\n                                    }\n                                    if (isSelectedColumn) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _a = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _a < selectedHeaderCollection_1.length; _a++) {\n                                    var item = selectedHeaderCollection_1[_a];\n                                    for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _b = 0, colIndex_2 = colIndex; _b < colIndex_2.length; _b++) {\n                                                    var index = colIndex_2[_b];\n                                                    var currentSet = data[rln + valueCount][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                        indexCollection.push([rln + valueCount, index]);\n                                                        if (pivotIndex[rln + valueCount + ',' + index]) {\n                                                            delete pivotIndex[rln + valueCount + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _c = 0, colIndex_3 = colIndex; _c < colIndex_3.length; _c++) {\n                                                var index = colIndex_3[_c];\n                                                var currentSet = data[rlen + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([rlen + valueCount, index]);\n                                                    if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                        delete pivotIndex[rlen + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _d = 0, indexCollection_2 = indexCollection; _d < indexCollection_2.length; _d++) {\n                                var index = indexCollection_2[_d];\n                                var currentSet = data[index[0]][index[1]];\n                                // let cVal: number = currentSet.value - (selectedRowValues[index[1]] as IAxisSet).value;\n                                var cVal = currentSet.actualValue - selectedRowValues[index[1]].actualValue;\n                                cVal = isNaN(cVal) ? 0 : (currentSet.value === 0 && selectedRowValues[index[1]].value === 0) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                }\n                                else {\n                                    // cVal = ((selectedRowValues[index[1]] as IAxisSet).value === 0 ?\n                                    // 0 : (cVal / (selectedRowValues[index[1]] as IAxisSet).value));\n                                    cVal = (selectedRowValues[index[1]].actualValue === 0 ?\n                                        0 : (cVal / selectedRowValues[index[1]].actualValue));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _e = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _e < selectedHeaderCollection_2.length; _e++) {\n                                    var item = selectedHeaderCollection_2[_e];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _f = 0, rowindexCollection_1 = rowindexCollection; _f < rowindexCollection_1.length; _f++) {\n                                                var index = rowindexCollection_1[_f];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _g = 0, rowindexCollection_2 = rowindexCollection; _g < rowindexCollection_2.length; _g++) {\n                                                var index = rowindexCollection_2[_g];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedColumn = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedColumn = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _h = 0, indexCollection_3 = indexCollection; _h < indexCollection_3.length; _h++) {\n                                var index = indexCollection_3[_h];\n                                var currentSet = data[index[0]][index[1]];\n                                var selectedColumnValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColumnValue = this.getAggregateValue(selectedRow.index, selectedColumn.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColumnValue = selectedColumnValues[index[0]].value;\n                                }\n                                var cVal = currentSet.value - selectedColumnValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _j = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _j < selectedHeaderCollection_3.length; _j++) {\n                                var item = selectedHeaderCollection_3[_j];\n                                for (var rlt = rowheads.length, i = 0; i < rlt; i++) {\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _k = 0, colIndex_4 = colIndex; _k < colIndex_4.length; _k++) {\n                                                var index = colIndex_4[_k];\n                                                var currentSet = data[i + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([i + valueCount, index]);\n                                                    if (pivotIndex[i + valueCount + ',' + index]) {\n                                                        delete pivotIndex[i + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _l = 0, indexCollection_4 = indexCollection; _l < indexCollection_4.length; _l++) {\n                                var i = indexCollection_4[_l];\n                                var currentSet = data[i[0]][i[1]];\n                                // let cVal: number = currentSet.value / (selectedRowValues[i[1]] as IAxisSet).value;\n                                var selectedRowValue = 0;\n                                if (selectedRowValues.length === 0 && activeValues) {\n                                    selectedRowValue = this.getAggregateValue(activeValues.index, colheads[i[1] - 1].indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedRowValue = selectedRowValues[i[1]].actualValue;\n                                }\n                                var cVal = currentSet.value / selectedRowValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _m = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _m < selectedHeaderCollection_4.length; _m++) {\n                                var item = selectedHeaderCollection_4[_m];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _o = 0, rowindexCollection_3 = rowindexCollection; _o < rowindexCollection_3.length; _o++) {\n                                            var index = rowindexCollection_3[_o];\n                                            var currentSet = data[index][j];\n                                            if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                isSelectedColumn = true;\n                                                indexCollection.push([index, j]);\n                                                if (pivotIndex[index + ',' + j]) {\n                                                    delete pivotIndex[index + ',' + j];\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedCol = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedCol = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _p = 0, indexCollection_5 = indexCollection; _p < indexCollection_5.length; _p++) {\n                                var i = indexCollection_5[_p];\n                                var currentSet = data[i[0]][i[1]];\n                                var selectedColValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColValue = this.getAggregateValue(selectedRow.index, selectedCol.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColValue = selectedColumnValues[i[0]].value;\n                                }\n                                var val = currentSet.value / selectedColValue;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _q = 0, colIndex_5 = colIndex; _q < colIndex_5.length; _q++) {\n                                var index = colIndex_5[_q];\n                                var cVal = 0;\n                                for (var _r = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _r < selectedHeaderCollection_5.length; _r++) {\n                                    var item = selectedHeaderCollection_5[_r];\n                                    for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen + valueCount][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rlen].level === item.level && currentSet.axis === 'value' &&\n                                                currentSet.actualText === name_2) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = (cVal === 0 && (currentSet.actualValue && currentSet.actualValue !== 0) ? '' :\n                                                        this.getFormattedValue(cVal, name_2).formattedText);\n                                                    if (!this.aggregatedValueMatrix[rlen + valueCount]) {\n                                                        this.aggregatedValueMatrix[rlen + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen + valueCount][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                    delete pivotIndex[rlen + valueCount + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                if (rowheads[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _s = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _s < selectedHeaderCollection_6.length; _s++) {\n                                        var item = selectedHeaderCollection_6[_s];\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln + valueCount][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln + valueCount]) {\n                                                        this.aggregatedValueMatrix[rln + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln + valueCount][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + valueCount + ',' + cln]) {\n                                                    delete pivotIndex[rln + valueCount + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getSelectedColumn = function (name, colheads) {\n        var set = { axis: 'column', index: [], indexObject: {} };\n        for (var _i = 0, colheads_1 = colheads; _i < colheads_1.length; _i++) {\n            var head = colheads_1[_i];\n            if (head && head.valueSort && head.valueSort.levelName.indexOf(name) === 0) {\n                set.index = set.index.concat(head.index).sort(function (a, b) { return a - b; });\n                set.indexObject = __assign({}, set.indexObject, head.indexObject);\n            }\n        }\n        return set;\n    };\n    PivotEngine.prototype.getSelectedRow = function (name, rowheads) {\n        for (var _i = 0, rowheads_1 = rowheads; _i < rowheads_1.length; _i++) {\n            var head = rowheads_1[_i];\n            if (head) {\n                if (head.valueSort && head.valueSort.levelName === name) {\n                    return head;\n                }\n                else if (name === '' && head.type === 'grand sum') {\n                    return head;\n                }\n            }\n        }\n        return null;\n    };\n    /* tslint:enable:all */\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum - vln].members, reformAxis, columns, tnum, data, vlt, rTotal, cTotal);\n        }\n        if (!this.pageSettings) {\n            reformAxis[tnum - vln].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.values[vln].name].index;\n        var aggregate = this.fieldList[this.values[vln].name].aggregateType;\n        var field = this.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        var actualValue = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]], [rows[rln], cTotal], [rTotal, columns[cln]], [rTotal, cTotal]];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_1 = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showRowSubTotals || !this.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] : [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_2 = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                }\n                break;\n            default:\n                var val = this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate);\n                value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals)) ? undefined : val;\n                actualValue = val;\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.values[vln].name,\n            row: rows[rln],\n            column: columns[cln],\n            value: value,\n            cellSets: this.getCellSet(this.rawIndexObject),\n            /* tslint:disable-next-line:max-line-length */\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            /* tslint:disable-next-line:max-line-length */\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate,\n            skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild ||\n            rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var isGrand = rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            (aggregate === 'Count' || aggregate === 'DistinctCount') ? value.toLocaleString() :\n                this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) &&\n            (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: 2 });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n        }\n        //dln = data[tnum].length;\n        /* tslint:disable-next-line:max-line-length */\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ? this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: isNullOrUndefined(value) ? 0 : value,\n            actualValue: isNullOrUndefined(actualValue) ? 0 : actualValue,\n            rowIndex: tnum, colIndex: dln, isSum: isSum, isGrandSum: isGrand\n        };\n        this.rawIndexObject = {};\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.getHeaderData = function (axis, reformAxis, data, tnum, vcnt) {\n        var rlt = axis.length;\n        var colItmLn = this.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            if (axis[rln].members.length) {\n                this.getHeaderData(axis[rln].members, reformAxis, data, tnum, vcnt);\n            }\n            var isTotalHide = true;\n            if ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.showSubTotals || !this.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[reformAxis.length] = this.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = reformAxis.length - 1;\n            }\n            else {\n                tnum = reformAxis.length;\n                reformAxis[tnum] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            axis[rln].colIndex = (tnum * vcnt) + vcnt;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            var isSingleMeasure = (this.columns.length === 0 && this.values.length === 1) ? true : false;\n            if ((this.isMutiMeasures || this.alwaysShowValueHeader || isSingleMeasure) && !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_3 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'column',\n                        actualText: this.values[vln].name,\n                        formattedText: name_3,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln,\n                        rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.pageSettings) {\n                reformAxis[tnum].members = [];\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        var rlt = rowIndex.length;\n        //let clt: number = columnIndex.length;\n        var mirror = {};\n        var ri = 0;\n        var ci = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        if (type && type.toLowerCase() === 'count') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    cellValue += (isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value]) ?\n                        0 : (this.allowDataCompression ? this.valueMatrix[rowIndex[ri]][value] : 1));\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'distinctcount') {\n            var duplicateValues = [];\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var val = (this.data[rowIndex[ri]][this.fieldKeys[this.fields[value]]]);\n                    var currentVal = void 0;\n                    // let currentVal: number = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(val)) {\n                        currentVal = val.toString();\n                        if (duplicateValues.length === 0 || (duplicateValues.length > 0 && duplicateValues.indexOf(currentVal) === -1)) {\n                            cellValue += (this.allowDataCompression && typeof val === 'number') ? val : 1;\n                            duplicateValues.push(currentVal);\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'product') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                        cellValue *= currentVal;\n                    }\n                    else if (isInit) {\n                        cellValue = currentVal;\n                    }\n                    isInit = false;\n                }\n                ri++;\n            }\n        }\n        else if (type && (['populationstdev', 'samplestdev', 'populationvar', 'samplevar']).indexOf(type.toLowerCase()) !== -1) {\n            var i = 0;\n            var val = 0;\n            var indexVal = [];\n            var avgVal = 0;\n            var cVal = 0;\n            var avgDifferenceVal = 0;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        val += currentVal;\n                        indexVal.push(currentVal);\n                        i++;\n                    }\n                }\n                ri++;\n            }\n            if (i > 0) {\n                avgVal = val / i;\n                for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                    var index = indexVal_1[_i];\n                    avgDifferenceVal += Math.pow((index - avgVal), 2);\n                }\n                if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                    cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                }\n                else {\n                    cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                }\n                cellValue = (cVal === 0 ? NaN : cVal);\n            }\n            else {\n                cellValue = val;\n            }\n        }\n        else if (type && type.toLowerCase() === 'min') {\n            var isFirst = true;\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value])) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                    }\n                    else {\n                        if (isFirst) {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value];\n                            isFirst = false;\n                        }\n                        else {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value] < cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'max') {\n            var isMaxFirst = true;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isMaxFirst) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                        isMaxFirst = false;\n                    }\n                    else {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value] > cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'calculatedfield') {\n            isValueExist = true;\n            this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n            var calcField = this.calculatedFields[this.fields[value]];\n            var actualFormula = calcField.formula;\n            var aggregateField = {};\n            if (this.calculatedFormulas[calcField.name]) {\n                var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                    var aggregatedValue = calculatedFormulas[len];\n                    var value_1 = aggregateField[aggregatedValue.formula];\n                    if (value_1 === undefined) {\n                        var type_1 = aggregatedValue.type;\n                        value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1);\n                        aggregateField[aggregatedValue.formula] = value_1;\n                    }\n                    actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                }\n            }\n            cellValue = this.evaluate(actualFormula);\n            cellValue = (cellValue === Infinity || cellValue === -Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ? undefined : JSON.parse(String(cellValue)));\n        }\n        else {\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                        cellValue = currentVal;\n                    }\n                    else {\n                        if (isNullOrUndefined(cellValue)) {\n                            cellValue = 0;\n                        }\n                        cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                    }\n                    if (!isNullOrUndefined(currentVal)) {\n                        avgCnt++;\n                    }\n                }\n                ri++;\n            }\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri] !== undefined) {\n                 if (mirror[rowIndex[ri]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                     sum += this.valueMatrix[rowIndex[ri]][value];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    ;\n    /* tslint:enable */\n    /** hidden */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                    formattedValue.actualText = value;\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        var pattern = formatSetting.format.match(this.customRegex);\n                        var flag = true;\n                        if (isNullOrUndefined(formatSetting.minimumFractionDigits)) {\n                            delete formatSetting.minimumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.maximumFractionDigits)) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.minimumIntegerDigits)) {\n                            delete formatSetting.minimumIntegerDigits;\n                        }\n                        if (isNullOrUndefined(pattern)) {\n                            pattern = formatSetting.format.match(/^(('[^']+'|''|[^*@0])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@,.E])*)$/);\n                            delete formatSetting.useGrouping;\n                            flag = false;\n                        }\n                        var integerPart = pattern[6];\n                        if (flag) {\n                            formatSetting.useGrouping = integerPart.indexOf(',') !== -1;\n                        }\n                        var decimalPart = pattern[5];\n                        if (isBlazor() && decimalPart && decimalPart.indexOf('.') !== -1 && formatSetting.maximumFractionDigits) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                    }\n                    formattedValue.formattedText =\n                        this.globalize.formatNumber(!isNaN(Number(value)) ? Number(value) : value, formatSetting);\n                    formattedValue.actualText = !isNaN(Number(value)) ? Number(value) : value;\n                    formattedValue.dateText = !isNaN(Number(value)) ? Number(value) : value;\n                }\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^\\(\\)]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var fieldDrop = 'fieldDrop';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var editCompleted = 'editCompleted';\n/** @hidden */\nexport var multiLevelLabelClick = 'multiLevelLabelClick';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/** @hidden */\nexport var calculatedFieldCreate = 'calculatedFieldCreate';\n/** @hidden */\nexport var memberEditorOpen = 'memberEditorOpen';\n/** @hidden */\nexport var fieldRemove = 'fieldRemove';\n/** @hidden */\nexport var numberFormatting = 'numberFormatting';\n/** @hidden */\nexport var aggregateMenuOpen = 'aggregateMenuOpen';\n/** @hidden */\nexport var fieldDragStart = 'fieldDragStart';\n/** @hidden */\nexport var chartPointClick = 'chartPointClick';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n","/**\n * CSS Constants\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-wrapper';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-wrapper';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var MEMBER_SORT_CLASS = 'e-member-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DRAG_DISABLE_CLASS = 'e-disable-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-wrapper';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-wrapper';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-wrapper-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-wrapper-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var FILTER_SORT_CLASS = 'e-filter-sort';\n/** @hidden */\nexport var SORT_ASCEND_ICON_CLASS = 'e-sort-ascend-icon';\n/** @hidden */\nexport var SORT_DESCEND_ICON_CLASS = 'e-sort-descend-icon';\n/** @hidden */\nexport var SORT_SELECTED_CLASS = 'e-active';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-wrapper';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var EDITOR_SEARCH__INPUT_CLASS = 'e-editor-search-input';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-wrapper';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var CALC_CUSTOM_FORMAT_INPUTDIV = 'e-pivot-calc-custom-format-div';\n/** @hidden */\nexport var OLAP_CALC_CUSTOM_FORMAT_INPUTDIV = 'e-olap-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-olap-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-wrapper';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-wrapper';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var OLAP_FORMAT_TITLE_CLASS = 'e-olap-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var MOVABLECONTENT_DIV = 'e-movablecontent';\n/** @hidden */\nexport var MOVABLESCROLL_DIV = 'e-movablescrollbar';\n/** @hidden */\nexport var MOVABLECHILD_DIV = 'e-movablechild';\n/** @hidden */\nexport var FROZENCONTENT_DIV = 'e-frozencontent';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-movableheader';\n/** @hidden */\nexport var FROZENHEADER_DIV = 'e-frozenheader';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_ACCUMULATION_COLUMN = 'e-group-chart-accumulation-column';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN_DIV = 'e-group-chart-columns-dropdown-div';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN = 'e-group-chart-columns-dropdown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var EMPTY_FORMAT = 'e-pivot-conditional-empty-format';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n/** @hidden */\nexport var PIVOTCHART_INNER = 'e-pivotchart-inner';\n/** @hidden */\nexport var PIVOTCHART_TYPE_DIALOG = 'e-pivotchart-type-dialog';\n/** @hidden */\nexport var FORMAT_FONT_COLOR_PICKER = 'e-format-font-color-picker';\n/** @hidden */\nexport var GROUP_PIVOT_ROW = 'e-group-pivot-rows';\n","import { createElement, remove, extend, getInstance, select } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.menuInfo = [];\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        var _this = this;\n        var fieldName = args.target.parentElement.id;\n        this.buttonElement = args.target.parentElement;\n        var isStringField = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 1 : 0;\n        this.summaryTypes = this.getMenuItem(isStringField).slice();\n        var eventArgs = {\n            cancel: false, fieldName: fieldName, aggregateTypes: this.summaryTypes\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.summaryTypes = observedArgs.aggregateTypes;\n                _this.createContextMenu(isStringField);\n                _this.currentMenu = args.target;\n                var pos = _this.currentMenu.getBoundingClientRect();\n                if (_this.parent.enableRtl) {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left - 105);\n                }\n                else {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left);\n                }\n            }\n        });\n    };\n    AggregateMenu.prototype.createContextMenu = function (isStringField) {\n        var _this = this;\n        var menuItems = [];\n        menuItems[isStringField] = [];\n        if (this.menuInfo[isStringField] && !this.menuInfo[isStringField].isDestroyed) {\n            this.menuInfo[isStringField].destroy();\n        }\n        var checkDuplicates = [];\n        for (var i = 0; i < this.summaryTypes.length; i++) {\n            var key = this.summaryTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + 'StringMenu_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + '_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n        }\n        if (menuItems[isStringField].length >= 7) {\n            menuItems[isStringField].splice(7);\n            menuItems[isStringField].push({\n                text: this.parent.localeObj.getConstant('MoreOption'),\n                id: this.parent.element.id + '_' + 'MoreOption'\n            });\n        }\n        var menuOptions;\n        menuOptions = {\n            items: menuItems[isStringField],\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this, isStringField),\n            onClose: function (args) {\n                select('#' + _this.buttonElement.id, _this.parentElement).focus();\n            },\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var contextMenu = document.getElementById(this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu'));\n        if (contextMenu !== null) {\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu')\n            });\n        }\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo[isStringField] = new Menu(menuOptions);\n        this.menuInfo[isStringField].isStringTemplate = true;\n        this.menuInfo[isStringField].appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (isString, args) {\n        args.element.style.zIndex = (this.menuInfo[isString].element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /** @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement, type) {\n        var _this = this;\n        this.parentElement = parentElement;\n        var valueDialog = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.id }\n        });\n        this.parentElement.appendChild(valueDialog);\n        this.valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.valueDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            /* tslint:disable-next-line:max-line-length */\n            closeOnEscape: (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') ? false : true,\n            target: this.parentElement,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.valueDialog.isStringTemplate = true;\n        this.valueDialog.appendTo(valueDialog);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    /* tslint:disable:max-func-body-length */\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement, type) {\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = (type && type !== 'MoreOption') ? type : buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [];\n        var summaryItems = this.parent.aggregateTypes;\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryItems.length; i++) {\n            if (this.parent.getAllSummaryType().indexOf(summaryItems[i]) > -1 && checkDuplicates.indexOf(summaryItems[i]) < 0) {\n                summaryDataSource.push({ value: summaryItems[i], text: this.parent.localeObj.getConstant(summaryItems[i]) });\n                checkDuplicates.push(summaryItems[i]);\n            }\n        }\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        /* tslint:disable-next-line:max-line-length */\n        baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n        fieldItemDataSource = Object.keys(this.parent.engineModule.fieldList[(baseField.toString() !== 'undefined' ?\n            baseField : fieldDataSource[0].value)].formattedMembers);\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-wrapper', });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-wrapper' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-wrapper' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-wrapper' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-wrapper' });\n        /* tslint:disable-next-line:max-line-length */\n        var texttitle = createElement('div', { className: 'e-field-name-title', innerHTML: this.parent.localeObj.getConstant('sourceName') + '&nbsp;' });\n        var textContent = createElement('div', { className: 'e-field-name-content', innerHTML: buttonElement.id.toString() });\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('sourceCaption')\n        });\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text', innerHTML: this.parent.localeObj.getConstant('summarizeValuesBy')\n        });\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text', innerHTML: this.parent.localeObj.getConstant('baseField')\n        });\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('baseItem')\n        });\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.dataBind();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                fieldItemDataSource = Object.keys(popupInstance.parent.engineModule.fieldList[args.value].formattedMembers);\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3.dataBind();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: [fieldItemDataSource[0]], enableRtl: this.parent.enableRtl,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            value: fieldCaption, width: '100%'\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var type = menu.item.id.split('_').pop();\n            if (type === 'MoreOption' || type === 'PercentageOfDifferenceFrom'\n                || type === 'PercentageOfParentTotal' || type === 'DifferenceFrom') {\n                this.createValueSettingsDialog(buttonElement, this.parentElement, type);\n            }\n            else {\n                var field = buttonElement.getAttribute('data-uid');\n                var valuefields = this.parent.dataSourceSettings.values;\n                var contentElement = buttonElement.querySelector('.e-content');\n                var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                    this.parent.engineModule.fieldList[field].caption;\n                contentElement.innerHTML = captionName;\n                contentElement.setAttribute('title', captionName);\n                buttonElement.setAttribute('data-type', type);\n                for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                        /* tslint:disable:align */\n                        var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                            valuefields[vCnt].properties : valuefields[vCnt], null, true);\n                        /* tslint:enable:align */\n                        dataSourceItem.type = type;\n                        this.parent.engineModule.fieldList[field].aggregateType = type;\n                        valuefields.splice(vCnt, 1, dataSourceItem);\n                        this.parent.lastAggregationInfo = dataSourceItem;\n                    }\n                }\n                this.updateDataSource();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                /* tslint:disable:align */\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                /* tslint:enable:align */\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var dialogElement = this.valueDialog.element;\n        var captionInstance = getInstance('#' + this.parentElement.id + 'type_input_option', MaskedTextBox);\n        var summaryInstance = getInstance('#' + this.parentElement.id + '_type_option', DropDownList);\n        var baseFieldInstance = getInstance('#' + this.parentElement.id + '_base_field_option', DropDownList);\n        var baseItemInstance = getInstance('#' + this.parentElement.id + '_base_item_option', DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement = this.parentElement.\n                querySelector('.' + cls.PIVOT_BUTTON_CLASS + '.' + fieldName.replace(/[^A-Z0-9]/ig, ''));\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.e-content');\n            var captionName = this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value;\n            contentElement.innerHTML = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        this.valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        select('#' + this.buttonElement.id, this.parentElement).focus();\n        if (this.valueDialog && !this.valueDialog.isDestroyed) {\n            this.valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo) {\n            if (this.menuInfo[1] !== undefined && !this.menuInfo[1].isDestroyed) {\n                this.menuInfo[1].destroy();\n            }\n            if (this.menuInfo[0] !== undefined && !this.menuInfo[0].isDestroyed) {\n                this.menuInfo[0].destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement } from '@syncfusion/ej2-base';\nimport { isBlazor, addClass, removeClass, SanitizeHtmlHelper, select, selectAll } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function () {\n        var parent = this.parent;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.parent.gridHeaderCellInfo = [];\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.e-grid')) {\n            if (!engine.isEngineUpdated) {\n                engine.headerContent = this.frameDataSource('header');\n                engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.enableValueSorting) {\n                    engine.valueContent = this.frameDataSource('value');\n                }\n                engine.isEngineUpdated = false;\n            }\n            /* tslint:disable */\n            this.parent.grid.setProperties({\n                columns: this.frameStackedHeaders(), dataSource: (this.parent.dataType === 'olap' ? true :\n                    parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData ? engine.valueContent :\n                    this.frameDataSource('value')\n            }, true);\n            /* tslint:enable */\n            if (this.parent.grid.height == 'auto') {\n                var mCntHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                var dataHeight = this.parent.grid.dataSource.length * this.parent.gridSettings.rowHeight;\n                if (mCntHeight > 50 && mCntHeight < dataHeight) {\n                    this.parent.grid.contentModule.setHeightToContent(dataHeight);\n                }\n            }\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            var e = this.parent.element.querySelector('.e-movablecontent');\n            e.querySelector('colGroup').innerHTML =\n                this.parent.grid.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.gridSettings.allowAutoResizing && this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.refreshUI();\n            }\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            this.parent.element.appendChild(createElement('div', { id: this.parent.element.id + '_grid' }));\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo('#' + this.parent.element.id + '_grid');\n        }\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.refreshHeader = function () {\n        if (this.parent.enableVirtualization) {\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            setStyleAttribute(mHdr.querySelector('.e-table'), {\n                transform: (mCont.querySelector('.e-table').style.transform).split(',')[0] + ',' + 0 + 'px)'\n            });\n            mHdr.scrollLeft = mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? (this.gridSettings.allowAutoResizing ? this.parent.width : 400) : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            allowReordering: (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering),\n            allowSelection: this.gridSettings.allowSelection,\n            /* tslint:disable-next-line */\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            /* tslint:disable-next-line */\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined,\n            pdfExportComplete: this.pdfExportComplete.bind(this),\n            excelExportComplete: this.excelExportComplete.bind(this)\n        });\n        if (isBlazor()) {\n            var isJsComponent = 'isJsComponent';\n            /* tslint:disable-next-line */\n            this.parent.grid[isJsComponent] = true;\n        }\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.headerRefreshed = function (args) {\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1) {\n            this.parent.lastGridSettings = undefined;\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n        }\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    /* tslint:disable */\n    Render.prototype.pdfExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n    };\n    Render.prototype.excelExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n    };\n    /* tslint:enable */\n    Render.prototype.dataBound = function (args) {\n        if (this.parent.cellTemplate && !isBlazor()) {\n            for (var _i = 0, _a = this.parent.gridHeaderCellInfo; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (this.parent.cellTemplate) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()(cell, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate', null, null, cell.targetCell);\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(cell.targetCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(cell.targetCell, element[0].outerHTML);\n                        }\n                    }\n                }\n            }\n            this.parent.gridHeaderCellInfo = [];\n        }\n        if (this.parent.element.querySelector('.e-firstcell') && !(this.parent.dataSourceSettings.values.length === 1 && this.parent.dataSourceSettings.columns.length > 0)) {\n            if (this.parent.enableRtl) {\n                this.parent.element.querySelector('.e-firstcell').style.borderRight = 'none';\n            }\n            else {\n                this.parent.element.querySelector('.e-firstcell').style.borderLeft = 'none';\n            }\n        }\n        if (this.parent.grid && this.parent.grid.widthService) {\n            this.parent.grid.widthService.setWidthToTable();\n        }\n        /* tslint:disable-next-line */\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        if (!isNullOrUndefined(this.parent.renderReactTemplates)) {\n            this.parent.renderReactTemplates();\n        }\n        this.parent.notify(events.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            addClass([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    /* tslint:disable */\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked;\n            var elem = null;\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (cellTarget.classList.contains('e-stackedheadercelldiv') || cellTarget.classList.contains('e-cellvalue') ||\n                cellTarget.classList.contains('e-headercelldiv') || cellTarget.classList.contains('e-icons') || cellTarget.classList.contains('e-rhandler')) {\n                elem = cellTarget.parentElement;\n            }\n            else if (cellTarget.classList.contains('e-headercell') || cellTarget.classList.contains('e-rowcell') || cellTarget.classList.contains('e-columnsheader') ||\n                cellTarget.classList.contains('e-rowsheader') || cellTarget.classList.contains('e-valuescontent') || cellTarget.classList.contains('e-valuesheader')) {\n                elem = cellTarget;\n            }\n            else if (cellTarget.classList.contains('e-headertext')) {\n                elem = cellTarget.parentElement.parentElement;\n            }\n            if (!elem) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('aria-colindex'));\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var selectedID = item.id;\n            switch (selectedID) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (selectAll('#' + this_1.parent.element.id + '_expand', args.element)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_expand', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_expand', args.element).classList.contains(cls.MENU_HIDE)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(cls.MENU_HIDE);\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (select('#' + this_1.parent.element.id + '_expand', args.element)) {\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_collapse', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_collapse', args.element).classList.contains(cls.MENU_HIDE)) {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.remove(cls.MENU_HIDE);\n                            select('#' + this_1.parent.element.id + '_expand', args.element).classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_collapse', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if (selectAll('#' + this_1.parent.element.id + '_custom_group', args.element)) {\n                        addClass([select('#' + this_1.parent.element.id + '_custom_group', args.element)], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (selectAll('#' + this_1.parent.element.id + '_custom_group', args.element)) {\n                            removeClass([select('#' + this_1.parent.element.id + '_custom_group', args.element)], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if (selectAll('#' + this_1.parent.element.id + '_custom_ungroup', args.element)) {\n                        addClass([select('#' + this_1.parent.element.id + '_custom_ungroup', args.element)], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('aria-colindex'))];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (selectAll('#' + this_1.parent.element.id + '_custom_ungroup', args.element) && isUngroupOption) {\n                            removeClass([select('#' + this_1.parent.element.id + '_custom_ungroup', args.element)], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if (select('#' + this_1.parent.element.id + '_drillthrough', args.element)) {\n                            select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if (select('#' + this_1.parent.element.id + '_drillthrough', args.element)) {\n                                select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_drillthrough', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (select('#' + this_1.parent.element.id + '_sortasc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (select('#' + this_1.parent.element.id + '_sortdesc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                        select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (select('#' + this_1.parent.element.id + '_sortdesc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (select('#' + this_1.parent.element.id + '_sortasc', args.element)) {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                            select('#' + this_1.parent.element.id + '_sortdesc', args.element).classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.contains(cls.MENU_DISABLE)) {\n                        select('#' + this_1.parent.element.id + '_sortasc', args.element).classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        select('#' + this_1.parent.element.id + '_CalculatedField', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        select('#' + this_1.parent.element.id + '_pdf', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        select('#' + this_1.parent.element.id + '_excel', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        select('#' + this_1.parent.element.id + '_csv', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        select('#' + this_1.parent.element.id + '_exporting', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if ((select('#' + this_1.parent.element.id + '_aggregate', args.element)) &&\n                        (!select('#' + this_1.parent.element.id + '_aggregate', args.element).classList.contains(cls.MENU_DISABLE))) {\n                        select('#' + this_1.parent.element.id + '_aggregate', args.element).classList.add(cls.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice()\n                        };\n                        this_1.parent.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length >= 7) {\n                                    menuItem.splice(7);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    select('#' + _this.parent.element.id + '_aggregate', args.element).classList.remove(cls.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        var _this = this;\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var event = new MouseEvent('dblclick', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true\n        });\n        var exportArgs = {};\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv') || target.classList.contains('e-icons') || target.classList.contains('e-rhandler')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('aria-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var pdfProperties = PivotUtil.formatPdfExportProperties(observedArgs.pdfExportProperties);\n                        _this.parent.pdfExport(pdfProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this.parent.excelExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this.parent.csvExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_drillthrough_menu':\n                ele.dispatchEvent(event);\n                break;\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = \"\";\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[headerPosKeys[pos]][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName == '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('aria-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    /* tslint:enable */\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering);\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        /* tslint:disable-next-line */\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        /* tslint:disable-next-line */\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                /* tslint:disable-next-line */\n                if (!isNullOrUndefined(this.parent.pivotColumns[colPos][key])) {\n                    /* tslint:disable-next-line */\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        removeClass(this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt) {\n        if (this.parent.enableValueSorting && this.parent.dataType === 'pivot') {\n            var vSort = this.parent.dataSourceSettings.valueSortSettings;\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (this.parent.engineModule.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (this.parent.engineModule.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && rCnt === len && this.parent.dataSourceSettings.valueAxis === 'column') {\n                if (tCell.querySelector('.e-sortfilterdiv')) {\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-descending' : 'e-ascending');\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending' : 'e-icon-ascending');\n                }\n                else {\n                    tCell.appendChild(createElement('div', {\n                        className: (vSort.sortOrder === 'Descending' ?\n                            'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                            'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                    }));\n                }\n                if (!isNullOrUndefined(cell.hasChild) && cell.type !== 'grand sum' && tCell.querySelector('.e-expand') &&\n                    (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'))) {\n                    var element = (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'));\n                    setStyleAttribute(element, { 'padding-top': '12px' });\n                }\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        /* tslint:disable-next-line */\n        var column = args.column.field === '0.formattedText' ? '0.formattedText' : args.column.customAttributes.cell.valueSort.levelName;\n        this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.e-frozenheader').querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.e-frozencontent').querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        /* tslint:disable-next-line */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        /* tslint:disable-next-line */\n        if (tCell && (this.parent.notEmpty) && this.engine.headerContent) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            tCell.setAttribute('index', (Number(tCell.getAttribute('index')) + this.engine.headerContent.length).toString());\n            var cell = args.data[0];\n            if (tCell.getAttribute('aria-colindex') === '0') {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var level = cell.level ? cell.level : (isValueCell ? (this.lastSpan + 1) : 0);\n                    do {\n                        if (level > 0) {\n                            tCell.appendChild(createElement('span', {\n                                className: level === 0 ? '' : cls.NEXTSPAN,\n                            }));\n                        }\n                        level--;\n                    } while (level > -1);\n                    level = cell.level ? cell.level : 0;\n                    this.lastSpan = !isValueCell ? level : this.lastSpan;\n                    if (!cell.hasChild && level > 0) {\n                        tCell.appendChild(createElement('span', {\n                            className: cls.LASTSPAN,\n                        }));\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        fieldName = level > -1 ? this.parent.dataSourceSettings.rows[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapRowCellBoundEvent(tCell, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        localizedText = this.parent.localeObj.getConstant('grandTotal');\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                tCell.classList.add(cls.ROWSHEADER);\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    tCell.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    /* tslint:disable-next-line */\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row'\n                        && this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            var style = (tCell.querySelector('.e-expand') || tCell.querySelector('.e-collapse')) ?\n                                'padding-top: 18px' : 'padding-top: 12px';\n                            tCell.appendChild(createElement('div', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                                styles: style\n                            }));\n                        }\n                    }\n                }\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('aria-colindex'))];\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                if (cell.isGrandSum || this.colGrandPos === Number(tCell.getAttribute('aria-colindex')) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(!isNullOrUndefined(cell.value) ? cell.colIndex : cell.colIndex - 1)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (cell.cssClass) {\n                    tCell.classList.add(cell.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering && !this.parent.showGroupingBar) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes.cell.colIndex.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                var index = tCell.getAttribute('index');\n                var colindex = tCell.getAttribute('aria-colindex');\n                var templateID = index + '_' + colindex;\n                /* tslint:disable-next-line */\n                if (!(window && isBlazor())) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()({ targetCell: tCell, cellInfo: cell }, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate', null, null, tCell);\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                else if (index && colindex) {\n                    this.parent.gridCellCollection[templateID] = tCell;\n                }\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    /* tslint:disable */\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var memberPosition = tupInfo.uNameCollection.indexOf(cell.actualText.toString());\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = tupInfo.typeCollection[fPos] !== '2' ? (this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')] && this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')].isHierarchy && fPos < this.parent.dataSourceSettings.rows.length - 1 && !this.parent.dataSourceSettings.rows[fPos + 1].isNamedSet && this.parent.dataSourceSettings.rows[fPos + 1].name.indexOf('[Measures]') < 0 && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name] && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name].hasAllMember) ? true : Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0 : false;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var levelName = cell.memberType === 3 ? (this.measurePos + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_1 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_1 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_2 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_2 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_2 + 1) ? (currPos_2 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                tCell.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN,\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return tCell;\n    };\n    /* tslint:enable */\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var level = cell.level ? cell.level : 0;\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns &&\n                        this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = level > -1 && this.parent.dataSourceSettings.columns[level] ?\n                            this.parent.dataSourceSettings.columns[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                if (cell.type) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var localizedText = cell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    tCell.children[0].classList.add(cls.CELLVALUE);\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    tCell.insertBefore(div, tCell.children[0]);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex);\n                if (this.parent.cellTemplate) {\n                    var index = tCell.getAttribute('index');\n                    var colindex = tCell.getAttribute('aria-colindex');\n                    var templateID = index + '_' + colindex;\n                    /* tslint:disable-next-line */\n                    if (!(window && isBlazor())) {\n                        this.parent.gridHeaderCellInfo.push({ targetCell: tCell });\n                    }\n                    else if (index && colindex) {\n                        this.parent.gridCellCollection[templateID] = tCell;\n                    }\n                }\n                var field = void 0;\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                            (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(cls.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            tCell.setAttribute('colspan', cell.colSpan.toString());\n            tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('aria-colindex'))],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    /* tslint:disable-next-line */\n    Render.prototype.frameEmptyData = function () {\n        /* tslint:disable-next-line */\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    Render.prototype.calculateColWidth = function (colCount) {\n        var offsetWidth = this.parent.element.offsetWidth ? this.parent.element.offsetWidth :\n            this.parent.element.getBoundingClientRect().width;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * offsetWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        colCount = colCount - 1;\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : Math.floor(colWidth);\n    };\n    Render.prototype.resizeColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : Math.floor(colWidth);\n    };\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.parent.totColWidth : parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (isNaN(parHeight)) {\n            parHeight = parHeight > 300 ? parHeight : 300;\n        }\n        if (this.parent.currentView !== 'Chart') {\n            if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) ?\n                    this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS).offsetHeight : 0);\n                var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                gridHeight = parHeight - (gBarHeight + toolBarHeight) - 1;\n                if (elementCreated) {\n                    var tableHeight = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight;\n                    var contentHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                    var tableWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV + ' .' + cls.TABLE).offsetWidth;\n                    var contentWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetWidth;\n                    var horizontalOverflow = contentWidth < tableWidth;\n                    //let verticalOverflow: boolean = contentHeight < tableHeight;\n                    var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                    if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                        !commonOverflow) {\n                        this.parent.grid.height = 'auto';\n                    }\n                    else {\n                        this.parent.grid.height = gridHeight;\n                        this.parent.grid.dataBind();\n                    }\n                }\n                else {\n                    if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                        gridHeight = 'auto';\n                    }\n                }\n            }\n            else {\n                gridHeight = this.gridSettings.height;\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    Render.prototype.frameStackedHeaders = function () {\n        var singleValueFormat = this.parent.dataSourceSettings.values.length === 1 &&\n            !this.parent.dataSourceSettings.alwaysShowValueHeader ? this.formatList[this.parent.dataSourceSettings.values[0].name] : undefined;\n        var integrateModel = [];\n        if ((this.parent.dataType === 'olap' ? true : this.parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues ? this.engine.pivotValues[0].length : 0);\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                if (colField) {\n                    for (var cCnt = 0; cCnt < Object.keys(colField).length + (colField[0] ? 0 : 1); cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || headerCnt === 0) ?\n                                colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' ? 1 : colSpan;\n                        var rowSpan = (colField[cCnt] && colField[cCnt].rowSpan) ? colField[cCnt].rowSpan : 1;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            this.parent.localeObj.getConstant('grandTotal') : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': colField[cCnt] },\n                                /* tslint:disable-next-line */\n                                width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) : this.resColWidth,\n                                minWidth: 30,\n                                format: cCnt === 0 ? '' : (isNullOrUndefined(singleValueFormat) ? this.formatList[colField[cCnt].actualText] : singleValueFormat),\n                                allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true\n                            };\n                        }\n                        else if (headerSplit[cCnt]) {\n                            colSpan = (colField[cCnt] && colField[cCnt].type === 'grand sum' &&\n                                colField[cCnt].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!integrateModel[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(integrateModel[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        /* tslint:disable-next-line */\n                                        field: colField[cCnt] ? colField[cCnt].valueSort.levelName : '',\n                                        customAttributes: { 'cell': colField[cCnt] },\n                                        /* tslint:disable-next-line */\n                                        width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) :\n                                            this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true\n                                    };\n                                    innerModel = [integrateModel[splitPos[innerPos]]];\n                                }\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                integrateModel = columnModel.length > 0 ? columnModel : integrateModel;\n            } while (headerCnt > 0);\n            integrateModel[0] = {\n                field: (0 + '.formattedText'),\n                width: this.resColWidth,\n                minWidth: 30,\n                headerText: '',\n                allowReordering: false,\n                allowResizing: this.parent.gridSettings.allowResizing,\n                visible: true\n            };\n        }\n        else {\n            integrateModel = this.frameEmptyColumns();\n        }\n        if (integrateModel.length > 1) {\n            var lastColumn = integrateModel[integrateModel.length - 1];\n            lastColumn.minWidth = lastColumn.width;\n            lastColumn.width = 'auto';\n            if (lastColumn.columns && lastColumn.columns.length > 0) {\n                this.configLastColumnWidth(lastColumn.columns[lastColumn.columns.length - 1]);\n            }\n        }\n        this.parent.triggerColumnRenderEvent(integrateModel);\n        return integrateModel;\n    };\n    Render.prototype.configLastColumnWidth = function (column) {\n        column.minWidth = column.width;\n        column.width = 'auto';\n        if (column.columns && column.columns.length > 0) {\n            this.configLastColumnWidth(column.columns[column.columns.length - 1]);\n        }\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        /* tslint:disable-next-line */\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name]) {\n                    var fString = this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    format = fString.indexOf('#') > -1 ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    /* tslint:disable */\n    Render.prototype.excelColumnEvent = function (args) {\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    /* tslint:enable */\n    Render.prototype.excelRowEvent = function (args) {\n        if (args.column.field === '0.formattedText') {\n            var isValueCell = args.data[0].type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                /* tslint:disable-next-line */\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            /* tslint:disable-next-line */\n            if (isNullOrUndefined(args.data[this.colPos].value) || isNullOrUndefined(args.data[this.colPos].formattedText)) {\n                args.value = '';\n            }\n            else {\n                /* tslint:disable-next-line */\n                args.value = args.data[this.colPos].value || args.data[this.colPos].formattedText;\n            }\n        }\n        args = this.exportContentEvent(args);\n        this.parent.trigger(events.excelQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var isValueCell = args.data[0].type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level !== -1 ?\n                    args.data[0].level : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    ;\n    Render.prototype.exportHeaderEvent = function (args) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            if (this.actualText !== cell.actualText && cell.colSpan > 1 && cell.level > -1) {\n                args.gridCell.colSpan = args.cell.colSpan = cell.colSpan > -1 ? cell.colSpan : 1;\n            }\n            rowSpan = cell.rowSpan > -1 ? cell.rowSpan : 1;\n            if (args.name === 'excelHeaderQueryCellInfo') {\n                if (cell.rowSpan > -1) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!isNullOrUndefined(cell.type) && cell.level !== 0) {\n                    rowSpan = -1;\n                    args.cell.rowSpan = -1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > -1) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /* tslint:enable:no-any */\n    Render.prototype.exportContentEvent = function (args) {\n        args.value = args.data[Number(args.column.field.split('.formattedText')[0])].type === 'grand sum' ?\n            this.parent.localeObj.getConstant('grandTotal') : args.value;\n        return args;\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","import { KeyboardEvents, closest, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            shiftE: 'shift+E',\n            delete: 'delete',\n            enter: 'enter',\n            escape: 'escape',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'shiftE':\n                this.processEdit(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'escape':\n                this.processClose(e);\n                break;\n            case 'upArrow':\n            case 'downArrow':\n                this.processFilterNodeSelection(e);\n                break;\n        }\n    };\n    CommonKeyboardInteraction.prototype.getButtonElement = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        for (var i = 0, len = allPivotButtons.length; i < len; i++) {\n            if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                return allPivotButtons[i];\n            }\n        }\n        return target;\n    };\n    CommonKeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (target.querySelector('.' + cls.AXISFIELD_ICON_CLASS) && closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            }\n            else if (target.querySelector('.' + cls.CALC_EDIT)) {\n                target.querySelector('.' + cls.CALC_EDIT).click();\n            }\n            else if (target.querySelector('.' + cls.SORT_CLASS) &&\n                !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n                target.querySelector('.' + cls.SORT_CLASS).click();\n                this.getButtonElement(target).focus();\n            }\n            else if (target.querySelector('.' + cls.FILTER_COMMON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.SORT_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            this.getButtonElement(target).focus();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processEdit = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.CALC_EDIT)) {\n            target.querySelector('.' + cls.CALC_EDIT).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.FILTER_COMMON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            if (this.parent && this.parent.control && this.parent.moduleName === 'pivotview' &&\n                this.parent.control.grid && this.parent.control.showGroupingBar &&\n                this.parent.control.groupingBarModule && closest(target, '.' + cls.GROUP_ROW_CLASS) &&\n                this.parent.filterDialog && this.parent.filterDialog.dialogPopUp &&\n                !this.parent.filterDialog.dialogPopUp.isDestroyed && this.parent.filterDialog.dialogPopUp.element) {\n                var dialogElement_1 = this.parent.filterDialog.dialogPopUp.element;\n                var isExcelFilter_1 = this.parent.filterDialog.allowExcelLikeFilter;\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(function () {\n                    if (dialogElement_1 && dialogElement_1.classList.contains('e-popup-open')) {\n                        if (isExcelFilter_1 && dialogElement_1.querySelector('.e-dlg-closeicon-btn')) {\n                            dialogElement_1.querySelector('.e-dlg-closeicon-btn').focus();\n                        }\n                        else if (dialogElement_1.querySelector('input')) {\n                            dialogElement_1.querySelector('input').focus();\n                        }\n                    }\n                });\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilterNodeSelection = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.SELECT_ALL_CLASS) && e.keyCode === 40) {\n            /* tslint:disable-next-line:max-line-length */\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree && memberEditorTree.querySelector('li')) {\n                var firstLi = memberEditorTree.querySelector('li');\n                if (memberEditorTree.querySelector('li#_active')) {\n                    removeClass([memberEditorTree.querySelector('li#_active')], ['e-hover', 'e-node-focus']);\n                    memberEditorTree.querySelector('li#_active').removeAttribute('id');\n                }\n                firstLi.setAttribute('id', '_active');\n                addClass([firstLi], ['e-hover', 'e-node-focus']);\n                memberEditorTree.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS) && e.keyCode === 38) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree.querySelector('li#_active.e-hover.e-node-focus') && memberEditorTree.querySelector('li') &&\n                memberEditorTree.querySelector('li').classList.contains('e-prev-active-node') &&\n                memberEditorTree.querySelector('li') === memberEditorTree.querySelector('li#_active.e-hover.e-node-focus')) {\n                removeClass(memberEditorTree.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n                /* tslint:disable-next-line:max-line-length */\n                var allMemberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.SELECT_ALL_CLASS);\n                if (allMemberEditorTree && allMemberEditorTree.querySelector('li')) {\n                    var firstLi = allMemberEditorTree.querySelector('li');\n                    firstLi.setAttribute('id', '_active');\n                    addClass([firstLi], ['e-hover', 'e-node-focus']);\n                    allMemberEditorTree.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && target.id === this.parent.parentID + '_inputbox') {\n            if (e.action === 'upArrow') {\n                target.parentElement.querySelector('.e-spin-up').click();\n            }\n            else if (e.action === 'downArrow') {\n                target.parentElement.querySelector('.e-spin-down').click();\n            }\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.REMOVE_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            /* tslint:disable-next-line:max-line-length */\n            /* tslint:disable-next-line:no-any */\n            var dialogInstance = closest(target, '.e-popup.e-popup-open').ej2_instances[0];\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function EventBase(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.id;\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.id;\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            isDescending ? removeClass([target], cls.SORT_DESCEND_CLASS) : addClass([target], cls.SORT_DESCEND_CLASS);\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateFiltering\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                var members = PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember);\n                /* tslint:disable:typedef */\n                members =\n                    this.parent.engineModule.fieldList[fieldName].sort === 'Ascending' ?\n                        (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n                            ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        this.parent.engineModule.fieldList[fieldName].sort === 'Descending' ?\n                            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                                ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            members;\n                /* tslint:enable:typedef */\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                treeData =\n                    this.getTreeData(isInclude, members, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget = this.parent.control.filterTargetID;\n        if (isNullOrUndefined(popupTarget)) {\n            popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n                this.parent.element : document.getElementById(this.parent.parentID + '_Wrapper');\n        }\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     * @method isValidFilterItemsAvail\n     * @param  {string} fieldName - Gets filter members for the given field name.\n     * @return {boolean}\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            var engineModule = this.parent.engineModule;\n            var field = engineModule.fieldList[fieldName];\n            var members = (engineModule.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData, isHierarchy);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     * @method sortFilterData\n     * @param  {{ [key: string]: Object }[]} treeData - Gets filter members for the given field name.\n     * @return {{ [key: string]: Object }[]}\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            /* tslint:disable:typedef */\n            treeData = order === 'Ascending' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                    ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                    ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n            /* tslint:enable:typedef */\n        }\n        return treeData;\n    };\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData, isHierarchy);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        this.parent.isDateField = engineModule.formatFields[fieldName] &&\n            ((['date', 'dateTime', 'time']).indexOf(engineModule.formatFields[fieldName].type) > -1);\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = this.parent.isDateField ? member.formattedText : member.actualText.toString();\n            /* tslint:disable */\n            var obj = {\n                id: member.actualText.toString(),\n                actualText: member.actualText,\n                name: memberName,\n                isSelected: isInclude ? false : true\n            };\n            /* tslint:enable */\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[member.actualText] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * get the parent node of particular filter members.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData, isHierarchy) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node].parent;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @method onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} fieldCaption - Defines dropped position to the axis based on field position.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        var draggedClass;\n        var row = this.parent.dataSourceSettings.rows;\n        var column = this.parent.dataSourceSettings.columns;\n        var value = this.parent.dataSourceSettings.values;\n        var filter = this.parent.dataSourceSettings.filters;\n        var field = [row, column, value, filter];\n        for (var len = 0, lnt = field.length; len < lnt; len++) {\n            if (field[len]) {\n                for (var i = 0, n = field[len].length; i < n; i++) {\n                    if (field[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        field[len][i].name.toLowerCase() === '[measures]' && field[len][i].name.toLowerCase() === fieldName)) {\n                        draggedClass = len === 0 ? 'rows' : len === 1 ? 'columns' : len === 2 ? 'values' : 'filters';\n                    }\n                    if (!draggedClass) {\n                        draggedClass = 'fieldList';\n                    }\n                }\n            }\n        }\n        var eventdrop = {\n            fieldName: fieldName, dropField: PivotUtil.getFieldInfo(fieldName, this.control).fieldItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            dropAxis: droppedClass, dropPosition: droppedPosition, draggedAxis: draggedClass, cancel: false\n        };\n        var control = this.control.getModuleName() === 'pivotfieldlist' && this.control.isPopupView ?\n            this.control.pivotGridModule : this.control;\n        control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                droppedClass = observedArgs.dropAxis;\n                droppedPosition = observedArgs.dropPosition;\n                fieldName = observedArgs.dropField ? observedArgs.dropField.name : observedArgs.fieldName;\n                dataSourceItem = observedArgs.dropField;\n                if (_this.control && _this.btnElement && _this.btnElement.getAttribute('isvalue') === 'true') {\n                    switch (droppedClass) {\n                        case '':\n                            _this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            break;\n                        case 'rows':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'row' } }, true);\n                            break;\n                        case 'columns':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'column' } }, true);\n                            break;\n                    }\n                }\n                else {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.parent.dataType === 'olap') {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (_this.parent.dataSourceSettings.values.length === 0) {\n                        _this.removeFieldFromReport('[measures]');\n                    }\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.control) {\n                    var eventArgs = {\n                        fieldName: fieldName, droppedField: dataSourceItem,\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this.parent.dataSourceSettings),\n                        droppedAxis: droppedClass, droppedPosition: droppedPosition\n                    };\n                    /* tslint:disable */\n                    var dataSourceUpdate_1 = _this;\n                    control.trigger(events.onFieldDropped, eventArgs, function (droppedArgs) {\n                        dataSourceItem = droppedArgs.droppedField;\n                        if (dataSourceItem) {\n                            droppedPosition = droppedArgs.droppedPosition;\n                            droppedClass = droppedArgs.droppedAxis;\n                            switch (droppedClass) {\n                                case 'filters':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.push(dataSourceItem) : _this.parent.dataSourceSettings.filters.push(dataSourceItem));\n                                    break;\n                                case 'rows':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.push(dataSourceItem) : _this.parent.dataSourceSettings.rows.push(dataSourceItem));\n                                    break;\n                                case 'columns':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.push(dataSourceItem) : _this.parent.dataSourceSettings.columns.push(dataSourceItem));\n                                    break;\n                                case 'values':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.push(dataSourceItem) : _this.parent.dataSourceSettings.values.push(dataSourceItem));\n                                    if (isBlazor()) {\n                                        if (dataSourceUpdate_1.parent.dataType === 'olap' && !dataSourceUpdate_1.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = dataSourceUpdate_1.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                dataSourceUpdate_1.parent.dataSourceSettings.rows : dataSourceUpdate_1.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    else {\n                                        if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    break;\n                            }\n                            if (isBlazor()) {\n                                dataSourceUpdate_1.parent.control.pivotButtonModule.updateDataSource();\n                                dataSourceUpdate_1.parent.control.axisFieldModule.render();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @method removeFieldFromReport\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties : fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     * @param  {string} fieldName - Defines dropped field name to add dataSource.\n     * @method getNewField\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName, fieldItem) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                isNamedSet: fieldItem ? fieldItem.isNamedSet : field.isNamedSets,\n                isCalculatedField: fieldItem ? fieldItem.isCalculatedField : field.isCalculatedField,\n                type: (fieldItem ? (fieldItem.type === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : fieldItem.type) :\n                    (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType)),\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                type: (fieldItem ? ((fieldItem.type === undefined || fieldItem.type === null) ?\n                    field.type === 'number' ? 'Sum' : 'Count' : fieldItem.type) :\n                    ((field.aggregateType === undefined || field.aggregateType === null) ?\n                        field.type === 'number' ? 'Sum' :\n                            'Count' : field.aggregateType)),\n                showNoDataItems: fieldItem ? fieldItem.showNoDataItems : field.showNoDataItems,\n                baseField: fieldItem ? fieldItem.baseField : field.baseField,\n                baseItem: fieldItem ? fieldItem.baseItem : field.baseItem,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createErrorDialog\n     * @return {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description, target) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var zIndex = target ? Number(target.style.zIndex) + 1 : (this.parent.moduleName === 'pivotfieldlist' &&\n            this.parent.renderMode === 'Popup' && this.parent.control ? this.parent.control.dialogRenderer.fieldListDialog.zIndex + 1 :\n            (this.parent.moduleName === 'pivotfieldlist' && this.parent.renderMode === 'Fixed' && this.parent.control ? 1000002 :\n                (this.parent.moduleName === 'pivotview' && this.parent.control ? 1000002 : 1000001)));\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: zIndex,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute, closest, EventHandler } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     * @method createFilterDialog\n     * @return {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var _this = this;\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption }\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            // content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            content: '',\n            isModal: true,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: this.parent.renderMode === 'Popup' ? false : true,\n            target: target,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        var filterArgs = {\n            cancel: false,\n            fieldName: fieldName,\n            fieldMembers: this.parent.dataSourceSettings.allowMemberFilter ? treeData : [],\n            filterSetting: this.filterObject\n        };\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        control.trigger(events.memberEditorOpen, filterArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                treeData = observedArgs.fieldMembers;\n                if (_this.allowExcelLikeFilter) {\n                    _this.createTabMenu(treeData, fieldCaption, fieldName);\n                    addClass([_this.dialogPopUp.element], 'e-excel-filter');\n                    _this.updateCheckedState(fieldCaption);\n                }\n                else {\n                    _this.dialogPopUp.content = _this.createTreeView(treeData, fieldCaption, fieldName);\n                    _this.updateCheckedState(fieldCaption);\n                }\n                setStyleAttribute(_this.dialogPopUp.element, { 'visibility': 'visible' });\n                if (_this.allowExcelLikeFilter) {\n                    _this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n                }\n                _this.parent.control.pivotButtonModule.memberTreeView = _this.parent.filterDialog.memberTreeView;\n                /* tslint:disable-next-line:max-line-length */\n                _this.memberTreeView.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n                /* tslint:disable-next-line:max-line-length */\n                _this.allMemberSelect.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n            }\n            else {\n                _this.dialogPopUp.close();\n                _this.dialogPopUp = undefined;\n            }\n        });\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-wrapper-class', attrs: { 'type': 'button' }\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', {\n            attrs: { 'type': 'text', className: cls.EDITOR_SEARCH__INPUT_CLASS }\n        });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        this.createSortOptions(fieldName, searchWrapper, treeData);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            searchWrapper.appendChild(levelWrapper);\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '\"' + filterCaption + '\"',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv, fieldCaption);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState(fieldCaption);\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName };\n        var data = [{ id: 'all', name: this.parent.localeObj.getConstant('all'), isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        if (!isNullOrUndefined(this.parent.currentTreeItems)) {\n            for (var i = 0; i < this.parent.currentTreeItems.length; i++) {\n                if (this.parent.currentTreeItems[i].id.indexOf(\"\\n\") || this.parent.currentTreeItems[i].id.startsWith(\"\\n\")) {\n                    this.parent.currentTreeItems[i].id = this.parent.currentTreeItems[i].id.replace('\\n', ' ');\n                }\n            }\n        }\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            expandOn: 'None'\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        editorTreeWrapper.appendChild(labelWrapper);\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createSortOptions = function (fieldName, target, treeData) {\n        if (this.parent.dataType === 'pivot' && treeData && treeData.length > 0) {\n            var sortOrder = this.parent.engineModule.fieldList[fieldName].sort;\n            var sortWrapper = createElement('div', {\n                className: cls.FILTER_SORT_CLASS + ' e-btn-group' + (this.parent.enableRtl ? ' ' + cls.RTL : ''),\n                id: this.parent.element.id + '_Member_Sort'\n            });\n            this.parent.element.appendChild(sortWrapper);\n            var sortAscendElement = createElement('button', {\n                className: (sortOrder === 'Ascending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Ascend', attrs: { 'type': 'button' }\n            });\n            var sortDescendElement = createElement('button', {\n                className: (sortOrder === 'Descending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Descend', attrs: { 'type': 'button' }\n            });\n            var sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_ASCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortAscendElement);\n            sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_DESCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortDescendElement);\n            sortWrapper.appendChild(sortAscendElement);\n            sortWrapper.appendChild(sortDescendElement);\n            target.appendChild(sortWrapper);\n            this.unWireEvent(sortAscendElement, fieldName);\n            this.unWireEvent(sortDescendElement, fieldName);\n            this.wireEvent(sortAscendElement, fieldName);\n            this.wireEvent(sortDescendElement, fieldName);\n        }\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop e-caret-hide',\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv, fieldCaption) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ? engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState(fieldCaption);\n        }, 500);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-any */\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        var target = args.event.target;\n        if (target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n        else if (args.event.keyCode === 38 && !isAllMember) {\n            removeClass(this.memberTreeView.element.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n            addClass(checkedNode, 'e-prev-active-node');\n        }\n    };\n    /* tslint:enable:no-any */\n    FilterDialog.prototype.applySorting = function (fieldName, args) {\n        var target = closest(args.target, '.' + cls.MEMBER_SORT_CLASS);\n        if (target) {\n            var sortElements = [].slice.call(closest(target, '.' + cls.FILTER_SORT_CLASS).querySelectorAll('.' + cls.MEMBER_SORT_CLASS));\n            if (target.querySelector('.' + cls.SORT_ASCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Ascending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[1]], cls.SORT_SELECTED_CLASS);\n            }\n            else if (target.querySelector('.' + cls.SORT_DESCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Descending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[0]], cls.SORT_SELECTED_CLASS);\n            }\n            else {\n                this.updateFilterMembers('None', fieldName);\n                removeClass(sortElements, cls.SORT_SELECTED_CLASS);\n            }\n        }\n    };\n    FilterDialog.prototype.updateFilterMembers = function (order, fieldName) {\n        var members = order === 'None' ?\n            PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember) : this.parent.currentTreeItems.slice();\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        var treeData = [];\n        /* tslint:disable:typedef */\n        members = order === 'Ascending' ? (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n            ((b.actualText > a.actualText) ? -1 : 0); })) : order === 'Descending' ?\n            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                ((b.actualText < a.actualText) ? -1 : 0); })) : members;\n        /* tslint:enable:typedef */\n        for (var i = 0, lnt = members.length; i < lnt; i++) {\n            if (order === 'None') {\n                var memberName = (this.parent.isDateField ? members[i].formattedText : members[i].actualText).toString();\n                var obj = {\n                    id: members[i].actualText.toString(),\n                    actualText: members[i].actualText,\n                    name: memberName,\n                    isSelected: this.parent.currentTreeItemsPos[members[i].actualText].isSelected\n                };\n                this.parent.currentTreeItems.push(obj);\n                if (this.editorSearch.value !== '') {\n                    if (obj.name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(obj);\n                        treeData.push(obj);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(obj);\n                    treeData.push(obj);\n                }\n            }\n            else {\n                this.parent.currentTreeItems.push(members[i]);\n                if (this.editorSearch.value !== '') {\n                    if (members[i].name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(members[i]);\n                        treeData.push(members[i]);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(members[i]);\n                    treeData.push(members[i]);\n                }\n            }\n            this.parent.currentTreeItemsPos[members[i].actualText].index = i;\n        }\n        var dataCount = this.memberTreeView.fields.dataSource.length;\n        /* tslint:disable-next-line:max-line-length */\n        this.memberTreeView.fields = { dataSource: treeData.slice(0, dataCount), id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        this.memberTreeView.dataBind();\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount, isSelected: obj.isSelected };\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            className: 'e-filter-tab-wrapper'\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    /* tslint:disable-next-line:max-line-length */\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject : undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ? measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id && field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter',\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS,\n            innerHTML: this.parent.localeObj.getConstant(type + 'TextContent')\n        });\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : ''),\n            innerHTML: this.parent.localeObj.getConstant('And')\n        });\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-wrapper' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE),\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-wrapper' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : ''),\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-wrapper' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_wrapper' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_wrapper' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS, width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    /* tslint:enable */\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var value1;\n        var value2;\n        /* tslint:disable:no-any */\n        if (type === 'date') {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n            value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        }\n        else {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = inputObj1.value;\n            value2 = inputObj2.value;\n        }\n        /* tslint:enable:no-any */\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function (fieldCaption) {\n        var filterDialog = this.dialogPopUp.element;\n        setStyleAndAttributes(filterDialog, { 'role': 'menu', 'aria-haspopup': 'true' });\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length -\n                nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        /* tslint:disable-next-line:max-line-length */\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, PivotUtil.cloneFilterSettings(this.parent.dataSourceSettings.filterSettings));\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    FilterDialog.prototype.wireEvent = function (element, fieldName) {\n        EventHandler.add(element, 'click', this.applySorting.bind(this, fieldName), this);\n    };\n    FilterDialog.prototype.unWireEvent = function (element, fieldName) {\n        EventHandler.remove(element, 'click', this.applySorting);\n    };\n    /**\n     * To close filter dialog.\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class\n     * @param  {CommonArgs} control?\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    /** Constructor for Common module */\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateCommonModule\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initialLoad, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialLoad, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showEditIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"dataType\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Allows the style information to cusotmize the pivot table cell apprearance.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Allows to specify the custom group information of specific field to create custom groups.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Allows options to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Allows you to set the credential information to access the specified SSAS cube.\n * > It is applicable only for OLAP data source.\n */\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"userName\", void 0);\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"password\", void 0);\n    return Authentication;\n}(ChildProperty));\nexport { Authentication };\n/**\n * Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.\n * * `catalog`: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. **Note: It is applicable only for OLAP data source.**\n * * `cube`: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. **Note: It is applicable only for OLAP data source.**\n * * `providerType`: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.\n * * `url`: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. **Note: It is applicable only for OLAP data source.**\n * * `localeIdentifier`: Allows you to set the specific culture code as number type to render pivot table with desired localization.\n * By default, the pivot table displays with culture code **1033**, which indicates \"en-US\" locale. **Note: It is applicale only for OLAP data source.**\n * * `dataSource`: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\n * You can fetch JSON data from remote server by using DataManager. **Note: It is applicable only for relational data source.**\n * * `rows`: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.\n * * `columns`: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.\n * * `values`: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.\n * * `filters`: Allows to filter the values in other axis based on the collection of filter fields in pivot table.\n * * `excludeFields`: Allows you to restrict the specific field(s) from displaying it in the field list UI.\n * You may also be unable to render the pivot table with this field(s) by doing so. **Note: It is applicable only for relational data source.**\n * * `expandAll`: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\n * By default, all the headers are collapsed in the pivot table. **Note: It is applicable only for Relational data.**\n * * `valueAxis`: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.\n * * `filterSettings`: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n * * `sortSettings`: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n * By default, the data source containing fields are display with Ascending order alone. To use this option, it requires the `enableSorting` property to be **true**.\n * * `enableSorting`: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.\n * * `formatSettings`: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n * * `drilledMembers`: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n * * `valueSortSettings`: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n * * `calculatedFieldSettings`: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n * * `allowMemberFilter`: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.\n * * `allowLabelFilter`: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.\n * * `allowValueFilter`: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.\n * * `showSubTotals`: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.\n * * `showRowSubTotals`: Allows to show or hide sub-totals in row axis of the pivot table.\n * * `showColumnSubTotals`: Allows to show or hide sub-totals in column axis of the pivot table.\n * * `showGrandTotals`: Allows to show or hide grand totals in both rows and columns axis of the pivot table.\n * * `showRowGrandTotals`: Allows to show or hide grand totals in row axis of the pivot table.\n * * `showColumnGrandTotals`: Allows to show or hide grand totals in column axis of the pivot table.\n * * `showHeaderWhenEmpty`: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\n * For example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom >> Undefined” in the header section.\n * * `alwaysShowValueHeader`: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.\n * * `conditionalFormatSettings`: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n * * `emptyCellsTextContent`: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.\n * * `groupSettings`: Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n * * `showAggregationOnValueField`: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\n * For example, if the value field \"Sold Amount\" is aggregated with Sum, it will be displayed with caption \"Sum of Sold Amount\" in its pivot button.\n * * `authentication`: Allows you to set the credential information to access the specified SSAS cube. **Note: It is applicable only for OLAP data source**.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Local')\n    ], DataSourceSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"fieldMapping\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property('JSON')\n    ], DataSourceSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, Authentication)\n    ], DataSourceSettings.prototype, \"authentication\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowAutoResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ wrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Method to perform excel export.\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues]\n        };\n        var fileName;\n        var header;\n        var footer;\n        var dataCollections;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            fileName = observedArgs.fileName;\n            header = observedArgs.header;\n            footer = observedArgs.footer;\n            dataCollections = observedArgs.dataCollections;\n        });\n        /** Fill data and export */\n        /* tslint:disable-next-line:no-any */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var actualrCnt = 0;\n            var formatList = this.parent.renderModule.getFormatList();\n            var rows = [];\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var cellValue = pivotCell.axis === 'value' ? pivotCell.value : pivotCell.formattedText;\n                                if (pivotCell.type === 'grand sum') {\n                                    cellValue = this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan),\n                                    });\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            cells[cells.length - 1].value = '';\n                                        }\n                                        var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                            this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                            pivotCell.actualText;\n                                        cells[cells.length - 1].style = {\n                                            numberFormat: formatList[field], bold: false, wrapText: true\n                                        };\n                                        if (pivotCell.style) {\n                                            cells[cells.length - 1].style.backColor = pivotCell.style.backgroundColor;\n                                            cells[cells.length - 1].style.fontColor = pivotCell.style.color;\n                                            cells[cells.length - 1].style.fontName = pivotCell.style.fontFamily;\n                                            cells[cells.length - 1].style.fontSize = Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    else {\n                                        cells[cells.length - 1].style = {\n                                            bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0\n                                        };\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            cells[cells.length - 1].style.hAlign = 'Left';\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                cells[cells.length - 1].style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                cells[cells.length - 1].style.indent = pivotCell.level * 2;\n                                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    cells[cells.length - 1].style.borders = { color: '#000000', lineStyle: 'Thin' };\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            cells.push({\n                                index: cCnt + 1, value: '', colSpan: 1, rowSpan: 1,\n                            });\n                        }\n                    }\n                    rows.push({ index: actualrCnt, cells: cells });\n                }\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv', undefined, this.parent.currencyCode);\n        book.save(fileName + (type === 'Excel' ? '.xlsx' : '.csv'));\n    };\n    /**\n     * To destroy the excel export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    ExcelExport.prototype.destroy = function () {\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var header = eventParams.args.header;\n        var footer = eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    PDFExport.prototype.exportToPDF = function () {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        var _this = this;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        var argument;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            _this.gridStyle = observedArgs.style;\n            argument = observedArgs;\n        });\n        var document = new PdfDocument();\n        return { document: document, args: argument };\n    };\n    /**\n     * To destroy the pdf export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            shiftEnter: 'shift+enter',\n            ctrlEnter: 'ctrl+enter',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape',\n            ctrlShiftF: 'ctrl+shift+f'\n        };\n        this.parent = parent;\n        this.event = undefined;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'shiftTab':\n                this.processShiftTab(e);\n                break;\n            case 'enter':\n            case 'shiftEnter':\n            case 'ctrlEnter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlShiftF':\n                this.toggleFieldList(e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i + 1] ? allPivotButtons[i + 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getPrevButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i - 1] ? allPivotButtons[i - 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.allpivotButtons = function (target) {\n        var buttons;\n        var columnFilterValueGroup = closest(target, '.' + cls.GRID_GROUPING_BAR_CLASS);\n        var rowGroup = closest(target, '.' + cls.GROUP_PIVOT_ROW);\n        var chartGroup = closest(target, '.' + cls.CHART_GROUPING_BAR_CLASS);\n        var tableAxis = target.classList.contains(cls.ROWSHEADER);\n        var chartAxis;\n        var rowAxis;\n        var columnFilterValueAxis;\n        if (columnFilterValueGroup !== null) {\n            rowAxis = columnFilterValueGroup.classList.contains(cls.GRID_GROUPING_BAR_CLASS);\n        }\n        else if (rowGroup !== null) {\n            columnFilterValueAxis = rowGroup.classList.contains(cls.GROUP_PIVOT_ROW);\n        }\n        else if (chartGroup !== null) {\n            chartAxis = chartGroup.classList.contains(cls.CHART_GROUPING_BAR_CLASS);\n        }\n        if (rowAxis || columnFilterValueAxis || tableAxis) {\n            /* tslint:disable */\n            var groupingbarButton = [].slice.call(this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var headerButton = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            buttons = groupingbarButton.concat(headerButton);\n        }\n        else if (chartAxis) {\n            buttons = [].slice.call(this.parent.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        }\n        /* tslint:enable */\n        return buttons;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n                var nextButton = this.getNextButton(target);\n                if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    if (this.parent.element.querySelector('.e-focused')) {\n                        this.parent.element.querySelector('.e-focused').setAttribute('tabindex', '-1');\n                        removeClass(this.parent.element.querySelectorAll('.e-focus'), 'e-focus');\n                        removeClass(this.parent.element.querySelectorAll('.e-focused'), 'e-focused');\n                        gridFocus.setFocusedElement(this.parent.element.querySelector('.e-headercell'));\n                        this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '0');\n                    }\n                    else {\n                        gridFocus.currentInfo.skipAction = true;\n                    }\n                    addClass([nextButton], 'e-btn-focused');\n                    nextButton.focus();\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList &&\n            target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList &&\n            target && closest(target, '.' + cls.PIVOT_VIEW_CLASS) && !closest(target, '.e-popup.e-popup-open')) {\n            if (this.parent.grid) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) && this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processShiftTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    target = this.parent.element.querySelector('.e-btn-focused') ? this.parent.element.querySelector('.e-btn-focused') :\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS);\n                    var allPivotButtons = this.allpivotButtons(target);\n                    if (allPivotButtons.length > 0 && allPivotButtons[allPivotButtons.length - 1]) {\n                        gridFocus.currentInfo.skipAction = true;\n                        allPivotButtons[allPivotButtons.length - 1].focus();\n                        removeClass(allPivotButtons, 'e-btn-focused');\n                        addClass([allPivotButtons[allPivotButtons.length - 1]], 'e-btn-focused');\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                var prevButton = this.getPrevButton(target);\n                if (prevButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    gridFocus.currentInfo.skipAction = true;\n                    prevButton.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && this.parent.grid && (target.classList.contains('e-movablefirst') ||\n            (target.classList.contains('e-rowsheader') && closest(target, 'tr').getAttribute('data-uid') ===\n                this.parent.grid.element.querySelector('.e-frozencontent tr').getAttribute('data-uid')))) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (target.classList.contains('e-movablefirst')) {\n                target = (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) ?\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) :\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS));\n                var element = gridFocus.getFocusedElement();\n                removeClass([element], ['e-focused', 'e-focus']);\n            }\n            var allPivotButtons_1 = this.allpivotButtons(target);\n            if (allPivotButtons_1.length > 0) {\n                gridFocus.currentInfo.skipAction = true;\n                setTimeout(function () {\n                    allPivotButtons_1[allPivotButtons_1.length - 1].focus();\n                });\n                removeClass(allPivotButtons_1, 'e-btn-focused');\n                addClass([allPivotButtons_1[allPivotButtons_1.length - 1]], 'e-btn-focused');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) &&\n            this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (e.keyCode === 13 && !e.shiftKey && !e.ctrlKey) {\n                if (target.querySelector('.' + cls.ICON)) {\n                    this.event = e;\n                    target.querySelector('.' + cls.ICON).click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                else if (target.classList.contains('e-valuescontent')) {\n                    target.dispatchEvent(new MouseEvent('dblclick', {\n                        'view': window,\n                        'bubbles': true,\n                        'cancelable': true\n                    }));\n                    if (target.querySelector('.e-numerictextbox')) {\n                        target.click();\n                    }\n                }\n                else if (target.classList.contains('e-numerictextbox')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    removeClass([element], ['e-focused', 'e-focus']);\n                }\n            }\n            else if (e.keyCode === 13 && e.shiftKey && !e.ctrlKey) {\n                if (this.parent.enableValueSorting) {\n                    this.event = e;\n                    target.click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n            else if (e.keyCode === 13 && !e.shiftKey && e.ctrlKey) {\n                if (this.parent.hyperlinkSettings && target.querySelector('a')) {\n                    target.querySelector('a').click();\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        /* tslint:disable */\n        removeClass(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR), [cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n        this.parent.renderModule.selected();\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        var target = e.target;\n        if (this.parent.grid && this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row' &&\n            !target.classList.contains('e-numerictextbox')) {\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('aria-colIndex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            /* tslint:disable */\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('aria-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n        }\n        else if (target && (e.keyCode === 37 || e.keyCode === 38) &&\n            this.parent && this.parent.showGroupingBar && this.parent.groupingBarModule && !target.classList.contains('e-numerictextbox')) {\n            if (this.parent.grid && this.parent.element.querySelector('.e-frozenheader') && this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus').length > 0) {\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus'), 'e-focus');\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focused'), 'e-focused');\n                this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '-1');\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.setFocusedElement(target);\n                addClass([target], ['e-focused', 'e-focus']);\n                target.setAttribute('tabindex', '0');\n                target.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target.classList.contains('e-numerictextbox') && e.action === 'rightArrow' || e.action === 'leftArrow') {\n            target.click();\n        }\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[aria-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    KeyboardInteraction.prototype.toggleFieldList = function (e) {\n        var target = e.target;\n        if (this.parent && !this.parent.isDestroyed && this.parent.showFieldList &&\n            this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed &&\n            this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (!this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN)) {\n                this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                e.preventDefault();\n                return;\n            }\n            else if (this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN) &&\n                this.parent.pivotFieldListModule.dialogRenderer && this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog &&\n                !this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.hide();\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement, remove, select } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS,\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n            if (select('#' + this.parent.element.id + '_PivotContextMenu', document)) {\n                remove(select('#' + this.parent.element.id + '_PivotContextMenu', document));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, isBlazor, } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.parent = parent;\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        if (this.parent.displayOption.view !== 'Chart') {\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var fCont = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            EventHandler.clearEvents(mCont);\n            EventHandler.clearEvents(fCont);\n            if (this.engineModule) {\n                EventHandler.add(mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV), 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont, fCont), this);\n                EventHandler.add(mCont.parentElement, 'scroll wheel touchmove pointermove keyup keydown', this.onVerticalScroll(fCont, mCont), this);\n                EventHandler.add(mCont.parentElement.parentElement, 'mouseup touchend', this.common(mHdr, mCont, fCont), this);\n                // EventHandler.add(fCont.parentElement, 'wheel', this.onWheelScroll(mCont, fCont), this);\n                // EventHandler.add(fCont.parentElement, 'touchstart pointerdown', this.setPageXY(), this);\n                // EventHandler.add(fCont.parentElement, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n                EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n                EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n            }\n            this.parent.grid.on('check-scroll-reset', function (args) {\n                args.cancel = true;\n            });\n            this.parent.grid.on('prevent-frozen-scroll-refresh', function (args) {\n                args.cancel = true;\n            });\n            this.parent.grid.isPreventScrollEvent = true;\n        }\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.parentElement.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = element.parentElement.scrollTop + (_this.pageXY.y - pageXY.y);\n            var left = element.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.parent.element.querySelector('.' + cls.HEADERCONTENT).contains(e.target)) {\n                if (_this.frozenPreviousValues.left === left || left < 0) {\n                    return;\n                }\n                mHdr.scrollLeft = left;\n                _this.pageXY.x = pageXY.x;\n                _this.frozenPreviousValues.left = left;\n            }\n            else {\n                if (_this.frozenPreviousValues.top === top || top < 0) {\n                    return;\n                }\n                _this.pageXY.y = pageXY.y;\n                _this.frozenPreviousValues.top = top;\n            }\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (mHdr, mCont, top, left, e) {\n        var _this = this;\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            engine.pageSettings = this.parent.pageSettings;\n        }\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var rowValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_1 = (this.parent.pageSettings.rowSize * rowValues_1 * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize_1);\n                if ((this.parent.scrollPosObject.vertical === section ||\n                    engine.pageSettings.rowSize >= engine.rowCount)) {\n                    // this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                this.parent.scrollPosObject.vertical = section;\n                engine.pageSettings.rowCurrentPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var pivot_1 = this.parent;\n                        var sfBlazor = 'sfBlazor';\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.pivotValues = engine.pivotValues;\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                            var exactPage = Math.ceil(rowStartPos_1 / (pivot_1.pageSettings.rowSize * rowValues_1));\n                            var pos = exactSize_1 * exactPage -\n                                (engine.rowFirstLvl * rowValues_1 * pivot_1.gridSettings.rowHeight);\n                            pivot_1.scrollPosObject.verticalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        this.parent.engineModule.generateGridData(this.parent.dataSourceSettings, this.parent.engineModule.headerCollection);\n                        rowStartPos_1 = this.parent.engineModule.rowStartPos;\n                    }\n                }\n                else {\n                    this.parent.olapEngineModule.scrollPage('scroll');\n                    rowStartPos_1 = this.parent.olapEngineModule.pageRowStartPos;\n                }\n                if (!(isBlazor() && this.parent.dataType === 'pivot')) {\n                    this.parent.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowSize * rowValues_1));\n                    var pos = exactSize_1 * exactPage -\n                        (engine.rowFirstLvl * rowValues_1 * this.parent.gridSettings.rowHeight);\n                    this.parent.scrollPosObject.verticalSection = pos;\n                }\n            }\n            else {\n                var colValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_2 = (this.parent.pageSettings.columnSize *\n                    colValues_1 * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(left / exactSize_2);\n                if (this.parent.scrollPosObject.horizontal === section) {\n                    // this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                var pivot = this.parent;\n                pivot.scrollPosObject.horizontal = section;\n                engine.pageSettings.columnCurrentPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                if (pivot.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var pivot_2 = this.parent;\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_2.dataSourceSettings], pivot_2.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            colStartPos_1 = pivot_2.engineModule.colStartPos;\n                            pivot_2.pivotValues = engine.pivotValues;\n                            var exactPage = Math.ceil(colStartPos_1 / (pivot_2.pageSettings.columnSize * colValues_1));\n                            var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                                colValues_1 * pivot_2.gridSettings.columnWidth);\n                            pivot_2.scrollPosObject.horizontalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, pivot.engineModule.headerCollection);\n                        colStartPos_1 = pivot.engineModule.colStartPos;\n                    }\n                }\n                else {\n                    pivot.olapEngineModule.scrollPage('scroll');\n                    colStartPos_1 = pivot.olapEngineModule.pageColStartPos;\n                }\n                if (!(isBlazor() && pivot.dataType === 'pivot')) {\n                    pivot.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(colStartPos_1 / (pivot.pageSettings.columnSize * colValues_1));\n                    var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                        colValues_1 * pivot.gridSettings.columnWidth);\n                    pivot.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            _this.update(mHdr, mCont, mCont.parentElement.scrollTop * _this.parent.verticalScrollScale, mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft * _this.parent.horizontalScrollScale, e);\n        };\n    };\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var left = mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft : left;\n                    _this.update(mHdr, mCont, mCont.parentElement.scrollTop * _this.parent.verticalScrollScale, left, e);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'horizondal';\n            var horiOffset = -((left - _this.parent.scrollPosObject.horizontalSection - mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft));\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',').length > 1 ?\n                mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() : \"0px)\";\n            if (mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + mHdr.offsetWidth) -\n                (_this.parent.scrollPosObject.horizontalSection + mCont.querySelector('.e-table').offsetWidth));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft;\n        };\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (fCont, mCont) {\n        var _this = this;\n        var timeOutObj;\n        return function (e) {\n            var top = mCont.parentElement.scrollTop * _this.parent.verticalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove' || e.type === 'keyup' || e.type === 'keydown') {\n                clearTimeout(timeOutObj);\n                timeOutObj = setTimeout(function () {\n                    _this.update(null, mCont, mCont.parentElement.scrollTop * _this.parent.verticalScrollScale, mCont.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft * _this.parent.horizontalScrollScale, e);\n                }, 300);\n            }\n            /* tslint:enable */\n            if (_this.previousValues.top === top) {\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'vertical';\n            var vertiOffset = -((top - _this.parent.scrollPosObject.verticalSection - mCont.parentElement.scrollTop));\n            var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n            if (vertiOffset > _this.parent.virtualDiv.clientHeight) {\n                vertiOffset = _this.parent.virtualDiv.clientHeight;\n            }\n            if (mCont.parentElement.scrollTop < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                -(_this.parent.scrollPosObject.verticalSection - top) : ((top + fCont.parentElement.clientHeight) -\n                (_this.parent.scrollPosObject.verticalSection + fCont.querySelector('.e-table').offsetHeight));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.verticalSection > top ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (top > fCont.parentElement.clientHeight) {\n                    if (_this.parent.scrollPosObject.top < 1) {\n                        _this.parent.scrollPosObject.top = fCont.parentElement.clientHeight;\n                    }\n                    _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                    excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                        (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.verticalSection;\n                }\n                var movableTable = _this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                vertiOffset = -((top - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.parentElement.scrollTop));\n                var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                    - movableTable.clientHeight);\n                if (vHeight > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                    vHeight = _this.parent.scrollerBrowserLimit;\n                }\n                if (vertiOffset > vHeight && vertiOffset > top) {\n                    vertiOffset = top;\n                    excessMove = 0;\n                }\n                if (vertiOffset > _this.parent.virtualDiv.clientHeight) {\n                    vertiOffset = _this.parent.virtualDiv.clientHeight;\n                }\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n                _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n            }\n            _this.previousValues.top = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = '';\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar, ExcelExport, PdfExport } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.clonedData = [];\n        this.isUpdated = false;\n        this.gridIndexObjects = {};\n        this.gridData = [];\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    DrillThroughDialog.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        this.gridData = eventArgs.rawData;\n        for (var i = 0; i < eventArgs.rawData.length; i++) {\n            this.clonedData.push(this.frameHeaderWithKeys(eventArgs.rawData[i]));\n        }\n        var actualText = eventArgs.currentCell.actualText.toString();\n        if (this.engine.fieldList[actualText].aggregateType !== 'Count' && this.parent.editSettings.allowInlineEditing &&\n            this.parent.editSettings.allowEditing && eventArgs.rawData.length === 1 &&\n            this.engine.fieldList[actualText].aggregateType !== 'DistinctCount' && typeof (eventArgs.rawData[0][actualText]) !== 'string') {\n            this.editCell(eventArgs);\n        }\n        else {\n            this.removeDrillThroughDialog();\n            var drillThroughDialog = createElement('div', {\n                id: this.parent.element.id + '_drillthrough',\n                className: cls.DRILLTHROUGH_DIALOG\n            });\n            this.parent.element.appendChild(drillThroughDialog);\n            this.dialogPopUp = new Dialog({\n                animationSettings: { effect: 'Fade' },\n                allowDragging: false,\n                header: this.parent.localeObj.getConstant('details'),\n                content: this.createDrillThroughGrid(eventArgs),\n                beforeOpen: function () {\n                    /* tslint:disable:align */\n                    _this.drillThroughGrid.setProperties({\n                        dataSource: _this.parent.editSettings.allowEditing ?\n                            _this.dataWithPrimarykey(eventArgs) : _this.gridData,\n                        height: !_this.parent.editSettings.allowEditing ? 300 : 220,\n                        rowHeight: _this.parent.gridSettings.rowHeight\n                    }, false);\n                },\n                beforeClose: function () {\n                    if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                        if (_this.parent.dataSourceSettings.type === 'CSV') {\n                            _this.updateData(_this.drillThroughGrid.dataSource);\n                        }\n                        var gridIndexObjectsValue = Object.keys(_this.gridIndexObjects);\n                        var previousPosition = [];\n                        for (var _i = 0, gridIndexObjectsValue_1 = gridIndexObjectsValue; _i < gridIndexObjectsValue_1.length; _i++) {\n                            var value = gridIndexObjectsValue_1[_i];\n                            previousPosition.push(_this.gridIndexObjects[value]);\n                        }\n                        var count = Object.keys(_this.gridIndexObjects).length;\n                        var addItems = [];\n                        var prevItems = [];\n                        var index = 0;\n                        /* tslint:disable:no-string-literal */\n                        for (var _a = 0, _b = _this.drillThroughGrid.dataSource; _a < _b.length; _a++) {\n                            var item = _b[_a];\n                            if (isNullOrUndefined(item['__index']) || item['__index'] === '') {\n                                for (var _c = 0, _d = _this.engine.fields; _c < _d.length; _c++) {\n                                    var field = _d[_c];\n                                    if (isNullOrUndefined(item[field])) {\n                                        delete item[field];\n                                    }\n                                }\n                                delete item['__index'];\n                                addItems.push(item);\n                            }\n                            else if (count > 0) {\n                                if (isBlazor() && _this.parent.editSettings.allowCommandColumns) {\n                                    _this.parent.engineModule.data[Number(item['__index'])] = item;\n                                }\n                                delete _this.gridIndexObjects[item['__index'].toString()];\n                                prevItems.push(item);\n                                count--;\n                            }\n                            if (_this.parent.dataSourceSettings.mode === 'Server') {\n                                if (item['__index']) {\n                                    delete item['__index'];\n                                }\n                                if (_this.gridData[index]['__index']) {\n                                    delete _this.gridData[index]['__index'];\n                                }\n                            }\n                            index++;\n                        }\n                        count = 0;\n                        if (isBlazor() && _this.parent.enableVirtualization) {\n                            var currModule_1 = _this;\n                            /* tslint:disable:no-any */\n                            currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'updateRawData', {\n                                'AddItem': addItems, 'RemoveItem': currModule_1.gridIndexObjects, 'ModifiedItem': currModule_1.gridData\n                            }).then(function (data) {\n                                currModule_1.parent.updateBlazorData(data, currModule_1.parent);\n                                currModule_1.parent.allowServerDataBinding = false;\n                                currModule_1.parent.setProperties({ pivotValues: currModule_1.parent.engineModule.pivotValues }, true);\n                                delete currModule_1.parent.bulkChanges.pivotValues;\n                                currModule_1.parent.allowServerDataBinding = true;\n                                currModule_1.isUpdated = false;\n                                currModule_1.gridIndexObjects = {};\n                            });\n                            /* tslint:enable:no-any */\n                        }\n                        else if (_this.parent.dataSourceSettings.mode === 'Server') {\n                            var gridIndex = [];\n                            var keys = Object.keys(_this.gridIndexObjects);\n                            for (var len = 0; len < keys.length; len++) {\n                                delete _this.parent.drillThroughValue.indexObject[_this.gridIndexObjects[keys[len]]];\n                                gridIndex.push({ Key: keys[len], Value: _this.gridIndexObjects[keys[len]] });\n                            }\n                            var indexObject = [];\n                            keys = Object.keys(_this.parent.drillThroughValue.indexObject);\n                            for (var len = 0; len < keys.length; len++) {\n                                indexObject.push({ Key: keys[len], Value: _this.parent.drillThroughValue.indexObject[keys[len]] });\n                            }\n                            _this.parent.getEngine('updateRawData', null, null, null, null, null, null, null, { 'addedData': addItems, 'removedData': gridIndex, 'updatedData': prevItems, indexObject: indexObject });\n                        }\n                        else {\n                            var items = [];\n                            var data = (_this.parent.allowDataCompression && _this.parent.enableVirtualization) ?\n                                _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                            for (var _e = 0, _f = data; _e < _f.length; _e++) {\n                                var item = _f[_e];\n                                delete item['__index'];\n                                if (_this.gridIndexObjects[count.toString()] === undefined) {\n                                    items.push(item);\n                                }\n                                count++;\n                            }\n                            /* tslint:enable:no-string-literal */\n                            items = items.concat(addItems);\n                            var eventArgs_1 = {\n                                currentData: _this.drillThroughGrid.dataSource,\n                                previousData: _this.clonedData,\n                                previousPosition: previousPosition,\n                                cancel: false\n                            };\n                            _this.parent.trigger(events.editCompleted, eventArgs_1);\n                            if (!eventArgs_1.cancel) {\n                                _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                                _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                                _this.parent.pivotValues = _this.engine.pivotValues;\n                            }\n                        }\n                    }\n                    if (!(isBlazor() && _this.parent.enableVirtualization)) {\n                        _this.isUpdated = false;\n                        _this.gridIndexObjects = {};\n                    }\n                },\n                isModal: true,\n                visible: true,\n                showCloseIcon: true,\n                locale: this.parent.locale,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.isAdaptive ? '100%' : '60%',\n                position: { X: 'center', Y: 'center' },\n                closeOnEscape: true,\n                target: document.body,\n                close: this.removeDrillThroughDialog.bind(this)\n            });\n            this.dialogPopUp.isStringTemplate = true;\n            this.dialogPopUp.appendTo(drillThroughDialog);\n            // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('details');\n            setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n        }\n    };\n    DrillThroughDialog.prototype.editCell = function (eventArgs) {\n        var _this = this;\n        var gridResize = this.parent.gridSettings.allowResizing;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        var indexObject = Number(Object.keys(eventArgs.currentCell.indexObject));\n        eventArgs.currentTarget.firstElementChild.style.display = 'none';\n        var cellValue = Number(eventArgs.rawData[0][actualText]);\n        var previousData = this.frameHeaderWithKeys(eventArgs.rawData[eventArgs.rawData.length - 1]);\n        var currentData = eventArgs.rawData[eventArgs.rawData.length - 1];\n        if (eventArgs.currentCell.actualText in previousData) {\n            currentData[eventArgs.currentCell.actualText] = eventArgs.currentCell.actualValue;\n        }\n        this.numericTextBox = new NumericTextBox({\n            value: cellValue,\n            enableRtl: this.parent.enableRtl,\n            enabled: true,\n            format: '####.##',\n            locale: this.parent.locale,\n            change: function () {\n                var textBoxValue = _this.numericTextBox.value;\n                var indexValue = eventArgs.currentCell.indexObject[indexObject];\n                eventArgs.rawData[0][actualText] = textBoxValue;\n                _this.parent.engineModule.data[indexValue] = eventArgs.rawData[0];\n            },\n            blur: function () {\n                var eventArgs = {\n                    currentData: currentData,\n                    previousData: previousData,\n                    previousPosition: currentData.index,\n                    cancel: false\n                };\n                _this.parent.trigger(events.editCompleted, eventArgs);\n                if (!eventArgs.cancel) {\n                    _this.parent.setProperties({ dataSourceSettings: { dataSource: _this.parent.engineModule.data } }, true);\n                    _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                    _this.parent.pivotValues = _this.engine.pivotValues;\n                    _this.parent.gridSettings.allowResizing = gridResize;\n                }\n            },\n        });\n        var textBoxElement = createElement('input', {\n            id: this.parent.element.id + '_inputbox',\n        });\n        eventArgs.currentTarget.appendChild(textBoxElement);\n        this.numericTextBox.appendTo(textBoxElement);\n        eventArgs.currentCell.value = this.numericTextBox.value;\n        this.numericTextBox.focusIn();\n        this.parent.gridSettings.allowResizing = false;\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThroughDialog.prototype.updateData = function (dataSource) {\n        var dataPos = 0;\n        var data = (this.parent.allowDataCompression && this.parent.enableVirtualization) ?\n            this.parent.engineModule.actualData : this.parent.engineModule.data;\n        while (dataPos < dataSource.length) {\n            var fields = Object.keys(dataSource[dataPos]);\n            var keyPos = 0;\n            var framedSet = [];\n            while (keyPos < fields.length) {\n                if (!isNullOrUndefined(this.parent.engineModule.fieldKeys[fields[keyPos]])) {\n                    framedSet[this.parent.engineModule.fieldKeys[fields[keyPos]]] = dataSource[dataPos][fields[keyPos]];\n                }\n                keyPos++;\n            }\n            data[dataSource[dataPos]['__index']] = framedSet;\n            dataPos++;\n        }\n        if (this.parent.allowDataCompression && this.parent.enableVirtualization) {\n            this.parent.engineModule.actualData = data;\n        }\n        else {\n            this.parent.engineModule.data = data;\n        }\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs) {\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> :<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            enableHover: false,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: !this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing,\n            pageSettings: { pageSize: 20 }\n        });\n        if (isBlazor()) {\n            /* tslint:disable-next-line */\n            this.drillThroughGrid['isJsComponent'] = true;\n        }\n        if (this.parent.dataType === 'olap') {\n            this.formatData();\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: isBlazor() ? undefined : this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.drillThroughGrid.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (this.drillThroughGrid.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            this.drillThroughGrid.editSettings = this.parent.editSettings;\n            if (this.parent.editSettings.allowCommandColumns) {\n                this.drillThroughGrid.editSettings.mode = 'Normal';\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                Grid.Inject(CommandColumn);\n                this.drillThroughGrid.columns.push({\n                    headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                    commands: [\n                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n                        { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n                        { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n                    ]\n                });\n            }\n            else {\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n            }\n            /* tslint:disable:align */\n            this.drillThroughGrid.columns.push({\n                field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false\n            });\n            /* tslint:disable-next-line:no-any */\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n            /* tslint:enable:align */\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function (rawData) {\n        var keys = this.parent.dataType === 'olap' ? rawData[0] ? Object.keys(rawData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    type: 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date') {\n                        editType = 'datepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    columns.push({\n                        field: key,\n                        headerText: this.engine.fieldList[key].caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        type: 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.formatData = function () {\n        var index = 0;\n        while (index < this.gridData.length) {\n            var data = this.gridData[index];\n            var keys = Object.keys(this.gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            this.gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = this.gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            /* tslint:disable-next-line:no-string-literal */\n            item['__index'] = indexString[count];\n            this.gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n            }\n        }\n    };\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        this.parent.drillThroughElement = element;\n        this.parent.drillThroughValue = pivotValue;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n                aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this;\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* tslint:disable:no-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n                        /* tslint:enable:no-any */\n                    });\n                }\n                else if (this.parent.dataSourceSettings.mode === 'Server') {\n                    this.parent.getEngine('fetchRawData', null, null, null, null, null, null, { rowIndex: rowIndex, columnIndex: colIndex });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization) && this.parent.dataSourceSettings.mode !== 'Server') {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ?\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] :\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    /** @hidden */\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this;\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries, Selection, StripLine, DataLabel } from '@syncfusion/ej2-charts';\nimport { AccumulationChart, PieSeries, FunnelSeries, PyramidSeries } from '@syncfusion/ej2-charts';\nimport { SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries } from '@syncfusion/ej2-charts';\nimport { MultiColoredAreaSeries, SplineSeries, StepLineSeries, AccumulationLegend, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries } from '@syncfusion/ej2-charts';\nimport { RadarSeries } from '@syncfusion/ej2-charts';\nimport { ScrollBar, Zoom, PolarSeries } from '@syncfusion/ej2-charts';\nimport { ParetoSeries, Export, Crosshair, MultiLevelLabel } from '@syncfusion/ej2-charts';\nimport { BubbleSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDataLabel } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, isBlazor, select } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\nimport { hideSpinner } from '@syncfusion/ej2-popups';\nvar PivotChart = /** @class */ (function () {\n    function PivotChart() {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.fieldPosition = [];\n        this.measurePos = -1;\n        this.measuresNames = {};\n        this.accumulationType = ['Pie', 'Pyramid', 'Doughnut', 'Funnel'];\n        /* tslint:enable:no-empty */\n    }\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotchart';\n    };\n    /* tslint:disable */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : parent.dataSourceSettings.values.length > 0;\n        if (isDataAvail) {\n            if (!this.parent.chart && (this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart'))) {\n                remove(select('#' + this.parent.element.id + '_chart', this.parent.element));\n            }\n            if (this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n            }\n        }\n        else if (this.parent.chart) {\n            if (this.parent.element.querySelector('.e-chart')) {\n                this.parent.chart.series = [];\n                this.parent.chart.rows = [];\n                this.parent.chart.primaryXAxis.title = '';\n                this.parent.chart.primaryYAxis.title = '';\n                this.parent.chart.primaryXAxis.multiLevelLabels = [];\n                this.parent.chart.primaryYAxis.multiLevelLabels = [];\n                if (this.parent.chart.axes.length > 0) {\n                    this.parent.chart.axes[0].title = '';\n                }\n                this.parent.chart.primaryXAxis.zoomFactor = 1;\n            }\n            else if (this.parent.element.querySelector('.e-accumulationchart')) {\n                this.parent.chart.series[0].dataSource = [{}];\n                this.parent.chart.series[0].dataLabel = {};\n            }\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            if (!select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                if (this.parent.displayOption.view === 'Both') {\n                    this.parent.displayOption.primary === 'Chart' ?\n                        (this.parent.element.insertBefore((createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                        (this.parent.element.appendChild(createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })));\n                }\n                else {\n                    this.parent.element.appendChild(createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }));\n                }\n                var width = this.parent.width.toString();\n                if (this.parent.showToolbar && this.parent.grid) {\n                    width = this.parent.getGridWidthAsNumber().toString();\n                }\n                var height = this.getChartHeight();\n                var tmpChart = void 0;\n                if (this.chartSettings && this.chartSettings.chartSeries && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1) {\n                    tmpChart = new AccumulationChart({ width: width, height: height });\n                }\n                else {\n                    tmpChart = new Chart({ width: width, height: height });\n                }\n                tmpChart.appendTo('#' + this.parent.element.id + '_chart');\n                if (this.parent.showToolbar) {\n                    if (this.parent.displayOption.view === 'Both' && this.parent.currentView === 'Chart') {\n                        this.parent.grid.element.style.display = 'none';\n                    }\n                    if (this.parent.currentView !== 'Chart') {\n                        select('#' + this.parent.element.id + '_chart', this.parent.element).style.display = 'none';\n                    }\n                }\n            }\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        this.accEmptyPoint = false;\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = (chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        var drillDimension = '';\n        var isDrill = false;\n        if (this.parent.dataType === 'olap') {\n            levelPos = this.groupHierarchyWithLevels(pivotValues);\n            lastHierarchy = this.fieldPosition[this.fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (this.fieldPosition.length - 1) && this.fieldPosition.length > 1) ?\n                this.fieldPosition[this.fieldPosition.length - 2] : lastHierarchy;\n            drillDimension = lastDimension;\n        }\n        for (var _b = 0, rKeys_1 = rKeys; _b < rKeys_1.length; _b++) {\n            var rKey = rKeys_1[_b];\n            var rowIndex = Number(rKey);\n            if (!isNullOrUndefined(pivotValues[rowIndex])) {\n                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                    (this.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                    var firstRowCell = pivotValues[rowIndex][0];\n                    var tupInfo = this.parent.dataType === 'olap' ?\n                        this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                    var fieldPos = -1;\n                    var currrentLevel = firstRowCell.level;\n                    if (this.parent.dataType === 'olap') {\n                        isDrill = firstRowCell.hierarchy === '[Measures]' ? isDrill : this.isAttributeDrill(firstRowCell.hierarchy, tupInfo.drillInfo);\n                        drillDimension = drillDimension === lastDimension ? lastDimension : (firstRowCell.hierarchy === '[Measures]' || firstRowCell.isNamedSet || (this.engineModule.fieldList[firstRowCell.hierarchy] && !this.engineModule.fieldList[firstRowCell.hierarchy].hasAllMember)) ? lastDimension : drillDimension;\n                        fieldPos = tupInfo.drillInfo.length - 1;\n                        if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                            tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                            firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                            integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                            levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                            integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                                (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                    (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                    (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ?\n                                        (levelPos[firstRowCell.hierarchy].start) :\n                                        levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                            levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                            currrentLevel = integratedLevel;\n                            indexCount += (prevCell && drillDimension === prevCell.hierarchy && !(prevCell.isDrilled && prevCell.hasChild)) ? 1 : 0;\n                            drillDimension = isDrill ? firstRowCell.hierarchy : lastDimension;\n                            prevLevel = integratedLevel;\n                            prevCell = firstRowCell;\n                        }\n                    }\n                    else if (firstRowCell.type !== 'value') {\n                        if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                            indexCount++;\n                        }\n                        prevLevel = currrentLevel;\n                    }\n                    this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                    var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                        (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                    var text = firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                    var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                        ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                    var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort.levelName.toString();\n                    var cellInfo = {\n                        name: name_1,\n                        text: caption,\n                        hasChild: firstRowCell.hasChild,\n                        isDrilled: firstRowCell.isDrilled,\n                        levelName: levelName,\n                        level: currrentLevel,\n                        fieldName: firstRowCell.valueSort.axis ? firstRowCell.valueSort.axis.toString() : '',\n                        rowIndex: rowIndex,\n                        colIndex: 0,\n                        cell: firstRowCell\n                    };\n                    if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                        if (this.headerColl[indexCount]) {\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                        else {\n                            this.headerColl[indexCount] = {};\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                    }\n                    var rows = pivotValues[rowIndex];\n                    var cKeys = Object.keys(rows);\n                    var prevMemberCell = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                    }\n                    else {\n                        memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                    }\n                    for (var _c = 0, cKeys_1 = cKeys; _c < cKeys_1.length; _c++) {\n                        var cKey = cKeys_1[_c];\n                        var cellIndex = Number(cKey);\n                        var cell = pivotValues[rowIndex][cellIndex];\n                        var measureAllow = cell.rowHeaders === '' ? this.dataSourceSettings.rows.length === 0 : true;\n                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                            tupInfo.measureName : cell.actualText;\n                        if (!cell.isGrandSum && !totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                            actualText !== '' && ((chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? true : actualText === this.currentMeasure)) {\n                            if (isNullOrUndefined(firstRowCell.members)) {\n                                firstRowCell.members = [];\n                            }\n                            if (this.parent.dataType === 'olap' ? ((lastHierarchy === firstRowCell.hierarchy || isDrill) ?\n                                ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                    (fieldPos === this.measurePos ? (prevMemberCell.isDrilled && prevMemberCell.hasChild) : true) : (firstRowCell.isDrilled && firstRowCell.hasChild)) : true)\n                                : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                    prevMemberCell.members.length > 0 : firstRowCell.members.length > 0) || !measureAllow)) {\n                                break;\n                            }\n                            var colHeaders = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                            var rowHeaders = this.parent.dataType === 'olap' ? cell.rowHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                            var columnSeries = colHeaders + ' | ' + actualText;\n                            var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                                !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                                Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) : Number(cell.value) : Number(cell.value));\n                            if (yValue === 0) {\n                                this.accEmptyPoint = true;\n                            }\n                            if (this.columnGroupObject[columnSeries]) {\n                                this.columnGroupObject[columnSeries].push({\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue,\n                                    rIndex: rowIndex,\n                                    cIndex: cellIndex\n                                });\n                            }\n                            else {\n                                this.columnGroupObject[columnSeries] = [{\n                                        x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                        y: yValue,\n                                        rIndex: rowIndex,\n                                        cIndex: cellIndex\n                                    }];\n                            }\n                        }\n                        prevMemberCell = memberCell;\n                    }\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     * @returns void\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n        var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n            this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n        var chartType = this.chartSettings.chartSeries ? this.chartSettings.chartSeries.type : undefined;\n        if (this.accumulationType.indexOf(chartType) > -1 && columnKeys.length > 0) {\n            this.currentColumn = (columnKeys.indexOf(columnHeader + ' | ' + this.currentMeasure) > -1 && columnHeader !== undefined) ? columnHeader + ' | ' + this.currentMeasure : columnKeys[0];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n            if ((isNullOrUndefined(currentSeries.palettes) || currentSeries.palettes.length == 0) && !isNullOrUndefined(this.persistSettings.palettes) && this.persistSettings.palettes.length > 0) {\n                currentSeries.palettes = this.persistSettings.palettes;\n            }\n            currentSeries.dataSource = this.columnGroupObject[this.currentColumn];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            if (isBlazor()) {\n                if (isNullOrUndefined(this.persistSettings.chartSeries.dataLabel.visible)) {\n                    this.persistSettings.chartSeries.dataLabel.visible = true;\n                    this.persistSettings.chartSeries.dataLabel.position = \"Outside\";\n                }\n            }\n            if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.dataLabel) {\n                currentSeries.dataLabel = this.persistSettings.chartSeries.dataLabel;\n                currentSeries.dataLabel.name = 'x';\n            }\n            else {\n                currentSeries.dataLabel = { visible: true, position: \"Outside\", name: 'x' };\n                this.parent.setProperties({ chartSettings: { chartSeries: { dataLabel: { visible: true, position: \"Outside\" } } } }, true);\n            }\n            if (this.accEmptyPoint && currentSeries.emptyPointSettings) {\n                currentSeries.emptyPointSettings.mode = 'Zero';\n            }\n            else if (this.accEmptyPoint) {\n                currentSeries.emptyPointSettings = { mode: 'Zero' };\n            }\n            currentSeries.name = this.currentColumn;\n            if (chartType === 'Doughnut') {\n                currentSeries.type = 'Pie';\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '40%';\n            }\n            else if (chartType === 'Pie') {\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '0';\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        else {\n            for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n                var key = columnKeys_1[_i];\n                var currentSeries = {};\n                currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n                if (!isNullOrUndefined(currentSeries.palettes) && currentSeries.palettes.length > 0 && (isNullOrUndefined(this.persistSettings.palettes) || this.persistSettings.palettes.length == 0)) {\n                    this.chartSettings.palettes = currentSeries.palettes;\n                }\n                currentSeries.dataSource = this.columnGroupObject[key];\n                currentSeries.xName = 'x';\n                currentSeries.yName = 'y';\n                currentSeries.name = this.chartSettings.enableMultiAxis ? key : key.split(' | ')[0];\n                if (['Radar', 'Polar'].indexOf(chartType) < 0) {\n                    var measure = key.split(' | ')[1];\n                    currentSeries.yAxisName = this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n                }\n                if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = this.persistSettings.chartSeries.emptyPointSettings;\n                }\n                this.chartSeries = this.chartSeries.concat(currentSeries);\n            }\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.frameChartSeries = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            if ((this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) > -1 && ['fill', 'dashArray', 'width', 'segmentAxis',\n                'drawType', 'isClosed', 'segments', 'stackingGroup', 'marker', 'errorBar', 'trendlines', 'minRadius',\n                'splineType', 'maxRadius', 'cardinalSplineTension', 'columnWidth', 'columnSpacing', 'cornerRadius'].indexOf(keys[keyPos]) > -1) ||\n                (this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 && ['endAngle', 'explode', 'explodeAll', 'explodeIndex',\n                    'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'neckHeight', 'neckWidth', 'pyramidMode', 'startAngle',\n                    'dataLabel', 'innerRadius'].indexOf(keys[keyPos]) > -1)) {\n                keyPos++;\n                continue;\n            }\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        this.parent.showWaitingPopup();\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ?\n                (this.parent.element.insertBefore((!this.element ?\n                    (createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }))\n                    : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!this.chartElement && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).innerHTML = '';\n            this.chartElement = this.parent.element.querySelector('.' + cls.PIVOTCHART).appendChild(createElement('div', {\n                className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n            }));\n        }\n        if (this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER)) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER).innerHTML = '';\n        }\n        if (this.parent.showGroupingBar) {\n            this.element.style.minWidth = '400px !important';\n        }\n        else {\n            this.element.style.minWidth = '310px !important';\n        }\n        var width = this.parent.width.toString();\n        if (this.parent.showToolbar && this.parent.grid) {\n            width = this.parent.getGridWidthAsNumber().toString();\n        }\n        var height = this.getChartHeight();\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.accumulationType.indexOf(type) < 0) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height =\n                (height === 'auto' ? this.getChartAutoHeight() : height) + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            if (this.parent.chartSettings.chartSeries.type !== 'Polar' && this.parent.chartSettings.chartSeries.type !== 'Radar') {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n        }\n        if (this.parent.chart && ((this.parent.chart.getModuleName() === 'accumulationchart' &&\n            this.accumulationType.indexOf(type) < 0) || (this.parent.chart.getModuleName() === 'chart' &&\n            this.accumulationType.indexOf(type) > -1))) {\n            this.parent.chart.destroy();\n            if (select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                select('#' + this.parent.element.id + '_chart', this.parent.element).innerHTML = '';\n                select('#' + this.parent.element.id + '_chart', this.parent.element).appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n            }\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart')) ||\n            (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange)) {\n            if (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange && this.parent.chart) {\n                if (!this.parent.chart.isDestroyed) {\n                    this.parent.chart.destroy();\n                }\n                this.parent.chart = undefined;\n                select('#' + this.parent.element.id + '_chart', this.parent.element).innerHTML = '';\n                select('#' + this.parent.element.id + '_chart', this.parent.element).appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n                this.parent.toolbarModule.isMultiAxisChange = false;\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair, Selection, StripLine, DataLabel);\n            AccumulationChart.Inject(PieSeries, FunnelSeries, PyramidSeries, AccumulationDataLabel, AccumulationLegend, AccumulationTooltip, Export);\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart = new AccumulationChart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    width: width,\n                    height: height.toString(),\n                    title: this.chartSettings.title,\n                    enableSmartLabels: this.chartSettings.enableSmartLabels,\n                    center: this.chartSettings.pieCenter,\n                    enableBorderOnMouseMove: this.chartSettings.enableBorderOnMouseMove,\n                    highLightMode: this.chartSettings.highlightMode,\n                    highlightPattern: this.chartSettings.highlightPattern,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    theme: this.chartSettings.theme,\n                    selectionMode: this.chartSettings.accumulationSelectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    locale: this.parent.locale,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this)\n                });\n            }\n            else {\n                this.parent.chart = new Chart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    zoomSettings: currentZoomSettings,\n                    axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                    rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                    columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                    primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                    primaryXAxis: currentXAxis,\n                    width: width,\n                    height: (this.parent.chartSettings.chartSeries.type !== 'Polar' &&\n                        this.parent.chartSettings.chartSeries.type !== 'Radar' && this.parent.chartSettings.enableScrollOnMultiAxis &&\n                        this.parent.chartSettings.enableMultiAxis && this.parent.dataSourceSettings.values.length > 0) ?\n                        Number(height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(height)) ?\n                            height.toString() : (Number(height) - 5).toString() :\n                            (!isNaN(Number(height)) || this.parent.dataSourceSettings.values.length > 1) ?\n                                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                                height.toString() : height.toString(),\n                    title: this.chartSettings.title,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    chartArea: this.chartSettings.chartArea,\n                    palettes: this.chartSettings.palettes,\n                    theme: this.chartSettings.theme,\n                    crosshair: this.chartSettings.crosshair,\n                    selectionMode: this.chartSettings.selectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    isTransposed: this.chartSettings.isTransposed,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    description: this.chartSettings.description,\n                    tabIndex: this.chartSettings.tabIndex,\n                    locale: this.parent.locale,\n                    enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    dragComplete: this.chartSettings.dragComplete ? this.chartSettings.dragComplete.bind(this) : undefined,\n                    zoomComplete: this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete.bind(this) : undefined,\n                    scrollStart: this.chartSettings.scrollStart ? this.chartSettings.scrollStart.bind(this) : undefined,\n                    scrollEnd: this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd.bind(this) : undefined,\n                    scrollChanged: this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this),\n                    axisLabelRender: this.axisLabelRender.bind(this),\n                    multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n                });\n            }\n            this.parent.chart.isStringTemplate = true;\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else if ((this.accumulationType.indexOf(type) < 0) && this.parent.chart.getModuleName() === 'chart') {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultiAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n            if ((this.accumulationType.indexOf(type) > -1) && this.parent.chart.getModuleName() === 'accumulationchart' && (this.parent.dataSourceSettings.rows.length === 0 || this.parent.dataSourceSettings.columns.length === 0)) {\n                this.parent.hideWaitingPopup();\n                if (this.parent.pivotFieldListModule) {\n                    hideSpinner(this.parent.pivotFieldListModule.fieldListSpinnerElement);\n                }\n            }\n        }\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chartInner');\n        }\n        else {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chart');\n        }\n    };\n    PivotChart.prototype.pointClick = function (args) {\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.seriesIndex].dataSource;\n        if ((['Pie', 'Funnel', 'Doughnut', 'Pyramid', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) || !this.parent.chartSettings.showMultiLevelLabels) {\n            this.pivotIndex = {\n                rIndex: dataSource ? dataSource[args.pointIndex].rIndex : undefined,\n                cIndex: dataSource ? dataSource[args.pointIndex].cIndex : undefined,\n            };\n            this.creatMenu();\n            var pos = this.parent.element.getBoundingClientRect();\n            var y = (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 0) +\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 0) +\n                (window.scrollY || document.documentElement.scrollTop) + pos.top;\n            this.accumulationMenu.open(y + args.y, args.x + pos.left + (window.scrollX || document.documentElement.scrollLeft));\n        }\n        else if ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && this.parent.drillThroughModule) {\n            var rIndex = dataSource[args.pointIndex].rIndex;\n            var cIndex = dataSource[args.pointIndex].cIndex;\n            this.parent.drillThroughModule.executeDrillThrough(this.parent.pivotValues[rIndex][cIndex], rIndex, cIndex);\n        }\n        this.parent.trigger(events.chartPointClick, args);\n    };\n    /* tslint:enable */\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultiAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                    this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ?\n                    this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n                currentYAxis.plotOffsetTop = currentYAxis.plotOffsetTop ? currentYAxis.plotOffsetTop :\n                    this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                        this.chartSettings.chartSeries.type === 'StackingBar100' ? 50 : 30;\n                currentYAxis.rowIndex = valCnt;\n                currentYAxis.columnIndex = valCnt;\n                if (!resFormat) {\n                    currentYAxis.name = this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                rows.push({ height: divider });\n                columns.push({ width: divider });\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var lengthofFormat = void 0;\n            if (formatSetting) {\n                lengthofFormat = formatSetting.format.length;\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (((formatSetting.format.toLowerCase().match(/n[0-10]|p[0-10]|c[0-10]/) === null) || lengthofFormat > 3) ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    /** @hidden */\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = void 0;\n            if (!isNullOrUndefined(rows)) {\n                cKeys = Object.keys(rows);\n                for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                    var cellIndex = cKeys_2[_a];\n                    var cell = rows[Number(cellIndex)];\n                    if (!isNullOrUndefined(cell)) {\n                        if (cell.axis !== 'column') {\n                            return colIndexColl;\n                        }\n                        else if ((cell.type === 'sum' || (this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum'))\n                            && cell.rowSpan !== -1) {\n                            colIndexColl[cell.colIndex] = cell.colIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues) {\n        var _a, _b;\n        this.fieldPosition = [];\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            this.fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        this.fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < this.fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[this.fieldPosition[pos]] = {\n                    start: (lastEnd + 1),\n                    end: (lastEnd + Object.keys(group[this.fieldPosition[pos]]).length)\n                };\n                lastEnd = levelPos[this.fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    /* tslint:disable */\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1,\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    /* tslint:enable */\n    PivotChart.prototype.getZoomFactor = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (tooltip.enable && tooltip.template) {\n            this.templateFn = this.parent.templateParser(tooltip.template);\n        }\n        if (this.parent.tooltipTemplate) {\n            tooltip.template = tooltip.template ? tooltip.template : this.parent.tooltipTemplate;\n        }\n        if (isBlazor()) {\n            this.parent.allowServerDataBinding = false;\n            this.parent.setProperties({ chartSettings: { tooltip: { header: tooltip.header ? tooltip.header : '' } } }, true);\n            this.parent.allowServerDataBinding = true;\n        }\n        else {\n            tooltip.header = tooltip.header ? tooltip.header : '';\n        }\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    /* tslint:disable:no-any */\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        if (this.chartSettings.legendSettings) {\n            var keyPos = 0;\n            var keys = Object.keys(this.chartSettings.legendSettings);\n            while (keyPos < keys.length) {\n                legendSettings[keys[keyPos]] = this.chartSettings.legendSettings[keys[keyPos]];\n                keyPos++;\n            }\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1 && legendSettings.visible === undefined) {\n            legendSettings.visible = false;\n        }\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    /* tslint:enable:no-any */\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) { return args.caption || args.name; }).join(' / ');\n        currentXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true :\n            zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n            ((this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) ?\n                args.series.name ? args.series.name.split(' | ')[1] : args.data.seriesName ?\n                    args.data.seriesName.split(' | ')[1] : this.currentMeasure : this.measuresNames[this.currentMeasure] ?\n                this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        /* tslint:disable:no-any */\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.data.seriesIndex].dataSource;\n        var rowIndex = dataSource ? dataSource[args.data.pointIndex].rIndex : undefined;\n        var colIndex = dataSource ? dataSource[args.data.pointIndex].cIndex : undefined;\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure] ? this.measuresNames[measure] : measure];\n        var aggregateType = this.parent.dataType === 'olap' ? '' : this.parent.localeObj.getConstant(measureField.aggregateType);\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : aggregateType + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ') + measureField.caption;\n        var formattedText = this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 ?\n            args.text.split('<b>')[1].split('</b>')[0] : this.engineModule.pivotValues[rowIndex][colIndex].formattedText;\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var formattedValue = ((formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText) :\n            this.parent.engineModule.getFormattedValue(args.point.y, measureField.id).formattedText :\n            formattedText);\n        var columnText = (args.series.name ? args.series.name.split(' | ')[0] : args.data.seriesName.split(' | ')[0]);\n        var rowText = args.point.x;\n        if (this.parent.tooltipTemplate && this.parent.getTooltipTemplate() !== undefined || this.chartSettings.tooltip.template) {\n            var rowFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'row') : '';\n            var columnFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'Column') : '';\n            var templateVariable = {\n                rowHeaders: rowText,\n                columnHeaders: columnText,\n                aggregateType: aggregateType,\n                value: formattedValue,\n                valueField: measureField.caption,\n                rowFields: rowFields,\n                columnFields: columnFields\n            };\n            var template = void 0;\n            if (this.parent.chartSettings && this.parent.chartSettings.tooltip &&\n                this.parent.chartSettings.tooltip.enable && this.parent.chartSettings.tooltip.template) {\n                template = this.tooltipTemplateFn()(templateVariable, this, 'tooltipTemplate', this.element.id + '1tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                /* tslint:enable:no-any */\n                template = this.parent.getTooltipTemplate()(templateVariable, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            args.template = template;\n        }\n        else {\n            args.text = measureAggregatedName + ': ' + formattedValue +\n                (this.dataSourceSettings.columns.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + columnText)) +\n                (this.dataSourceSettings.rows.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + rowText));\n            this.parent.trigger(events.chartTooltipRender, args);\n        }\n    };\n    PivotChart.prototype.tooltipTemplateFn = function () {\n        return this.templateFn;\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(select('#' + this.parent.element.id + multilabelAxisName, this.parent.element))) {\n                this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) >= 0)\n            && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'visible';\n        }\n        else if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n        }\n        this.parent.chart.height = ['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) < 0 &&\n            this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.parent.dataSourceSettings.values.length > 0 ? Number(this.parent.chart.height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ?\n            isNaN(Number(this.getChartHeight())) ? this.getChartHeight().toString() : (Number(this.getChartHeight()) - 5).toString() :\n            (!isNaN(Number(this.getChartHeight())) || this.parent.dataSourceSettings.values.length > 1) ?\n                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                this.getChartHeight().toString() : this.getChartHeight().toString();\n        this.updateView();\n        this.parent.notify(events.contentReady, {});\n        this.parent.trigger(events.chartLoaded, args);\n        if ((this.parent.dataSourceSettings.mode === 'Server' && this.parent.isServerWaitingPopup) || this.parent.dataSourceSettings.mode === 'Local') {\n            this.parent.hideWaitingPopup();\n        }\n    };\n    /** @hidden */\n    PivotChart.prototype.updateView = function () {\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                }\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = '';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = '';\n                }\n            }\n        }\n    };\n    PivotChart.prototype.creatMenu = function () {\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n        }\n        var items = ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing)\n            && this.parent.drillThroughModule) ? ['expand', 'collapse', 'drillThrough', 'exit'] :\n            ['expand', 'collapse', 'exit'];\n        var option = [];\n        for (var i = 0; i < items.length; i++) {\n            option.push({\n                id: this.parent.element.id + '_DrillMenuChart_' + items[i],\n                text: this.parent.localeObj.getConstant(items[i]),\n                items: [],\n            });\n        }\n        var getString = this.getMenuItems();\n        var expand = [];\n        var collapse = [];\n        for (var i = 0; i < getString.length; i++) {\n            if (getString[i].type === 'expand') {\n                expand.push({ id: this.element.id + 'drillExpand_' + getString[i].key, text: getString[i].value });\n            }\n            else {\n                collapse.push({ id: this.element.id + 'drillCollapse_' + getString[i].key, text: getString[i].value });\n            }\n        }\n        if (expand.length > 0) {\n            option[0].items = expand;\n        }\n        if (collapse.length > 0) {\n            option[1].items = collapse;\n        }\n        var menuOptions = {\n            cssClass: this.parent.element.id + '_accumulationChart',\n            items: option,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.drillMenuOpen.bind(this),\n            select: this.drillMenuSelect.bind(this),\n        };\n        this.accumulationMenu = new ContextMenu(menuOptions);\n        var contextMenu;\n        if (select('#' + this.parent.element.id + '_accumulationChart', this.parent.element)) {\n            contextMenu = select('#' + this.parent.element.id + '_accumulationChart', this.parent.element);\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + '_accumulationChart'\n            });\n            this.parent.element.appendChild(contextMenu);\n        }\n        this.accumulationMenu.isStringTemplate = true;\n        this.accumulationMenu.appendTo(contextMenu);\n    };\n    PivotChart.prototype.drillMenuOpen = function (args) {\n        if (args.items[0] && args.items[0].text === this.parent.localeObj.getConstant('expand') &&\n            args.items[0].items && args.items[0].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('expand')], false);\n        }\n        if (args.items[1] && args.items[1].text === this.parent.localeObj.getConstant('collapse') &&\n            args.items[1].items && args.items[1].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('collapse')], false);\n        }\n    };\n    PivotChart.prototype.getMenuItems = function () {\n        var rowIndex = this.pivotIndex.rIndex;\n        var menuItem = [];\n        var pivotValues = this.engineModule.pivotValues;\n        var levelCol = [];\n        var pivotValue = pivotValues[rowIndex][this.pivotIndex.cIndex];\n        // let hierarchy: string = pivotValues[rowIndex][0].hierarchy;\n        var level = (!pivotValues[rowIndex][0].isNamedSet && pivotValues[rowIndex][0].hasChild) ?\n            pivotValues[rowIndex][0].level : undefined;\n        var levels = this.parent.dataType === 'olap' ? pivotValue.rowHeaders.toString().split(/~~|::/)\n            : pivotValue.rowHeaders.toString().split(this.engineModule.valueSortSettings.headerDelimiter);\n        while (pivotValues[rowIndex][0]) {\n            pivotValue = pivotValues[rowIndex][0];\n            if ((levels.length !== 0) && (levels.indexOf(pivotValue.formattedText.toString()) === (levels.length - 1))) {\n                if (pivotValue.hasChild && !pivotValue.isNamedSet && levelCol.indexOf(pivotValue.level) < 0 &&\n                    (level ? level >= pivotValue.level : (level === 0 ? (pivotValue.level === 0) : true))) {\n                    if (!(pivotValue.isDrilled && pivotValue.hasChild)) {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'expand',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    else {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'collapse',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    levelCol.push(pivotValue.level);\n                    level = level ? (level - 1) : (pivotValue.level - 1);\n                }\n                var index = levels.indexOf(pivotValue.formattedText.toString());\n                levels.splice(index, 1);\n            }\n            if (pivotValue.level === 0 && pivotValue.hasChild && !pivotValue.isNamedSet) {\n                level = undefined;\n                levelCol = [];\n            }\n            rowIndex--;\n        }\n        return menuItem;\n    };\n    PivotChart.prototype.drillMenuSelect = function (args) {\n        var pivotValues = (this.parent.dataType === 'olap' ?\n            this.parent.olapEngineModule.pivotValues : this.parent.engineModule.pivotValues);\n        var option = (args.element.id).split('_DrillMenuChart_')[1];\n        if (args.element.id.indexOf(this.element.id + 'drill') === 0) {\n            var type = args.element.id.split(this.element.id + 'drill')[1].indexOf('Expand') >= 0 ? 'drillExpand' : 'drillCollapse';\n            var rowIndex = Number(args.element.id.split(this.element.id + type + '_')[1]);\n            var pivotValue = pivotValues[rowIndex][0];\n            var name_2 = this.parent.dataType === 'olap' ? pivotValue.formattedText :\n                (pivotValue.actualText ? pivotValue.actualText.toString() : pivotValue.formattedText.toString());\n            var text = pivotValue.formattedText ? pivotValue.formattedText.toString() : name_2;\n            var caption = (pivotValue.hasChild && !pivotValue.isNamedSet) ?\n                ((pivotValue.isDrilled ? ' - ' : ' + ') + text) : text;\n            var tupInfo = this.parent.dataType === 'olap' ?\n                this.engineModule.tupRowInfo[pivotValue.ordinal] : undefined;\n            var levelName = tupInfo ? tupInfo.uNameCollection : pivotValue.valueSort.levelName.toString();\n            var customAttributes = {\n                fieldName: pivotValue.valueSort.axis,\n                level: pivotValue.level,\n                hasChild: pivotValue.hasChild,\n                levelName: levelName,\n                name: name_2,\n                text: caption,\n                rowIndex: rowIndex,\n                colIndex: 0,\n                isDrilled: pivotValue.isDrilled,\n                cell: pivotValue\n            };\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, customAttributes);\n            }\n            else {\n                this.onDrill({ customAttributes: customAttributes });\n            }\n        }\n        else if (option === 'drillThrough') {\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.drillThroughModule.executeDrillThrough(pivotValues[this.pivotIndex.rIndex][this.pivotIndex.cIndex], this.pivotIndex.rIndex, this.pivotIndex.rIndex);\n        }\n        else if (option === 'exit') {\n            this.accumulationMenu.close();\n        }\n    };\n    PivotChart.prototype.getChartHeight = function () {\n        var height = isNullOrUndefined(this.parent.getHeightAsNumber()) ? 'auto' :\n            this.parent.getHeightAsNumber().toString();\n        if (!isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            if (this.parent.showToolbar && this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                    (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                        this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if (this.parent.showToolbar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42)).toString();\n            }\n            else if (this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if ((this.parent.chart && parseInt(this.parent.chart.height, 10) < 200) || this.parent.getHeightAsNumber() < 200) {\n                height = '200';\n            }\n        }\n        else {\n            height = 'auto';\n        }\n        return height;\n    };\n    PivotChart.prototype.getChartAutoHeight = function () {\n        var height = this.parent.element.offsetHeight;\n        if (this.parent.showToolbar && this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        else if (this.parent.showToolbar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42);\n        }\n        else if (this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        return height;\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels) {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        var eventArgs = {\n            axis: args.axis,\n            text: args.text,\n            cell: !isNullOrUndefined(args.customAttributes) ? args.customAttributes.cell : undefined,\n            cancel: false\n        };\n        this.parent.trigger(events.multiLevelLabelClick, eventArgs);\n        /* tslint:disable-next-line:no-any */\n        if (!eventArgs.cancel && args.customAttributes && args.customAttributes.hasChild && !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    /** @hidden */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        /* tslint:enable:no-any */\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({\n                dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] }\n            }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        var drillArgs = {\n            drillInfo: drilledItem,\n            pivotview: isBlazor() ? undefined : pivot.parent\n        };\n        pivot.parent.trigger(events.drill, drillArgs);\n        if (pivot.parent.enableVirtualization) {\n            if (isBlazor()) {\n                /* tslint:disable */\n                var sfBlazor = 'sfBlazor';\n                var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem], drilledItem);\n                var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs], drillArgs);\n                pivot.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                    pivot.parent.updateBlazorData(data, pivot.parent);\n                    pivot.parent.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                    pivot.parent.allowServerDataBinding = false;\n                    pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    delete pivot.parent.bulkChanges.pivotValues;\n                    pivot.parent.allowServerDataBinding = true;\n                    pivot.parent.renderPivotGrid();\n                });\n                /* tslint:enable */\n            }\n            else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n                pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n            }\n            else {\n                pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                pivot.engineModule.onDrill(drilledItem);\n            }\n        }\n        else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n            pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings);\n        }\n        pivot.parent.allowServerDataBinding = false;\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        /* tslint:disable-next-line:no-any */\n        delete pivot.parent.bulkChanges.pivotValues;\n        pivot.parent.allowServerDataBinding = true;\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.isAttributeDrill = function (hierarchy, drillInfo) {\n        var isDrill = false;\n        for (var i = 0; i < this.dataSourceSettings.drilledMembers.length; i++) {\n            if (this.dataSourceSettings.drilledMembers[i].name === hierarchy) {\n                for (var j = 0; j < this.dataSourceSettings.drilledMembers[i].items.length; j++) {\n                    var drillItems = this.dataSourceSettings.drilledMembers[i].items[j].split(this.dataSourceSettings.drilledMembers[i].delimiter);\n                    var levelName = '';\n                    for (var k = 0; k < drillItems.length; k++) {\n                        if (drillInfo[k] && drillInfo[k].uName) {\n                            levelName = levelName + (levelName === '' ? '' : this.dataSourceSettings.drilledMembers[i].delimiter) + (drillInfo[k].uName.indexOf('[Measures]') > -1 ? '[Measures]' : drillInfo[k].uName);\n                        }\n                    }\n                    if (levelName === this.dataSourceSettings.drilledMembers[i].items[j]) {\n                        isDrill = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (isBlazor()) {\n            args.chart = this.parent.chart;\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) {\n            args.chart.primaryXAxis.zoomFactor = this.getZoomFactor();\n            if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n                args.chart.primaryXAxis.zoomFactor = 1;\n            }\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /**\n     * To destroy the chart module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.chart && !this.parent.chart.isDestroyed) {\n            if (this.accumulationMenu && this.accumulationMenu.isDestroyed) {\n                this.accumulationMenu.destroy();\n            }\n            this.parent.chart.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","/**\n * Specifies Chart Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartSubTitleFont = {\n        size: '11px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stockEventFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/base/themes';\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Allow options to customize the border of the chart such as color and border size in the pivot chart.\n * For example, to display the chart border color as red, set the properties `color` to either **\"red\"**\n * or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Allows to configure the position of the marker such as top and left in the chart.\n */\nvar Offset = /** @class */ (function (_super) {\n    __extends(Offset, _super);\n    function Offset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"y\", void 0);\n    return Offset;\n}(ChildProperty));\nexport { Offset };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * @public\n */\nvar Indexes = /** @class */ (function (_super) {\n    __extends(Indexes, _super);\n    function Indexes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"point\", void 0);\n    return Indexes;\n}(ChildProperty));\nexport { Indexes };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar ChartArea = /** @class */ (function (_super) {\n    __extends(ChartArea, _super);\n    function ChartArea() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Border)\n    ], ChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], ChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartArea.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartArea.prototype, \"backgroundImage\", void 0);\n    return ChartArea;\n}(ChildProperty));\nexport { ChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar CrosshairSettings = /** @class */ (function (_super) {\n    __extends(CrosshairSettings, _super);\n    function CrosshairSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], CrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], CrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], CrosshairSettings.prototype, \"lineType\", void 0);\n    return CrosshairSettings;\n}(ChildProperty));\nexport { CrosshairSettings };\n/**\n * Allows to configure the data label with different settings such as name, fill color, opacity, rotation angle, border, marging, etc in the chart.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartConnectorStyle = /** @class */ (function (_super) {\n    __extends(PivotChartConnectorStyle, _super);\n    function PivotChartConnectorStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Line')\n    ], PivotChartConnectorStyle.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartConnectorStyle.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartConnectorStyle.prototype, \"dashArray\", void 0);\n    return PivotChartConnectorStyle;\n}(ChildProperty));\nexport { PivotChartConnectorStyle };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartDataLabel = /** @class */ (function (_super) {\n    __extends(PivotChartDataLabel, _super);\n    function PivotChartDataLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartDataLabel.prototype, \"visible\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartDataLabel.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartDataLabel.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartDataLabel.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotChartDataLabel.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"ry\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartDataLabel.prototype, \"template\", void 0);\n    __decorate([\n        Complex({}, PivotChartConnectorStyle)\n    ], PivotChartDataLabel.prototype, \"connectorStyle\", void 0);\n    return PivotChartDataLabel;\n}(ChildProperty));\nexport { PivotChartDataLabel };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Allows to configure the error bar cap settings such as cap width, length, color, opacity.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\n/**\n * Allows options for customize the error bar chart with diffent settings such as type, direction, mode, color, width, etc.\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Allows to configure the trendlines of the chart such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar EmptyPointSettings = /** @class */ (function (_super) {\n    __extends(EmptyPointSettings, _super);\n    function EmptyPointSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], EmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], EmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], EmptyPointSettings.prototype, \"mode\", void 0);\n    return EmptyPointSettings;\n}(ChildProperty));\nexport { EmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar CornerRadius = /** @class */ (function (_super) {\n    __extends(CornerRadius, _super);\n    function CornerRadius() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomRight\", void 0);\n    return CornerRadius;\n}(ChildProperty));\nexport { CornerRadius };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar CrosshairTooltip = /** @class */ (function (_super) {\n    __extends(CrosshairTooltip, _super);\n    function CrosshairTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\n    return CrosshairTooltip;\n}(ChildProperty));\nexport { CrosshairTooltip };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar StripLineSettings = /** @class */ (function (_super) {\n    __extends(StripLineSettings, _super);\n    function StripLineSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], StripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], StripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], StripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], StripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], StripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], StripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], StripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], StripLineSettings.prototype, \"opacity\", void 0);\n    return StripLineSettings;\n}(ChildProperty));\nexport { StripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar LabelBorder = /** @class */ (function (_super) {\n    __extends(LabelBorder, _super);\n    function LabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], LabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], LabelBorder.prototype, \"type\", void 0);\n    return LabelBorder;\n}(ChildProperty));\nexport { LabelBorder };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar MajorGridLines = /** @class */ (function (_super) {\n    __extends(MajorGridLines, _super);\n    function MajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorGridLines.prototype, \"color\", void 0);\n    return MajorGridLines;\n}(ChildProperty));\nexport { MajorGridLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar MinorGridLines = /** @class */ (function (_super) {\n    __extends(MinorGridLines, _super);\n    function MinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorGridLines.prototype, \"color\", void 0);\n    return MinorGridLines;\n}(ChildProperty));\nexport { MinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar AxisLine = /** @class */ (function (_super) {\n    __extends(AxisLine, _super);\n    function AxisLine() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], AxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], AxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], AxisLine.prototype, \"color\", void 0);\n    return AxisLine;\n}(ChildProperty));\nexport { AxisLine };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar MajorTickLines = /** @class */ (function (_super) {\n    __extends(MajorTickLines, _super);\n    function MajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorTickLines.prototype, \"color\", void 0);\n    return MajorTickLines;\n}(ChildProperty));\nexport { MajorTickLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar MinorTickLines = /** @class */ (function (_super) {\n    __extends(MinorTickLines, _super);\n    function MinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorTickLines.prototype, \"color\", void 0);\n    return MinorTickLines;\n}(ChildProperty));\nexport { MinorTickLines };\n/**\n * Allows to configure the position of the legend such as top and left in the chart.\n */\nvar ChartLocation = /** @class */ (function (_super) {\n    __extends(ChartLocation, _super);\n    function ChartLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"y\", void 0);\n    return ChartLocation;\n}(ChildProperty));\nexport { ChartLocation };\n/**\n * Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\n/**\n * Allows options for customize the error bar chart series with diffent settings such as type, direction, mode, color, width, etc.\n */\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\n/**\n * Allows to configure the trendlines of the chart series such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\n/**\n * Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n */\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n */\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n * Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explodeAll\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"explodeIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property('30%')\n    ], PivotSeries.prototype, \"explodeOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"gapRatio\", void 0);\n    __decorate([\n        Property('Value')\n    ], PivotSeries.prototype, \"groupMode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"groupTo\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckHeight\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckWidth\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotSeries.prototype, \"pyramidMode\", void 0);\n    __decorate([\n        Property([])\n    ], PivotSeries.prototype, \"palettes\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"startAngle\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Complex(null, PivotChartDataLabel)\n    ], PivotSeries.prototype, \"dataLabel\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Allow options to customize the axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(Theme.axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('None')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(Theme.tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Allow options to customize the center of the pivot pie series chart.\n */\nvar PivotPieChartCenter = /** @class */ (function (_super) {\n    __extends(PivotPieChartCenter, _super);\n    function PivotPieChartCenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"x\", void 0);\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"y\", void 0);\n    return PivotPieChartCenter;\n}(ChildProperty));\nexport { PivotPieChartCenter };\n/**\n * Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n * Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\n * The following options are available to customize the pivot chart.\n * * `background`: Allows you to change the background color of the chart series in the pivot chart.\n * For example, to display the chart series with background color as red, set the property `background` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"**.\n * * `border`: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n * * `chartArea`: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n * * `chartSeries`: Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n * * `crosshair`: Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n * * `description`: Allows you to add a description of the pivot chart.\n * * `enableAnimation`: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.\n * * `enableExport`: Allows the pivot chart to be exported to either **PDF** or **PNG** or **JPEG** or **SVG** filter formats.\n * * `enableMultiAxis`: Allows you to draw the pivot chart with multiple value fields as separate chart area.\n * * `enableSideBySidePlacement`: Allows you to draw points of the column type pivot chart series as side by side.\n * * `isMultiSelect`: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property `selectionMode` to be **Point** or **Series** or **Cluster**.\n * * `isTransposed`: Allows you to render the pivot chart in a transposed manner or not.\n * * `legendSettings`: Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n * * `margin`: Allow options to customize the left, right, top and bottom margins of the pivot chart.\n * * `palettes`: Allows you to draw the chart series points with custom color in the pivot chart.\n * * `primaryXAxis`: Allow options to customize the horzontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `primaryYAxis`: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\n * title, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `selectedDataIndexes`: Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * * `selectionMode`: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\n * For example, to highlight a specific point in a specific series of the pivot chart, set the property `selectionMode` to **Point**.\n * * `showMultiLevelLabels`: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.\n * * `subTitle`: Allows you to add the subtitle to the pivot chart.\n * * `subTitleStyle`: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tabIndex`: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.\n * * `theme`: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.\n * * `title`: Allows you to add title to the pivot chart.\n * * `titleStyle`: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tooltip`: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n * * `useGroupingSeparator`: Allows the group separator to be shown to the values in the pivot chart.\n * * `value`: Allows you to draw a pivot chart with a specific value field during initial loading.\n * * `zoomSettings`: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"columnHeader\", void 0);\n    __decorate([\n        Property('-')\n    ], ChartSettings.prototype, \"columnDelimiter\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultiAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableScrollOnMultiAxis\", void 0);\n    __decorate([\n        Complex(Theme.chartTitleFont, Font)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.chartSubTitleFont, Font)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex(null, PivotPieChartCenter)\n    ], ChartSettings.prototype, \"pieCenter\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"accumulationSelectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    /* tslint:disable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        /* tslint:enable:no-any */\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        /* tslint:disable-next-line:max-line-length */\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        /* tslint:disable-next-line:max-line-length */\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        /* tslint:disable */\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n        /* tslint:enable */\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        /* tslint:disable */\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n        /* tslint:enable */\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            // if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n            //     query = query + ' * ' + measureQuery;\n            // }\n            /* tslint:disable:max-line-length */\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            var drillQuery = this.getAttributeDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + (this.drilledMembers.length > 0 ? '})' : '') + (!this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + ')';\n        }\n        // else if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n        //     query = 'NON EMPTY (' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE({' : '') + measureQuery;\n        //     query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n        //         (this.drilledMembers.length > 0 ? '})' : '') + ') ' + this.cellSetInfo + ' ON ' + axis.toUpperCase();\n        // }\n        /* tslint:enable:max-line-length */\n        return query;\n    };\n    MDXQuery.getAttributeDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        var measurePos = axis === this.valueAxis ? this.getMeasurePos(axis) : 0;\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var result = this.getDrillLevel(dimensions, drillInfo_1);\n                    var fieldPosition = this.getDimensionPos(axis, field.name);\n                    var index = dimensions.length - (measurePos > fieldPosition ? 1 : 0);\n                    var isExist = this.isPaging ? this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter, drillInfo_1, axis) : false;\n                    while (result.level > 0 && result.isDrill && (fieldPosition + 1) !== measurePos && !isExist) {\n                        var levelQuery = [];\n                        var i = 0;\n                        /* tslint:disable:max-line-length */\n                        while (i < dimensions.length) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]') {\n                                if (measureQuery !== '') {\n                                    levelQuery.push('({{' + drillInfo_1[i] + '}})');\n                                }\n                            }\n                            else if (drillInfo_1[i] && (drillInfo_1[i].indexOf(dimensions[i].name) !== -1 ||\n                                (dimensions[i].isNamedSet && this.fieldList[dimensions[i].name] && drillInfo_1[i].indexOf(this.fieldList[dimensions[i].name].pid.split('Sets_')[1]) !== -1))) {\n                                levelQuery.push(this.getHierarchyQuery(drillInfo_1[i], false, false, false, result.level, true));\n                            }\n                            else if (!drillInfo_1[i] && dimensions[i]) {\n                                levelQuery.push(this.getHierarchyQuery(dimensions[i].name, ((this.isPaging && result.level === 2) || (!this.isPaging && index > i) ? true : false), dimensions[i].isNamedSet, dimensions[i].isCalculatedField, result.level, false));\n                            }\n                            else {\n                                levelQuery = [];\n                                break;\n                            }\n                            i++;\n                        }\n                        if (levelQuery.length > 0) {\n                            drillQuery.push('(' + levelQuery.join('*') + ')');\n                        }\n                        result.level--;\n                        index--;\n                    }\n                    if (drillQuery.length > 0) {\n                        query = query + (query !== '' ? '-' : '') + drillQuery.join(this.isPaging ? '+' : '-');\n                    }\n                }\n            }\n        }\n        return query;\n    };\n    MDXQuery.getDimensionPos = function (axis, field) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name === field) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getMeasurePos = function (axis) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name.indexOf('[Measures]') === 0) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getDrillLevel = function (dimensions, drillInfo) {\n        var level = dimensions.length;\n        var isDrill = false;\n        var i = 0;\n        while (i < dimensions.length) {\n            if (drillInfo[i] && drillInfo[i].indexOf(dimensions[i].name) !== -1) {\n                level -= 1;\n                if (dimensions[i + 1] && !(dimensions[i + 1].isNamedSet || dimensions[i + 1].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i + 1].name] && !this.fieldList[dimensions[i + 1].name].hasAllMember))) {\n                    isDrill = true;\n                }\n            }\n            else if (dimensions[i].isNamedSet || dimensions[i].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i].name] && !this.fieldList[dimensions[i].name].hasAllMember)) {\n                level -= 1;\n            }\n            i++;\n        }\n        return { level: this.isPaging ? 2 : level, isDrill: isDrill };\n    };\n    MDXQuery.getHierarchyQuery = function (name, isChildren, isNamedSet, isCalculatedField, level, isDrill) {\n        name = isCalculatedField ? this.fieldList[name].tag : name;\n        return ((this.fieldList[name] && !this.fieldList[name].hasAllMember && !isNamedSet && !isCalculatedField) ? '((' + name + ').levels(0).AllMembers)' : (isNamedSet || isCalculatedField) ? ('({' + name + '})') : this.isPaging ? ('({' + name) + (isChildren ? '.CHILDREN})' : (!isDrill && level === 1) ? '.[All]})' : '})') : ('({DrilldownLevel({' + name + (isChildren ? '.CHILDREN' : '') + '},,,INCLUDE_CALC_MEMBERS' + ')})'));\n    };\n    MDXQuery.isAttributeMemberExist = function (hierarchy, item, delimiter, drillInfo, axis) {\n        item.splice(drillInfo.length - 1, 1);\n        var isAvailable = false;\n        if (item.join(delimiter) !== '' && !(this.isPaging && item.length === 1 && item.join(delimiter) === '[Measures]') && this.engine.fieldList[hierarchy] && this.engine.fieldList[hierarchy].hasAllMember) {\n            var hierarchyPosition = this.getDimensionPos(axis, hierarchy);\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (hierarchy !== this.drilledMembers[i].name) {\n                    var isHierarchy = this.engine.fieldList[this.drilledMembers[i].name] ? this.engine.fieldList[this.drilledMembers[i].name].isHierarchy : false;\n                    if (isHierarchy) {\n                        var fieldPosition = this.getDimensionPos(axis, this.drilledMembers[i].name);\n                        for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                            var result = this.getDrillLevel(axis === 'rows' ? this.rows : this.columns, this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter ? this.drilledMembers[i].delimiter : '~~'));\n                            if ((this.isPaging ? (fieldPosition < hierarchyPosition && result.isDrill) : true) && (this.drilledMembers[i].items[j].indexOf(item.join(delimiter)) === 0 || item.join(delimiter).indexOf(this.drilledMembers[i].items[j]) === 0)) {\n                                isAvailable = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isAvailable;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_2 = drilledMembers; _i < drilledMembers_2.length; _i++) {\n            var field = drilledMembers_2[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (!isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var rawQuery = [];\n                    var i = 0;\n                    var drillInfo_2 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var isExist = this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), (field.delimiter ? field.delimiter : '~~'), drillInfo_2, axis);\n                    /* tslint:disable:max-line-length */\n                    while (i < dimensions.length && !isExist) {\n                        if (drillInfo_2[i] && drillInfo_2[i].indexOf(dimensions[i].name) !== -1) {\n                            if (drillInfo_2[drillInfo_2.length - 1].indexOf(dimensions[i].name) !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '.CHILDREN})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_2[i] + '.CHILDREN)');\n                                    rawQuery.push('(' + drillInfo_2[i] + ')');\n                                }\n                            }\n                            else {\n                                if (drillInfo_2[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + measureQuery + ')');\n                                        rawQuery.push('(' + measureQuery + ')');\n                                    }\n                                }\n                                else if (drillInfo_2[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('({' + drillInfo_2[i] + '})');\n                                        rawQuery.push('({' + drillInfo_2[i] + '})');\n                                    }\n                                }\n                                else {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + drillInfo_2[i] + ')');\n                                        rawQuery.push('(' + drillInfo_2[i] + ')');\n                                    }\n                                }\n                            }\n                        }\n                        else if (!drillInfo_2[i] && dimensions[i]) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                    rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                }\n                            }\n                        }\n                        else {\n                            drillQuery = [];\n                            break;\n                        }\n                        i++;\n                    }\n                    if (drillQuery.length > 0 && drillQuery.length < drillInfo_2.length) {\n                        drillQuery = [];\n                        rawQuery = [];\n                    }\n                    // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                    query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                    /* tslint:enable:max-line-length */\n                    if (rawQuery.length > 0) {\n                        rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                    }\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    /* tslint:disable */\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    /* tslint:enable */\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* tslint:disable:no-any */\n                    var filter = filters[field.name];\n                    /* tslint:enable:no-any */\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n            ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                /* tslint:disable-next-line:max-line-length */\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n        this.isColDrill = false;\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties) {\n        this.isEmptyData = false;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.enableValueSorting = false;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        /* tslint:disable:no-any */\n        this.locale = this.globalize.getCulture();\n        /* tslint:enable:no-any */\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.isPaging = this.pageSettings ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && this.savedFieldListData)) {\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function (direction, newPage, prevPage) {\n        MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.pivotValues = [];\n            this.valueContent = [];\n            this.headerContent = [];\n            this.colDepth = 0;\n            this.tupColumnInfo = [];\n            this.tupRowInfo = [];\n            this.colMeasures = {};\n            this.colMeasurePos = undefined;\n            this.rowMeasurePos = undefined;\n            this.rowStartPos = -1;\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var measureInfo = this.getMeasureInfo();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (customArgs.action === 'down') {\n            this.updateTupCollection(customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging) {\n                this.performColumnSorting();\n            }\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging) {\n                this.performRowSorting();\n            }\n        }\n        this.frameValues(valCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        var lastMesPos = 0;\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            var drillInfo = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            var drillEndPos = this.tupRowInfo[tupPos].drillEndPos;\n            var levelColl = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var attrDrill = this.checkAttributeDrill(this.tupRowInfo[tupPos].drillInfo, 'rows');\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (attrDrill || allStartPos > drillStartPos) : true) : true;\n                /* tslint:disable-next-line:max-line-length */\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) || this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ? (attrDrill || allStartPos > withoutAllEndPos) : true;\n                if (members.length === allCount + (measure ? 1 : 0) && measure) {\n                    var levelName = 'Grand Total.' + members[measurePos].querySelector('Caption').textContent;\n                    gTotals.push({\n                        axis: 'row',\n                        actualText: this.getUniqueName(members[measurePos].querySelector('UName').textContent),\n                        colIndex: 0,\n                        formattedText: (typeColl[measurePos] === '3' &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                            members[measurePos].querySelector('Caption').textContent,\n                        hasChild: false,\n                        level: -1,\n                        rowIndex: position,\n                        index: [],\n                        ordinal: tupPos,\n                        colSpan: 1,\n                        rowSpan: 1,\n                        memberType: Number(typeColl[measurePos]),\n                        isDrilled: false,\n                        parentUniqueName: members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                            members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: members[measurePos].querySelector('LName').textContent,\n                        hierarchy: members[measurePos].getAttribute('Hierarchy'),\n                        valueSort: { levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy') }\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total.' + members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? (prevParent.isDrilled && !this.fieldList[prevParent.hierarchy].isHierarchy) : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            /* tslint:disable-next-line:no-string-literal */\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            var uniqueName = this.getUniqueName(member.querySelector('UName').textContent);\n                            var depth = this.getDepth(this.tupRowInfo[tupPos], uniqueName, Number(typeColl[memPos]));\n                            if (!(this.isPaging && pivotValues[lastMesPos][0] && this.fieldList[pivotValues[lastMesPos][0].hierarchy] && this.fieldList[pivotValues[lastMesPos][0].hierarchy].isHierarchy &&\n                                pivotValues[lastMesPos][0].hasChild && !pivotValues[lastMesPos][0].isDrilled && !this.rows[memPos].isNamedSet && (this.rows[memPos].name.indexOf('[Measures]') === 0 || (this.fieldList[member.getAttribute('Hierarchy')] && (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy || this.fieldList[member.getAttribute('Hierarchy')].hasAllMember))) &&\n                                pivotValues[lastMesPos][0].depth < depth)) {\n                                pivotValues[position] = [{\n                                        axis: 'row',\n                                        actualText: uniqueName,\n                                        colIndex: 0,\n                                        formattedText: (typeColl[memPos] === '3' && this.dataFields[uniqueName] &&\n                                            this.dataFields[uniqueName].caption) ? this.dataFields[uniqueName].caption :\n                                            member.querySelector('Caption').textContent,\n                                        hasChild: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.rows.length - 1 && !this.rows[memPos + 1].isNamedSet && this.rows[memPos + 1].name.indexOf('[Measures]') < 0 && this.fieldList[this.rows[memPos + 1].name] && this.fieldList[this.rows[memPos + 1].name].hasAllMember) ? true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                        level: lvl,\n                                        depth: depth,\n                                        rowIndex: position,\n                                        index: [],\n                                        ordinal: tupPos,\n                                        type: 'header',\n                                        colSpan: 1,\n                                        rowSpan: 1,\n                                        memberType: Number(typeColl[memPos]),\n                                        isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupRowInfo[tupPos].drillInfo, 'rows')) ? true : this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                            member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                        levelUniqueName: member.querySelector('LName').textContent,\n                                        hierarchy: member.getAttribute('Hierarchy'),\n                                        isNamedSet: isNamedSet,\n                                        valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                    }];\n                                prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                                if (!prevParent) {\n                                    rowMembers.push(member.querySelector('Caption').textContent);\n                                }\n                                var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos]);\n                                pivotValues[position][0].valueSort.levelName = levelName;\n                                pivotValues[position][0].valueSort[levelName] = 1;\n                                valueContent[position - this.rowStartPos] = {};\n                                valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                                if (measure && measurePos > memPos) {\n                                    prevUNArray[measurePos] = '';\n                                }\n                                for (var pos = memPos + 1; pos < members.length; pos++) {\n                                    prevUNArray[pos] = '';\n                                }\n                                prevUNArray[memPos] = member.querySelector('UName').textContent;\n                                lastMesPos = Number(typeColl[memPos]) !== 3 ? position : lastMesPos;\n                                position++;\n                                lastMemPos = memPos;\n                            }\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] === undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n    };\n    OlapEngine.prototype.getDepth = function (tupInfo, uniqueName, memberType) {\n        var memberPosition = tupInfo.uNameCollection.indexOf(uniqueName);\n        var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n            (memberType === 3 ? '' : uniqueName);\n        var fieldSep = cropUName.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        if (memberType === 3 && this.rowMeasurePos === fieldSep.length) {\n            fieldSep.push(uniqueName);\n        }\n        var nxtIndextCount = -1;\n        for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n            var fieldMembers = fieldSep[fPos];\n            var membersCount = fieldMembers.split('~~').length;\n            nxtIndextCount += membersCount;\n        }\n        return nxtIndextCount;\n    };\n    OlapEngine.prototype.checkAttributeDrill = function (drillInfo, axis) {\n        var isDrill = false;\n        for (var i = 0; i < drillInfo.length; i++) {\n            isDrill = this.isAttributeDrill(drillInfo[i].hierarchy, drillInfo, axis);\n            if (isDrill) {\n                break;\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            /* tslint:disable:no-any */\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.indexOf('[Measures]') === 0 ? '3' : '1';\n            }\n            var memberType = memberUName.indexOf('[Measures]') === 0 ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            /* tslint:enable:no-any */\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            /* tslint:disable-next-line:max-line-length */\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                if (!this.isPaging) {\n                    allCount++;\n                }\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = { UName: (_a = {}, _a[memberlevel] = memberUName, _a), Caption: (_b = {}, _b[memberlevel] = memberCaption, _b) };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                /* tslint:disable:no-any */\n                var uNames = '';\n                var uNamesKeys = Object.keys(this.headerGrouping[memPos].UName);\n                for (var i = 0; i < uNamesKeys.length; i++) {\n                    var j = uNamesKeys[i];\n                    if (i === 0) {\n                        uNames = this.headerGrouping[memPos].UName[j];\n                    }\n                    else {\n                        uNames = uNames + '~~' + this.headerGrouping[memPos].UName[j];\n                    }\n                }\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = '';\n                var captionsKeys = Object.keys(this.headerGrouping[memPos].Caption);\n                for (var i = 0; i < captionsKeys.length; i++) {\n                    var j = captionsKeys[i];\n                    if (i === 0) {\n                        captions = this.headerGrouping[memPos].Caption[j];\n                    }\n                    else {\n                        captions = captions + '~~' + this.headerGrouping[memPos].Caption[j];\n                    }\n                }\n                /* tslint:enable:no-any */\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/~~|::\\[/).map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple) {\n        var captionColection = tuple.captionCollection;\n        if (tuple.measure) {\n            var measureName = tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~,::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join('.');\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionColection = captionCollectionArray.join('.');\n        }\n        return captionColection;\n    };\n    /** hidden */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            /* tslint:disable-next-line:max-line-length */\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] = this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        var _this_1 = this;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        /* tslint:disable */\n        var _this = this;\n        /* tslint:enable */\n        tupPos = 0;\n        var position = 1;\n        var lastAllStartPos;\n        var lastSavedInfo = {};\n        var drillLastAllStartPos;\n        var lastAllCount;\n        var drillLastAllCount;\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        var _loop_1 = function () {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this_1.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this_1.tupColumnInfo[tupPos].allStartPos;\n            var measure = this_1.tupColumnInfo[tupPos].measure;\n            var typeColl = this_1.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this_1.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this_1.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this_1.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this_1.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this_1.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this_1.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            var depth = 0;\n            /* tslint:disable-next-line:max-line-length */\n            maxLevel.map(function (item, pos) { depth = depth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) : (item === 0 ? ((_this_1.isPaging && typeColl[pos] === '2') ? 0 : 1) : item)); });\n            this_1.colDepth = this_1.colDepth > depth ? this_1.colDepth : depth;\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            if (isStartCol) {\n                if (allCount === 0) {\n                    var levelComp = [-1, -1, -1];\n                    if (this_1.tupColumnInfo[tupPos - 1] && this_1.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this_1.levelCompare(levelColl, this_1.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this_1.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this_1.tupColumnInfo[tupPos].drillStartPos < 0) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this_1.setParentCollection(members);\n                        this_1.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this_1.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        if (!this_1.isColDrill) {\n                            position++;\n                        }\n                        else {\n                            this_1.isColDrill = false;\n                        }\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this_1.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this_1.totalCollection[this_1.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this_1.tupColumnInfo[tupPos];\n                }\n            }\n            var attrDrill = this_1.checkAttributeDrill(this_1.tupColumnInfo[tupPos].drillInfo, 'columns');\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && (attrDrill || withoutAllEndPos < allStartPos)) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    /* tslint:disable-next-line:max-line-length */\n                    var endAllow = drillEndPos !== drillStartPos ? (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    /* tslint:disable-next-line:max-line-length */\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ? (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this_1.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this_1.totalCollection[this_1.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, allStartPos: allStartPos, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        };\n        var this_1 = this;\n        while (tupPos < tuples.length) {\n            _loop_1();\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        var attrDrill = this.checkAttributeDrill(this.tupColumnInfo[coll.ordinal].drillInfo, 'columns');\n                        if (this.tupColumnInfo[coll.ordinal].showTotals || attrDrill) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/~~|::\\[/).map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        /* tslint:disable-next-line:max-line-length */\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                /* tslint:disable-next-line:max-line-length */\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ? this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                    maxLevel[memberPos] :\n                    (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled && this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false :\n                        this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        var attrDrill = this.checkAttributeDrill(this.tupColumnInfo[tupPos].drillInfo, 'columns');\n        if (this.tupColumnInfo[tupPos].showTotals || attrDrill) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    if (memberType !== '2') {\n                        colMembers[member.querySelector('UName').textContent] = member.querySelector('Caption').textContent;\n                    }\n                    /* tslint:disable */\n                    var levelName = '';\n                    var levelNameKeys = Object.keys(colMembers);\n                    for (var i = 0; i < levelNameKeys.length; i++) {\n                        var j = levelNameKeys[i];\n                        if (i === 0) {\n                            levelName = colMembers[j];\n                        }\n                        else {\n                            levelName = levelName + '.' + colMembers[j];\n                        }\n                    }\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    var uName = this.getUniqueName(member.querySelector('UName').textContent);\n                    var depth = this.getDepth(this.tupColumnInfo[tupPos], uName, Number(memberType));\n                    if (!(this.isPaging && this.pivotValues[spanMemPos - 1] && this.pivotValues[spanMemPos - 1][position] && this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy] && this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy].isHierarchy &&\n                        this.pivotValues[spanMemPos - 1][position].hasChild && !this.pivotValues[spanMemPos - 1][position].isDrilled && !this.columns[memPos].isNamedSet && this.fieldList[member.getAttribute('Hierarchy')] && (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy || this.fieldList[member.getAttribute('Hierarchy')].hasAllMember) &&\n                        this.pivotValues[spanMemPos - 1][position].depth < depth)) {\n                        this.pivotValues[spanMemPos][position] = {\n                            axis: 'column',\n                            actualText: uName,\n                            colIndex: position,\n                            formattedText: (memberType === '3' && this.dataFields[uName] &&\n                                this.dataFields[uName].caption) ? this.dataFields[uName].caption :\n                                member.querySelector('Caption').textContent,\n                            hasChild: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.columns.length - 1 && !this.columns[memPos + 1].isNamedSet && this.columns[memPos + 1].name.indexOf('[Measures]') < 0 && this.fieldList[this.columns[memPos + 1].name] && this.fieldList[this.columns[memPos + 1].name].hasAllMember) ? true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                            level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) - ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                            rowIndex: spanMemPos,\n                            ordinal: tupPos,\n                            memberType: Number(memberType),\n                            depth: depth,\n                            isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupColumnInfo[tupPos].drillInfo, 'columns')) ? true : (isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled),\n                            parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                            levelUniqueName: member.querySelector('LName').textContent,\n                            hierarchy: member.getAttribute('Hierarchy'),\n                            isNamedSet: isNamedSet,\n                            valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                            /* tslint:enable */\n                        };\n                        if (!this.headerContent[spanMemPos]) {\n                            this.headerContent[spanMemPos] = {};\n                        }\n                        this.headerContent[spanMemPos][position] = this.pivotValues[spanMemPos][position];\n                        spanMemPos++;\n                    }\n                    else {\n                        this.isColDrill = true;\n                        break;\n                    }\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n            }\n        }\n    };\n    OlapEngine.prototype.isAttributeDrill = function (hierarchy, drillInfo, axis) {\n        var isDrill = false;\n        var isAdjacent = this.isAdjacentToMeasure(hierarchy, axis);\n        if (!isAdjacent) {\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (this.drilledMembers[i].name === hierarchy) {\n                    for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                        var drillItems = this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter);\n                        var levelName = '';\n                        for (var k = 0; k < drillItems.length; k++) {\n                            if (drillInfo[k] && drillInfo[k].uName) {\n                                levelName = levelName + (levelName === '' ? '' : this.drilledMembers[i].delimiter) + drillInfo[k].uName;\n                            }\n                        }\n                        if (levelName === this.drilledMembers[i].items[j]) {\n                            isDrill = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.isAdjacentToMeasure = function (hierarchy, axis) {\n        var isAdjacent = false;\n        var fields = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < fields.length; i++) {\n            if (fields[i].name === hierarchy && fields[i + 1] && (fields[i + 1].name === '[Measures]' || fields[i + 1].isNamedSet || (this.fieldList[fields[i + 1].name] && !this.fieldList[fields[i + 1].name].hasAllMember))) {\n                isAdjacent = true;\n                break;\n            }\n        }\n        return isAdjacent;\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.performRowSorting = function () {\n        var _a;\n        if (this.enableSort && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? (currentTuple.measurePosition === 0 && currentCell.memberType === 3 ?\n                    currentTuple.measureName : currentTuple.uNameCollection) : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/~~|::\\[/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            /* tslint:disable:typedef */\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            /* tslint:enable:typedef */\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]]);\n                }\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = (tupInfo.measurePosition === 0 && axisSets[aPos].memberType === 3) ?\n                                tupInfo.measureName : tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                    var isLastMeasure = uName.lastIndexOf('::[') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::[').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                /* tslint:disable:no-string-literal */\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                /* tslint:enable:no-string-literal */\n                var currPos = gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[newPos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    OlapEngine.prototype.performColumnSorting = function () {\n        if (this.enableSort) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var key = void 0;\n                    var keys = void 0;\n                    var arrange = {};\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    for (k = k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType != 2 && header[k].hierarchy\n                                != '[Measures]' && header[k].level != -1) {\n                                if (isNullOrUndefined(arrange[header[k].formattedText]) || isNullOrUndefined(this.pivotValues[j - 1])) {\n                                    arrange[header[k].formattedText] = arrange[header[k].formattedText] ? arrange[header[k].formattedText] : [];\n                                    arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                }\n                                else if (arrange[header[k].formattedText] && this.pivotValues[j - 1]) {\n                                    var prevRowCell = this.pivotValues[j - 1][header[k].colIndex];\n                                    var prevColValue = Number(Object.keys(arrange[header[k].formattedText])[0]);\n                                    var prevColIndex = ((arrange[header[k].formattedText])[prevColValue]).colIndex;\n                                    var prevColRowCell = this.pivotValues[j - 1][prevColIndex];\n                                    if (prevRowCell.formattedText !== prevColRowCell.formattedText) {\n                                        var key_1 = Object.keys(arrange);\n                                        key_1 = this.sortColumnHeaders(key_1, this.sortObject[header[k - 1].levelUniqueName] ||\n                                            this.sortObject[header[k].hierarchy]);\n                                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                        for (var keyPos = 0; keyPos < key_1.length; keyPos++) {\n                                            var length_1 = Object.keys(arrange[key_1[keyPos]]).length;\n                                            for (var cellPos = 0; cellPos < length_1; cellPos++) {\n                                                value = temporary[index].length === 0 ? 1 : 0;\n                                                temporary[index][temporary[index].length + value] =\n                                                    arrange[key_1[keyPos]][Number(Object.keys(arrange[key_1[keyPos]])[cellPos])];\n                                            }\n                                        }\n                                        arrange = {};\n                                        arrange[header[k].formattedText] = [];\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                    else {\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                }\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                                key = Object.keys(arrange);\n                                key = this.sortColumnHeaders(key, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy]);\n                                isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                for (var l = 0; l < key.length; l++) {\n                                    var length_2 = Object.keys(arrange[key[l]]).length;\n                                    for (var q = 0; q < length_2; q++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[key[l]][Number(Object.keys(arrange[key[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy != '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                            }\n                            if (header[k].level != -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy != '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length === 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value] =\n                                            arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value] = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        keys = Object.keys(arrange);\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        key = this.sortColumnHeaders(keys, order);\n                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] =\n                                    arrange[key[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    != pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] = pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::[').length <= this.getMeasurePosition(uniqueName, currentTuple.measurePosition);\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.getMeasurePosition = function (uniqueName, measurePosition) {\n        var position = measurePosition;\n        var collection = uniqueName.split('::[');\n        for (var i = 0; i < collection.length; i++) {\n            if (collection[i] && collection[i].indexOf('Measures') > -1) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers) {\n        if (headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var order = (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]);\n            if (order === 'Ascending' || order === undefined) {\n                headers === headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                    ((b.formattedText > a.formattedText) ? -1 : 0); });\n            }\n            else if (order === 'Descending') {\n                headers === headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                    ((b.formattedText < a.formattedText) ? -1 : 0); });\n            }\n            else {\n                headers;\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (keys, order) {\n        if (order === 'Ascending' || order === undefined) {\n            keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n        }\n        else if (order === 'Descending') {\n            keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n        }\n        return keys;\n    };\n    /* tslint:enable */\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (this.getMeasurePosition(uniqueNameColl, tuple.measurePosition) >= (uniqueNameColl.split('::[').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                /* tslint:disable-next-line:max-line-length */\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ? this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                var attrDrill = this.checkAttributeDrill(tupColInfo.drillInfo, 'columns');\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (tupColInfo.measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        if (!attrDrill) {\n                            currCell.type = 'sum';\n                        }\n                        /* tslint:disable-next-line:max-line-length */\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort.levelName = currCell.valueSort.levelName;\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        var levelName = 'Grand Total';\n                        if (nextRowCell && colMeasureCount > 0) {\n                            levelName = nextRowCell.memberType === 3 ? ('Grand Total.' + nextRowCell.formattedText) :\n                                nextRowCell.valueSort.levelName;\n                        }\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        currCell.valueSort.levelName = levelName;\n                        currCell.valueSort[levelName.toString()] = 1;\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort.levelName = currCell.valueSort.levelName;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 && nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] && this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true)) ? 1 : (spanCollection[rowPos + 1][colPos] + 1);\n                            /* tslint:disable-next-line:max-line-length */\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true) && nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] && this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true) && currCell.level === -1 && nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        /* tslint:disable-next-line:max-line-length */\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !(nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true))) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ? spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ? spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.frameValues = function (tuples, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        var valCollection = {};\n        for (var colPos = 0; colPos < tuples.length; colPos++) {\n            valCollection[Number(tuples[colPos].getAttribute('CellOrdinal'))] = tuples[colPos];\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                if (this.pivotValues[this.colDepth - 1][colPos]) {\n                    var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                    var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                    var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                        ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                            this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                            columns[0].actualText);\n                    if (columns[0].type === 'header') {\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: this.getUniqueName(measure),\n                            formattedText: '',\n                            value: 0,\n                            colIndex: colPos,\n                            rowIndex: rowPos\n                        };\n                    }\n                    else {\n                        var valElement = void 0;\n                        var formattedText = void 0;\n                        var value = '0';\n                        var measureName = this.getUniqueName(measure);\n                        var showTotals = true;\n                        var attrDrill = (this.fieldList[columns[0].hierarchy] && this.fieldList[columns[0].hierarchy].isHierarchy && columns[0].isDrilled);\n                        if (this.tupRowInfo[rowOrdinal]) {\n                            showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                        }\n                        else {\n                            showTotals = this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals;\n                        }\n                        valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                        formattedText = (!showTotals && attrDrill) ? '' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                                valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                        value = (!showTotals && attrDrill) ? '0' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                                valElement.querySelector('Value').textContent : null);\n                        formattedText = showTotals && !isNullOrUndefined(value) ?\n                            this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) :\n                            formattedText;\n                        var isSum = (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                            this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                            (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                                this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                        /* tslint:disable */\n                        var isGrand = (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].measurePosition === 0 ? this.tupRowInfo[rowOrdinal].allStartPos === 1 : this.tupRowInfo[rowOrdinal].allStartPos === 0) : false) ||\n                            (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].measurePosition === 0 ? this.tupColumnInfo[colOrdinal].allStartPos === 1 : this.tupColumnInfo[colOrdinal].allStartPos === 0) : false);\n                        /* tslint:enable */\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: measureName,\n                            formattedText: formattedText,\n                            colOrdinal: colOrdinal,\n                            rowOrdinal: rowOrdinal,\n                            columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                            rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                            value: !isNullOrUndefined(value) ? Number(value) : null,\n                            colIndex: colPos,\n                            rowIndex: rowPos,\n                            isSum: isSum,\n                            isGrandSum: isGrand\n                        };\n                    }\n                    this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n                }\n            }\n        }\n    };\n    /** hidden */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                if ((formatObj.format) && !(this.formatRegex.test(formatObj.format))) {\n                    var pattern = formatObj.format.match(this.customRegex);\n                    var integerPart = pattern[6];\n                    formatObj.useGrouping = integerPart.indexOf(',') !== -1;\n                }\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 1) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = vTuples.length; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    vOrdinalIndex[vOrdinalIndex.length] = Number(vTuples[j].getAttribute('CellOrdinal'));\n                }\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[index] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[orderedVTuples.length] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            /* tslint:disable-next-line:max-line-length */\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) || tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if (memberArray[memPos]) {\n                if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                    var splitLevels = memberArray[memPos].split('~~');\n                    var drillLevel = splitLevels.indexOf(memberName);\n                    var cropLevels = [];\n                    for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                        cropLevels.push(splitLevels[lPos]);\n                    }\n                    joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n                }\n                else {\n                    joinArray[joinArray.length] = memberArray[memPos];\n                }\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::[')[fieldPos];\n                    drillField = drillField[0] === '[' ? drillField : ('[' + drillField);\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                if (field) {\n                    var members = field.split('~~');\n                    set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n                }\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n        this.getAxisFields();\n        this.frameSortObject();\n        this.updateFieldlist();\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ? this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldList[fieldName].allowDragAndDrop = true;\n                this.savedFieldList[fieldName].showFilterIcon = true;\n                this.savedFieldList[fieldName].showSortIcon = true;\n                this.savedFieldList[fieldName].showEditIcon = true;\n                this.savedFieldList[fieldName].showRemoveIcon = true;\n                this.savedFieldList[fieldName].showValueTypeIcon = true;\n                this.savedFieldListData[i].sort = sortOrder;\n                this.savedFieldListData[i].allowDragAndDrop = true;\n                this.savedFieldListData[i].showFilterIcon = true;\n                this.savedFieldListData[i].showSortIcon = true;\n                this.savedFieldListData[i].showEditIcon = true;\n                this.savedFieldListData[i].showRemoveIcon = true;\n                this.savedFieldListData[i].showValueTypeIcon = true;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            /* tslint:disable:max-line-length */\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] && this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldList[fieldName].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldList[fieldName].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldList[fieldName].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldList[fieldName].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldList[fieldName].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldList[fieldName].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldListData[i].isSelected = true;\n                this.savedFieldListData[i].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldListData[i].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldListData[i].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldListData[i].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldListData[i].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldListData[i].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] && this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            /* tslint:enable:max-line-length */\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if (!isAvail || (fieldName.toLowerCase() === '[calculated members].[_0]' &&\n                    this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES'\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><Header/><Body><Discover xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    /* tslint:enable:max-line-length */\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = {\n                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n            };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName]) {\n        //     return this.dataFields[fieldName].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this), \n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var filters;\n        var filteritems = [];\n        var filterQuery = '';\n        for (var i = 0; i < this.filters.length; i++) {\n            filters = this.filterMembers[this.filters[i].name];\n            if (filters) {\n                for (var j = 0; j < filters.length; j++) {\n                    filterQuery = filterQuery + filters[j];\n                    filterQuery = j < filters.length - 1 ? filterQuery + ',' : filterQuery + '';\n                }\n                filteritems[i] = filterQuery;\n                filterQuery = '';\n            }\n        }\n        for (var i = 0; i < filteritems.length; i++) {\n            filterQuery = filterQuery === '' ? '{' + filteritems[i] + '}' : (filterQuery + ',' + '{' + filteritems[i] + '}');\n        }\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from ' +\n            (filterQuery === '' ? '[' + this.dataSourceSettings.cube + ']' : '(SELECT (' + filterQuery + ') ON COLUMNS FROM [' +\n                this.dataSourceSettings.cube + '])');\n        drillQuery = drillQuery.replace(/&/g, '&amp;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/\\&/g, '&amp;');\n        if (!isAllFilterData) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n    };\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/\\&/g, '&amp;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchSearchMembers' });\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var nodeAttr = { 'data-fieldName': fieldName };\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    var nodeSelect = (customArgs.loadLevelMembers ? this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            hierarchyElements.push({\n                pid: field.querySelector('DIMENSION_UNIQUE_NAME').textContent,\n                id: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS'\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        allowDragAndDrop: (this.dataFields[field.name] ? this.dataFields[field.name].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showSortIcon : true),\n                        showEditIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showValueTypeIcon : true),\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName)\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: (this.isMondrian ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS'\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_4 = fields; _a < fields_4.length; _a++) {\n            var field = fields_4[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    /* tslint:disable-next-line:max-line-length */\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                /* tslint:disable-next-line:max-line-length */\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false,\n                allowDragAndDrop: (this.dataFields[id] ? this.dataFields[id].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[id] ? this.dataFields[id].showFilterIcon : true),\n                showSortIcon: (this.dataFields[id] ? this.dataFields[id].showSortIcon : true),\n                showEditIcon: (this.dataFields[id] ? this.dataFields[id].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[id] ? this.dataFields[id].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[id] ? this.dataFields[id].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[\\[\\]\\&']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0 && (dimensionName !== hierarchyName || this.isMondrian)) {\n                var parentID = dimensionName + (this.isMondrian ? '~#^Dim' : '');\n                if (hierarchyFolderName !== '') {\n                    var folderName = dimensionName + (this.isMondrian ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                    var curParentElement = [];\n                    for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                        var item = dimensionElements_2[_c];\n                        if (item.tag === folderName && item.pid === parentID) {\n                            curParentElement.push(item);\n                        }\n                    }\n                    if (curParentElement.length === 0) {\n                        var fieldObj_1 = {\n                            hasChildren: true,\n                            isSelected: false,\n                            pid: dimensionName + (this.isMondrian ? '~#^Dim' : ''),\n                            id: folderName,\n                            name: hierarchyFolderName,\n                            spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                            tag: folderName,\n                            caption: hierarchyFolderName,\n                            // aggregateType: this.getAggregateType(hierarchyFolderName),\n                            type: 'string'\n                        };\n                        dimensionElements.push(fieldObj_1);\n                    }\n                    parentID = folderName;\n                }\n                var fieldObj = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                    // hasChildren: true,\n                    isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                    pid: parentID,\n                    id: hierarchyName,\n                    name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                    hasAllMember: isAllMemberAvail,\n                    allMember: allMember,\n                    tag: hierarchyName,\n                    caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    // aggregateType: this.getAggregateType(hierarchyName),\n                    type: 'string',\n                    filter: [],\n                    dateMember: [],\n                    sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                    actualFilter: [],\n                    filterMembers: [],\n                    childMembers: [],\n                    searchMembers: [],\n                    members: {},\n                    currrentMembers: {},\n                    levels: [],\n                    levelCount: 1,\n                    /* tslint:disable-next-line:max-line-length */\n                    isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                    isExcelFilter: false,\n                    allowDragAndDrop: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].allowDragAndDrop : true),\n                    showFilterIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showFilterIcon : true),\n                    showSortIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showSortIcon : true),\n                    showEditIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showEditIcon : true),\n                    showRemoveIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showRemoveIcon : true),\n                    showValueTypeIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showValueTypeIcon : true)\n                };\n                dimensionElements.push(fieldObj);\n                this.fieldList[hierarchyName] = fieldObj;\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS'\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_6 = fields; _i < fields_6.length; _i++) {\n            var field = fields_6[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES'\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS'\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_7 = fields; _a < fields_7.length; _a++) {\n            var field = fields_7[_a];\n            /* tslint:disable-next-line:max-line-length */\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString,\n                allowDragAndDrop: (this.dataFields[measureName] ? this.dataFields[measureName].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showFilterIcon : true),\n                showSortIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showSortIcon : true),\n                showEditIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc, request, customArgs) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            beforeSend: this.beforeSend.bind(this),\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                return e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.beforeSend = function (args) {\n        if (this.dataSourceSettings.authentication.userName && this.dataSourceSettings.authentication.password) {\n            /* tslint:disable */\n            args.httpRequest.setRequestHeader(\"Authorization\", \"Basic \" + btoa(this.dataSourceSettings.authentication.userName + \":\" +\n                this.dataSourceSettings.authentication.password));\n            /* tslint:enable */\n        }\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        /* tslint:disable:max-line-length */\n        if (this.isMondrian) {\n            sourceInfo = '';\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" SOAP-ENV:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><SOAP-ENV:Body><Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            xmlMsg = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> <Header></Header> <Body> <Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        /* tslint:enable:max-line-length */\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: !isNullOrUndefined(locale) ? locale.toString() : '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest, select } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* tslint:disable */\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/* tslint:enable */\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options?\n     * @param  {string|HTMLElement} element?\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.serverCustomProperties = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.isStaticRefresh = false;\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.request = new XMLHttpRequest();\n        /** @hidden */\n        _this_1.isServerWaitingPopup = false;\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({ args: [this], member: 'groupingbar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalformatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberformatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldlist' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.commonModule = new Common(this);\n        }\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            /* tslint:enable */\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axes',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormatingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen,\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                if (!this.getFieldByID(this.element.id + '_custom_group', this.gridSettings.contextMenuItems)) {\n                    groupItems.push(this.buildDefaultItems('Group'));\n                }\n                if (!this.getFieldByID(this.element.id + '_custom_ungroup', this.gridSettings.contextMenuItems)) {\n                    groupItems.push(this.buildDefaultItems('Ungroup'));\n                }\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    PivotView.prototype.getFieldByID = function (id, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('id', 'equal', id))[0];\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.isStaticRefresh = false;\n        this.setProperties({ pivotValues: [] }, true);\n        /* tslint:disable-next-line:no-any */\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.multiLevelLabelClick = this.chartSettings.multiLevelLabelClick ? this.chartSettings.multiLevelLabelClick : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n                if (this.displayOption.view !== 'Chart') {\n                    this.renderEmptyGrid();\n                }\n                this.showWaitingPopup();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            this.isServerWaitingPopup = true;\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    if (this.showGroupingBar) {\n                        this.pivotButtonModule.updateFilterEvents();\n                    }\n                    else {\n                        this.pivotFieldListModule.pivotButtonModule.updateFilterEvents();\n                    }\n                }\n                else if (this.currentAction === 'fetchRawData') {\n                    var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()] ?\n                        this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption : this.drillThroughValue.actualText.toString();\n                    var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n                    var rawData = JSON.parse(engine.rawData);\n                    var parsedObj = JSON.parse(engine.indexObject);\n                    var indexObject = {};\n                    for (var len = 0; len < parsedObj.length; len++) {\n                        indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                    }\n                    this.drillThroughValue.indexObject = indexObject;\n                    this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n                }\n                else {\n                    var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    if (this.engineModule.fieldList) {\n                        var keys = Object.keys(this.engineModule.fieldList);\n                        for (var i = 0; i < keys.length; i++) {\n                            if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                            }\n                        }\n                    }\n                    this.engineModule.fieldList = fList;\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pageSettings;\n                    if (this.dataSourceSettings.groupSettings.length > 0) {\n                        PivotUtil.updateReport(this, JSON.parse(engine.dataSourceSettings));\n                    }\n                    var valueSort = JSON.parse(engine.dataSourceSettings).ValueSortSettings;\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule && this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotFieldListModule.calculatedFieldModule.endDialog();\n                    this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n            if (this.currentAction === 'onScroll') {\n                if (this.scrollDirection === 'vertical') {\n                    var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.rowSize * rowValues * this.gridSettings.rowHeight);\n                    var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowSize * rowValues));\n                    var pos = exactSize * exactPage - (this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight);\n                    this.scrollPosObject.verticalSection = pos;\n                }\n                else if (this.scrollDirection === 'horizondal') {\n                    var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth);\n                    var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnSize * colValues));\n                    var pos = exactSize * exactPage - (this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth);\n                    this.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        this.isServerWaitingPopup = false;\n        var customProperties = {\n            pageSettings: this.pageSettings,\n            enableValueSorting: this.enableValueSorting,\n            enableDrillThrough: (this.allowDrillThrough || this.editSettings.allowEditing),\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid,\n            customArguments: this.serverCustomProperties\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotView.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            /* tslint:disable-next-line:max-line-length */\n            dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n                PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            }\n            else {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            }\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            if (_this_1.dataSourceSettings.mode !== 'Server') {\n                _this_1.notify(events.initialLoad, {});\n            }\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string}\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* tslint:disable */\n        this.chartSettings['tooltipRender'] = undefined;\n        /* tslint:enable */\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* tslint:disable */\n        if (isBlazor()) {\n            pivotData = typeof persistData === \"string\" ? JSON.parse(persistData) : persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        /* tslint:enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        if (newProp.dataSourceSettings.dataSource.length === 0) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                            this.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.pivotValues = [];\n                        }\n                        this.engineModule.fieldList = null;\n                        if (this.dataSourceSettings.groupSettings.length > 0) {\n                            this.clonedDataSet = newProp.dataSourceSettings.dataSource;\n                            this.updateGroupingReport(this.dataSourceSettings.groupSettings, 'Date');\n                        }\n                        this.showWaitingPopup();\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                                    this.engineModule.fieldList = null;\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    else if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                    }\n                    var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(engine.fieldList) || !isNullOrUndefined(engine.pivotValues)) {\n                        this.notify(events.dataReady, {});\n                    }\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        /* tslint:disable-next-line:max-line-length */\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultiAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    if (isNullOrUndefined(this.chartModule) && this.displayOption.view !== 'Table') {\n                        this.chartModule = new PivotChart();\n                    }\n                    var engineModule = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(this.chartModule) && !isNullOrUndefined(engineModule.pivotValues)) {\n                        this.chartModule.loadChart(this, this.chartSettings);\n                    }\n                    if (!isNullOrUndefined(engineModule.pivotValues) && !isNullOrUndefined(engineModule.fieldList)) {\n                        this.notify(events.uiUpdate, this);\n                    }\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n                        var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    if (isBlazor()) {\n                        this.refresh();\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    if (isNullOrUndefined(newProp.showFieldList))\n                        this.renderPivotGrid();\n                    break;\n                case 'showFieldList':\n                    this.initialLoad();\n                    break;\n                case 'groupingBarSettings':\n                    this.axisFieldModule.render();\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        this.clearTemplate();\n        if (this.currentView === 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart) {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', this.element)) {\n                select('#' + this.element.id + '_PivotFieldList', this.element).style.display = 'none';\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        var _this_1 = this;\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                /* tslint:disable-next-line:no-any */\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        /* tslint:disable-next-line */\n                        var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* tslint:disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* tslint:enable */\n                }\n                else {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType,\n                        clonedReport: pivot.clonedReport\n                    };\n                    /* tslint:enable:align */\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.allowServerDataBinding = false;\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            delete pivot.bulkChanges.pivotValues;\n                            pivot.allowServerDataBinding = true;\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot.dataSourceSettings.mode === 'Server') {\n                        if (isSorted)\n                            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                        else if (isAggChange)\n                            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                        else if (isCalcChange)\n                            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                        else if (isFiltered)\n                            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                        else\n                            pivot.getEngine('onDrop', null, null, null, null, null, null);\n                        pivot.lastSortInfo = {};\n                        pivot.lastAggregationInfo = {};\n                        pivot.lastCalcFieldInfo = {};\n                        pivot.lastFilterInfo = {};\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('Excel');\n        }\n        else {\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('CSV');\n        }\n        else {\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization) {\n            this.pdfExportModule.exportToPDF();\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param type - Defines the export type.\n     * @param fileName - Defines file name of export document.\n     * @param orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param width - Defines width of the export document.\n     * @param height - Defines height of the export document.\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    if (pivot_1.enableVirtualization) {\n                        if (isBlazor()) {\n                            /* tslint:disable */\n                            var sfBlazor = 'sfBlazor';\n                            var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                            var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                            var args = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                            pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                                pivot_1.updateBlazorData(data, pivot_1);\n                                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                                pivot_1.allowServerDataBinding = false;\n                                pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                                delete pivot_1.bulkChanges.pivotValues;\n                                pivot_1.allowServerDataBinding = true;\n                                pivot_1.renderPivotGrid();\n                            });\n                            /* tslint:enable */\n                        }\n                        else if (_this_1.dataSourceSettings.mode === 'Server') {\n                            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                    }\n                    if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                        pivot_1.allowServerDataBinding = false;\n                        pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot_1.bulkChanges.pivotValues;\n                        pivot_1.allowServerDataBinding = true;\n                        pivot_1.renderPivotGrid();\n                    }\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: isBlazor() ? undefined : pivot,\n            cancel: false\n        };\n        var isAttributeHierarchy = this.olapEngineModule.fieldList[drillInfo.fieldName] && this.olapEngineModule.fieldList[drillInfo.fieldName].isHierarchy;\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        var clonedMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        if (drillInfo && drillInfo.action === 'down') {\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, (this.olapEngineModule.fieldList[currentCell.hierarchy] && !this.olapEngineModule.fieldList[currentCell.hierarchy].hasAllMember) ? currentCell.valueSort.levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1 : fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillMembers = clonedMembers[i];\n                    var memberItem = drillSet;\n                    if (drillMembers.delimiter) {\n                        memberItem = memberItem.replace(/~~/g, drillMembers.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillMembers.items.length; itemPos++) {\n                        if (drillMembers.items[itemPos].indexOf(memberItem) !== 0) {\n                            items[items.length] = drillMembers.items[itemPos];\n                        }\n                    }\n                    drillMembers.items = items;\n                }\n            }\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _a = 0, clonedMembers_1 = clonedMembers; _a < clonedMembers_1.length; _a++) {\n                var field = clonedMembers_1[_a];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n                if (isAttributeHierarchy) {\n                    var i = 0;\n                    while (i < drillItem[0].items.length) {\n                        if (drillItem[0].items[i] === member) {\n                            drillItem[0].items.splice(i, 1);\n                        }\n                        else {\n                            ++i;\n                        }\n                    }\n                }\n            }\n            else if (!isAttributeHierarchy) {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!clonedMembers) {\n                    clonedMembers = [drilledMember];\n                }\n                else {\n                    clonedMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var drillSet = drillSets[key];\n                var drillItemCollection = [];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillItem = clonedMembers[i];\n                    var member_1 = drillSet;\n                    if (drillItem.name === drillInfo.fieldName) {\n                        drillItemCollection.push(drillItem);\n                    }\n                    if (drillItem.delimiter) {\n                        member_1 = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    if (!isAttributeHierarchy) {\n                        var items = [];\n                        for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                            if (drillItem.items[itemPos].indexOf(member_1) !== 0) {\n                                items[items.length] = drillItem.items[itemPos];\n                            }\n                        }\n                        drillItem.items = items;\n                    }\n                }\n                if (isAttributeHierarchy) {\n                    if (drillItemCollection.length > 0) {\n                        if (drillItemCollection[0].delimiter) {\n                            member = member.replace(/~~/g, drillItemCollection[0].delimiter);\n                        }\n                        var index = PivotUtil.inArray(member, drillItemCollection[0].items);\n                        if (index === -1) {\n                            drillItemCollection[0].items.push(member);\n                        }\n                    }\n                    else {\n                        var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                        if (!clonedMembers) {\n                            clonedMembers = [drilledMember];\n                        }\n                        else {\n                            clonedMembers.push(drilledMember);\n                        }\n                    }\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, clonedMembers_2 = clonedMembers; _c < clonedMembers_2.length; _c++) {\n                var fields_1 = clonedMembers_2[_c];\n                if (fields_1.items.length > 0) {\n                    drilledMembers_1.push(fields_1);\n                }\n            }\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onContentReady = function () {\n        if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n            PivotUtil.updateDataSourceSettings(this, this.savedDataSourceSettings);\n            this.savedDataSourceSettings = undefined;\n        }\n        if (this.currentView !== 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            if ((this.dataSourceSettings.mode === 'Server' && this.isServerWaitingPopup) || this.dataSourceSettings.mode === 'Local') {\n                this.hideWaitingPopup();\n            }\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = this.gridSettings.columnWidth * engine.columnCount;\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                var verOffset = (mCnt.parentElement.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.parentElement.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.parentElement.scrollTop)) + 'px)';\n                var horiOffset = (mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - mCnt.parentElement.parentElement.querySelector('.' + cls.MOVABLESCROLL_DIV).scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n                this.grid.element.querySelector('.' + cls.MOVABLECHILD_DIV).style.width = vWidth + 'px';\n                if (this.grid.height !== 'auto') {\n                    this.grid.contentModule.setHeightToContent(this.virtualDiv.offsetHeight + movableTable.clientHeight);\n                }\n                else {\n                    this.grid.contentModule.setHeightToContent(this.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight);\n                }\n            }\n            if (this.currentView !== 'Chart') {\n                this.grid.hideScroll();\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    /* tslint:disable-next-line */\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    templateObject.rowHeaders = pivotCell.rowHeaders;\n                    templateObject.columnHeaders = pivotCell.columnHeaders;\n                    templateObject.rowIndex = pivotCell.rowIndex;\n                    templateObject.columnIndex = pivotCell.colIndex;\n                    templateObject.isGrandTotal = pivotCell.isGrandSum;\n                    templateObject.isTotal = pivotCell.isSum;\n                    templateObject.rowSpan = pivotCell.rowSpan;\n                    templateObject.columnSpan = pivotCell.colSpan;\n                    templateObject.isDrilled = pivotCell.isDrilled;\n                    templateObject.hasChild = pivotCell.hasChild;\n                    templateObject.valueSortInfo = pivotCell.valueSort;\n                    /* tslint:disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.pivotValues && this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[cell.actualText] &&\n                    this.olapEngineModule.dataFields[cell.actualText].caption) ?\n                    this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var rowHeaders = this.getRowText(rowIndex, 0);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = ((cell.formattedText === '0' || cell.formattedText === '') ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields,\n                };\n                /* tslint:disable-next-line:max-line-length */\n                this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((engineModule.rows[i].caption) ? engineModule.rows[i].caption : engineModule.rows[i].name);\n            }\n        }\n        else {\n            /* tslint:disable:max-line-length */\n            if (engineModule.columns.length > 0) {\n                var pos = engineModule.values.length === 0 ? 0 : Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = engineModule.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((engineModule.columns[j].caption) ? engineModule.columns[j].caption : engineModule.columns[j].name);\n            }\n            /* tslint:enable:max-line-length */\n        }\n        return fields;\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                /* tslint:disable */\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                /* tslint:enable */\n                this.showWaitingPopup();\n                var pivot_2 = this;\n                //setTimeout(() => {\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.allowServerDataBinding = false;\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            delete pivot_2.bulkChanges.pivotValues;\n                            pivot_2.allowServerDataBinding = true;\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                        pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                    pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_2.bulkChanges.pivotValues;\n                    pivot_2.allowServerDataBinding = true;\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* tslint:disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* tslint:enable */\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* tslint:disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* tslint:enable */\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString());\n            // TODO: To be considered on compact layout implementation\n            // let colWidth: number = this.renderModule.calculateColWidth(this.pivotColumns ? this.pivotColumns.length : 0);\n            // for (let i: number = 1; i < this.pivotColumns.length; i++) {\n            //     this.pivotColumns[i].width = colWidth;\n            // }\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < 300) {\n            height = 300;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        /* tslint:disable */\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        /* tslint:enable */\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                this.pivotColumns = [];\n                this.totColWidth = 0;\n                this.framePivotColumns(this.grid.columns);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    /* tslint:disable-next-line */\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    (this.displayOption.view === 'Both' && this.grid) ? this.getGridWidthAsNumber().toString() : this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* tslint:disable */\n        if (ele && !isNullOrUndefined(this.pivotValues) && this.pivotValues.length > 0) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode == 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_1 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            /* tslint:disable */\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            /* tslint:enable */\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            /* tslint:disable:no-empty */\n            this.grid.showSpinner = function () { };\n            this.grid.hideSpinner = function () { };\n            /* tslint:enable:no-empty */\n            this.element.appendChild(createElement('div', { id: this.element.id + '_grid' }));\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo('#' + this.element.id + '_grid');\n            /* tslint:disable-next-line:no-any */\n            this.grid.on('refresh-frozen-height', function () {\n                if (!_this_1.enableVirtualization) {\n                    _this_1.grid.contentModule.setHeightToContent(_this_1.grid.contentModule.getTable().offsetHeight);\n                }\n            });\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n            });\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType,\n                clonedReport: _this_1.clonedReport\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    if (isBlazor()) {\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var sfBlazor = 'sfBlazor';\n                    var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        if (data === 0) {\n                            _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), (pivot_3.dataSourceSettings.type === 'CSV' ?\n                                _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON')));\n                            return;\n                        }\n                        else {\n                            pivot_3.updateBlazorData(data, pivot_3);\n                            PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                            pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                        }\n                    });\n                }\n                else {\n                    if (_this_1.dataSourceSettings.mode !== 'Server') {\n                        _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    }\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                /* tslint:disable-next-line:no-any */\n                delete _this_1.bulkChanges.pivotValues;\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = PivotUtil.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = PivotUtil.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /* tslint:enable */\n    PivotView.prototype.generateData = function () {\n        if (this.displayOption.view !== 'Chart') {\n            this.renderEmptyGrid();\n        }\n        this.showWaitingPopup();\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n    };\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this;\n        if (!pivot.isStaticRefresh) {\n            if (isBlazor()) {\n                if (pivot.dataType === 'olap') {\n                    if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({\n                            dataSourceSettings: {\n                                dataSource: undefined\n                            }\n                        }, true);\n                        pivot.allowServerDataBinding = true;\n                    }\n                }\n            }\n            if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        if (!pivot.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        pivot.initEngine();\n                    }\n                    else {\n                        if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                            if (!this.element.querySelector('.e-spinner-pane')) {\n                                this.showWaitingPopup();\n                            }\n                            this.engineModule.data = pivot.remoteData;\n                            this.initEngine();\n                        }\n                        else {\n                            setTimeout(pivot.getData.bind(pivot), 100);\n                        }\n                    }\n                }\n                else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                    (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0 || this.engineModule.data.length > 0)) {\n                    if (pivot.dataType === 'pivot') {\n                        this.hideWaitingPopup();\n                        pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (this.dataSourceSettings.mode === 'Server') {\n                        this.getEngine(\"onRefresh\");\n                    }\n                    this.hideWaitingPopup();\n                }\n            }\n            else if (isBlazor() && pivot.dataType === 'pivot' &&\n                this.engineModule.data && this.engineModule.data.length > 0) {\n                this.initEngine();\n            }\n            else {\n                this.hideWaitingPopup();\n            }\n        }\n        else {\n            pivot.isStaticRefresh = false;\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        //setTimeout(() => {\n        pivot.engineModule.data = e.result;\n        if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            pivot.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n        //});\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                var headerDelimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.';\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            // (pivotValues[i][j] as IAxisSet).enableHyperlink = false;\n                            var label = this.hyperlinkSettings.headerText;\n                            var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                i : (this.dataType === 'pivot' ?\n                                this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                            var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                            if ((pivotValues[colIndex[label.split(headerDelimiter).length - 1]] &&\n                                pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j] &&\n                                pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j].\n                                    valueSort && pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j].\n                                valueSort[label])) {\n                                for (var _i = 0, colIndex_2 = colIndex; _i < colIndex_2.length; _i++) {\n                                    var index = colIndex_2[_i];\n                                    if (pivotValues[index][j] &&\n                                        pivotValues[index][j].axis === 'column' &&\n                                        (pivotValues[index][j].valueSort.levelName.indexOf(label) > -1)) {\n                                        pivotValues[index][j].enableHyperlink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            if (isBlazor()) {\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n            else {\n                this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n            }\n        }\n        /* tslint:disable-next-line:max-line-length */\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            if (!isBlazor()) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            }\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        /* tslint:disable-next-line:max-line-length */\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n                var fieldName = fields_2[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        /* tslint:disable-next-line:max-line-length */\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n            /* tslint:disable */\n            if (isBlazor()) {\n                this.engineModule.data = data;\n                this.allowServerDataBinding = false;\n                this.setProperties({\n                    dataSourceSettings: {\n                        rows: axisFields[0], columns: axisFields[1], values: axisFields[2], filters: axisFields[3],\n                        filterSettings: fieldSettings[0], sortSettings: fieldSettings[1], formatSettings: fieldSettings[2],\n                        drilledMembers: fieldSettings[3], groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n                    }\n                }, true);\n                this.allowServerDataBinding = true;\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function (e) {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    /* tslint:enable */\n    /* tslint:enable:max-func-body-length */\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns void\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.isAdaptive && this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.chart) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && select('#' + this.element.id + '_chart', this.element)) {\n                remove(select('#' + this.element.id + '_chart', this.element));\n            }\n        }\n        if (this.grid) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && select('#' + this.element.id + '_grid', this.element)) {\n                remove(select('#' + this.element.id + '_grid', this.element));\n            }\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            if (this.element.querySelector('.e-spinner-pane')) {\n                remove(this.element.querySelector('.e-spinner-pane'));\n            }\n            if (this.showFieldList && select('#' + this.element.id + '_PivotFieldList', document)) {\n                remove(select('#' + this.element.id + '_PivotFieldList', document));\n            }\n        }\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     * @returns void\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"editCompleted\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest, isBlazor, select } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     * @returns void\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Wrapper',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('staticFieldList')\n            });\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons();\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: true,\n                enableRtl: this.parent.enableRtl,\n                change: this.onCheckChange.bind(this)\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo('#' + this.parent.element.id + 'DeferUpdateCheckBox');\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.renderMode === 'Popup' ?\n                    (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                isPrimary: true\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton1');\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.renderMode === 'Popup' ?\n                (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton2');\n        this.deferUpdateCancelButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.cancelButtonClick.bind(this) :\n            this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1', attrs: { 'type': 'button' }\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2', attrs: { 'type': 'button' }\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        this.parent.allowDeferLayoutUpdate = !this.parent.allowDeferLayoutUpdate;\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n            this.deferUpdateCancelButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        this.cancelButtonClick();\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.pivotChange = false;\n        }\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        //setTimeout(() => {\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = extend({}, parent.dataSourceSettings, null, true);\n        parent.clonedFieldList = extend({}, parent.pivotFieldList, null, true);\n        //});\n    };\n    DialogRenderer.prototype.cancelButtonClick = function () {\n        /* tslint:disable:align */\n        if (isBlazor() && !this.parent.isPopupView) {\n            /* tslint:disable-next-line:max-line-length */\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.parent.clonedDataSource.properties));\n        }\n        else {\n            this.parent.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n        }\n        /* tslint:enable:align */\n        if (this.parent.dataType === 'olap') {\n            this.parent.olapEngineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                var name_1 = _a[_i];\n                var item = this.parent.clonedFieldList[name_1];\n                this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n            }\n        }\n        else {\n            this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n        }\n        this.parent.updateDataSource(false, true);\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList')\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                close: this.removeFieldListIcon.bind(this),\n                open: this.dialogOpen.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(select('#' + fieldListWrappper.id + '_dialog-content', fieldListWrappper), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: false,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons();\n            setStyleAttribute(select('#' + fieldListWrappper.id + '_title', fieldListWrappper), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    DialogRenderer.prototype.dialogOpen = function () {\n        this.adaptiveElement.refresh();\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            selected: this.tabSelect.bind(this)\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('button', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'type': 'button',\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE,\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS,\n            innerHTML: this.parent.localeObj.getConstant('addPrompt')\n        });\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function (event) {\n        if (!this.parent.isAdaptive) {\n            if (this.parent.dialogRenderer.fieldListDialog) {\n                this.parent.dialogRenderer.fieldListDialog.hide();\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            }\n        }\n        this.parent.notify(events.initCalculatedField, {});\n    };\n    DialogRenderer.prototype.showFieldListDialog = function (event) {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    DialogRenderer.prototype.onShowFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            if (this.parent.isAdaptive) {\n                this.parent.axisFieldModule.render();\n            }\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        this.parent.dialogRenderer.fieldListDialog.show();\n        this.parent.dialogRenderer.fieldListDialog.element.style.top =\n            parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n    };\n    DialogRenderer.prototype.onCloseFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.dataSourceSettings =\n                extend({}, this.parent.clonedDataSource.properties, null, true);\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            /* tslint:disable:align */\n            this.parent.pivotGridModule.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n            /* tslint:enable:align */\n            if (Object.keys(this.parent.clonedFieldList).length > 0) {\n                this.parent.dataType === 'olap' ? this.parent.olapEngineModule.fieldList =\n                    extend({}, this.parent.clonedFieldList, null, true) :\n                    this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            }\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n            this.parent.pivotGridModule.notify(events.contentReady, this);\n        }\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (this.parent.isAdaptive && this.parent.allowCalculatedField && this.parent.calculatedFieldModule) {\n            if (this.adaptiveElement && this.adaptiveElement.selectedItem === 4) {\n                if (select('#' + this.parent.element.id + 'droppable', this.adaptiveElement.element)) {\n                    /* tslint:disable */\n                    this.parent.calculatedFieldModule\n                        .updateAdaptiveCalculatedField(false);\n                    /* tslint:enable */\n                }\n                else {\n                    this.parent.notify(events.initCalculatedField, { edit: false });\n                }\n            }\n        }\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     * @returns void\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('allFields')\n            });\n            var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_CLASS + '-outer-div' });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: 'e-field-header-wrapper' });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS,\n                    innerHTML: this.parent.localeObj.getConstant('centerHeader')\n                });\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = { 'None': 'sortNone', 'Ascend': 'sortAscending', 'Descend': 'sortDescending' };\n        var keys = Object.keys(options);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var option = keys_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option,\n                    'title': this.parent.localeObj.getConstant(options[option])\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS,\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            enableRtl: this.parent.enableRtl,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            allowDrag = true;\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            /* tslint:disable */\n            var field = PivotUtil.getFieldInfo(args.nodeData.id, this.parent);\n            /* tslint:enable */\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: (field.fieldItem ? field.fieldItem.allowDragAndDrop ?\n                        this.parent.localeObj.getConstant('drag') : '' : this.parent.localeObj.getConstant('drag')),\n                    'aria-disabled': 'false'\n                },\n                className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' +\n                    (field.fieldItem ? field.fieldItem.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : '')\n            });\n            if (args.node.querySelector('.e-checkbox-wrapper') &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.e-checkbox-wrapper'));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.e-checkbox-wrapper').style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: false,\n            target: this.parentElement.parentElement,\n            close: this.dialogClose.bind(this)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.dialogClose = function () {\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            nodeChecked: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        /* tslint:disable-next-line:max-line-length */\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        var _this = this;\n        if (args.event.target.classList.contains(cls.DRAG_CLASS) &&\n            !args.event.target.classList.contains(cls.DRAG_DISABLE_CLASS)) {\n            var fieldInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n            var dragEventArgs = {\n                fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n                dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n            };\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.parent.isDragging = true;\n                    addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n                    var data = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        data = _this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    else {\n                        data = _this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                    if (data && data.aggregateType === 'CalculatedField') {\n                        for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                            var axisContent = axis_1[_i];\n                            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        }\n                    }\n                    var dragItem = args.clonedNode;\n                    if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                        _this.parent.renderMode) === 'Popup') {\n                        dragItem.style.zIndex = (_this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                    }\n                }\n                else {\n                    _this.parent.isDragging = false;\n                    args.cancel = true;\n                }\n            });\n        }\n        else {\n            this.parent.isDragging = false;\n            args.cancel = true;\n        }\n    };\n    // private getFieldDragArgs(args: DragAndDropEventArgs): FieldDragStartEventArgs {\n    //     let fieldInfo: FieldItemInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n    //     let dragEventArgs: any = {\n    //         fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n    //         dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n    //     }\n    //     let treeModule: TreeViewRenderer = this;\n    //     if (isBlazor()) {\n    //         dragEventArgs = this.getFieldDragEventArgs(dragEventArgs);\n    //         dragEventArgs.then((e: any) => {\n    //             return e;\n    //         });\n    //     }\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs);\n    //     return dragEventArgs;\n    // }\n    // private getFieldDragEventArgs(dragEventArgs: FieldDragStartEventArgs): FieldDragStartEventArgs | Deferred {\n    //     let callbackPromise: Deferred = new Deferred();\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs, (observedArgs: FieldDragStartEventArgs) => {\n    //         callbackPromise.resolve(observedArgs);\n    //     });\n    //     return callbackPromise;\n    // }\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.allowDeferLayoutUpdate) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].id === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args) {\n        var _this = this;\n        var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n        if (!isNullOrUndefined(node)) {\n            var li_1 = closest(node, 'li');\n            var id_1 = li_1.getAttribute('data-uid');\n            if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n                this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            }\n            var list = this.parent.pivotFieldList;\n            var selectedNode_1 = list[id_1];\n            var fieldInfo_1 = PivotUtil.getFieldInfo(id_1, this.parent);\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            if (args.action === 'check') {\n                var eventdrop = {\n                    fieldName: id_1, dropField: fieldInfo_1.fieldItem,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    dropAxis: (selectedNode_1.type === 'number' || (selectedNode_1.type === 'CalculatedField' &&\n                        selectedNode_1.formula && selectedNode_1.formula.indexOf('Measure') > -1 &&\n                        this.parent.dataType === 'olap')) ? 'values' : 'rows',\n                    dropPosition: fieldInfo_1.position, draggedAxis: 'fieldlist', cancel: false\n                };\n                control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        var addNode = _this.parent.pivotCommon.dataSourceUpdate.getNewField(id_1, fieldInfo_1.fieldItem);\n                        _this.updateReportSettings(addNode, observedArgs);\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n            else {\n                var removeFieldArgs = {\n                    cancel: false, fieldName: id_1,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    fieldItem: fieldInfo_1.fieldItem, axis: fieldInfo_1.axis\n                };\n                control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id_1);\n                        if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateReportSettings = function (newField, dropArgs) {\n        var dropPosition = dropArgs.dropPosition;\n        var dropClass = dropArgs.dropAxis;\n        switch (dropClass) {\n            case 'filters':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.filters.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.filters.push(newField);\n                break;\n            case 'rows':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.rows.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.rows.push(newField);\n                break;\n            case 'columns':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.columns.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.columns.push(newField);\n                break;\n            case 'values':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.values.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.values.push(newField);\n                if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                    !(this.parent.olapEngineModule).isMeasureAvail) {\n                    var measureField = {\n                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined,\n                    };\n                    var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                        this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                    fieldAxis.push(measureField);\n                }\n                break;\n        }\n    };\n    TreeViewRenderer.prototype.updateCheckState = function (selectedNode) {\n        var chkState = this.fieldTable.element.querySelectorAll('.e-checkbox-wrapper');\n        var innerText = this.fieldTable.element.querySelectorAll('.e-list-text');\n        var checkClass = this.fieldTable.element.querySelectorAll('.e-frame');\n        for (var i = 0; i < chkState.length; i++) {\n            if (selectedNode.caption === innerText[i].textContent) {\n                if (chkState[i].getAttribute('aria-checked') === 'false') {\n                    chkState[i].setAttribute('aria-checked', 'false');\n                    checkClass[i].classList.add(cls.NODE_CHECK_CLASS);\n                }\n                else {\n                    chkState[i].setAttribute('aria-checked', 'true');\n                    checkClass[i].classList.remove(cls.NODE_CHECK_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeStateChange = function (id, args, selectedNode) {\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            selectedNode.isSelected = args.action === 'check';\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.updateFieldlistData(id, args.action === 'check');\n            }\n            this.updateDataSource();\n        }\n        var parent = this.parent;\n        setTimeout(function () {\n            parent.axisFieldModule.render();\n        });\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args) {\n        var _this = this;\n        var fieldList = this.parent.pivotFieldList;\n        var selectedNode = fieldList[args.data[0].id.toString()];\n        var fieldInfo = PivotUtil.getFieldInfo(selectedNode.id.toString(), this.parent);\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        if (args.action === 'check') {\n            var eventdrop = {\n                fieldName: fieldInfo.fieldName, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: 'rows', draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedNodes.push(selectedNode.id.toString());\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: fieldInfo.fieldName,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var count = _this.selectedNodes.length;\n                    while (count--) {\n                        if (_this.selectedNodes[count] === selectedNode.id.toString()) {\n                            _this.selectedNodes.splice(count, 1);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = this.parent.pivotFieldList ? Object.keys(this.parent.pivotFieldList) : [];\n            var fieldList = {};\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var key = keys_2[_i];\n                var member = this.parent.pivotFieldList[key];\n                fieldList[key] = { id: member.id, caption: member.caption, isSelected: member.isSelected };\n            }\n            if (this.parent.isAdaptive) {\n                /* tslint:disable-next-line:max-line-length */\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns, this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    fieldList[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    fieldList[item.name].isSelected = true;\n                }\n            }\n            var list = fieldList;\n            for (var _b = 0, keys_3 = keys; _b < keys_3.length; _b++) {\n                var member = keys_3[_b];\n                var obj = list[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData ? this.parent.olapEngineModule.fieldListData : [];\n        if (this.parent.isAdaptive) {\n            /* tslint:disable-next-line:max-line-length */\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                /* tslint:disable */\n                var framedSet = void 0;\n                /* tslint:enable */\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        if (target.className.indexOf('e-selected') === -1) {\n            switch (option) {\n                case 'None':\n                    this.fieldListSort = 'None';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Ascend':\n                    this.fieldListSort = 'Ascend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Descend':\n                    this.fieldListSort = 'Descend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    break;\n            }\n            this.refreshTreeView();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (this.parent.dataType === 'olap') {\n            var measure = void 0;\n            var calcMember = void 0;\n            if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                calcMember = treeData[0];\n                measure = treeData[1];\n                treeData.splice(0, 2);\n            }\n            else {\n                measure = treeData[0];\n                treeData.splice(0, 1);\n            }\n            /* tslint:disable:typedef */\n            treeData = sortOrder === 'Ascend' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 : ((b.caption > a.caption) ? -1 : 0); })) :\n                sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 : ((b.caption < a.caption) ? -1 : 0); })) :\n                    treeData;\n            /* tslint:enable:typedef */\n            if (calcMember) {\n                treeData.splice(0, 0, calcMember, measure);\n            }\n            else {\n                treeData.splice(0, 0, measure);\n            }\n        }\n        else {\n            this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function (e) {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     * @return {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, Droppable, EventHandler, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     * @returns void\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-wrapper'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant(fieldLabels[len]) },\n                innerHTML: this.parent.localeObj.getConstant(fieldLabels[len])\n            });\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS,\n                innerHTML: localePrompt\n            });\n            var droppable = new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-wrapper'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (e.type === 'mouseleave') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor, select } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    /* tslint:disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n                field.push({\n                    name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis, showRemoveIcon: true, allowDragAndDrop: true\n                });\n            }\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n                    var element = _b[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        this.parent.localeObj.getConstant('filterAxisPrompt') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _c = 0, _d = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _c < _d.length; _c++) {\n                        var element = _d[_c];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name,\n                                    'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                    'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                        this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                        this.parent.pivotGridModule !== undefined &&\n                                        this.parent.pivotGridModule.enableVirtualization)))) {\n                                    this.createSortOption(buttonElement, field[i].name, field[i]);\n                                }\n                                if (axis !== 'values' && valuePos !== i) {\n                                    this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                }\n                                if (axis === 'values') {\n                                    this.getTypeStatus(field, i, buttonElement);\n                                }\n                            }\n                            if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                var calcElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                    className: cls.ICON + ' ' + cls.CALC_EDIT\n                                });\n                                if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                                    removeClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                buttonElement.appendChild(calcElement);\n                            }\n                            var removeElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                            });\n                            if (this.parent.getModuleName() === 'pivotview') {\n                                if ((this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon)) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            else {\n                                if (field[i].showRemoveIcon) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            buttonElement.appendChild(removeElement);\n                            buttonWrapper.appendChild(dropIndicatorElement);\n                            buttonWrapper.appendChild(buttonElement);\n                            buttonWrapper.appendChild(dropLastIndicatorElement);\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultiAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    value: !parent_1.chartSettings.enableMultiAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n                        var element = _f[_e];\n                        _loop_1(element);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n                        var element = _h[_g];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n                            var currentMeasure = this.parent.chartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                                var rKey = rKeys_1[_j];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                                        var cKey = cKeys_1[_k];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                this.columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    this.columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this.columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                this.columnFieldDropDownList.isStringTemplate = true;\n                                this.columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    /* tslint:enable */\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n            this.createSummaryType(buttonElement, field[i].name, field[i]);\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.id;\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                this.parent.pivotFieldListModule &&\n                !this.parent.pivotFieldListModule.isDestroyed)) {\n                this.parent.pivotFieldListModule.element\n                    .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.pivotFieldListModule.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n            }\n            else {\n                if (!this.parent.isAdaptive) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n            }\n        }\n        else if (this.parent.getModuleName() === 'pivotfieldlist') {\n            if (this.parent.isAdaptive) {\n                this.parent.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n                this.parent.calculatedFieldModule.buttonCall = true;\n            }\n            else {\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                if (this.parent.calculatedFieldModule) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag'),\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        pivotButton.appendChild(dragWrapper);\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter'),\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                    }\n                }\n                if (isBlazor()) {\n                    e.bindEvents(e.dragElement);\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20, } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        /* tslint:disable-next-line:max-line-length */\n        if (args.target.classList && (args.target.classList.contains(cls.GROUP_CHART_VALUE) || args.target.classList.contains(cls.GROUP_CHART_VALUE_DROPDOWN))) {\n            args.target = this.parent.element.querySelector('.' + cls.GROUP_CHART_ROW);\n        }\n        if (args.target.classList && args.element && (args.target.classList.contains(cls.GROUP_CHART_COLUMN) || args.target.classList.contains(cls.GROUP_CHART_COLUMN_DROPDOWN))) {\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            var thisObj = this;\n            //setTimeout(() => {\n            thisObj.parent.axisFieldModule.render();\n            //});\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.id : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            /* tslint:disable-next-line:max-line-length */\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n                    this.updateDataSource(true);\n                }\n                var thisObj = this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n        }\n    };\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        if (pivotObj.getModuleName() === 'pivotfieldlist') {\n            showSpinner(pivotObj.fieldListSpinnerElement);\n        }\n        else {\n            pivotObj.showWaitingPopup();\n        }\n        pivotObj.mouseEventArgs = args;\n        pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ?\n            this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Wrapper');\n        var fieldName = args.target.parentElement.id;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n            var $this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                $this_1.parent.engineModule.fieldList[fieldName].dateMember = dateMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].formattedMembers = formattedMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].members = members;\n                $this_1.updateFilterEvents();\n            });\n        }\n        else if (pivotObj.dataSourceSettings.mode === 'Server') {\n            if (this.parent.engineModule.fieldList[fieldName].members && Object.keys(this.parent.engineModule.fieldList[fieldName].members).length > 0) {\n                this.updateFilterEvents();\n            }\n            else {\n                pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n            }\n        }\n        else {\n            this.updateFilterEvents();\n        }\n        /* tslint:enable */\n    };\n    /** @hidden */\n    PivotButton.prototype.updateFilterEvents = function () {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n        var target = pivotObj.mouseEventArgs.target;\n        this.fieldName = target.parentElement.id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this);\n            // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n            // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n            // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n            this.bindDialogEvents();\n        }\n        if (pivotObj.getModuleName() === 'pivotfieldlist') {\n            hideSpinner(pivotObj.fieldListSpinnerElement);\n        }\n        else {\n            pivotObj.hideWaitingPopup();\n        }\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                /* tslint:disable:max-line-length */\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n                /* tslint:enable:max-line-length */\n            },\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var _this = this;\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n            value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = select('#' + this.parent.element.id + '_' + inputElementString, dialogElement);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n            remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n        }\n    };\n    PivotButton.prototype.setFocus = function () {\n        if (this.parentElement) {\n            var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (target.parentElement.getAttribute('isvalue') === 'true') {\n                    _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    if (_this.parent.dataType === 'olap') {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                else {\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                    _this.parent.axisFieldModule.render();\n                }\n                _this.updateDataSource();\n            }\n        });\n    };\n    /** @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-uid') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        /* tslint:disable:no-any */\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.id] = item.id;\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.id] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.id].isSelected = state === 'check';\n            }\n        }\n        /* tslint:enable:no-any */\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.id);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n                var item = pivotButtons_2[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n            var item = pivotButtons_3[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        /* tslint:disable */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        /* tslint:enable */\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        if (isNullOrUndefined(this.parent.dataSourceSettings.dataSource) && isNullOrUndefined(this.parent.dataSourceSettings.url)) {\n            this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, true);\n        }\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (fields[len]) {\n                var args = {\n                    field: fields[len],\n                    axis: axis[len].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex, getInstance } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { DataSourceSettings } from '../../pivotview/model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotFieldListModel} options?\n     * @param  {string|HTMLButtonElement} element?\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.pivotChange = false;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this.isPopupView = false;\n        /** @hidden */\n        _this.enableValueSorting = false;\n        _this.request = new XMLHttpRequest();\n        _this.remoteData = [];\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        return modules;\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            /* tslint:enable */\n            apply: 'Apply',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            summarizeValuesBy: 'Summarize values by',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            yes: 'Yes',\n            no: 'No',\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.captionData = [];\n        this.wireEvent();\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : this.pageSettings;\n        var localeObj = this.pivotGridModule ? this.pivotGridModule.localeObj :\n            (this.staticPivotGridModule ? this.staticPivotGridModule.localeObj : this.localeObj);\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj,\n                clonedReport: this.clonedReport\n            };\n        }\n        return customProperties;\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var customProperties = {\n            pageSettings: this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined,\n            enableValueSorting: this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined,\n            enableDrillThrough: this.pivotGridModule ?\n                (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true,\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotFieldList.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else {\n                    var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    if (this.engineModule.fieldList) {\n                        var keys = Object.keys(this.engineModule.fieldList);\n                        for (var i = 0; i < keys.length; i++) {\n                            if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                            }\n                        }\n                    }\n                    this.engineModule.fieldList = fList;\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n                    var valueSort = JSON.parse(engine.valueSortSettings);\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotGridModule && this.pivotGridModule.calculatedFieldModule && this.pivotGridModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotGridModule.calculatedFieldModule.endDialog();\n                    this.pivotGridModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n        }\n    };\n    PivotFieldList.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotFieldList.prototype.initialLoad = function () {\n        var _this = this;\n        /* tslint:disable-next-line:max-line-length */\n        this.trigger(events.load, { dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings }, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this.dataSourceSettings.dataSource;\n            }\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass);\n            }\n            _this.notify(events.initialLoad, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Binding events to the Pivot Field List element.\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    if (isBlazor()) {\n                        break;\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    break;\n                case 'dataSourceSettings':\n                    if (!isNullOrUndefined(newProp.dataSourceSettings.dataSource)) {\n                        if (newProp.dataSourceSettings.dataSource.length === 0 && !isNullOrUndefined(this.staticPivotGridModule)) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.staticPivotGridModule.dataSourceSettings);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.engineModule.fieldList = {};\n                            this.staticPivotGridModule.pivotValues = [];\n                        }\n                        this.initEngine();\n                        if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n                            PivotUtil.updateDataSourceSettings(this.staticPivotGridModule, this.savedDataSourceSettings);\n                            this.savedDataSourceSettings = undefined;\n                        }\n                    }\n                    if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                        if (this.isPopupView && this.pivotGridModule &&\n                            this.pivotGridModule.showGroupingBar && this.pivotGridModule.groupingBarModule) {\n                            var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                            var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                            var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                            var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                            /* tslint:disable-next-line:max-line-length */\n                            this.pivotGridModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                            this.pivotGridModule.axisFieldModule.render();\n                        }\n                        else if (!this.isPopupView && this.staticPivotGridModule && !this.staticPivotGridModule.isDestroyed) {\n                            var pivot = this.staticPivotGridModule;\n                            if (pivot.showGroupingBar && pivot.groupingBarModule) {\n                                pivot.axisFieldModule.render();\n                            }\n                            if (pivot.showFieldList && pivot.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                pivot.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                pivot.pivotFieldListModule.axisFieldModule.render();\n                                if (pivot.pivotFieldListModule.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                                    pivot.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        this.axisFieldModule.render();\n                        if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                            this.notify(events.treeViewUpdate, {});\n                        }\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = void 0;\n                    if (isBlazor()) {\n                        pivotDataSet = _this.engineModule.data;\n                    }\n                    else {\n                        pivotDataSet = _this.dataSourceSettings.dataSource;\n                    }\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : PivotUtil.getClonedData(pivotDataSet));\n                    if (isBlazor()) {\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                        _this.setProperties({ dataSourceSettings: { dataSource: pivotDataSet } }, true);\n                    }\n                }\n                var customProperties = _this.frameCustomProperties();\n                customProperties.enableValueSorting = _this.staticPivotGridModule ?\n                    _this.staticPivotGridModule.enableValueSorting : _this.enableValueSorting;\n                if (_this.dataSourceSettings.mode !== 'Server') {\n                    _this.engineModule.renderEngine(_this.dataSourceSettings, customProperties, _this.getValueCellInfo.bind(_this));\n                }\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                _this.olapEngineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(_this.olapEngineModule.fieldListData, _this.olapEngineModule.fieldList));\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                this.dataSourceSettings.dataSource.length > 0) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                if (this.dataType === 'pivot' && this.remoteData.length > 0) {\n                    this.engineModule.data = this.remoteData;\n                    this.initEngine();\n                }\n                else {\n                    setTimeout(this.getData.bind(this), 100);\n                }\n            }\n        }\n        else if (isBlazor() && this.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Wrapper'));\n        }\n        this.renderModule.render();\n        this.fieldListSpinnerElement = this.renderMode === 'Popup' ?\n            this.dialogRenderer.fieldListDialog.element : this.element.querySelector('.e-pivotfieldlist-wrapper');\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.fieldListSpinnerElement, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement }, this.createElement);\n        }\n        var args;\n        args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: document.getElementById(this.element.id + '_Wrapper'),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        this.getFields(dataSourceSettings);\n        if (this.captionData.length > 0) {\n            var lnt = this.captionData.length;\n            var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            while (lnt--) {\n                if (this.captionData[lnt]) {\n                    for (var _i = 0, _a = this.captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        /* tslint:disable-next-line:max-line-length */\n        this.captionData = [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values, dataSourceSettings.filters];\n    };\n    /* tslint:disable */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        var _this = this;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && pivot.pivotGridModule.enableVirtualization ?\n            pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    if (!isSorted) {\n                        customProperties.enableValueSorting = pivot.staticPivotGridModule ?\n                            pivot.staticPivotGridModule.enableValueSorting : pivot.enableValueSorting;\n                    }\n                    else {\n                        pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                        customProperties.enableValueSorting = false;\n                    }\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                        var interopArguments = {};\n                        if (isSorted) {\n                            pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            if ((isBlazor())) {\n                                interopArguments = { 'key': 'onSort', 'arg': pivot.lastSortInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onSort(pivot.lastSortInfo);\n                            }\n                            pivot.lastSortInfo = {};\n                        }\n                        if (isFiltered) {\n                            if (isBlazor()) {\n                                var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                                interopArguments = {\n                                    'key': 'onFilter',\n                                    'arg': { 'lastFilterInfo': pivot.lastFilterInfo, 'filterSettings': dataArgs }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (isBlazor()) {\n                                interopArguments = { 'key': 'onAggregation', 'arg': pivot.lastAggregationInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (isBlazor()) {\n                                interopArguments = {\n                                    'key': 'onCalcOperation',\n                                    'arg': {\n                                        lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                        values: pivot.dataSourceSettings.values,\n                                        calculatedFieldSettings: pivot.dataSourceSettings.calculatedFieldSettings\n                                    }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        if (isBlazor()) {\n                            var args_1 = window['sfBlazor'].copyWithoutCircularReferences([interopArguments['arg']], interopArguments['arg']);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", interopArguments['key'], args_1).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                    if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                                        pivot.calculatedFieldModule.endDialog();\n                                        pivot.calculatedFieldModule.isRequireUpdate = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        if (isBlazor() && pageSettings) {\n                            var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'renderEngine', { 'dataSourceSettings': dataArgs, 'customProperties': customProperties }).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                }\n                            });\n                        }\n                        else if (pivot.dataSourceSettings.mode === 'Server') {\n                            if (isSorted)\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            else if (isAggChange)\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            else if (isCalcChange)\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            else if (isFiltered)\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            else\n                                control.getEngine('onDrop', null, null, null, null, null, null);\n                            pivot.lastSortInfo = {};\n                            pivot.lastAggregationInfo = {};\n                            pivot.lastCalcFieldInfo = {};\n                            pivot.lastFilterInfo = {};\n                        }\n                        else {\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        }\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed);\n                }\n                if (!(isBlazor() && pageSettings)) {\n                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                }\n            }\n            else {\n                pivot.axisFieldModule.render();\n                pivot.isRequiredUpdate = false;\n            }\n            if (!(isBlazor() && pageSettings)) {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n        });\n        //});\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            var dataSource = pivot.dataSourceSettings.dataSource;\n            if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                observedArgs.dataSourceSettings.dataSource = dataSource;\n            }\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = isBlazor() ? pivot.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = isBlazor() ? pivot.engineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = extend({}, pivot.dataSourceSettings, null, true);\n                    pivot.clonedFieldList = extend({}, pivot.pivotFieldList, null, true);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (pivot.renderMode === 'Popup' && pivot.allowDeferLayoutUpdate) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                /* tslint:disable:align */\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n                /* tslint:enable:align */\n            }\n            if (pivot.renderMode === 'Popup' && pivot.pivotGridModule &&\n                pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n    };\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n        }\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     * @method updateControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            if (isBlazor() && !this.isPopupView) {\n                PivotUtil.updateDataSourceSettings(this, PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings));\n            }\n            else {\n                this.setProperties({ dataSourceSettings: control.dataSourceSettings }, true);\n            }\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.renderMode === 'Popup') {\n                this.pivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (this.renderMode === 'Fixed' && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n                this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n            }\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     * @method refreshTargetControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            control.clonedDataSet = this.clonedDataSet;\n            if (isBlazor()) {\n                PivotUtil.updateDataSourceSettings(control, PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings));\n            }\n            else {\n                control.setProperties({ dataSourceSettings: this.dataSourceSettings }, true);\n            }\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            if (!this.pivotChange) {\n                control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            }\n            var eventArgs = {\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings),\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n                control.isStaticRefresh = true;\n            }\n            if (control.enableVirtualization && isBlazor()) {\n                control.renderPivotGrid();\n            }\n            else {\n                control.dataBind();\n            }\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n            }\n        });\n    };\n    /**\n     * Destroys the Field Table component.\n     * @method destroy\n     * @return {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.allowDeferLayoutUpdate && this.dialogRenderer &&\n            this.dialogRenderer.deferUpdateCheckBox && !this.dialogRenderer.deferUpdateCheckBox.isDestroyed) {\n            this.dialogRenderer.deferUpdateCheckBox.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        if (this.renderMode === 'Popup') {\n            if (this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.dialogRenderer.fieldListDialog.destroy();\n            }\n            if (document.getElementById(this.element.id + '_Wrapper')) {\n                remove(document.getElementById(this.element.id + '_Wrapper'));\n            }\n        }\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotFieldList.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, isBlazor, select } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /** Constructor for calculatedfield module */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.inputObj = null;\n        this.treeObj = null;\n        this.droppable = null;\n        this.menuObj = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.formatText = null;\n        this.formatType = null;\n        this.fieldType = null;\n        this.parentHierarchy = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n        this.confirmPopUp = null;\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedfield';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-hover.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                case 'shiftE':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node);\n                    }\n                    break;\n                case 'delete':\n                    if (node.tagName === 'LI' && !node.querySelector('.e-list-icon.e-format') && !node.querySelector('.e-list-icon').classList.contains('.e-icons') && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                        node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon'))) {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n                    }\n                    break;\n                case 'enter':\n                    var field = node.getAttribute('data-field');\n                    var type = node.getAttribute('data-type');\n                    var dropField = select('#' + this.parentID + 'droppable', this.dialog.element);\n                    if (this.parent.dataType === 'pivot') {\n                        if (dropField.value === '') {\n                            if (type === CALC) {\n                                dropField.value = node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                        else if (dropField.value !== '') {\n                            if (type === CALC) {\n                                dropField.value = dropField.value + node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                    }\n                    else {\n                        if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                            this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                            field = this.parent.olapEngineModule.fieldList[field].tag;\n                        }\n                        if (dropField.value === '') {\n                            dropField.value = field;\n                        }\n                        else if (dropField.value !== '') {\n                            dropField.value = dropField.value + field;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {NodeClickEventArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = closest(e.event.target, 'li');\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED) ||\n            e.event.target.classList.contains(cls.GRID_REMOVE)) {\n            if (!this.parent.isAdaptive) {\n                this.displayMenu(node, e.node, e.event.target);\n            }\n            else if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n                if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDIT) && e.event.target.classList.contains(cls.CALC_EDIT)) {\n                    this.isEdit = true;\n                    this.currentFieldName = node.getAttribute('data-field');\n                    this.fieldText = node.getAttribute('data-caption');\n                    this.formulaText = node.getAttribute('data-formula');\n                    this.formatType = node.getAttribute('data-formatString');\n                    this.formatText = this.formatType === 'Custom' ? node.getAttribute('data-customString') : null;\n                    this.fieldType = node.getAttribute('data-membertype');\n                    this.parentHierarchy = this.fieldType === 'Dimension' ? node.getAttribute('data-hierarchy') : null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDITED) && e.event.target.classList.contains(cls.CALC_EDITED)) {\n                    this.isEdit = false;\n                    this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                    this.parentHierarchy = this.fieldType = this.formatType = null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-icons') && e.event.target.classList.contains(cls.GRID_REMOVE)) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, e.node);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {AccordionClickArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.accordionClickHandler = function (e) {\n        if (e.item && e.item.iconCss.indexOf('e-list-icon') !== -1 &&\n            closest(e.originalEvent.target, '.e-acrdn-header-icon')) {\n            var node = closest(e.originalEvent.target, '.e-acrdn-header').querySelector('.' + cls.CALCCHECK);\n            var fieldName = node.getAttribute('data-field');\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            var optionElement = closest(e.originalEvent.target, '.e-acrdn-header-icon');\n            if (optionElement.querySelector('.' + cls.CALC_EDIT) && e.originalEvent.target.classList.contains(cls.CALC_EDIT)) {\n                this.isEdit = true;\n                this.currentFieldName = this.fieldText = fieldName;\n                this.formulaText = this.parent.engineModule.fieldList[fieldName].formula;\n                this.formatText = formatObj ? formatObj.format : '';\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n            }\n            else if (optionElement.querySelector('.' + cls.CALC_EDITED) &&\n                e.originalEvent.target.classList.contains(cls.CALC_EDITED)) {\n                this.isEdit = false;\n                this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n            }\n            else if (optionElement.querySelector('.' + cls.GRID_REMOVE) &&\n                e.originalEvent.target.classList.contains(cls.GRID_REMOVE)) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionCreated = function () {\n        var allElement = this.accordion.element.querySelectorAll('.e-acrdn-item');\n        for (var i = 0; i < allElement.length; i++) {\n            if (allElement[i].querySelector('.' + cls.CALC_EDIT) || allElement[i].querySelector('.' + cls.CALC_EDITED)) {\n                var element = createElement('span', {\n                    className: 'e-list-icon ' + cls.GRID_REMOVE + ' e-icons',\n                });\n                append([element], allElement[i].querySelector('.e-acrdn-header-icon'));\n            }\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     * @param  {HTMLElement} node\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.displayMenu = function (node, treeNode, target) {\n        var edit = target ? target.classList.contains(cls.CALC_EDIT) : true;\n        var edited = target ? target.classList.contains(cls.CALC_EDITED) : true;\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'pivot' && node.querySelector('.e-list-icon.e-format') &&\n            node.querySelector('.e-list-icon.e-format').classList.contains(cls.ICON) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.GRID_REMOVE) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n            if (this.menuObj && !this.menuObj.isDestroyed) {\n                this.menuObj.destroy();\n            }\n            this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n            this.openContextMenu(node);\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDIT) &&\n            node.querySelector('.' + cls.CALC_EDIT).classList.contains('e-list-icon') && edit ||\n            (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active') && ((target && !target.classList.contains(cls.GRID_REMOVE)) || !target)))) {\n            this.isEdit = true;\n            var fieldName = node.getAttribute('data-field');\n            var caption = node.getAttribute('data-caption');\n            this.currentFieldName = fieldName;\n            this.inputObj.value = caption;\n            this.inputObj.dataBind();\n            var formatString = node.getAttribute('data-formatString');\n            var dialogElement = this.dialog.element;\n            var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n            if (this.parent.dataType === 'olap') {\n                var memberType = node.getAttribute('data-membertype');\n                var parentHierarchy = node.getAttribute('data-hierarchy');\n                var expression = node.getAttribute('data-formula');\n                var customString = node.getAttribute('data-customString');\n                var fieldTitle = select('#' + this.parentID + '_' + 'FieldNameTitle', dialogElement);\n                var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n                var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n                var formatDrop = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('caption');\n                select('#' + this.parentID + 'droppable', document).value = expression;\n                memberTypeDrop.readonly = true;\n                memberTypeDrop.value = memberType;\n                memberTypeDrop.dataBind();\n                if (memberType === 'Dimension') {\n                    hierarchyDrop.value = parentHierarchy;\n                }\n                if (formatString !== '') {\n                    formatDrop.value = formatString;\n                    formatDrop.dataBind();\n                }\n                customFormat.value = customString;\n            }\n            else {\n                customFormat.value = formatString;\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clearCalculatedField'));\n                select('#' + this.parentID + 'droppable', document).value = node.getAttribute('data-uid');\n            }\n            customFormat.dataBind();\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDITED) &&\n            node.querySelector('.' + cls.CALC_EDITED).classList.contains('e-list-icon') && edited ||\n            (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.inputObj.dataBind();\n            var dialogElement = this.dialog.element;\n            /* tslint:disable:max-line-length */\n            var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n            customFormat.value = '';\n            customFormat.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n                var formatDrop = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n                var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n                var fieldTitle = select('#' + this.parentID + '_' + 'FieldNameTitle', dialogElement);\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('fieldTitle');\n                hierarchyDrop.index = 0;\n                hierarchyDrop.dataBind();\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n            }\n            else {\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n            }\n            select('#' + this.parentID + 'droppable', document).value = '';\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.GRID_REMOVE) &&\n            node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon')) && !edit && !edited) {\n            var dropField = select('#' + this.parentID + 'droppable', document);\n            var field = {\n                name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n                caption: this.inputObj.value,\n                formula: dropField.value\n            };\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), field, true, treeNode);\n        }\n    };\n    CalculatedField.prototype.removeCalcField = function (node) {\n        var dataSourceSettings = this.parent.dataSourceSettings;\n        var fieldName = node.getAttribute('data-field');\n        var calcfields = dataSourceSettings.calculatedFieldSettings;\n        var engineModule;\n        if (this.parent.dataType === 'pivot') {\n            if (!this.parent.isAdaptive) {\n                this.treeObj.removeNodes([node]);\n            }\n            else {\n                var index = parseInt(node.getAttribute('id').split(this.parentID + '_')[1], 10);\n                if (typeof index === 'number') {\n                    this.accordion.removeItem(index);\n                }\n            }\n        }\n        for (var i = 0; i < calcfields.length; i++) {\n            if (calcfields[i] && calcfields[i].name === fieldName) {\n                calcfields.splice(i, 1);\n                break;\n            }\n        }\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n            var fields_1 = engineModule.fieldListData ? engineModule.fieldListData : [];\n            /* tslint:disable:no-any */\n            for (var _i = 0, _a = Object.keys(fields_1); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (fields_1[item].name === fieldName) {\n                    var index = parseInt(item, 10);\n                    if (typeof (index) === 'number') {\n                        fields_1.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            /* tslint:enable:no-any */\n            var parentID = this.treeObj.getNode(node).parentID;\n            this.treeObj.removeNodes([node]);\n            if (calcfields.length <= 0) {\n                this.treeObj.removeNodes([parentID]);\n            }\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fields) {\n            for (var i = 0; i < engineModule.fields.length; i++) {\n                if (engineModule.fields[i] === fieldName) {\n                    engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (engineModule.savedFieldList && engineModule.savedFieldList[fieldName]) {\n            delete engineModule.savedFieldList[fieldName];\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName]) {\n            delete engineModule.fieldList[fieldName];\n        }\n        var formatFields = dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatFields.length; i++) {\n            if (formatFields[i] && formatFields[i].name === fieldName) {\n                formatFields.splice(i, 1);\n                break;\n            }\n        }\n        var fields = [dataSourceSettings.values, dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.filters];\n        for (var i = 0, n = fields.length; i < n; i++) {\n            for (var j = 0, length_1 = fields[i].length; j < length_1; j++) {\n                if (fields[i][j].name === fieldName) {\n                    fields[i].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        /* tslint:enable:max-line-length */\n        if (this.isEdit && this.currentFieldName === fieldName) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n        }\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n            this.parent.updateDataSource();\n        }\n        this.removeErrorDialog();\n    };\n    /**\n     * To set position for context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.openContextMenu = function (node) {\n        var _this = this;\n        var fieldName = node.getAttribute('data-field');\n        var type = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 'string' : 'number';\n        var validSummaryTypes = (type === 'string' ? this.getValidSummaryType().slice(0, 2) : this.getValidSummaryType());\n        var eventArgs = {\n            cancel: false, fieldName: fieldName,\n            aggregateTypes: this.getMenuItems(type).slice()\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var duplicateTypes = [];\n                var items = [];\n                for (var _i = 0, _a = observedArgs.aggregateTypes; _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (validSummaryTypes.indexOf(option) > -1 && duplicateTypes.indexOf(option) === -1) {\n                        duplicateTypes.push(option);\n                        items.push({\n                            id: _this.parent.element.id + 'Calc_' + option,\n                            text: _this.parent.localeObj.getConstant(option)\n                        });\n                    }\n                }\n                _this.createMenu(items, node);\n                var pos = node.getBoundingClientRect();\n                var offset = window.scrollY || document.documentElement.scrollTop;\n                if (_this.parent.enableRtl) {\n                    _this.menuObj.open(pos.top + offset, pos.left - 100);\n                }\n                else {\n                    _this.menuObj.open(pos.top + offset, pos.left + 150);\n                }\n            }\n        });\n    };\n    /**\n     * Triggers while select menu.\n     * @param  {MenuEventArgs} menu\n     * @returns void\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split('_').pop());\n            this.curMenu.textContent = field + ' (' + menu.element.textContent + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '-1');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.createMenu = function (menuItems, node) {\n        var _this = this;\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu',\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            // beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this),\n            onClose: function () {\n                _this.treeObj.element.focus();\n                addClass([node], ['e-hover', 'e-node-focus']);\n            }\n        };\n        var contextMenu;\n        if (select('#' + this.parentID + 'CalcContextmenu', document)) {\n            contextMenu = select('#' + this.parentID + 'CalcContextmenu', document);\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parentID + 'CalcContextmenu'\n            });\n        }\n        this.dialog.element.appendChild(contextMenu);\n        this.menuObj = new Menu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(contextMenu);\n    };\n    /**\n     * Triggers while click OK button.\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.applyFormula = function () {\n        var _this = this;\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        var eventArgs = {\n            fieldName: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            calculatedField: this.getCalculatedFieldInfo(),\n            calculatedFieldSettings: PivotUtil.cloneCalculatedFieldSettings(this.parent.dataSourceSettings.calculatedFieldSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.calculatedFieldCreate, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var calcInfo = observedArgs.calculatedField;\n                if (!_this.isEdit) {\n                    if (currentObj.parent.dataType === 'olap') {\n                        var field = calcInfo.name;\n                        if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                            currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                            isExist = true;\n                        }\n                    }\n                    else {\n                        for (var _i = 0, _a = Object.keys(currentObj.parent.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            if (calcInfo.name && calcInfo.name === key &&\n                                currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                                isExist = true;\n                            }\n                        }\n                    }\n                }\n                if (isExist) {\n                    currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n                    return;\n                }\n                _this.existingReport = extend({}, _this.parent.dataSourceSettings, null, true);\n                var report = _this.parent.dataSourceSettings;\n                if (!isNullOrUndefined(calcInfo.name) && calcInfo.name !== '' &&\n                    !isNullOrUndefined(calcInfo.caption) && calcInfo.caption !== '' && calcInfo.formula && calcInfo.formula !== '') {\n                    var field = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        field = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula,\n                            formatString: calcInfo.formatString\n                        };\n                        if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                            field.hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                        }\n                        _this.isFieldExist = false;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name) {\n                                    _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name && _this.isEdit) {\n                                    report.calculatedFieldSettings[i].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                                    _this.parent.olapEngineModule.fieldList[field.name].caption = calcInfo.caption;\n                                    report.calculatedFieldSettings[i].formatString = field.formatString;\n                                    report.calculatedFieldSettings[i].formula = field.formula;\n                                    field = report.calculatedFieldSettings[i];\n                                    _this.isFieldExist = true;\n                                    break;\n                                }\n                            }\n                            var axisFields = [report.rows, report.columns, report.values, report.filters];\n                            var isFieldExist = false;\n                            for (var _b = 0, axisFields_1 = axisFields; _b < axisFields_1.length; _b++) {\n                                var fields = axisFields_1[_b];\n                                for (var _c = 0, fields_2 = fields; _c < fields_2.length; _c++) {\n                                    var item = fields_2[_c];\n                                    if (item.isCalculatedField && field.name !== null &&\n                                        item.name === field.name && _this.isEdit) {\n                                        item.caption = calcInfo.caption;\n                                        _this.isFieldExist = true;\n                                        isFieldExist = true;\n                                        break;\n                                    }\n                                }\n                                if (isFieldExist) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (!_this.isFieldExist) {\n                            report.calculatedFieldSettings.push(field);\n                        }\n                        _this.parent.lastCalcFieldInfo = field;\n                    }\n                    else {\n                        field = {\n                            name: calcInfo.name,\n                            caption: calcInfo.caption,\n                            type: 'CalculatedField'\n                        };\n                        var cField = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula\n                        };\n                        if (!isNullOrUndefined(calcInfo.formatString)) {\n                            cField.formatString = calcInfo.formatString;\n                        }\n                        _this.isFieldExist = true;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                            return;\n                                        }\n                                    }\n                                    _this.isFieldExist = false;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && field.name !== null &&\n                                    report.values[i].name === field.name && _this.isEdit) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            report.values[i].caption = calcInfo.caption;\n                                            _this.currentFormula = report.calculatedFieldSettings[j].formula;\n                                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                                            _this.parent.engineModule.fieldList[field.name].caption = calcInfo.caption;\n                                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                            _this.isFieldExist = false;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (_this.isFieldExist) {\n                            report.values.push(field);\n                            report.calculatedFieldSettings.push(cField);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                        }\n                        _this.parent.lastCalcFieldInfo = cField;\n                    }\n                    _this.addFormula(report, field.name);\n                }\n                else {\n                    if (isNullOrUndefined(calcInfo.name) || calcInfo.name === '' ||\n                        isNullOrUndefined(calcInfo.caption) || calcInfo.caption === '') {\n                        _this.inputObj.value = '';\n                        addClass([document.getElementById(_this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                        document.getElementById(_this.parentID + 'ddlelement').focus();\n                    }\n                    else {\n                        _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormula'));\n                    }\n                }\n            }\n            else {\n                _this.endDialog();\n                _this.parent.lastCalcFieldInfo = {};\n                _this.isFormula = false;\n            }\n        });\n    };\n    /* tslint:disable:max-line-length */\n    CalculatedField.prototype.getCalculatedFieldInfo = function () {\n        var field;\n        var dropField = select('#' + this.parentID + 'droppable', document);\n        var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.adaptiveElement.element : this.dialog.element;\n        var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n        field = {\n            name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            caption: this.inputObj.value,\n            formula: dropField.value\n        };\n        if (this.parent.dataType === 'olap') {\n            var formatDrop = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n            var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n            var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n            field.formatString = (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value);\n            if (memberTypeDrop.value === 'Dimension') {\n                field.hierarchyUniqueName = hierarchyDrop.value;\n            }\n        }\n        else {\n            field.formatString = customFormat.value;\n        }\n        return field;\n    };\n    /* tslint:enable:max-line-length */\n    CalculatedField.prototype.updateFormatSettings = function (report, fieldName, formatString) {\n        var newFormat = { name: fieldName, format: formatString, useGrouping: true };\n        var isFormatExist = false;\n        for (var i = 0; i < report.formatSettings.length; i++) {\n            if (report.formatSettings[i].name === fieldName) {\n                if (formatString === 'undefined' || formatString === undefined || formatString === '') {\n                    report.formatSettings.splice(i, 1);\n                    isFormatExist = true;\n                    break;\n                }\n                else {\n                    var formatObj = report.formatSettings[i].properties ?\n                        report.formatSettings[i].properties : report.formatSettings[i];\n                    formatObj.format = formatString;\n                    report.formatSettings.splice(i, 1, formatObj);\n                    isFormatExist = true;\n                    break;\n                }\n            }\n        }\n        if (!isFormatExist && formatString !== '') {\n            report.formatSettings.push(newFormat);\n        }\n    };\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(report));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: report }, true);\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            this.parent.updateDataSource(false);\n            var pivot = (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule) ?\n                this.parent.pivotGridModule : this.parent;\n            if (!(isBlazor() && pivot && pivot.enableVirtualization) && (pivot && pivot.dataSourceSettings.mode !== 'Server')) {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode === 'Fixed' && this.parent.allowDeferLayoutUpdate) {\n                this.parent.pivotChange = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        if (this.dialog) {\n            this.dialog.close();\n        }\n        else {\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n            /* tslint:disable:max-line-length */\n            var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.parentElement : this.dialog.element;\n            this.parent.dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            select('#' + this.parentID + 'droppable', this.parent.dialogRenderer.parentElement).value = '';\n            select('#' + this.parentID + 'Custom_Format_Element', this.parent.dialogRenderer.parentElement).value = '';\n            if (this.parent.dataType === 'olap') {\n                var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n                var formatDrop = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n                var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n                var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n                hierarchyDrop.index = 0;\n                hierarchyDrop.enabled = false;\n                hierarchyDrop.dataBind();\n                customFormat.enabled = false;\n                customFormat.dataBind();\n            }\n            /* tslint:enable:max-line-length */\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        if (isBlazor()) {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.existingReport));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        }\n        if (this.isEdit) {\n            var calcFields = this.parent.dataSourceSettings.calculatedFieldSettings;\n            for (var i = 0; calcFields && i < calcFields.length; i++) {\n                if (calcFields[i].name === this.field) {\n                    calcFields[i].formula = this.currentFormula;\n                    break;\n                }\n            }\n        }\n        else if (this.parent.engineModule.fields) {\n            for (var i = 0; i < this.parent.engineModule.fields.length; i++) {\n                if (this.parent.engineModule.fields[i] === this.field) {\n                    this.parent.engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     * @param  {PivotGrid|PivotFieldList} parent\n     * @returns Object\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            fields = PivotUtil.getClonedData(parent.olapEngineModule.fieldListData ? parent.olapEngineModule.fieldListData : []);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-calcMemberGroupCDB') > -1)) {\n                    item.expanded = this.isEdit;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = (parent.engineModule.fieldList ? Object.keys(parent.engineModule.fieldList) : []); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var type = null;\n                var typeVal = null;\n                if ((parent.engineModule.fieldList[key].type !== 'number' || parent.engineModule.fieldList[key].type === 'include' ||\n                    parent.engineModule.fieldList[key].type === 'exclude') &&\n                    (parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                    typeVal = COUNT;\n                }\n                else {\n                    typeVal = parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                        (parent.engineModule.fieldList[key].aggregateType) : SUM;\n                }\n                type = this.parent.localeObj.getConstant(typeVal);\n                fields.push({\n                    index: parent.engineModule.fieldList[key].index,\n                    name: parent.engineModule.fieldList[key].caption + ' (' + type + ')',\n                    type: typeVal,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: parent.engineModule.fieldList[key].formula,\n                    field: key,\n                    caption: parent.engineModule.fieldList[key].caption ? parent.engineModule.fieldList[key].caption : key\n                });\n            }\n        }\n        return fields;\n    };\n    /**\n     * Triggers before menu opens.\n     * @param  {BeforeOpenCloseMenuEventArgs} args\n     * @returns void\n     */\n    /**\n     * Trigger while drop node in formula field.\n     * @param  {DragAndDropEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dropField = select('#' + this.parentID + 'droppable', this.dialog.element);\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     * @returns void\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (select('#' + this.parentID + 'calculateddialog', document) !== null) {\n            remove(select('#' + this.parentID + 'calculateddialog', document));\n            while (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n                remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n            }\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        }));\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn',\n                    content: this.parent.localeObj.getConstant('clear'),\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        this.dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (select('#' + _this.parentID + 'ddlelement', _this.dialog.element)) {\n                    select('#' + _this.parentID + 'ddlelement', _this.dialog.element).focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: false,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'calculateddialog');\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        this.dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function (args) {\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('createCalculatedField');\n        this.dialog.element.querySelector('.e-dlg-header').\n            setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function (args) {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.treeObj.destroy();\n        this.dialog.destroy();\n        this.newFields = null;\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n        }\n        remove(document.getElementById(this.parentID + 'calculateddialog'));\n        if (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n            remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n        }\n        var timeOut = ((this.parent.getModuleName() === 'pivotview') ||\n            ((this.parent.getModuleName() === 'pivotfieldlist') &&\n                this.parent.renderMode === 'Fixed')) ? 0 : 500;\n        if (this.buttonCall) {\n            this.buttonCall = false;\n            setTimeout(this.setFocus.bind(this), timeOut);\n        }\n    };\n    CalculatedField.prototype.setFocus = function () {\n        var parentElement;\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.element) {\n            parentElement = this.parent.element;\n        }\n        else if (document.getElementById(this.parent.element.id + '_Wrapper')) {\n            parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        }\n        if (parentElement) {\n            var pivotButtons = [].slice.call(parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.currentFieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * To render dialog elements.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var olapCalcDiv = createElement('div', { id: this.parentID + 'Olap_Calc_Div', className: 'e-olap-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn', innerHTML: this.parent.localeObj.getConstant('add'),\n                className: cls.CALCADDBTN, attrs: { 'type': 'button' }\n            });\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn', innerHTML: this.parent.localeObj.getConstant('cancel'),\n                className: cls.CALCCANCELBTN, attrs: { 'type': 'button' }\n            });\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle',\n                    innerHTML: this.parent.localeObj.getConstant('fieldTitle')\n                });\n                olapCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'outerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(inputDiv) : outerDiv.appendChild(inputDiv));\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                        this.parent.localeObj.getConstant('formulaField'))\n                });\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-wrapper' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        width: 220\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            treeOuterDiv.appendChild(createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW }));\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapFieldTreeDiv.appendChild(wrapDiv) : outerDiv.appendChild(wrapDiv));\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                        this.parent.localeObj.getConstant('formula'))\n                });\n                (this.parent.dataType === 'olap' ? olapCalcDiv.appendChild(formulaTitle) : outerDiv.appendChild(formulaTitle));\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA,\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(dropDiv) : outerDiv.appendChild(dropDiv));\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn', innerHTML: this.parent.localeObj.getConstant('apply'),\n                    className: cls.CALCOKBTN, attrs: { 'type': 'button' }\n                });\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('memberType')\n                    });\n                    olapCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(memberTypeDrop) : olapCalcDiv.appendChild(memberTypeDrop));\n                if (!this.parent.isAdaptive) {\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('selectedHierarchy')\n                    });\n                    olapCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', { id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(hierarchyDrop) : olapCalcDiv.appendChild(hierarchyDrop));\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    olapCalcDiv.appendChild(formatTitle);\n                }\n                var formatDrop = createElement('div', { id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(formatDrop) : olapCalcDiv.appendChild(formatDrop));\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.OLAP_CALC_CUSTOM_FORMAT_INPUTDIV });\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                olapCalcDiv.appendChild(customFormatDiv);\n                (this.parent.isAdaptive ? outerDiv.appendChild(customFormatDiv) : olapCalcDiv.appendChild(customFormatDiv));\n                if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                    var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                    outerDiv.appendChild(okBtn);\n                }\n                else {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                    outerDiv.appendChild(olapCalcDiv);\n                }\n            }\n            else {\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.CALC_CUSTOM_FORMAT_INPUTDIV });\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    customFormatDiv.appendChild(formatTitle);\n                }\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                (this.parent.isAdaptive ? outerDiv.insertBefore(customFormatDiv, select('#' + this.parentID + 'buttonDiv', outerDiv)) : outerDiv.appendChild(customFormatDiv));\n            }\n        }\n        return outerDiv;\n    };\n    /**\n     * To create calculated field adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function (isEdit) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement;\n        if (isEdit) {\n            if (select('#' + this.parentID + 'droppable', dialogElement.element)) {\n                this.formulaText = select('#' + this.parentID + 'droppable', document).value;\n                this.fieldText = this.inputObj.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n                var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement.element), DropDownList);\n                this.fieldType = memberTypeDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n                var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement.element), DropDownList);\n                this.parentHierarchy = this.fieldType === 'Dimension' ? hierarchyDrop.value : null;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n                var formatDrop = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement.element), DropDownList);\n                this.formatType = formatDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n                var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement.element), MaskedTextBox);\n                this.formatText = this.parent.dataType === 'olap' ? this.formatType === 'Custom' ? customFormat.value : null : customFormat.value;\n            }\n        }\n        else {\n            this.currentFieldName = this.formulaText = this.fieldText = this.formatText = null;\n            this.fieldType = this.formatType = this.parentHierarchy = null;\n        }\n        this.renderMobileLayout(dialogElement);\n    };\n    /**\n     * To update calculated field info in adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.updateAdaptiveCalculatedField = function (isEdit, fieldName) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement.element;\n        this.isEdit = isEdit;\n        var calcInfo = (isEdit ? (this.parent.dataType === 'pivot' ?\n            this.parent.engineModule.fieldList[fieldName] : this.parent.olapEngineModule.fieldList[fieldName]) :\n            {\n                id: null, caption: null, formula: null, fieldType: 'Measure',\n                formatString: (this.parent.dataType === 'pivot' ? null : 'Standard'), parentHierarchy: null\n            });\n        this.currentFieldName = calcInfo.id;\n        if (select('#' + this.parentID + 'droppable', document)) {\n            this.formulaText = select('#' + this.parentID + 'droppable', document).value = calcInfo.formula;\n            this.fieldText = this.inputObj.value = calcInfo.caption;\n            this.inputObj.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n            var memberTypeDrop = getInstance(select('#' + this.parentID + 'Member_Type_Div', dialogElement), DropDownList);\n            this.fieldType = memberTypeDrop.value = calcInfo.fieldType;\n            memberTypeDrop.readonly = isEdit ? true : false;\n            memberTypeDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n            var hierarchyDrop = getInstance(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement), DropDownList);\n            if (this.fieldType === 'Dimension') {\n                this.parentHierarchy = hierarchyDrop.value = calcInfo.parentHierarchy;\n            }\n            else {\n                this.parentHierarchy = null;\n                hierarchyDrop.index = 0;\n            }\n            hierarchyDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n            var formatStringData = ['Standard', 'Currency', 'Percent'];\n            var formatDrop = getInstance(select('#' + this.parentID + 'Format_Div', dialogElement), DropDownList);\n            this.formatType = formatDrop.value = (formatStringData.indexOf(calcInfo.formatString) > -1 ? calcInfo.formatString : 'Custom');\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n            var customFormat = getInstance(select('#' + this.parentID + 'Custom_Format_Element', dialogElement), MaskedTextBox);\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            if (this.parent.dataType === 'pivot') {\n                this.formatText = customFormat.value = formatObj ? formatObj.format : null;\n            }\n            else {\n                this.formatText = customFormat.value = (this.formatType === 'Custom' ? calcInfo.formatString : null);\n            }\n            customFormat.dataBind();\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createOlapDropElements = function () {\n        var _this = this;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : this.dialog.element);\n        var mData = [];\n        var fData = [];\n        var fieldData = [];\n        var memberTypeData = ['Measure', 'Dimension'];\n        var formatStringData = ['Standard', 'Currency', 'Percent', 'Custom'];\n        for (var _i = 0, memberTypeData_1 = memberTypeData; _i < memberTypeData_1.length; _i++) {\n            var type = memberTypeData_1[_i];\n            mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n        }\n        for (var _a = 0, formatStringData_1 = formatStringData; _a < formatStringData_1.length; _a++) {\n            var format = formatStringData_1[_a];\n            fData.push({ value: format, text: this.parent.localeObj.getConstant(format) });\n        }\n        var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        for (var _b = 0, _c = fields; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (item.spriteCssClass &&\n                (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                    item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                fieldData.push({ value: item.id, text: item.caption });\n            }\n        }\n        var memberTypeObj = new DropDownList({\n            dataSource: mData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.fieldType !== null ? this.fieldType : mData[0].value,\n            readonly: this.isEdit,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                hierarchyListObj.enabled = args.value === 'Dimension' ? true : false;\n                _this.fieldType = args.value;\n                _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                hierarchyListObj.dataBind();\n            }\n        });\n        memberTypeObj.isStringTemplate = true;\n        memberTypeObj.appendTo(select('#' + this.parentID + 'Member_Type_Div', dialogElement));\n        var hierarchyListObj = new DropDownList({\n            dataSource: fieldData, enableRtl: this.parent.enableRtl,\n            allowFiltering: true,\n            enabled: memberTypeObj.value === 'Dimension' ? true : false,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n            fields: { value: 'value', text: 'text' },\n            value: this.parentHierarchy !== null && memberTypeObj.value === 'Dimension' ?\n                this.parentHierarchy : fieldData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                _this.parentHierarchy = args.value;\n                _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n            }\n        });\n        hierarchyListObj.isStringTemplate = true;\n        hierarchyListObj.appendTo(select('#' + this.parentID + 'Hierarchy_List_Div', dialogElement));\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.formatType !== null ? this.formatType : fData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                _this.formatType = args.value;\n                _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(select('#' + this.parentID + 'Format_Div', dialogElement));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            value: this.formatText !== null && formatStringObj.value === 'Custom' ? this.formatText : null,\n            enabled: formatStringObj.value === 'Custom' ? true : false,\n            change: function (args) {\n                _this.formatText = args.value;\n                _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n            }\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                /* tslint:disable-next-line:max-line-length */\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None'\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                keyPress: function (args) {\n                    if (args.event.keyCode === 39) {\n                        args.cancel = true;\n                    }\n                },\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parentID + 'tree');\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-dimensionCDB-icon,.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            dragItem.style.zIndex = (this.dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     * @param  {DrawNodeEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatStringData = ['Standard', 'Currency', 'Percent'];\n                var formatString = void 0;\n                formatString = (field.formatString ? formatStringData.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : '');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customString', (formatString === 'Custom' ? field.formatString : ''));\n                var removeElement = createElement('span', {\n                    className: cls.GRID_REMOVE + ' e-icons e-list-icon'\n                });\n                liTextElement.classList.add('e-calcfieldmember');\n                if (this.parent.isAdaptive) {\n                    var editElement = createElement('span', {\n                        className: 'e-list-edit-icon' + (this.isEdit && this.currentFieldName === field.id ?\n                            ' e-edited ' : ' e-edit ') + cls.ICON\n                    });\n                    var editWrapper = createElement('div', { className: 'e-list-header-icon' });\n                    editWrapper.appendChild(editElement);\n                    editWrapper.appendChild(removeElement);\n                    liTextElement.appendChild(editWrapper);\n                }\n                else {\n                    liTextElement.appendChild(removeElement);\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var formatObj = PivotUtil.getFieldByName(field, this.parent.dataSourceSettings.formatSettings);\n            args.node.setAttribute('data-formatString', formatObj ? formatObj.format : '');\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            var spaceElement = createElement('div', {\n                className: ' e-iconspace'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            /* tslint:disable-next-line:max-line-length */\n            append([spaceElement, args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.getMenuItems(this.parent.engineModule.fieldList[field].type).length <= 0) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('remove'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.GRID_REMOVE);\n                addClass([args.node.querySelector('.' + 'e-iconspace')], [cls.CALC_EDIT, cls.ICON, 'e-list-icon']);\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('aria-disabled', 'false');\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('tabindex', '-1');\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n                removeClass([args.node.querySelector('.e-iconspace')], 'e-iconspace');\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     * @param  {string} key\n     * @returns HTMLElement\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n        var type = this.getMenuItems(this.parent.engineModule.fieldList[key].type);\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + key + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key, 'data-value': type[i] },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    CalculatedField.prototype.getMenuItems = function (fieldType, summaryType) {\n        var menuItems = !isNullOrUndefined(summaryType) ? summaryType : this.parent.aggregateTypes;\n        var type = [];\n        var menuTypes = this.getValidSummaryType();\n        for (var i = 0; i < menuItems.length; i++) {\n            if ((menuTypes.indexOf(menuItems[i]) > -1) && (type.indexOf(menuItems[i]) < 0)) {\n                if (((menuItems[i] === COUNT || menuItems[i] === DISTINCTCOUNT) && fieldType !== 'number')\n                    || (fieldType === 'number')) {\n                    type.push(menuItems[i]);\n                }\n            }\n        }\n        return type;\n    };\n    CalculatedField.prototype.getValidSummaryType = function () {\n        return [COUNT, DISTINCTCOUNT, SUM, AVG,\n            MIN, MAX, PRODUCT, STDEV, STDEVP,\n            VAR, VARP];\n    };\n    /**\n     * To get Accordion Data.\n     * @param  {PivotView | PivotFieldList} parent\n     * @returns AccordionItemModel\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var data = [];\n        var keys = Object.keys(parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            data.push({\n                header: '<input id=' + this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=' + this.parent.engineModule.fieldList[key].caption + ' data-type=' +\n                    this.parent.engineModule.fieldList[key].type + '/>',\n                content: (this.parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    (this.getMenuItems(this.parent.engineModule.fieldList[key].type).length < 1)) ? '' :\n                    this.createTypeContainer(key).outerHTML,\n                iconCss: this.parent.engineModule.fieldList[key].aggregateType === CALC ? 'e-list-icon' + ' ' +\n                    (this.isEdit && this.currentFieldName === key ? 'e-edited' : 'e-edit') : ''\n            });\n        }\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     * @param  {Tab} tabObj\n     * @returns void\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        var _this = this;\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        if (this.parent.dataType === 'olap' && this.parent.isAdaptive && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null) {\n            this.createOlapDropElements();\n        }\n        var cancelBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo('#' + this.parentID + 'cancelBtn');\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({ cssClass: cls.FLAT + ' ' + cls.OUTLINE_CLASS, isPrimary: true });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo('#' + this.parentID + 'okBtn');\n            this.inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName'),\n                change: function (args) {\n                    _this.fieldText = args.value;\n                    _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                }\n            });\n            this.inputObj.isStringTemplate = true;\n            this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n            if (this.parent.dataType === 'pivot') {\n                var formatInputObj = new MaskedTextBox({\n                    placeholder: this.parent.localeObj.getConstant('numberFormatString'),\n                    change: function (args) {\n                        _this.formatText = args.value;\n                        _this.formulaText = select('#' + _this.parentID + 'droppable', document).value;\n                    }\n                });\n                formatInputObj.isStringTemplate = true;\n                formatInputObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n                if (this.formatText !== null && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT) !== null) {\n                    this.parent.\n                        /* tslint:disable-next-line:max-line-length */\n                        dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT).value = this.formatText;\n                    formatInputObj.value = this.formatText;\n                }\n            }\n            if (this.formulaText !== null && select('#' + this.parentID + 'droppable', this.parent.dialogRenderer.parentElement) !== null) {\n                var drop = select('#' + this.parentID + 'droppable', this.parent.dialogRenderer.parentElement);\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                this.inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo('#' + this.parentID + 'addBtn');\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    /* tslint:disable-next-line:max-line-length */\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    nodeClicked: this.fieldClickHandler.bind(this),\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this),\n                    nodeSelected: function (args) {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo('#' + this.parentID + 'accordDiv');\n            }\n            else {\n                this.accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    expanding: this.accordionExpand.bind(this),\n                    clicked: this.accordionClickHandler.bind(this),\n                    created: this.accordionCreated.bind(this)\n                });\n                this.accordion.isStringTemplate = true;\n                this.accordion.appendTo('#' + this.parentID + 'accordDiv');\n                this.updateType();\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            var keys = Object.keys(this.parent.engineModule.fieldList);\n            for (var index = 0, i = keys.length; index < i; index++) {\n                var key = keys[index];\n                var type = this.parent.engineModule.fieldList[key].type !== 'number' ? [COUNT, DISTINCTCOUNT] :\n                    [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton = void 0;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i_1 = 0; i_1 < type.length; i_1++) {\n                        radiobutton = new RadioButton({\n                            label: this.parent.localeObj.getConstant(type[i_1]),\n                            name: AGRTYPE + key,\n                            checked: args.element.querySelector('[data-type').getAttribute('data-type') === type[i_1],\n                            change: this.onChange.bind(this),\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo('#' + this.parentID + 'radio' + key + type[i_1]);\n                    }\n                }\n            }\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.parentElement.querySelector('.e-label')\n            .innerText;\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', args.event.target.getAttribute('data-value'));\n    };\n    CalculatedField.prototype.updateType = function () {\n        var keys = Object.keys(this.parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            var type = null;\n            if ((this.parent.engineModule.fieldList[key].type !== 'number' ||\n                this.parent.engineModule.fieldList[key].type === 'include' ||\n                this.parent.engineModule.fieldList[key].type === 'exclude') &&\n                (this.parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                type = COUNT;\n            }\n            else {\n                type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                    this.parent.engineModule.fieldList[key].aggregateType : SUM;\n            }\n            var checkbox = new CheckBox({\n                label: this.parent.engineModule.fieldList[key].caption + ' (' + this.parent.localeObj.getConstant(type) + ')'\n            });\n            checkbox.isStringTemplate = true;\n            checkbox.appendTo('#' + this.parentID + '_' + index);\n            select('#' + this.parentID + '_' + index, document).setAttribute('data-field', key);\n            select('#' + this.parentID + '_' + index, document).setAttribute('data-type', type);\n        }\n    };\n    /**\n     * Trigger while click cancel button.\n     * @returns void\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     * @returns void\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function (args) {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout(args && args.edit !== undefined ? args.edit : true);\n            this.isEdit = (args && args.edit !== undefined ? args.edit : this.isEdit);\n        }\n        else if (!this.parent.isAdaptive) {\n            this.isEdit = (args && args.edit !== undefined ? args.edit : false);\n            this.renderDialogLayout();\n            if (args && args.edit) {\n                var target = this.treeObj.element.querySelector('li[data-field=\"' + args.fieldName + '\"]');\n                if (target) {\n                    addClass([target], ['e-active', 'e-node-focus']);\n                    target.setAttribute('aria-selected', 'true');\n                    target.id = this.treeObj.element.id + '_active';\n                    if (this.parent.dataType === 'pivot') {\n                        /* tslint:disable-next-line */\n                        var e = { event: { target: target.querySelector('.e-list-icon.e-edit.e-icons') } };\n                        this.fieldClickHandler(e);\n                    }\n                    else {\n                        this.displayMenu(target);\n                    }\n                }\n            }\n            this.dialog.element.style.top = parseInt(this.dialog.element.style.top, 10) < 0 ? '0px' : this.dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        this.dialog.content = this.renderDialogElements();\n        this.dialog.refresh();\n        this.inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName')\n        });\n        this.inputObj.isStringTemplate = true;\n        this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n        if (this.parent.dataType === 'pivot') {\n            var customerFormatObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('numberFormatString')\n            });\n            customerFormatObj.isStringTemplate = true;\n            customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n        }\n        if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        this.createTreeView();\n        this.droppable = new Droppable(select('#' + this.parentID + 'droppable'));\n        this.keyboardEvents = new KeyboardEvents(this.parent.calculatedFieldModule.dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter', shiftE: 'shift+E', delete: 'delete' },\n            eventName: 'keydown'\n        });\n    };\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createConfirmDialog\n     * @return {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createConfirmDialog = function (title, description, calcInfo, isRemove, node) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        /* tslint:disable:max-line-length */\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: isRemove ? this.removeCalcField.bind(this, node) : this.replaceFormula.bind(this, calcInfo),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + ' ' + cls.FLAT_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('yes') : this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.removeErrorDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('no') : this.parent.localeObj.getConstant('cancel'), isPrimary: true\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this),\n        });\n        /* tslint:enable:max-line-length */\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        // this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    CalculatedField.prototype.replaceFormula = function (calcInfo) {\n        var report = this.parent.dataSourceSettings;\n        if (this.parent.dataType === 'olap') {\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                    if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                    }\n                    report.calculatedFieldSettings[j].formatString = calcInfo.formatString;\n                    report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === calcInfo.name) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                            this.updateFormatSettings(report, calcInfo.name, calcInfo.formatString);\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, calcInfo.name);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        if (document.getElementById(this.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parentID + '_ErrorDialog').parentElement);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /** Constructor for Field List module */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldlist';\n    };\n    FieldList.prototype.initiateModule = function () {\n        this.element = createElement('div', {\n            id: this.parent.element.id + '_PivotFieldList',\n            styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                ';display:none'\n        });\n        var containerWrapper = createElement('div', {\n            id: this.parent.element.id + 'containerwrapper',\n            styles: 'height:' + this.parent.element.parentElement.getBoundingClientRect().height + 'px'\n        });\n        this.parent.element.parentElement.appendChild(containerWrapper);\n        containerWrapper.appendChild(this.element);\n        containerWrapper.appendChild(this.parent.element);\n        this.parent.pivotFieldListModule = new PivotFieldList({\n            dataSourceSettings: {\n                providerType: this.parent.dataSourceSettings.providerType,\n                rows: [],\n                columns: [],\n                values: [],\n                filters: []\n            },\n            spinnerTemplate: this.parent.spinnerTemplate,\n            allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n            renderMode: 'Popup',\n            allowCalculatedField: this.parent.allowCalculatedField,\n            showValuesButton: this.parent.showValuesButton,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            target: this.parent.element.parentElement,\n            aggregateTypes: this.parent.aggregateTypes,\n            maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n            aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n        });\n        this.parent.pivotFieldListModule.isPopupView = true;\n        this.parent.pivotFieldListModule.pivotGridModule = this.parent;\n        this.parent.pivotFieldListModule.appendTo('#' + this.element.id);\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.element) {\n            this.element.style.display = 'block';\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else if (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)))) {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth && (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS))))) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateModule,\n            update: this.updateControl\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.update, this);\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.update);\n    };\n    /**\n     * To destroy the Field List\n     * @return {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule) {\n            this.parent.pivotFieldListModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import { PivotButton } from '../actions/pivot-button';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, prepend } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the grouping bar pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        /* tslint:disable:no-any */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        this.createPivotButtons();\n        var pivotButtons = [];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!element.classList.contains(cls.GROUP_CHART_ROW)) {\n                pivotButtons = pivotButtons.concat([].slice.call(element.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n            }\n        }\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            var indentDiv = createElement('span', {\n                className: 'e-indent-div',\n                styles: 'width:' + j * indentWidth + 'px'\n            });\n            prepend([indentDiv], pivotButtons[j]);\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.'\n            + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if ((this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) ||\n                (this.parent.dataSourceSettings.columns.length > 0 ? !element.classList.contains(cls.GROUP_CHART_COLUMN) : true)) {\n                element.innerHTML = '';\n            }\n        }\n        /* tslint:enable:no-any */\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        var count = axis.length;\n        for (var i = 0, lnt = fields.length; i < lnt; i++) {\n            if (fields[i]) {\n                var args = {\n                    field: fields[i],\n                    axis: axis[i].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass, select } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingbar';\n    };\n    /** @hidden */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(this.leftAxisPanel);\n        this.groupingTable.appendChild(this.rightAxisPanel);\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    /* tslint:disable-next-line:no-any */\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (select('#' + this.parent.element.id + '_chart', this.parent.element)) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, select('#' + this.parent.element.id + '_chart', this.parent.element));\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                /* tslint:disable:no-any */\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                /* tslint:enable:no-any */\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                if (columns[cCnt].width != \"auto\") {\n                    columns[cCnt].width = width;\n                }\n                else {\n                    columns[cCnt].minWidth = width;\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass, select } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.fieldsDropDown = [];\n        this.conditionsDropDown = [];\n        this.fontNameDropDown = [];\n        this.fontSizeDropDown = [];\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalformatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (select('#' + this.parentID + 'conditionalformatting', document) !== null) {\n            remove(select('#' + this.parentID + 'conditionalformatting', document));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n        }));\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON,\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition'),\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_APPLY_BUTTON,\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_CANCEL_BUTTON,\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.isAdaptive) {\n            this.dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, header: this.parent.localeObj.getConstant('conditionalFormating'), target: document.body\n            });\n        }\n        else {\n            this.dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, isModal: false, closeOnEscape: true, enableRtl: this.parent.enableRtl,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormating'), target: this.parent.element\n            });\n        }\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'conditionalformatting');\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function (args) {\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).\n            setAttribute('title', this.parent.localeObj.getConstant('conditionalFormating'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var _this = this;\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            _this.destroyColorPickers();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            this.parent.renderPivotGrid();\n            this.dialog.close();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        this.dialog.close();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (select('#' + this.parentID + 'conditionvalue1' + i, document).value === '' ||\n                select('#' + this.parentID + 'conditionvalue2' + i, document).value === '') {\n                select('#' + this.parentID + 'conditionvalue1' + i, document).value === '' ?\n                    select('#' + this.parentID + 'conditionvalue1' + i, document).focus() :\n                    select('#' + this.parentID + 'conditionvalue2' + i, document).focus();\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(select('#' + this.parentID + 'conditionvalue1' + i, document).value);\n            this.newFormat[i].value2 =\n                Number(select('#' + this.parentID + 'conditionvalue2' + i, document).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                className: cls.EMPTY_FORMAT,\n                innerHTML: this.parent.localeObj.getConstant('emptyFormat')\n            });\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        this.dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { type: 'button', 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.FORMAT_INNER });\n            var table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            var tRow = createElement('tr');\n            var td = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('value')\n            });\n            td.appendChild(valuelabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            measureDropdown.appendChild(measureInput);\n            td.appendChild(measureDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            td.appendChild(conditionDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var style = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ? 'display:none; width:10px' : '';\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: this.parent.isAdaptive ? style === '' ? 'width: 35%' : 'width: 100%' : style === '' ? 'width: 45px' :\n                    'width: 120px',\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE1\n            });\n            td.appendChild(value1);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i, className: cls.FORMAT_VALUE_SPAN,\n                innerHTML: '&', styles: style\n            });\n            td.appendChild(valuespan);\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: (this.parent.isAdaptive && style === '') ? 'width: 35%' : style === '' ? 'width: 45px' : style,\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE2\n            });\n            td.appendChild(value2);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            if (this.parent.isAdaptive) {\n                innerDiv.appendChild(table);\n                table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            }\n            tRow = createElement('tr');\n            td = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('formatLabel')\n            });\n            td.appendChild(formatlabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            td.appendChild(fontNameDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            td.appendChild(fontSizeDropdown);\n            tRow.appendChild(td);\n            if (this.parent.isAdaptive) {\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n            }\n            td = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_FONT_COLOR\n            });\n            td.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_BACK_COLOR\n            });\n            td.appendChild(colorPicker2);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var valuePreview = createElement('div', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                innerHTML: '123.45',\n            });\n            td.appendChild(valuePreview);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            innerDiv.appendChild(table);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            fields.push({\n                index: i_1 + 1,\n                name: this.parent.dataSourceSettings.values[i_1].caption || this.parent.dataSourceSettings.values[i_1].name,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        this.fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.measureChange.bind(this, i)\n        });\n        this.fieldsDropDown[i].isStringTemplate = true;\n        this.fieldsDropDown[i].appendTo('#' + this.parentID + 'measureinput' + i);\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        this.conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.conditionChange.bind(this, i)\n        });\n        this.conditionsDropDown[i].isStringTemplate = true;\n        this.conditionsDropDown[i].appendTo('#' + this.parentID + 'conditioninput' + i);\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        this.fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupWidth: '150px', popupHeight: '200px',\n            change: this.fontNameChange.bind(this, i)\n        });\n        this.fontNameDropDown[i].isStringTemplate = true;\n        this.fontNameDropDown[i].appendTo('#' + this.parentID + 'fontnameinput' + i);\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        this.fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px',\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            change: this.fontSizeChange.bind(this, i)\n        });\n        this.fontSizeDropDown[i].isStringTemplate = true;\n        this.fontSizeDropDown[i].appendTo('#' + this.parentID + 'fontsizeinput' + i);\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            select('#' + this.parentID + 'valuespan' + i, document).style.display = 'inline-block';\n            select('#' + this.parentID + 'valuespan' + i, document).style.width =\n                this.parent.isAdaptive ? '10%' : '10px';\n            select('#' + this.parentID + 'conditionvalue2' + i, document).style.display = 'inline-block';\n            select('#' + this.parentID + 'conditionvalue2' + i, document).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n            select('#' + this.parentID + 'conditionvalue1' + i, document).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n        }\n        else {\n            select('#' + this.parentID + 'valuespan' + i, document).style.display = 'none';\n            select('#' + this.parentID + 'conditionvalue2' + i, document).style.display = 'none';\n            select('#' + this.parentID + 'conditionvalue1' + i, document).style.width =\n                this.parent.isAdaptive ? '100%' : '120px';\n        }\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        select('#' + this.parentID + 'valuepreview' + i, document).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + ' ' + cls.FORMAT_FONT_COLOR_PICKER,\n            value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i)\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo('#' + this.parentID + 'fontcolor' + i);\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        select('#' + this.parentID + 'valuepreview' + i, document).style.backgroundColor = color;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontFamily = format.style.fontFamily;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i)\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo('#' + this.parentID + 'backgroundcolor' + i);\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo('#' + this.parentID + 'removeButton' + i);\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        select('#' + this.parentID + 'valuepreview' + i, document).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.destroyColorPickers();\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     * @returns boolean\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     * @returns { r: number, g: number, b: number } | null\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     * @returns string\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        else if (colour.search('rgba') === 0) {\n            var value = colour.substr(5).split(')')[0].split(',');\n            var rgb = '';\n            var a = '';\n            for (var i = 0; i < value.length - 1; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            a = (Math.round(+value[3] * 255)).toString(16);\n            return '#' + rgb + a;\n        }\n        else if (colour.search('rgb') === 0) {\n            var value = colour.substr(4).split(')')[0].split(',');\n            var rgb = '';\n            for (var i = 0; i < value.length; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            return '#' + rgb;\n        }\n        return '#d5d5d5';\n    };\n    ConditionalFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.destroyColorPickers();\n            this.dialog.destroy();\n        }\n        if (select('#' + this.parentID + 'conditionalformatting', document)) {\n            remove(select('#' + this.parentID + 'conditionalformatting', document));\n        }\n    };\n    ConditionalFormatting.prototype.destroyColorPickers = function () {\n        for (var i = 0; i < (this.newFormat ? this.newFormat.length : 0); i++) {\n            if (this.fontColor && this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                this.fontColor[i].destroy();\n            }\n            if (this.backgroundColor && this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                this.backgroundColor[i].destroy();\n            }\n        }\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     * @returns void\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        this.dialog.refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     * @returns void\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.close();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, isBlazor, getInstance, addClass, removeClass, select } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { Deferred } from '@syncfusion/ej2-data';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        /** @hidden */\n        this.isMultiAxisChange = false;\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (select('#' + this.parent.element.id + 'pivot-toolbar', document) !== null) {\n            remove(select('#' + this.parent.element.id + 'pivot-toolbar', document));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element)) {\n            this.parent.element.insertBefore(element, select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element));\n        }\n        else if (this.parent.showGroupingBar &&\n            select('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar', this.parent.element)) {\n            this.parent.element.insertBefore(element, select('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar', this.parent.element));\n        }\n        else {\n            this.parent.element.insertBefore(element, select('#' + this.parent.element.id + '_grid', this.parent.element));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            items: this.getItems(),\n            allowKeyboard: false,\n            width: !this.parent.gridSettings.allowAutoResizing ? (this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2)) : 'auto'\n        });\n        this.toolbar.isStringTemplate = true;\n        var viewStr = 'viewContainerRef';\n        var registerTemp = 'registeredTemplate';\n        if (this.parent[viewStr]) {\n            this.toolbar[registerTemp] = {};\n            this.toolbar[viewStr] = this.parent[viewStr];\n        }\n        if (this.parent.toolbarTemplate && typeof (this.parent.toolbarTemplate) === 'string') {\n            this.toolbar.appendTo(this.parent.toolbarTemplate);\n            this.parent.element.replaceChild(this.toolbar.element, this.parent.element.querySelector('.' + cls.GRID_TOOLBAR));\n            this.toolbar.element.classList.add(cls.GRID_TOOLBAR);\n        }\n        else {\n            this.toolbar.appendTo('#' + this.parent.element.id + 'pivot-toolbar');\n            this.toolbar.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n        }\n        if (this.parent.chart) {\n            this.parent.chart.setProperties({ width: this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString() }, true);\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        /* tslint:disable:no-any */\n        var reports = { reportName: [] };\n        var tool = this;\n        if (isBlazor()) {\n            reports = this.fetchReportsArgs();\n            reports.then(function (e) {\n                tool.reportList.dataSource = e.reportName;\n                return e;\n            });\n        }\n        else {\n            /* tslint:enable:no-any */\n            this.parent.trigger(events.fetchReport, reports);\n        }\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    /* tslint:disable */\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    var toDisable = this.parent.displayOption.view === 'Chart';\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                        id: this.parent.element.id + 'grid', cssClass: toDisable ? cls.MENU_DISABLE : '',\n                        click: this.menuItemClick.bind(this)\n                    });\n                    break;\n                case 'Chart':\n                    var validTypes = (this.parent.displayOption.view === 'Table');\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                        id: this.parent.element.id + 'chartmenu', cssClass: validTypes ? cls.MENU_DISABLE : ''\n                    });\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType === 'olap') {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n                default:\n                    if (typeof (item) === 'object') {\n                        items.push(item);\n                    }\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf('FieldList') === -1 && select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element) &&\n            select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element).style.display === 'none') {\n            select('#' + this.parent.element.id + '_PivotFieldList', this.parent.element).style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    /* tslint:enable */\n    Toolbar.prototype.reportChange = function (args) {\n        this.dropArgs = args;\n        if (this.parent.isModified && this.currentReport !== '') {\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n        }\n        else {\n            this.reportLoad(args);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this_1 = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this_1.currentReport = observedArgs.reportName;\n                _this_1.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else if (this.currentReport === '' && (args.item.id === (this.parent.element.id + 'save') || args.item.id === (this.parent.element.id + 'saveas'))) {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function (args) {\n        if (!(this.mdxDialog && !this.mdxDialog.isDestroyed)) {\n            this.renderMDXDialog();\n        }\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            innerHTML: this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim(),\n            attrs: { 'readonly': 'readonly' }\n        });\n        outerDiv.appendChild(textarea);\n        this.mdxDialog.content = outerDiv;\n        this.mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        if (args) {\n            this.dialog.header = args.item.tooltipText;\n            var outerDiv = createElement('div', {\n                className: cls.GRID_REPORT_OUTER\n            });\n            var label = createElement('div', {\n                className: cls.GRID_REPORT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('reportName')\n            });\n            var input = createElement('input', {\n                className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n                innerHTML: (action && action === 'rename' ? this.currentReport : ''),\n                attrs: {\n                    'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                    'value': (action && action === 'rename' ? this.currentReport : '')\n                },\n            });\n            input.setSelectionRange(input.textContent.length, input.textContent.length);\n            outerDiv.appendChild(label);\n            outerDiv.appendChild(input);\n            this.dialog.content = outerDiv;\n            this.dialog.refresh();\n            this.dialog.show();\n        }\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        switch (args.item.id) {\n            case (this.parent.element.id + 'save'):\n            case (this.parent.element.id + 'saveas'):\n                this.saveReport(args);\n                break;\n            case (this.parent.element.id + 'remove'):\n                this.action = 'Remove';\n                if (this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                }\n                else {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                }\n                return;\n            case (this.parent.element.id + 'rename'):\n                this.renameReport(args);\n                break;\n            case (this.parent.element.id + 'new'):\n                this.action = 'New';\n                this.newArgs = args;\n                if (this.parent.isModified && this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                }\n                else {\n                    this.createNewReport(args);\n                }\n                break;\n            case (this.parent.element.id + 'load'):\n                this.action = 'Load';\n                break;\n            case (this.parent.element.id + 'fieldlist'):\n                if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                    this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.show();\n                }\n                break;\n            case (this.parent.element.id + 'formatting'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'mdxQuery'):\n                this.mdxQueryDialog(args);\n                break;\n            case (this.parent.element.id + 'numberFormatting'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (select('#' + this.parent.element.id + 'report-dialog', document) !== null) {\n            remove(select('#' + this.parent.element.id + 'report-dialog', document));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        }));\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parent.element.id + 'report-dialog');\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (select('#' + this.parent.element.id + 'mdx-dialog', document) !== null) {\n            remove(select('#' + this.parent.element.id + 'mdx-dialog', document));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        }));\n        this.mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.mdxDialog.isStringTemplate = true;\n        this.mdxDialog.appendTo('#' + this.parent.element.id + 'mdx-dialog');\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var textArea = this.mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var reportInput = this.dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        if ((this.dialog.header === this.parent.localeObj.getConstant('save') ||\n            this.dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'Save';\n            this.currentReport = reportInput.value;\n            var isExist_1 = false;\n            /* tslint:disable */\n            var _this_2 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_1 = true;\n                        break;\n                    }\n                }\n                if (isExist_1) {\n                    _this_2.createConfirmDialog(_this_2.parent.localeObj.getConstant('alert'), _this_2.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_2.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var saveArgs = {\n                    report: _this_2.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_2.parent.trigger(events.saveReport, saveArgs);\n                _this_2.parent.isModified = false;\n                _this_2.updateReportList();\n                _this_2.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('new') &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'New';\n            this.currentReport = reportInput.value;\n            var isExist_2 = false;\n            /* tslint:disable */\n            var _this_3 = this;\n            /* tslint:enable */\n            var reports_1 = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports_1, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === reports_1.reportName[i]) {\n                        isExist_2 = true;\n                        break;\n                    }\n                }\n                if (isExist_2) {\n                    _this_3.createConfirmDialog(_this_3.parent.localeObj.getConstant('alert'), _this_3.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_3.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                _this_3.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    _this_3.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: _this_3.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_3.parent.trigger(events.saveReport, saveArgs);\n                _this_3.parent.isModified = false;\n                _this_3.updateReportList();\n                _this_3.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            if (this.currentReport === reportInput.value) {\n                this.dialog.hide();\n                return;\n            }\n            this.action = 'Rename';\n            var isExist_3 = false;\n            /* tslint:disable */\n            var _this_4 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_4.renameText = reportInput.value;\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_3 = true;\n                        break;\n                    }\n                }\n                if (isExist_3) {\n                    _this_4.createConfirmDialog(_this_4.parent.localeObj.getConstant('alert'), _this_4.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_4.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var renameArgs = {\n                    reportName: _this_4.currentReport,\n                    rename: reportInput.value\n                };\n                _this_4.parent.trigger(events.renameReport, renameArgs);\n                _this_4.currentReport = reportInput.value;\n                _this_4.updateReportList();\n                _this_4.dialog.hide();\n            });\n        }\n    };\n    Toolbar.prototype.createNewReport = function (args) {\n        this.dialogShow(args);\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        this.dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('yes'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('no'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        var _this_1 = this;\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.removeReport, removeArgs);\n            var reports = this.fetchReports();\n            if (reports.reportName && reports.reportName.length > 0) {\n                var loadArgs = {\n                    reportName: reports.reportName[reports.reportName.length - 1]\n                };\n                this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                    _this_1.currentReport = observedArgs.reportName;\n                    _this_1.parent.isModified = false;\n                });\n                this.currentReport = reports.reportName[reports.reportName.length - 1];\n            }\n            else {\n                this.currentReport = '';\n                this.parent.isModified = false;\n                this.action = '';\n            }\n            this.updateReportList();\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '' && this.parent.isModified) {\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.createNewReport(this.newArgs);\n                }\n                else {\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else if (this.action === 'New') {\n                this.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                this.updateReportList();\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: this.renameText,\n                isReportExists: true\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = this.renameText;\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        this.confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        if (this.action === 'New') {\n            if (this.parent.isModified) {\n                this.createNewReport(this.newArgs);\n            }\n            else {\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            this.currentReport = this.reportList.value;\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            this.dialog.hide();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        this.confirmPopUp.hide();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.createChartMenu = function () {\n        var _this_1 = this;\n        if (select('#' + this.parent.element.id + 'chart_menu', document)) {\n            var menuItems = [];\n            var types = this.getValidChartType();\n            for (var i = 0; (i < types.length && i < 7); i++) {\n                var type = types[i];\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant(type.toLowerCase()),\n                    id: this.parent.element.id + '_' + type,\n                });\n            }\n            if (menuItems.length === 7) {\n                menuItems.splice(6);\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant('MoreOption'),\n                    id: this.parent.element.id + '_' + 'ChartMoreOption',\n                });\n            }\n            var toDisable = (menuItems.length <= 0 || this.parent.displayOption.view === 'Table');\n            menuItems.push({\n                separator: true\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('multipleAxes'),\n                id: this.parent.element.id + '_' + 'multipleAxes'\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('showLegend'),\n                id: this.parent.element.id + '_' + 'showLegend'\n            });\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : menuItems,\n                }];\n            if (this.chartMenu && !this.chartMenu.isDestroyed) {\n                this.chartMenu.destroy();\n            }\n            this.chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this),\n                beforeOpen: this.whitespaceRemove.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                },\n                beforeItemRender: this.multipleAxesCheckbox.bind(this)\n            });\n            this.chartMenu.isStringTemplate = true;\n            this.chartMenu.appendTo('#' + this.parent.element.id + 'chart_menu');\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.create = function () {\n        var _this_1 = this;\n        if (select('#' + this.parent.element.id + 'chart_menu', this.parent.element)) {\n            this.createChartMenu();\n        }\n        if (select('#' + this.parent.element.id + 'export_menu', this.parent.element)) {\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            this.exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.exportMenu.isStringTemplate = true;\n            this.exportMenu.appendTo('#' + this.parent.element.id + 'export_menu');\n        }\n        if (select('#' + this.parent.element.id + 'subtotal_menu', this.parent.element)) {\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.subTotalMenu.isStringTemplate = true;\n            this.subTotalMenu.appendTo('#' + this.parent.element.id + 'subtotal_menu');\n        }\n        if (select('#' + this.parent.element.id + 'grandtotal_menu', this.parent.element)) {\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.grandTotalMenu.isStringTemplate = true;\n            this.grandTotalMenu.appendTo('#' + this.parent.element.id + 'grandtotal_menu');\n        }\n        if (select('#' + this.parent.element.id + 'formatting_menu', this.parent.element)) {\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormatMenu'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormatingMenu'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            this.formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.formattingMenu.isStringTemplate = true;\n            this.formattingMenu.appendTo('#' + this.parent.element.id + 'formatting_menu');\n        }\n        if (select('#' + this.parent.element.id + '_reportlist', this.parent.element)) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.parent.localeObj.getConstant('defaultReport')\n            };\n            if (isBlazor()) {\n                var pivotData = JSON.parse(saveArgs.report);\n                pivotData.dataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n                saveArgs.report = JSON.stringify(pivotData);\n            }\n            this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n            this.parent.trigger(events.saveReport, saveArgs);\n            var reports = this.fetchReports();\n            this.reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                cssClass: cls.REPORT_LIST_DROP,\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            this.reportList.isStringTemplate = true;\n            this.reportList.appendTo('#' + this.parent.element.id + '_reportlist');\n        }\n        this.updateItemElements();\n    };\n    Toolbar.prototype.updateItemElements = function () {\n        var itemElements = [].slice.call(this.toolbar.element.querySelectorAll('.e-toolbar-item'));\n        for (var _i = 0, itemElements_1 = itemElements; _i < itemElements_1.length; _i++) {\n            var element = itemElements_1[_i];\n            if (element.querySelector('button')) {\n                element.querySelector('button').setAttribute('tabindex', '0');\n            }\n            else if (element.querySelector('.e-menu.e-menu-parent')) {\n                element.querySelector('.e-menu.e-menu-parent').setAttribute('tabindex', '-1');\n                if (element.querySelector('.e-menu-item.e-menu-caret-icon')) {\n                    element.querySelector('.e-menu-item.e-menu-caret-icon').setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.whitespaceRemove = function (args) {\n        args.element.style.padding = '0px';\n        var separator = args.element.querySelector('.e-separator');\n        if (separator) {\n            separator.style.margin = '0px';\n        }\n    };\n    Toolbar.prototype.multipleAxesCheckbox = function (args) {\n        if (this.parent.element.id + '_' + 'multipleAxes' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'checkBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('multipleAxes'),\n                cssClass: 'e-multipleAxes',\n                checked: this.parent.chartSettings.enableMultiAxis,\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'checkBox');\n            if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) &&\n                !args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.add(cls.MENU_DISABLE);\n                checkbox.disabled = true;\n            }\n            else if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) &&\n                args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.remove(cls.MENU_DISABLE);\n                checkbox.disabled = false;\n            }\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-multipleAxes');\n            args.element.appendChild(checkboxObj);\n        }\n        else if (this.parent.element.id + '_' + 'showLegend' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'showLegendCheckBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('showLegend'),\n                checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n                cssClass: 'e-showLegend',\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'showLegendCheckBox');\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-showLegend');\n            args.element.appendChild(checkboxObj);\n        }\n    };\n    Toolbar.prototype.getLableState = function (type) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.showLableState = chartSettings.legendSettings.visible;\n        }\n        else {\n            this.showLableState = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1 ?\n                false : true;\n        }\n        return this.showLableState;\n    };\n    Toolbar.prototype.getAllChartItems = function () {\n        return ['Line', 'Column', 'Area', 'Bar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea',\n            'SplineArea', 'Scatter', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto',\n            'Polar', 'Radar', 'Pie', 'Pyramid', 'Funnel', 'Doughnut'];\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        if (this.parent.currentView === 'Table') {\n            addClass(items.slice(3), cls.MENU_HIDE);\n            removeClass(items.slice(1, 3), cls.MENU_HIDE);\n        }\n        else {\n            addClass(items.slice(1, 3), cls.MENU_HIDE);\n            removeClass(items.slice(3), cls.MENU_HIDE);\n        }\n    };\n    /* tslint:disable:max-line-length */\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!select('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!select('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!select('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!select('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals) {\n            select('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            select('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            select('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals)) {\n            select('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!select('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!select('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!select('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!select('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            select('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals) {\n            select('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            select('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            select('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n            select('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON, args.element).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    /* tslint:enable:max-line-length */\n    Toolbar.prototype.updateReportList = function () {\n        var reports;\n        if (isBlazor()) {\n            /* tslint:disable */\n            var _this_5 = this;\n            /* tslint:enable */\n            reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_5.reportList.dataSource = observedArgs.reportName;\n                if (_this_5.currentReport === '' && _this_5.reportList.dataSource.length > 0) {\n                    _this_5.reportList.value = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.reportList.text = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.currentReport = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                }\n                else {\n                    _this_5.reportList.value = _this_5.currentReport;\n                    _this_5.reportList.text = _this_5.currentReport;\n                }\n                _this_5.reportList.refresh();\n            });\n        }\n        else {\n            reports = this.fetchReports();\n            this.reportList.dataSource = reports.reportName;\n            if (this.currentReport === '' && this.reportList.dataSource.length > 0) {\n                this.reportList.value = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.reportList.text = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.currentReport = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            }\n            else {\n                this.reportList.value = this.currentReport;\n                this.reportList.text = this.currentReport;\n            }\n            this.reportList.refresh();\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.menuItemClick = function (args) {\n        var _this_1 = this;\n        var exportArgs = {};\n        var type;\n        if (this.getAllChartItems().indexOf(args.item.id.split(this.parent.element.id + '_')[1]) > -1 ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'ChartMoreOption') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'multipleAxes') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'showLegend')) {\n            type = args.item.id.split(this.parent.element.id + '_')[1];\n        }\n        /* tslint:disable:max-line-length */\n        switch (args.item.id) {\n            case (this.parent.element.id + 'grid'):\n                if (this.parent.grid && this.parent.chart) {\n                    this.parent.grid.element.style.display = '';\n                    this.parent.chart.element.style.display = 'none';\n                    if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                        this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                    this.parent.currentView = 'Table';\n                    this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                    if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    this.parent.layoutRefresh();\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + 'pdf'):\n                if (this.parent.currentView === 'Table') {\n                    exportArgs = {\n                        pdfExportProperties: { fileName: 'Export.pdf' },\n                        pdfDoc: undefined,\n                        isBlob: false,\n                        isMultipleExport: false\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        if (isBlazor()) {\n                            var pdfProperties = PivotUtil.formatPdfExportProperties(observedArgs.pdfExportProperties);\n                            _this_1.parent.pdfExport(pdfProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                        }\n                        else {\n                            _this_1.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                        }\n                    });\n                }\n                else {\n                    exportArgs = {\n                        width: undefined,\n                        height: undefined,\n                        orientation: PdfPageOrientation.Landscape,\n                        type: 'PDF',\n                        fileName: 'result',\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                    });\n                }\n                break;\n            case (this.parent.element.id + 'excel'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this_1.parent.excelExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this_1.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case (this.parent.element.id + 'csv'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.csv' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this_1.parent.csvExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this_1.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case (this.parent.element.id + 'png'):\n                exportArgs = {\n                    type: 'PNG',\n                    width: undefined,\n                    height: undefined,\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'jpeg'):\n                exportArgs = {\n                    type: 'JPEG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                    width: undefined,\n                    height: undefined,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'svg'):\n                exportArgs = {\n                    width: undefined,\n                    height: undefined,\n                    type: 'SVG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'notsubtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: false, showColumnSubTotals: false, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: false, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'notgrandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: false, showColumnGrandTotals: false, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: false, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'numberFormattingMenu'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'conditionalFormattingMenu'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + '_' + type):\n                if (args.item && args.item.text) {\n                    if (type === 'ChartMoreOption') {\n                        this.createChartTypeDialog();\n                    }\n                    else if (type === 'multipleAxes') {\n                        if (this.parent.chartSettings.enableScrollOnMultiAxis) {\n                            this.isMultiAxisChange = true;\n                        }\n                        this.parent.chartSettings.enableMultiAxis = !this.parent.chartSettings.enableMultiAxis;\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                    else if (this.getAllChartItems().indexOf(type) > -1) {\n                        this.updateChartType(type, false);\n                    }\n                    else if (type === 'showLegend') {\n                        this.parent.chart.legendSettings.visible = !this.showLableState;\n                        if (this.parent.chartSettings.legendSettings) {\n                            this.parent.chartSettings.legendSettings.visible = !this.showLableState;\n                        }\n                        else {\n                            this.parent.setProperties({ chartSettings: { legendSettings: { visible: !this.showLableState } } }, true);\n                        }\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n        }\n        /* tslint:enable:max-line-length */\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    Toolbar.prototype.getValidChartType = function () {\n        var menuItems = [];\n        for (var i = 0; (i <= this.parent.chartTypes.length); i++) {\n            var type = this.parent.chartTypes[i];\n            if ((this.getAllChartItems().indexOf(type) > -1) && (menuItems.indexOf(type) < 0)) {\n                menuItems.push(type);\n            }\n        }\n        return menuItems;\n    };\n    Toolbar.prototype.createChartTypeDialog = function () {\n        var _this_1 = this;\n        var chartDialog = this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + '_ChartTypeDialog',\n            className: cls.PIVOTCHART_TYPE_DIALOG\n        }));\n        this.chartTypesDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('chartTypeSettings'),\n            content: this.getDialogContent(),\n            isModal: true,\n            beforeOpen: this.beforeOpen.bind(this),\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: function () { _this_1.chartTypeDialogUpdate(); },\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true },\n                },\n                {\n                    click: function () { _this_1.removeDialog(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            close: this.removeDialog.bind(this)\n        });\n        this.chartTypesDialog.isStringTemplate = true;\n        this.chartTypesDialog.appendTo(chartDialog);\n    };\n    Toolbar.prototype.removeDialog = function () {\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_ChartTypeDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ChartTypeDialog'));\n        }\n    };\n    Toolbar.prototype.chartTypeDialogUpdate = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var chartType = getInstance('#' + this.parent.element.id + '_ChartTypeOption', DropDownList).value;\n        var checked = getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).checked;\n        var checkedShow = getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked;\n        this.parent.chart.legendSettings.visible = checkedShow;\n        if (this.chartLableState) {\n            this.parent.chart.legendSettings.visible = checkedShow;\n            if (this.parent.chartSettings.legendSettings) {\n                this.parent.chartSettings.legendSettings.visible = checkedShow;\n            }\n            else {\n                this.parent.setProperties({ chartSettings: { legendSettings: { visible: checkedShow } } }, true);\n            }\n        }\n        this.updateChartType(chartType, false);\n        this.parent.chartSettings.enableMultiAxis = checked;\n        this.chartTypesDialog.close();\n    };\n    Toolbar.prototype.updateChartType = function (type, isMultiAxis) {\n        if (this.getAllChartItems().indexOf(type) > -1) {\n            if (this.parent.chart) {\n                this.parent.currentView = 'Chart';\n                this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                /* tslint:disable:max-line-length */\n                this.parent.chart.element.style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                this.parent.chart.setProperties({ width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()) }, true);\n                if (this.parent.chartSettings.chartSeries.type === type && !isMultiAxis) {\n                    this.parent.chartModule.updateView();\n                }\n                else {\n                    this.parent.chartSettings.chartSeries.type = type;\n                }\n            }\n        }\n    };\n    Toolbar.prototype.getDialogContent = function () {\n        var mainWrapper = createElement('div', { className: 'e-chart-type-div-content' });\n        var optionWrapperDiv = createElement('div', { className: 'e-chart-type-option-wrapper' });\n        var optionTextDiv = createElement('div', {\n            className: 'e-chart-type-option-text', innerHTML: this.parent.localeObj.getConstant('ChartType')\n        });\n        var dropOptionDiv = createElement('div', { id: this.parent.element.id + '_ChartTypeOption' });\n        optionWrapperDiv.appendChild(optionTextDiv);\n        optionWrapperDiv.appendChild(dropOptionDiv);\n        var chartTypeDatasource = [];\n        var chartType = this.getValidChartType();\n        for (var i = 0; i < chartType.length; i++) {\n            chartTypeDatasource.push({ value: chartType[i], text: this.parent.localeObj.getConstant(chartType[i].toLowerCase()) });\n        }\n        var optionWrapper = new DropDownList({\n            dataSource: chartTypeDatasource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.chartSeries.type ? this.parent.chartSettings.chartSeries.type : this.getValidChartType()[0],\n            width: '100%',\n            change: this.changeDropDown.bind(this)\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(dropOptionDiv);\n        mainWrapper.appendChild(optionWrapperDiv);\n        var checkboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogMultipleAxis',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(checkboxWrap);\n        var labelCheckboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogShowLabel',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(labelCheckboxWrap);\n        return mainWrapper;\n    };\n    Toolbar.prototype.changeDropDown = function (args) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (!(chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined)) {\n            var checked = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1 ?\n                false : true;\n            getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked = checked;\n        }\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1) {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = true;\n        }\n        else {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = false;\n        }\n    };\n    Toolbar.prototype.beforeOpen = function () {\n        var _this_1 = this;\n        var checkbox = new CheckBox({\n            label: this.parent.localeObj.getConstant('multipleAxes'),\n            cssClass: 'e-dialog-multiple-axis',\n            checked: this.parent.chartSettings.enableMultiAxis ? this.parent.chartSettings.enableMultiAxis : false,\n            enableRtl: this.parent.enableRtl,\n        });\n        var checkbox1 = new CheckBox({\n            label: this.parent.localeObj.getConstant('showLegend'),\n            checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n            change: function () { _this_1.chartLableState = true; },\n            cssClass: 'e-dialog-show-legend',\n            enableRtl: this.parent.enableRtl,\n        });\n        checkbox1.appendTo(select('#' + this.parent.element.id + '_DialogShowLabel', this.chartTypesDialog.element));\n        checkbox.appendTo(select('#' + this.parent.element.id + '_DialogMultipleAxis', this.chartTypesDialog.element));\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            checkbox.disabled = true;\n        }\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.chartLableState = true;\n        }\n        else {\n            this.chartLableState = false;\n        }\n    };\n    /**\n     * To refresh the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.createToolbar();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.confirmPopUp && !this.confirmPopUp.isDestroyed) {\n            this.confirmPopUp.destroy();\n        }\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (this.mdxDialog && !this.mdxDialog.isDestroyed) {\n            this.mdxDialog.destroy();\n        }\n        if (this.chartMenu && !this.chartMenu.isDestroyed) {\n            this.chartMenu.destroy();\n        }\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (this.exportMenu && !this.exportMenu.isDestroyed) {\n            this.exportMenu.destroy();\n        }\n        if (this.subTotalMenu && !this.subTotalMenu.isDestroyed) {\n            this.subTotalMenu.destroy();\n        }\n        if (this.grandTotalMenu && !this.grandTotalMenu.isDestroyed) {\n            this.grandTotalMenu.destroy();\n        }\n        if (this.formattingMenu && !this.formattingMenu.isDestroyed) {\n            this.formattingMenu.destroy();\n        }\n        if (this.reportList && !this.reportList.isDestroyed) {\n            this.reportList.destroy();\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n        }\n        if (select('#' + this.parent.element.id + 'pivot-toolbar', document)) {\n            remove(select('#' + this.parent.element.id + 'pivot-toolbar', document));\n        }\n    };\n    Toolbar.prototype.focusToolBar = function () {\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-selected'), 'e-selected');\n        if (document.querySelector('.e-toolbar-items')) {\n            addClass([document.querySelector('.e-toolbar-items')], 'e-focused');\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend, select } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.newFormat = [];\n        this.lastFormattedValue = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberformatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     * @returns void\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.dialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerHTML = this.parent.localeObj.getConstant('numberFormat');\n        var formatObject;\n        this.newFormat = [{ name: this.parent.localeObj.getConstant('AllValues'), format: 'N0', useGrouping: true }];\n        var format = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n            for (var j = 0; j < this.parent.dataSourceSettings.formatSettings.length; j++) {\n                if (this.parent.dataSourceSettings.formatSettings[j].name === this.parent.dataSourceSettings.values[i].name) {\n                    formatObject = {\n                        name: this.parent.dataSourceSettings.formatSettings[j].name,\n                        format: this.parent.dataSourceSettings.formatSettings[j].format,\n                        useGrouping: this.parent.dataSourceSettings.formatSettings[j].useGrouping\n                    };\n                    this.newFormat.push(formatObject);\n                }\n            }\n        }\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        for (var j = 0; j < this.parent.dataSourceSettings.values.length; j++) {\n            if (format.indexOf(this.parent.dataSourceSettings.values[j].name) === -1) {\n                formatObject = {\n                    name: this.parent.dataSourceSettings.values[j].name, format: 'N0',\n                    useGrouping: true\n                };\n                this.newFormat.push(formatObject);\n            }\n        }\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('values')\n        });\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('formatType')\n        });\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('grouping')\n        });\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('decimalPlaces')\n        });\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('customFormatString')\n        });\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        if (select('#' + this.parent.element.id + '_FormatValueDrop', this.dialog.element)) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                valueFields.push({\n                    index: i + 1, name: this.parent.dataSourceSettings.values[i].caption || this.parent.dataSourceSettings.values[i].name,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            this.valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP, change: this.valueChange.bind(this), width: '100%',\n                open: this.customUpdate.bind(this)\n            });\n            this.valuesDropDown.isStringTemplate = true;\n            this.valuesDropDown.appendTo('#' + this.parent.element.id + '_FormatValueDrop');\n        }\n        if (select('#' + this.parent.element.id + '_FormatDrop', this.dialog.element)) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 3, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            this.formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl,\n                cssClass: cls.FORMATTING_FORMAT_DROP, width: '100%'\n            });\n            this.formatDropDown.isStringTemplate = true;\n            this.formatDropDown.appendTo('#' + this.parent.element.id + '_FormatDrop');\n        }\n        if (select('#' + this.parent.element.id + '_GroupingDrop', this.dialog.element)) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            this.groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP, width: '100%', change: this.groupingChange.bind(this)\n            });\n            this.groupingDropDown.isStringTemplate = true;\n            this.groupingDropDown.appendTo('#' + this.parent.element.id + '_GroupingDrop');\n        }\n        if (select('#' + this.parent.element.id + '_DecimalDrop', this.dialog.element)) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 },\n            ];\n            this.decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP, popupHeight: 150, width: '100%', change: this.decimalChange.bind(this)\n            });\n            this.decimalDropDown.isStringTemplate = true;\n            this.decimalDropDown.appendTo('#' + this.parent.element.id + '_DecimalDrop');\n        }\n        if (this.formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n        if (this.lastFormattedValue.length !== 0) {\n            this.valuesDropDown.value = this.lastFormattedValue[0].name;\n            var fString = this.lastFormattedValue[0].format;\n            var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n            var group = this.lastFormattedValue[0].useGrouping ? this.parent.localeObj.getConstant('true') :\n                this.parent.localeObj.getConstant('false');\n            this.updateFormattingDialog(fString, first, group);\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.newFormat;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n                var group = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                    this.parent.localeObj.getConstant('false');\n                this.updateFormattingDialog(fString, first, group);\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = 0;\n            this.groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.updateFormattingDialog = function (fString, first, group) {\n        if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n            this.formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = Number(fString.split('')[1]);\n            this.groupingDropDown.value = group;\n        }\n        else {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n            this.customText.value = fString;\n        }\n    };\n    NumberFormatting.prototype.customUpdate = function () {\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('Custom')) {\n            var index = this.getIndexValue();\n            this.newFormat[index].format = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        var index = this.getIndexValue();\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            this.groupingDropDown.enabled = false;\n            this.decimalDropDown.enabled = false;\n            this.newFormat[index].format = this.customText.value;\n        }\n        else {\n            var text = this.formattedText();\n            this.newFormat[index].format = text;\n            this.customText.disabled = true;\n            this.groupingDropDown.enabled = true;\n            this.decimalDropDown.enabled = true;\n            this.customText.value = '';\n        }\n    };\n    NumberFormatting.prototype.groupingChange = function () {\n        var index = this.getIndexValue();\n        this.newFormat[index].useGrouping = this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false;\n    };\n    NumberFormatting.prototype.getIndexValue = function () {\n        var format = [];\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        var index = format.indexOf(this.valuesDropDown.value.toString());\n        return index;\n    };\n    NumberFormatting.prototype.decimalChange = function () {\n        var index = this.getIndexValue();\n        var text = this.formattedText();\n        this.newFormat[index].format = text;\n    };\n    NumberFormatting.prototype.formattedText = function () {\n        var text;\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = this.formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                this.formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            return text += this.decimalDropDown.value;\n        }\n        else {\n            return text = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text = this.formattedText();\n        var index = this.getIndexValue();\n        this.newFormat.splice(index, 1);\n        var format = extend([], this.newFormat, true);\n        if (this.valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            var fieldList = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule.fieldList : this.parent.engineModule.fieldList;\n            for (var _i = 0, _a = Object.keys(fieldList); _i < _a.length; _i++) {\n                var key = _a[_i];\n                this.insertFormat(key, text);\n            }\n        }\n        else {\n            this.insertFormat(this.valuesDropDown.value.toString(), text);\n        }\n        var eventArgs = {\n            formatSettings: PivotUtil.cloneFormatSettings(this.newFormat),\n            formatName: this.valuesDropDown.value.toString(),\n            cancel: false\n        };\n        this.parent.trigger(events.numberFormatting, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: observedArgs.formatSettings } }, true);\n                try {\n                    _this.parent.updateDataSource(false);\n                    _this.dialog.close();\n                }\n                catch (exception) {\n                    _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n                    /* tslint:disable-next-line:max-line-length */\n                    _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormat'), _this.dialog.element);\n                    _this.parent.hideWaitingPopup();\n                }\n            }\n            else {\n                _this.dialog.close();\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            }\n        });\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text) {\n        var isExist = false;\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false\n        };\n        var format = this.newFormat;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n        this.lastFormattedValue = [];\n        this.lastFormattedValue.push(newFormat);\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     * @hidden\n     */\n    function Grouping(parent) {\n        /* tslint:disable-next-line:max-line-length */\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        this.parentElement = parentElement;\n        this.selectedCellsInfo = [];\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('aria-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        this.selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        this.selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedOptions\n     * @param  {SelectedCellsInfo[]} axis - Get the members name from the given selected cells information\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (this.selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (this.selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            if (isBlazor()) {\n                PivotUtil.setPivotProperties(this.parent, { dataSourceSettings: { groupSettings: groupFields } });\n            }\n            else {\n                this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            }\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            this.parent.notify(events.initialLoad, {});\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames, type) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        /* tslint:disable */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        /* tslint:enable */\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type) {\n        var _this = this;\n        var groupDialog = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialog);\n        this.groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.groupDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            overlayClick: function () { _this.removeDialog(); },\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement\n        });\n        this.groupDialog.isStringTemplate = true;\n        this.groupDialog.appendTo(groupDialog);\n    };\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-wrapper' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    /* tslint:disable:max-line-length */\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text', innerHTML: this.parent.localeObj.getConstant('groupFieldCaption')\n                    });\n                    /* tslint:enable:max-line-length */\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-wrapper' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text', innerHTML: this.parent.localeObj.getConstant('groupTitle')\n                    });\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-wrapper' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        value: caption, width: '100%'\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        width: '100%'\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-wrapper'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-wrapper'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-wrapper'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text', innerHTML: this.parent.localeObj.getConstant('groupBy')\n                    });\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') },\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        /* tslint:disable */\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            select: function () {\n                                groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                if (intervalObj_1.checkBoxSelectionModule.activeLi.length === 0) {\n                                    groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                            }\n                        });\n                        /* tslint:enable */\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%'\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%'\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    /* tslint:disable:max-func-body-length */\n    Grouping.prototype.updateGroupSettings = function () {\n        var dialogElement = this.groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance('#' + this.parentElement.id + 'group_input_option', MaskedTextBox);\n            var captionInputInstance = getInstance('#' + this.parentElement.id + 'group_caption_option', MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            /* tslint:disable-next-line:max-line-length */\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ? customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_start_option', CheckBox);\n            var endCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_end_option', CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_start_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_start_input', NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_end_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_end_input', NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_interval_input', MultiSelect) :\n                getInstance('#' + this.parentElement.id + 'group_interval_input', NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        this.groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item, pos) { return item.name; });\n                if (newItems) {\n                    /* tslint:disable-next-line:max-line-length */\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item, pos) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        return orderedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            var selectedOptions = [];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if (this.parent.grid && this.parent.grid.isDestroyed) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        if (this.groupDialog && !this.groupDialog.isDestroyed) {\n            this.groupDialog.destroy();\n        }\n        if (this.parentElement && document.getElementById(this.parentElement.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_GroupDialog'));\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.render\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.handlers.load, this); //For initial rendering\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","getDay","getHours","getMinutes","getSeconds","getMilliseconds","isNaN","Number","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedPivotValues","pivotValues","clonedSets","i","j","this","getClonedPivotValueObj","undefined","getDefinedObj","inArray","collection","cnt","isContainCommonElements","collection1","collection2","lnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","type","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","slice","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","fieldMapping","showSubTotals","showRowSubTotals","showColumnSubTotals","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","showAggregationOnValueField","authentication","CloneAuthenticationObject","updateDataSourceSettings","clonedCollection","collection_1","set","name","caption","axis","baseField","baseItem","isCalculatedField","isNamedSet","showNoDataItems","dataType","showFilterIcon","showSortIcon","showRemoveIcon","showValueTypeIcon","showEditIcon","allowDragAndDrop","collection_2","condition","items","levelCount","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_3","order","collection_4","delimiter","collection_5","calendar","currency","format","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","userName","password","collection_6","formatString","formula","hierarchyUniqueName","collection_7","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_8","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_9","groupName","getFilterItemByName","fieldName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","getFieldInfo","len","fieldItem","position","fieldList","olapEngineModule","engineModule","isNamedSets","aggregateType","isButtonIconRefesh","prop","oldProp","newProp","isButtonRefresh","propValidation","oldAxesProp","newAxesProp","axes","oldAxis","newAxis","indexOf","options","oldAxisProp","newAxisProp","k","a","b","c","propValidation_1","validation","exception","formatPivotValues","Axis","actualText","ActualText","indexObject","IndexObject","index","Index","rowHeaders","RowHeaders","columnHeaders","ColumnHeaders","formattedText","FormattedText","actualValue","ActualValue","rowIndex","RowIndex","colIndex","ColIndex","colSpan","ColSpan","level","Level","rowSpan","RowSpan","isSum","IsSum","isGrandSum","IsGrandSum","valueSort","ValueSort","ordinal","Ordinal","hasChild","HasChild","isDrilled","IsDrilled","Value","Type","members","Members","formatPdfHeaderFooter","pdf","contents","content","pageNumberType","PageNumberType","Style","penColor","PenColor","penSize","PenSize","dashStyle","DashStyle","textBrushColor","TextBrushColor","textPenColor","TextPenColor","FontSize","hAlign","HAlign","vAlign","VAlign","points","Points","x1","X1","y1","Y1","x2","X2","y2","Y2","Format","Position","x","X","y","Y","size","Size","height","Height","width","Width","src","Src","font","Font","formatPdfExportProperties","pageOrientation","PageOrientation","pageSize","PageSize","header","Header","fromTop","FromTop","Contents","Columns","footer","Footer","FromBottom","includeHiddenColumn","IncludeHiddenColumn","dataSource","DataSource","exportType","ExportType","theme","Theme","record","Record","Caption","fileName","FileName","hierarchyExportMode","HierarchyExportMode","allowHorizontalOverflow","AllowHorizontalOverflow","formatExcelStyle","fontColor","FontColor","fontName","FontName","String","bold","Bold","indent","Indent","italic","Italic","underline","Underline","backColor","BackColor","wrapText","WrapText","borders","Borders","numberFormat","NumberFormat","formatExcelCell","cell","cells","hyperlink","target","Hyperlink","Target","displayText","DisplayText","styles","formatExcelHeaderFooter","excel","Rows","row","Cells","grouping","Grouping","formatExcelExportProperties","query","multipleExport","MultipleExport","blankRows","BlankRows","headerRows","HeaderRows","footerRows","FooterRows","formatFieldList","fList","id","Id","FormatString","formattedMembers","FormattedMembers","dateMember","DateMember","filter","Filter","sort","Sort","AggregateType","BaseField","BaseItem","filterType","FilterType","Formula","isSelected","IsSelected","isExcelFilter","IsExcelFilter","ShowNoDataItems","isCustomField","IsCustomField","ShowFilterIcon","ShowSortIcon","ShowRemoveIcon","ShowEditIcon","ShowValueTypeIcon","AllowDragAndDrop","IsCalculatedField","ShowSubTotals","frameContent","rowPosition","dataContent","pivot","isEmptyData","isEngineUpdated","rowCnt","start","end","rCnt","cCnt","getLocalizedObject","locale","localeObj","getConstant","updateReport","report","Name","DataType","FormatSettings","Currency","MaximumFractionDigits","MaximumSignificantDigits","MinimumFractionDigits","MinimumIntegerDigits","MinimumSignificantDigits","Skeleton","UseGrouping","generateUUID","d","Date","getTime","d2","performance","now","replace","r","Math","random","floor","toString","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","PivotEngine","aggregatedValueMatrix","valueContent","formatFields","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeadersCount","columnHeadersCount","rMembers","cMembers","groupingFields","valueMatrix","indexMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rowGrandTotal","columnGrandTotal","removeRowGrandTotal","removeColumnGrandTotal","isValueHasAdvancedAggregate","rawIndexObject","isEditing","actualData","groupRawIndex","fieldKeys","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","customRegex","formatRegex","renderEngine","customProperties","fn","getValueCellInfo","globalize","Internationalization","fieldsType","clonedReport","enableSort","isValueFilterEnabled","isDrillThrough","isBlazor","shift","pageSettings","getGroupedRawData","formats","groups","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMutiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fillFieldMembers","updateSortSettings","generateValueMatrix","filterMembers","columnLength","updateFilterMembers","generateGridData","pos","splice","frameHeaderWithKeys","countFields","map","hasCountField","realData","headerFields","concat","groupRawData","finalData","groupKeys","indexLength","currData","vPos","hPos","memberJoin","join","currFieldName","currValue","savedData","summType","_this","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","len_1","interval","isInRangeAvail","getRange","newDate","newFieldName","setFullYear","getFullYear","month","ceil","getMonth","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","caption_1","clonedFields","cloneField","newField","len_3","startValue","endValue","cStartValue","cEndValue","unframedSet","dataLength","framedSetLength","max","len_4","duplicateData","frameData","lastIndexOf","_b","keys_2","_c","axisFields_2","field","len_5","customFieldName","pattern","match","parentField","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","parseInt","getFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","getCalculatedField","lenE","dataTypes","getMappingField","toLowerCase","updateTreeViewData","updateFieldList","actualFormula","this_2","calc","calcProperties","powerFunction","formulaType","split","lmt","aggregateValue","selectedString","filterElements","filterElements_1","dataFields_1","validateValueFields","indMat","dlen","kLn","kl","isDataAvail","membersCnt","fmembersCnt","dl","mkey","fKey","formattedValue","getFormattedValue","dateText","vMat","keyLen","flList","tkln","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","member","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","valueFilter","rowFilterData","isValueFiltered","allMember","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","column","cellSets","getCellSet","rowCellType","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","updateHeaders","rowFlag","columnFlag","updatePivotValues","slicePos","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","memberName","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","engine","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","grandHeader","pop","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","framedHeader","isNotDateType","childrens","stringValue","alphaNumbervalue","charAt","isNullArgument","textArray","hText","mIndex","mType","getMember","sortByValueRow","vlen","aggreColl","rMembers_1","rMembers_2","insertAllMember","rowLength","rowCells","savedCell","spanCnt","indexObj","colCnt","rowPos","cellType","isSpanned","fieldCnt","drillOption","memberString","keyInd","parentMember","valueFil","hierarchy","rlen","decisionObj","reportDataType","isNoData","isDateType","savedMembers","lt","memInd","headerValue","availData","filterPosition","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","lt_1","rowCurrentPage","rowSize","exactStartPos","performSlicing","columnCurrentPage","columnSize","startPos","removeChildMembers","framedMember","customText","reformAxis","tnum","vlt","rTotal","cTotal","actCnt","isLeastNode","hpos","actpos","vln","name_1","calObj","vData","cln","clt","updateRowData","recursiveRowData","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","updateSelectedHeaders","childMembers","aggregateHeaders","children","vCount","isChild","uniqueName","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_2","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","len_6","cLevelName","axisObj","isSelectedColumn","len_7","uniqueLevelName","colIndex_3","currentSet","selectedHeaderCollection_1","colIndex_2","indexCollection_2","cVal","formatNumber","clen","_g","rowindexCollection_2","selectedHeaderCollection_2","rowindexCollection_1","selectedColumn","getSelectedColumn","_h","indexCollection_3","selectedColumnValue","selectedRow","getSelectedRow","_j","selectedHeaderCollection_3","_k","colIndex_4","_l","indexCollection_4","selectedRowValue","_m","selectedHeaderCollection_4","_o","rowindexCollection_3","selectedCol","_p","indexCollection_5","selectedColValue","_q","colIndex_5","_r","selectedHeaderCollection_5","_s","selectedHeaderCollection_6","colheads_1","head","rowheads_1","gTotalIndex","totalValues","gTotalIndex_1","rIndex","val_1","gTotalIndex_2","val_2","isGrand","subTotal","toLocaleString","currentCellSets","keys_3","vcnt","colItmLn","sortText","isTotalHide","lvl","isSingleMeasure","name_3","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","formatField","test","flag","integerPart","decimalPart","items_1","text","RegExp","initialLoad","uiUpdate","contentReady","dataReady","ROOT","RTL","DEVICE","ICON","COLLAPSE","EXPAND","TABLE","CALCINPUT","FLAT","FORMAT","FORMULA","MENU_HIDE","INPUT","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","GRID_REMOVE","GRID_TOOLBAR","PIVOTCHART","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","AggregateMenu","parent","menuInfo","render","args","parentElement","openContextMenu","buttonElement","isStringField","summaryTypes","getMenuItem","eventArgs","cancel","aggregateTypes","getModuleName","isPopupView","trigger","observedArgs","createContextMenu","currentMenu","getBoundingClientRect","enableRtl","open","top","window","scrollY","document","documentElement","scrollTop","left","menuItems","isDestroyed","destroy","checkDuplicates","element","getAllSummaryType","menuOptions","beforeOpen","beforeMenuOpen","bind","onClose","select","focus","selectOptionInContextMenu","contextMenu","getElementById","innerHTML","createElement","appendChild","Menu","isStringTemplate","appendTo","isString","zIndex","display","createValueSettingsDialog","valueDialog","className","attrs","data-field","Dialog","animationSettings","effect","allowDragging","createFieldOptions","isModal","visible","showCloseIcon","buttons","click","updateValueSettings","buttonModel","cssClass","isPrimary","hide","closeOnEscape","renderMode","overlayClick","removeDialog","close","fieldCaption","getAttribute","summaryType","summaryDataSource","summaryItems","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","textContent","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","dataBind","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","querySelector","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","allowDeferLayoutUpdate","notify","events.uiUpdate","triggerPopulateEvent","dialogElement","captionInstance","getInstance","summaryInstance","baseFieldInstance","baseItemInstance","remove","Render","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","gridSettings","formatList","getFormatList","aggMenu","gridHeaderCellInfo","gridCellCollection","injectGridModules","getRowStartPos","grid","frameDataSource","frameStackedHeaders","mCntHeight","offsetHeight","dataHeight","rowHeight","contentModule","setHeightToContent","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","getHeaderContent","calculateGridWidth","allowAutoResizing","refreshUI","calculateGridHeight","bindGrid","on","headerRefreshed","refreshHeader","enableVirtualization","mHdr","mCont","vtr","virtualHeaderDiv","setStyleAttribute","transform","scrollLeft","isEmpty","Grid","frozenColumns","frozenRows","enableHover","frameEmptyData","frameEmptyColumns","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","pdfExportComplete","excelExportComplete","excelDataBound","lastGridSettings","gridObject","pivotColumns","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","startIndex","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","lastColumn","cellTemplate","getCellTemplate","targetCell","enableHtmlSanitizer","appendHtml","SanitizeHtmlHelper","sanitize","outerHTML","borderRight","borderLeft","widthService","setWidthToTable","notEmpty","setFocusOnLastCell","renderReactTemplates","events.contentReady","keyboardModule","event","nodeName","gridFocus","serviceLocator","getService","setFocusedElement","addClass","cellTarget","lastCellClicked","elem","bool","isGroupElement","classList","contains","allowGrouping","groupingModule","validateField","pivotValue1","querySelectorAll","cls.EXPAND","selectAll","add","cls.MENU_HIDE","cls.COLLAPSE","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","innerText","allowCalculatedField","fieldType_1","menuItem","MouseEvent","view","bubbles","cancelable","exportArgs","ele","rowIndx","colIndx","pivotValue","pdfDoc","isBlob","isMultipleExport","pdfExportProperties","pdfProperties","pdfExport","workbook","excelExportProperties","excelProperties","excelExport","csvExport","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","validateColumnTotalcell","headerPosKeys","sumLock","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","vSort","lock","padding-top","customAttributes","hideScroll","offsetWidth","firstColWidth","gridColumn","firstRowHeight","e","clearTimeout","timeOutObj","setTimeout","onSelect","pivotArgs","currentCell","selectedElements_1","customClass","hyperlinkSettings","isValueCell","onOlapRowCellBoundEvent","localizedText","rowGrandPos","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","colGrandPos","isSummaryCellHyperlink","isValueCellHyperlink","colindex","templateID","unWireEvents","wireEvents","pivotview","rowMeasurePos","tupRowInfo","tupInfo","memberPosition","uNameCollection","fieldSep","substring","memberType","nxtIndextCount","lastIndextCount","prevHasChild","fPos","typeCollection","isHierarchy","hasAllMember","iPos","maxIndent","hierarchyName","levelUniqueName","currPos_1","lvlPosition","hierarchyPOs","currPos_2","currHierarchyPos","currPos","lvlPos","hasChild_1","measurePosition","allStartPos","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnCellHyperlink","hdrdiv","lineHeight","div","navigator","userAgent","insertBefore","tupColumnInfo","prevCell","isSpannedCell","colLength","currCell","parentCellSpan","parentCellPos","onHyperCellClick","nativeEvent","getElement","0","1","calculateColWidth","colCount","parWidth","parseFloat","columnWidth","isOverflows","colWidth","resizeColWidth","eleWidth","totColWidth","elementCreated","gridHeight","parHeight","getHeightAsNumber","currentView","cls.GRID_TOOLBAR","tableHeight","cls.TABLE","contentHeight","tableWidth","horizontalOverflow","commonOverflow","singleValueFormat","integrateModel","headerCnt","headerSplit","splitPos","columnModel","actualCnt","colField","setSavedWidth","minWidth","tmpSpan","innerModel","innerPos","clipMode","configLastColumnWidth","triggerColumnRenderEvent","formatArray","fString","fCnt","gridCell","exportHeaderEvent","exportContentEvent","paragraphIndent","excelRows","tmpCell","EventHandler","CommonKeyboardInteraction","keyConfigs","shiftF","shiftS","shiftE","delete","enter","escape","upArrow","downArrow","tabIndex","KeyboardEvents","keyAction","keyActionHandler","eventName","processFilter","processSort","processEdit","processDelete","processEnter","processClose","processFilterNodeSelection","getButtonElement","allPivotButtons","closest","preventDefault","moduleName","filterDialog","dialogPopUp","dialogElement_1","isExcelFilter_1","allowExcelLikeFilter","keyCode","memberEditorTree","firstLi","removeAttribute","allMemberEditorTree","parentID","dialogInstance","ej2_instances","button","pivotButtons_1","EventBase","updateSorting","checkisDescending","isDescending","sortObj","newSortObj","lastSortInfo","updateFiltering","treeData","getOlapData","isValidFilterItemsAvail","getTreeData","popupTarget","filterTargetID","createFilterDialog","isItemAvail","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","levels","getFilterMembers","getMembers","currrentMembers","searchMembers","filterItemObj","dummyfilterItems","memberObject","filterItems_1","getParentNode","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","getParentIDs","treeObj","pid","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","isDataOverflow","isChecked","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","isDateField","filterItems_3","isSearchRender","hasChildren","updateChildNodeStates","members_4","state","sMembers","members_5","parentItem","parentNodes","selectedNodes_1","parent_1","members_6","isNodeExpand","NodeStateModified","onStateModified","droppedClass","nodeDropped","droppedPosition","dataSourceUpdate","btnElement","actualFieldName","tag","description","errorDialog","createErrorDialog","getButtonPosition","updateFieldlistData","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","draggedClass","eventdrop","dropField","dropAxis","dropPosition","draggedAxis","removeFieldFromReport","getNewField","droppedField","droppedAxis","dataSourceUpdate_1","droppedArgs","isMeasureAvail","measureField","fieldAxis","pivotButtonModule","axisFieldModule","ErrorDialog","dialogRenderer","fieldListDialog","errorPopUp","closeErrorDialog","body","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","data-fieldName","aria-label","filterCaption","headerTemplate","filterObject","getFilterObject","iconCss","disabled","closeFilterDialog","removeFilterDialog","filterArgs","fieldMembers","filterSetting","createTabMenu","updateCheckedState","createTreeView","visibility","memberTreeView","nodeChecked","nodeStateModified","allMemberSelect","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","createSortOptions","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","nodeAttr","htmlAttributes","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeSelected","startsWith","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","sortWrapper","cls.FILTER_SORT_CLASS","cls.RTL","sortAscendElement","cls.SORT_SELECTED_CLASS","sortDescendElement","sortBtnElement","Button","unWireEvent","wireEvent","dropMenu","DropDownButton","selectedLevel","nodeLimit","getSearchMembers","isAllMember","checkedNode","getNode","uncheckAll","checkAll","applySorting","sortElements","dataCount","nodeData","childNodes","getChildMembers","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","fieldType","formatObj","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","measures","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","unshift","levelObj","fieldlistData_1","fieldListData","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","cloneNode","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","valueIndex","lDataSource","levelIndex","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","NumericTextBox","inputObj2_2","inputObj1_3","inputObj2_3","role","aria-haspopup","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","PivotCommon","pivotEngine","Common","commonModule","addEventListener","initiateCommonModule","pivotCommon","Browser","isDevice","handlers","load","events.initialLoad","removeEventListener","off","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","FieldListFieldOptions","ConditionalFormatSettings","GroupSettings","CalculatedFieldSettings","CustomGroups","DrillOptions","ValueSortSettings","Authentication","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","mode","cellSelectionMode","wrapMode","Event","exportToExcel","clonedValues","currentPivotValues","exportAllPages","applyFormatting","dataCollections","workSheets","dataColl","colLen","rowLen","actualrCnt","maxLevel","pivotCell","rowOrdinal","measureName","lineStyle","Workbook","worksheets","currencyCode","save","PDFExport","addPage","eventParams","page","pages","PdfStandardFont","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","brush","PdfSolidBrush","PdfColor","pen","PdfPen","PdfPageTemplateElement","RectangleF","graphics","clientSize","drawString","PdfStringFormat","PdfTextAlignment","Center","template","footerTemplate","bottom","hexDecToRgb","hexDec","Error","bigint","g","getFontStyle","fontType","strikeout","Strikeout","getBorderStyle","borderStyle","PdfBorders","pdfColor","all","borderWidth","borderColor","getDashStyle","dashType","getStyle","border","gridStyle","Helvetica","getFontFamily","fontStyle","penBrushColor","setRecordThemeStyle","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","applyEvent","headerStyle","firstColumnWidth","dataCollIndex","vLen","allowRepeatHeader","integratedCnt","pdfGrid","PdfGrid","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","columnSpan","applyStyle","processCellStyle","stringFormat","indent_1","alignment","Right","Left","lineAlignment","PdfVerticalAlignment","Middle","getColumn","draw","PointF","conditionalFormattingModule","hexToRgb","backgroundBrush","textBrush","family","getFont","cellStyle","arg","textColor","textPen","argument","PdfDocument","KeyboardInteraction","tab","shiftTab","shiftUp","shiftDown","shiftLeft","shiftRight","shiftEnter","ctrlEnter","leftArrow","rightArrow","ctrlShiftF","pivotViewKeyboardModule","processTab","processShiftTab","processSelection","clearSelection","toggleFieldList","getNextButton","allpivotButtons","getPrevButton","chartAxis","rowAxis","columnFilterValueAxis","columnFilterValueGroup","rowGroup","chartGroup","tableAxis","groupingbarButton","headerButton","getFocusedElement","nextButton","currentInfo","skipAction","showFieldList","toolbar","toolbarModule","activeElement","gridElement","getElementsByTagName","lastChild","prevButton","allPivotButtons_1","shiftKey","ctrlKey","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","rowIndex_1","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","pivotFieldListModule","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldElement","items_2","items_3","dropClass","VirtualScroll","previousValues","frozenPreviousValues","eventType","addInternalEvents","displayOption","fCont","clearEvents","onHorizondalScroll","onVerticalScroll","common","setPageXY","onTouchScroll","isPreventScrollEvent","onWheelScroll","deltaMode","deltaY","getPointXY","pageXY","touches","pageX","pageY","pointerType","update","direction","rowValues_1","exactSize_1","section","scrollPosObject","vertical","showWaitingPopup","rowStartPos_1","pivot_1","sfBlazor","copyWithoutCircularReferences","interopAdaptor","invokeMethodAsync","then","updateBlazorData","exactPage","verticalSection","getEngine","scrollPage","pageRowStartPos","colValues_1","exactSize_2","horizontal","colStartPos_1","pivot_2","horizontalSection","pageColStartPos","verticalScrollScale","horizontalScrollScale","scrollDirection","horiOffset","vertiOffset","trim","scrollerBrowserLimit","excessMove","notLastPage","clientWidth","vWidth","virtualDiv","clientHeight","movableTable","vHeight","removeInternalEvents","DrillThroughDialog","indexString","isUpdated","gridIndexObjects","gridData","showDrillThroughDialog","rawData","editSettings","allowInlineEditing","allowEditing","editCell","removeDrillThroughDialog","drillThroughDialog","createDrillThroughGrid","drillThroughGrid","dataWithPrimarykey","beforeClose","updateData","previousPosition","gridIndexObjectsValue_1","addItems","prevItems","allowCommandColumns","currModule_1","AddItem","RemoveItem","ModifiedItem","bulkChanges","gridIndex","drillThroughValue","Key","addedData","removedData","updatedData","eventArgs_1","currentData","previousData","gridResize","currentTarget","firstElementChild","numericTextBox","textBoxValue","indexValue","blur","textBoxElement","focusIn","dataPos","drillThroughBody","drillThroughBodyHeader","toolbarItems","Toolbar","ColumnChooser","showColumnChooser","gridColumns","allowPaging","formatData","dialogModule","gridObj","Edit","Page","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","isPrimaryKey","actionComplete","requestType","beforeBatchSave","frameGridColumns","reverse","validationRules","required","editType","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","drillThroughElement","valueCaption","aggType","tupleInfo","colOrdinal","getUniqueName","getDrillThroughData","maxRowsInDrillThrough","gridJSON","ColumnIndex","parsedObj","triggerDialog","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","valuetText","drillThrough","PivotChart","headerColl","columnGroupObject","fieldPosition","measuresNames","accumulationType","loadChart","chartSettings","colMeasurePos","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","zoomFactor","dataLabel","refresh","primary","cls.PIVOTCHART","showToolbar","getGridWidthAsNumber","getChartHeight","chartSeries","AccumulationChart","Chart","enableMultiAxis","measureList","accEmptyPoint","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","drillDimension","groupHierarchyWithLevels","rKeys_1","rKey","firstRowCell","fieldPos","currrentLevel","isAttributeDrill","drillInfo","cKeys","prevMemberCell","cKeys_1","cKey","cellIndex","measureAllow","colHeaders","columnSeries","yValue","refreshChart","persistSettings","getPersistData","columnDelimiter","columnHeader","chartType","currentColumn","currentSeries","frameChartSeries","palettes","xName","yName","emptyPointSettings","innerRadius","columnKeys_1","yAxisName","seriesEvent","pivotChart","bindChart","frameObjectWithKeys","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","chartElement","enableScrollOnMultiAxis","getChartAutoHeight","overflow","overflowX","isMultiAxisChange","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","StripLine","DataLabel","PieSeries","FunnelSeries","PyramidSeries","AccumulationDataLabel","AccumulationLegend","AccumulationTooltip","legendSettings","tooltip","enableSmartLabels","center","pieCenter","enableBorderOnMouseMove","highLightMode","highlightMode","highlightPattern","titleStyle","subTitle","subTitleStyle","margin","background","selectionMode","accumulationSelectionMode","isMultiSelect","enableExport","selectedDataIndexes","enableAnimation","useGroupingSeparator","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","tooltipRender","loaded","resized","zoomSettings","chartArea","crosshair","isTransposed","enableSideBySidePlacement","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","axisLabelRender","multiLevelLabelClick","hideWaitingPopup","hideSpinner","fieldListSpinnerElement","seriesIndex","showMultiLevelLabels","pointIndex","creatMenu","accumulationMenu","scrollX","drillThroughModule","percentChart","percentAggregateTypes","valCnt","divider","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","plotOffsetTop","lengthofFormat","colIndexColl","rKeys_2","cKeys_2","fieldCount","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","span","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","getZoomFactor","calculatedWidth","seriesLength","templateFn","templateParser","tooltipTemplate","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","majorTickLines","enableSelectionZooming","seriesName","point","columnText","rowText","getTooltipTemplate","rowFields","getHeaderField","columnFields","templateVariable","valueField","tooltipTemplateFn","isChartLoaded","alignIcon","multilabelAxisName","updateView","isServerWaitingPopup","getString","getMenuItems","expand","collapse","drillMenuOpen","drillMenuSelect","enableItems","levelCol","labelInfo","memberUqName","fieldAvail","memIndex","drillArgs","drillItem","renderPivotGrid","drillItems","uName","zoomModule","isZoomed","axisLabelFont","fontWeight","axisTitleFont","chartTitleFont","chartSubTitleFont","crosshairLabelFont","tooltipLabelFont","legendLabelFont","stripLineLabelFont","stockEventFont","Animation","ChartSegment","Margin","Border","Offset","Indexes","ChartArea","CrosshairSettings","DataLabelSettings","right","PivotChartConnectorStyle","PivotChartDataLabel","MarkerSettings","ErrorBarCapSettings","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","CrosshairTooltip","StripLineSettings","LabelBorder","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","ChartLocation","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","PivotChartSeriesErrorSettings","PivotChartSeriesTrendline","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","PivotChartSettingsIndexes","PivotChartSettingsMargin","PivotAxis","PivotTooltipSettings","PivotPieChartCenter","PivotZoomSettings","ChartSettings","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isPaging","updateDrilledItems","fieldDataObj","fieldListObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","frameMDXQuery","request","LCID","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","calColumnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","drillQuery","getAttributeDrillQuery","updateValueSortQuery","getMeasurePos","drilledMembers_1","drillInfo_1","result","getDrillLevel","getDimensionPos","isExist","isAttributeMemberExist","levelQuery","getHierarchyQuery","isAvailable","hierarchyPosition","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_2","rawQuery","drillInfo_2","heirarchize","slicers","i_1","colUqName","getDimensionUniqueName","slicerUqName","dimension","hierarchyNode","curElement","hierarchyNode_1","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","namedSetsPosition","colDepth","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","isColDrill","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","getCulture","getAxisFields","frameSortObject","setNamedSetsPosition","updateFieldlist","loadCalculatedMemberElements","updateFilterItems","xmlDoc","xmlaCellSet","countCells","newPage","prevPage","colMeasures","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","rowTuples","valCollection","measureInfo","getMeasureInfo","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","tuples","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","startTupPos","lastMesPos","memPos","prevParent","typeColl","drillStartPos","startDrillUniquename","drillEndPos","firstTupMembers","attrDrill","checkAttributeDrill","drillAllow","withoutAllAllow","parentUniqueName","lastPos","lastMemPos","withoutAllDrilled","depth","getDepth","getCaptionCollectionWithMeasure","showTotals","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","memberUName","memberCaption","parentUName","UName","currUName","currCaption","currLevel","uNames","uNamesKeys","captions","captionsKeys","uCollection","parentLevel","setDrillInfo","tuple","captionColection","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","_this_1","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberPos","memberDepth","getMeasurePosition","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","levelNameKeys","isAdjacentToMeasure","isAdjacent","childMember","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","rPos","currentTuple","frameUniqueName","getParentUname","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","newPos","temporary","grandTotal","arrange","prevRowCell","prevColValue","prevColIndex","prevColRowCell","key_1","sortColumnHeaders","length_1","cellPos","l","length_2","q","weight","hgt","height1","hgt1","leng","m","pElement","cElement","o","hasLastMeasure","measureAvail","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","rowEndPos","startRowOrdinal","lastColCell","valElement","formatDate","mAxis","measureAxis","measureIndex","valueInfo","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","values_2","vOrdinalIndex","cRow","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillField","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","actualFilter","expression","parentHierarchy","isSelect","getFieldListItems","getAggregateType","isMembersAvail","selectedElements","parentNodes_1","currentItems","selectedElement","drilledItems","maxRows","filteritems","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","isSearchFilter","loadLevelMember","isAllFilterData","filterParentQuery","dimProp","generateMembers","loadLevelMembers","memberUQName","getCalcChildMembers","searchString","maxNodeLimit","parentUqName","expanded","nodeSelect","fieldDate","hierarchyElements","fields_2","isAllMemberAvail","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","spriteCssClass","fields_3","dimensionName","dimensionCaption","defaultHierarchy","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_4","fieldObj","loadHierarchyElements","dataFields_4","fields_5","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_6","levelCaption","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_7","measureGRPName","measuresGroups","success","Ajax","contentType","beforeSend","onSuccess","DOMParser","parseFromString","onFailure","send","httpRequest","setRequestHeader","btoa","connectionInfo","getMDXQuery","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","lastFilterInfo","lastCalcFieldInfo","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","serverCustomProperties","remoteData","defaultItems","isCellBoxMultiSelection","isStaticRefresh","posCount","isModified","isInitialRendering","needsID","pivotRefresh","Component","XMLHttpRequest","setValue","mergePersistPivotData","PivotView_1","requiredModules","modules","allowConditionalFormatting","allowNumberFormatting","toolbarTemplate","preRender","isIE","info","isTouchMode","initProperties","renderToolTip","defaultLocale","total","noValue","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Min","SampleVar","PopulationVar","RunningTotals","Max","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","csv","png","jpeg","svg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","true","false","decimalPlaces","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormatingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","L10n","isDragging","onBeforeTooltipOpen","showTooltip","showTipPointer","mouseTrail","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","aggregateGroup","buildDefaultItems","getFieldByID","exportGroupItems","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","chartPointClick","updatePageSettings","chartModule","colValues","rowValues","heightAsNumber","getWidthAsNumber","loadData","guid","renderEmptyGrid","withCredentials","onreadystatechange","onReadyStateChange","readyState","DONE","responseText","currentAction","currentMembers","dateMembers","updateFilterEvents","pivotCount","RowCount","ColumnCount","RowStartPosition","ColumnStartPosition","RowFirstLevel","ColumnFirstLevel","HeaderText","HeaderDelimiter","SortOrder","initEngine","isRequireUpdate","endDialog","exactSize","aggField","cField","rawDataArgs","editArgs","enableDrillThrough","stringify","params","aggregatedItem","calculatedItem","fetchRawDataArgs","hash","customArguments","jsonObject","cellTemplateFn","spinnerTemplate","createSpinner","loadArgs","updateClass","renderComplete","generateData","events.dataReady","onContentReady","keyEntity","addOnPersist","loadPersistData","persistData","pivotData","blazdataSource","localStorage","getItem","showConditionalFormattingDialog","withHeader","onPropertyChanged","updateGroupingReport","savedDataSourceSettings","clonedDataSet","refreshData","treeViewModule","fieldTable","renderLayout","dataSet","refreshToolbar","createChartMenu","compile","innerHtml","tempElement","firstChild","clearTemplate","resetBlazorTemplate","clonedDataSource","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","formatUnit","showSpinner","isRefreshGrid","isSorted","isFiltered","isAggChange","isCalcChange","interopArguments","enginePopulatedEventMethod","datasourceSettings","excelExportModule","pdfExportModule","chartExport","orientation","exportModule","printChart","print","chartDrillInfo","clonedDrillMembers_1","drillMembers","drilledItem_1","drillArgs_1","onOlapDrill","clonedDrillMembers","isAttributeHierarchy","clonedMembers","drillSet","memberItem","itemPos","clonedMembers_1","drilledMember","drillItemCollection","member_1","clonedMembers_2","isEmptyGrid","mCnt","verOffset","unwireEvents","gridCells","gridCells_1","templateObject","isGrandTotal","isTotal","valueSortInfo","updateBlazorTemplate","hasField","getRowText","getColText","limit","colText","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","parentAt","lastSelectedElement","mouseMoveHandler","mouseUpHandler","CellClicked","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","setCommonColumnsWidth","onWindowResize","rowDeselect","selectRow","cellClick","getSelectedCellsPos","setSavedSelectedCells","applyRowSelection","rCount","colStart","colEnd","rowStart","isCtrl","showPopup","queryStringArray","isToggle","activeColumns","actColPos","rowSelectedList","isTargetSelected","getTable","scrollModule","setWidth","setHeight","isArray","pivot_3","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalLen","blazPivotValues","valLen","getData","aggregateObj","bindTriggerEvents","getObject","executeQuery","requiresCount","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","insertRule","createTextNode","conditionalSettings","ilen","jlen","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","isDateGroupUpdated","drillObj","settingsObj","isExists","removeButtonFocus","numberFormattingModule","isServerRendered","cls.ROOT","showNumberFormattingDialog","NotifyPropertyChanges","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","cancelButtonClick","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldList","pivotFieldList","pivotChange","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","dialogOpen","offsetTop","adaptiveElement","selectedNodes","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","onShowFieldList","show","updateAdaptiveCalculatedField","TreeViewRenderer","fieldListSort","renderTreeDialog","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","centerDiv","axisHeader","renderTreeView","headerWrapper","None","Ascend","Descend","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeStateChange","autoCheck","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","dialogClose","textChange","addNode","liList","disabledList","fieldInfo","draggedNode","dragEventArgs","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","droppableButton","wrapperElement","li_1","id_1","selectedNode_1","fieldInfo_1","updateCheckState","updateSelectedNodes","updateReportSettings","updateNodeStateChange","removeFieldArgs","dropArgs","chkState","checkClass","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","updateDropIndicator","PivotButton","menuOption","PivotFieldList","axisField","AxisFieldRenderer","renderPivotButton","valuePos","showValuesButton","groupingBarSettings","isMeasureFieldsAvail","buttonWrapper","data-tag","cls.PIVOT_BUTTON_CLASS","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","calcElement","removeElement","pivotButton","createDraggable","valueData","valueFiedDropDownList","ddlDiv","availColindex","columnData","firstValueRow","columnFieldDropDownList","delimiter_1","aggregation","filterMem","updateButtontext","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","validateDropdown","createSummaryType","createMenuOption","openCalculatedFieldDialog","buttonCall","draggable","Draggable","clone","enableTailMode","enableAutoScroll","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","filterCLass","cls.FILTER_COMMON_CLASS","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","loop","actualFilterItems","updatedFilterItems_1","cloneElement","intDestroy","detach","fieldListPopup","bindEvents","cursorAt","isNOU","targetTouches","cursor","isButtonDropped","droppableTarget","thisObj","pivotObj","mouseEventArgs","$this_1","parsedData","bindDialogEvents","updateDialogButtonEvents","ClearFilter","updateFilterState","updateCustomFilter","removeDataSourceSettings","inputElementString","focusElement","filterEventArgs","refreshPivotButtonState","setFocus","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","sNodeLength","pivotButtons_2","selectedButton","pivotButtons_3","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","captionData","frameCustomProperties","staticPivotGridModule","fieldListRender","requireRefresh","pivotDataSet","this$_2","getFieldCaption","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","dataArgs","updateOlapDataSource","pivotId","ID","VARP","CALC","isFormula","existingReport","dialog","inputObj","droppable","newFields","isFieldExist","formulaText","fieldText","formatText","isEdit","currentFieldName","confirmPopUp","displayMenu","cls.GRID_REMOVE","createConfirmDialog","fieldClickHandler","cls.FORMAT","renderMobileLayout","accordionClickHandler","originalEvent","optionElement","accordionCreated","allElement","accordion","append","clearFormula","treeNode","edited","customString","memberTypeDrop","hierarchyDrop","formatDrop","readonly","curMenu","removeCalcField","calcfields","removeItem","removeNodes","validSummaryTypes","getValidSummaryType","duplicateTypes","createMenu","offset","selectContextMenu","applyFormula","currentObj","calculatedField","getCalculatedFieldInfo","calcInfo","currentFormula","updateFormatSettings","addFormula","newFormat","isFormatExist","showError","cls.CALCINPUT","calcFields","getFieldListData","typeVal","icon","fieldDropped","textCovered","currentValue","cursorPos","selectionStart","textAfterText","textBeforeText","setSelectionRange","createDialog","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","timeOut","renderDialogElements","outerDiv","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","olapCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","formatStringData","createOlapDropElements","mData","fData","fieldData","memberTypeData_1","formatStringData_1","memberTypeObj","hierarchyListObj","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","editElement","editWrapper","liTextElement_1","spaceElement","prepend","createTypeContainer","input","data-ftxt","data-value","menuTypes","getAccordionData","cls.FLAT","cancelBtnClick","formatInputObj","Accordion","expanding","accordionExpand","clicked","created","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","isRemove","replaceFormula","cls.OK_BUTTON_CLASS","FieldList","initiateModule","containerWrapper","aggregateCellInfo","updateControl","currentWidth","actualWidth","abs","AxisFields","indentDiv","GroupingBar","touchObj","Touch","tapHold","tapHoldHandler","groupingTable","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","rowPanel","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","axisPanels_1","displayMode","groupingChartTable","appendToElement","emptyRowCount","emptyHeader","colGroupElement","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","rowHeader_1","rhElement","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","valueColWidth","setColWidth","dropIndicatorUpdate","ConditionalFormatting","fieldsDropDown","conditionsDropDown","fontNameDropDown","fontSizeDropDown","addButtonClick","cls.FLAT_CLASS","refreshConditionValues","destroyColorPickers","addFormat","createDialogElements","renderDropDowns","renderColorPicker","innerDiv","table","tRow","td","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","cls.INPUT","valuespan","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","popupHeight","popupWidth","measureChange","conditionChange","fontNames","fontNameChange","fontSizeChange","ColorPicker","cls.FORMAT_COLOR_PICKER","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","rgb","round","currentReport","createToolbar","renderDialog","tool","getItems","allowKeyboard","viewStr","replaceChild","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","resolve","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","toDisable","cls.TOOLBAR_GRID","menuItemClick","validTypes","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","reportLoad","itemData","saveReport","saveArgs","dialogShow","mdxQueryDialog","mdxDialog","renderMDXDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","newArgs","createNewReport","okBtnClick","copyMDXQuery","textArea","execCommand","err","reportInput","isExist_2","_this_3","reports_1","updateReportList","isExist_3","_this_4","renameText","renameArgs","isExist_1","_this_2","okButtonClick","removeArgs","isReportExists","getValidChartType","separator","cls.TOOLBAR_CHART","chartMenu","whitespaceRemove","focusToolBar","beforeItemRender","multipleAxesCheckbox","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","subTotalMenu","updateSubtotalSelection","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","updateItemElements","itemElements_1","inputCheckbox","checkboxObj","getLableState","showLableState","getAllChartItems","cls.PIVOT_DISABLE_ICON","_this_5","PdfPageOrientation","Landscape","createChartTypeDialog","updateChartType","chartTypes","chartDialog","chartTypesDialog","getDialogContent","chartTypeDialogUpdate","checkedShow","chartLableState","isMultiAxis","mainWrapper","optionWrapperDiv","optionTextDiv","dropOptionDiv","chartTypeDatasource","changeDropDown","checkboxWrap","labelCheckboxWrap","NumberFormatting","lastFormattedValue","updateFormatting","formatObject","renderControls","outerElement","tValue","valueLable","valueDrop","formatLable","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","valueChange","customUpdate","formatDropDown","dropDownChange","groupingDropDown","groupingChange","decimalDropDown","decimalChange","first","updateFormattingDialog","getIndexValue","insertFormat","formatName","isUpdate","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","currentField","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","checkBoxSelectionModule","activeLi","selectedInterval","intervalObj","min","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupOrders_1","orderedSettings","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.PivotView","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping"],"mappings":"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"}