{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/common/actions/common.js","../../src/pivotview/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/common/base/themes.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/base/pivotview.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        val = (value && value.getDay) ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : !isNaN(Number(value)) ?\n            'number' : typeof (value);\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                /* tslint:disable:no-any */\n                var framedSet = {};\n                /* tslint:enable:no-any */\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] = this.getClonedPivotValueObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotUtil.getClonedPivotValueObj = function (data) {\n        var keyPos = 0;\n        /* tslint:disable:no-any */\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.getDefinedObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                if (!(data[fields[keyPos]] === null || data[fields[keyPos]] === undefined)) {\n                    framedSet[fields[keyPos]] = data[fields[keyPos]];\n                }\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.isContainCommonElements = function (collection1, collection2) {\n        var isContain = false;\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    /* tslint:enable:no-any */\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = this.getDefinedObj({\n            type: dataSourceSettings.type,\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            fieldMapping: this.cloneFieldSettings(dataSourceSettings.fieldMapping),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings),\n            showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n            authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n        });\n        /* tslint:enable:no-any */\n        return clonesDataSource;\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            this.setPivotProperties(control, {\n                dataSourceSettings: this.getDefinedObj({\n                    type: dataSourceSettings.type,\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    fieldMapping: dataSourceSettings.fieldMapping,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings,\n                    showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n                    authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n                })\n                /* tslint:enable:no-any */\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                var field = {};\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type,\n                    dataType: set.dataType,\n                    showFilterIcon: set.showFilterIcon,\n                    showSortIcon: set.showSortIcon,\n                    showRemoveIcon: set.showRemoveIcon,\n                    showValueTypeIcon: set.showValueTypeIcon,\n                    showEditIcon: set.showEditIcon,\n                    allowDragAndDrop: set.allowDragAndDrop\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    order: set.order\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneAuthenticationObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                userName: collection.userName,\n                password: collection.password\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotUtil.getFieldInfo = function (fieldName, control) {\n        var rows = this.cloneFieldSettings(control.dataSourceSettings.rows);\n        var columns = this.cloneFieldSettings(control.dataSourceSettings.columns);\n        var values = this.cloneFieldSettings(control.dataSourceSettings.values);\n        var filters = this.cloneFieldSettings(control.dataSourceSettings.filters);\n        var fields = [rows, columns, values, filters];\n        for (var i = 0, len = fields.length; i < len; i++) {\n            for (var j = 0, cnt = (fields[i] ? fields[i].length : 0); j < cnt; j++) {\n                if (fields[i][j] && fields[i][j].name === fieldName) {\n                    /* tslint:disable-next-line:max-line-length */\n                    return { fieldName: fieldName, fieldItem: fields[i][j], axis: i === 0 ? 'rows' : i === 1 ? 'columns' : i === 2 ? 'values' : 'filters', position: j };\n                }\n            }\n        }\n        var fieldList = control.dataType === 'olap' ?\n            control.olapEngineModule.fieldList[fieldName] : control.engineModule.fieldList[fieldName];\n        var fieldItem = (fieldList ? {\n            name: fieldName,\n            caption: fieldList.caption,\n            baseField: fieldList.baseField,\n            baseItem: fieldList.baseItem,\n            isCalculatedField: fieldList.isCalculatedField,\n            isNamedSet: fieldList.isNamedSets,\n            showNoDataItems: fieldList.showNoDataItems,\n            showSubTotals: fieldList.showSubTotals,\n            type: fieldList.aggregateType,\n            showFilterIcon: fieldList.showFilterIcon,\n            showSortIcon: fieldList.showSortIcon,\n            showRemoveIcon: fieldList.showRemoveIcon,\n            showValueTypeIcon: fieldList.showValueTypeIcon,\n            showEditIcon: fieldList.showEditIcon,\n            allowDragAndDrop: fieldList.allowDragAndDrop\n        } : undefined);\n        return { fieldName: fieldName, fieldItem: fieldItem, axis: 'fieldlist', position: -1 };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.isButtonIconRefesh = function (prop, oldProp, newProp) {\n        var isButtonRefresh = false;\n        try {\n            if (prop === 'dataSourceSettings' && oldProp.dataSourceSettings && newProp.dataSourceSettings) {\n                var propValidation = ['notAvail', 'notAvail', 'notAvail', 'notAvail'];\n                var oldAxesProp = Object.keys(oldProp.dataSourceSettings);\n                var newAxesProp = Object.keys(newProp.dataSourceSettings);\n                if (oldAxesProp && newAxesProp && newAxesProp.length > 0 && oldAxesProp.length === newAxesProp.length) {\n                    var axes = ['rows', 'columns', 'values', 'filters'];\n                    /* tslint:disable:no-any */\n                    for (var i = 0; i < newAxesProp.length; i++) {\n                        var oldAxis = (newAxesProp[i] in oldProp.dataSourceSettings && !isNullOrUndefined(oldProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(oldProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        var newAxis = (newAxesProp[i] in newProp.dataSourceSettings && !isNullOrUndefined(newProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(newProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        if (axes.indexOf(newAxesProp[i]) !== -1 && axes.indexOf(oldAxesProp[i]) !== -1 &&\n                            oldAxis && newAxis && newAxis.length > 0 && oldAxis.length === newAxis.length) {\n                            /* tslint:disable-next-line:max-line-length */\n                            var options = ['showFilterIcon', 'showSortIcon', 'showRemoveIcon', 'showValueTypeIcon', 'showEditIcon', 'allowDragAndDrop'];\n                            for (var j = 0; j < newAxis.length; j++) {\n                                var oldAxisProp = Object.keys(oldProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                var newAxisProp = Object.keys(newProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                for (var k = 0; k < newAxisProp.length; k++) {\n                                    if (options.indexOf(newAxisProp[k]) !== -1 && options.indexOf(oldAxisProp[k]) !== -1) {\n                                        propValidation[i] = 'update';\n                                    }\n                                    else {\n                                        propValidation[i] = 'break';\n                                        break;\n                                    }\n                                }\n                                if (propValidation[i] === 'break') {\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            propValidation[i] = 'break';\n                        }\n                        if (propValidation[i] === 'break') {\n                            break;\n                        }\n                    }\n                    /* tslint:enable:no-any */\n                }\n                var a = 0;\n                var b = 0;\n                var c = 0;\n                for (var _i = 0, propValidation_1 = propValidation; _i < propValidation_1.length; _i++) {\n                    var validation = propValidation_1[_i];\n                    if (validation === 'break') {\n                        a++;\n                    }\n                    if (validation === 'notAvail') {\n                        b++;\n                    }\n                    if (validation === 'update') {\n                        c++;\n                    }\n                }\n                isButtonRefresh = (a > 0 || b === 4) ? false : (a === 0 && b < 4 && c > 0);\n            }\n        }\n        catch (exception) {\n            isButtonRefresh = false;\n        }\n        return isButtonRefresh;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPivotValues = function (pivotValues) {\n        var values = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                values[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        values[i][j] = {\n                            axis: pivotValues[i][j].Axis,\n                            actualText: pivotValues[i][j].ActualText,\n                            indexObject: pivotValues[i][j].IndexObject,\n                            index: pivotValues[i][j].Index,\n                            rowHeaders: pivotValues[i][j].RowHeaders,\n                            columnHeaders: pivotValues[i][j].ColumnHeaders,\n                            formattedText: pivotValues[i][j].FormattedText,\n                            actualValue: pivotValues[i][j].ActualValue,\n                            rowIndex: pivotValues[i][j].RowIndex,\n                            colIndex: pivotValues[i][j].ColIndex,\n                            colSpan: pivotValues[i][j].ColSpan,\n                            level: pivotValues[i][j].Level,\n                            rowSpan: pivotValues[i][j].RowSpan,\n                            isSum: pivotValues[i][j].IsSum,\n                            isGrandSum: pivotValues[i][j].IsGrandSum,\n                            valueSort: pivotValues[i][j].ValueSort,\n                            ordinal: pivotValues[i][j].Ordinal,\n                            hasChild: pivotValues[i][j].HasChild,\n                            isDrilled: pivotValues[i][j].IsDrilled,\n                            value: pivotValues[i][j].Value,\n                            type: pivotValues[i][j].Type,\n                            members: pivotValues[i][j].Members\n                        };\n                    }\n                }\n            }\n        }\n        return values;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatFieldList = function (fieldList) {\n        var keys = Object.keys(fieldList);\n        var fList = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (fieldList[keys[i]]) {\n                fList[keys[i]] = {\n                    id: fieldList[keys[i]].Id,\n                    caption: fieldList[keys[i]].Caption,\n                    type: fieldList[keys[i]].Type,\n                    formatString: fieldList[keys[i]].FormatString,\n                    index: fieldList[keys[i]].Index,\n                    members: fieldList[keys[i]].Members,\n                    formattedMembers: fieldList[keys[i]].FormattedMembers,\n                    dateMember: fieldList[keys[i]].DateMember,\n                    filter: fieldList[keys[i]].Filter,\n                    sort: fieldList[keys[i]].Sort,\n                    aggregateType: fieldList[keys[i]].AggregateType,\n                    baseField: fieldList[keys[i]].BaseField,\n                    baseItem: fieldList[keys[i]].BaseItem,\n                    filterType: fieldList[keys[i]].FilterType,\n                    format: fieldList[keys[i]].Format,\n                    formula: fieldList[keys[i]].Formula,\n                    isSelected: fieldList[keys[i]].IsSelected,\n                    isExcelFilter: fieldList[keys[i]].IsExcelFilter,\n                    showNoDataItems: fieldList[keys[i]].ShowNoDataItems,\n                    isCustomField: fieldList[keys[i]].IsCustomField,\n                    showFilterIcon: fieldList[keys[i]].ShowFilterIcon,\n                    showSortIcon: fieldList[keys[i]].ShowSortIcon,\n                    showRemoveIcon: fieldList[keys[i]].ShowRemoveIcon,\n                    showEditIcon: fieldList[keys[i]].ShowEditIcon,\n                    showValueTypeIcon: fieldList[keys[i]].ShowValueTypeIcon,\n                    allowDragAndDrop: fieldList[keys[i]].AllowDragAndDrop,\n                    isCalculatedField: fieldList[keys[i]].IsCalculatedField,\n                    showSubTotals: fieldList[keys[i]].ShowSubTotals\n                };\n            }\n        }\n        return fList;\n    };\n    PivotUtil.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    PivotUtil.getLocalizedObject = function (control) {\n        var locale = new Object();\n        locale[\"Null\"] = control.localeObj.getConstant('null');\n        locale[\"Years\"] = control.localeObj.getConstant('Years');\n        locale[\"Quarters\"] = control.localeObj.getConstant('Quarters');\n        locale[\"Months\"] = control.localeObj.getConstant('Months');\n        locale[\"Days\"] = control.localeObj.getConstant('Days');\n        locale[\"Hours\"] = control.localeObj.getConstant('Hours');\n        locale[\"Minutes\"] = control.localeObj.getConstant('Minutes');\n        locale[\"Seconds\"] = control.localeObj.getConstant('Seconds');\n        locale[\"QuarterYear\"] = control.localeObj.getConstant('QuarterYear');\n        locale[\"Of\"] = control.localeObj.getConstant('of');\n        locale[\"Qtr\"] = control.localeObj.getConstant('qtr');\n        locale[\"Undefined\"] = control.localeObj.getConstant('undefined');\n        locale[\"GroupOutOfRange\"] = control.localeObj.getConstant('groupOutOfRange');\n        return locale;\n    };\n    PivotUtil.generateUUID = function () {\n        var d = new Date().getTime();\n        var d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16;\n            if (d > 0) {\n                r = (d + r) % 16 | 0;\n                d = Math.floor(d / 16);\n            }\n            else {\n                r = (d2 + r) % 16 | 0;\n                d2 = Math.floor(d2 / 16);\n            }\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        /** @hidden */\n        this.fieldKeys = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        this.fieldMapping = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn) {\n        this.getValueCellInfo = fn;\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        var fields;\n        var val;\n        var filterRw;\n        this.globalize = new Internationalization();\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.enableSort = dataSource.enableSorting;\n        this.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true : dataSource.showHeaderWhenEmpty;\n        this.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true : dataSource.showColumnSubTotals;\n        this.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true : dataSource.showRowGrandTotals;\n        this.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true : dataSource.showColumnGrandTotals;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = dataSource;\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = (isBlazor() && !dataSource.dataSource && this.data && this.data.length > 0) ?\n                this.data : dataSource.dataSource;\n        }\n        if (this.data && this.data[0]) {\n            if (!this.fieldList) {\n                if (dataSource.type === 'CSV') {\n                    this.fields = this.data.shift();\n                }\n                else {\n                    this.fields = Object.keys(this.data[0]);\n                }\n                for (var i = 0; i < this.fields.length; i++) {\n                    this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n                }\n            }\n            if (customProperties && customProperties.pageSettings && customProperties.pageSettings.allowDataCompression) {\n                this.actualData = this.data;\n                this.data = this.getGroupedRawData(dataSource);\n            }\n            this.rows = dataSource.rows ? dataSource.rows : [];\n            this.columns = dataSource.columns ? dataSource.columns : [];\n            this.filters = dataSource.filters ? dataSource.filters : [];\n            this.values = dataSource.values ? dataSource.values : [];\n            this.formats = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.groups = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            fields = this.getGroupData(this.data);\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n            }\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMutiMeasures = this.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = this.pageSettings && this.pageSettings.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(dataSource, Object.keys(this.fieldList));\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var columnLength = this.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.columns[columnLength].name] = this.columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (dataSource, fields) {\n        var report = {};\n        report[0] = dataSource.rows;\n        report[1] = dataSource.columns;\n        report[2] = dataSource.values;\n        report[3] = dataSource.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if ((this.excludeFields.indexOf(report[pos][cnt].name) > -1) || (!isNullOrUndefined(fields) && fields.indexOf(report[pos][cnt].name) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                }\n            }\n            pos++;\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = this.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[this.fieldKeys[countFields[vPos]]] = isNullOrUndefined(currData[this.fieldKeys[countFields[vPos]]]) ? currData[this.fieldKeys[countFields[vPos]]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[this.fieldKeys[headerFields[hPos]]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[this.fieldKeys[currFieldName]];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                groupRawData[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    /* tslint:enable */\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getGroupData = function (data) {\n        var _this = this;\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if (group.type === 'Date' && this_1.groupingFields[fieldName]) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' || !this_1.groupingFields[fieldName]) {\n                        /* tslint:disable:typedef */\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (Number(a[_this.fieldKeys[fieldName]]) > Number(b[_this.fieldKeys[fieldName]]))\n                                ? 1 : ((Number(b[_this.fieldKeys[fieldName]]) > Number(a[_this.fieldKeys[fieldName]]))\n                                ? -1 : 0); });\n                        }\n                        /* tslint:enable:typedef */\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                else if (group.type === 'Custom' && this_1.fields.indexOf(fieldName + '_custom_group') > -1) {\n                    return { value: fieldkeySet };\n                }\n                var len = data.length;\n                /* tslint:disable:max-line-length */\n                while (len--) {\n                    var item = data[len];\n                    if (item[this_1.fieldKeys[fieldName]] && group.type === 'Date') {\n                        var date = new Date(item[this_1.fieldKeys[fieldName]].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setFullYear(date.getFullYear())).toString());\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), newDate.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setHours(date.getHours())).toString());\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMinutes(date.getMinutes())).toString());\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setSeconds(date.getSeconds())).toString());\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, Number(item[this_1.fieldKeys[fieldName]]));\n                        item[this_1.fieldKeys[fieldName]] = isInRangeAvail ? undefined : item[this_1.fieldKeys[fieldName]];\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Custom' && group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            {\n                                var cGroup = customGroups[i];\n                                if (cGroup.items && cGroup.items.length > 1) {\n                                    customGroupFieldName = newFieldName;\n                                    this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                    if (this_1.fields.indexOf(newFieldName) === -1) {\n                                        this_1.fields.push(newFieldName);\n                                    }\n                                    var isDataMatch = PivotUtil.inArray(item[this_1.fieldKeys[fieldName]].toString(), cGroup.items) === -1 ? false : true;\n                                    item[this_1.fieldKeys[newFieldName]] = (isDataMatch ? (cGroup.groupName && cGroup.groupName !== '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue && groupValue !== item[this_1.fieldKeys[fieldName]].toString()) ?\n                                        groupValue : item[this_1.fieldKeys[fieldName]].toString());\n                                    groupValue = item[this_1.fieldKeys[newFieldName]];\n                                }\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    //this.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.rows;\n                                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                                    while (gCnt--) {\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + (actualField.caption ? actualField.caption : actualField.name) + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                                showFilterIcon: actualField.showFilterIcon,\n                                                showSortIcon: actualField.showSortIcon,\n                                                showEditIcon: actualField.showEditIcon,\n                                                showRemoveIcon: actualField.showRemoveIcon,\n                                                showSubTotals: actualField.showValueTypeIcon,\n                                                allowDragAndDrop: actualField.allowDragAndDrop\n                                            };\n                                            axis.splice(i, 0, newField);\n                                        }\n                                    }\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.formats.length; i < len_3; i++) {\n                            if (this_1.formats[i].name === groupKeys[gCnt]) {\n                                this_1.formats.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.formats.push(formatSettings);\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var startValue = void 0;\n                    var endValue = void 0;\n                    var cStartValue = void 0;\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    while (cnt < dataLength) {\n                        unframedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        if (data[cnt][this_1.fieldKeys[fieldName]] && framedSet.indexOf(Number(data[cnt][this_1.fieldKeys[fieldName]])) === -1) {\n                            framedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        }\n                        cnt++;\n                    }\n                    var framedSetLength = Math.max.apply(Math, framedSet);\n                    for (var i = framedSet[0], len_4 = framedSetLength; i < len_4; i++) {\n                        if (unframedSet.indexOf(i) < 0) {\n                            var duplicateData = this_1.frameData(data[0]);\n                            duplicateData[this_1.fieldKeys[fieldName]] = i;\n                            var index = unframedSet.lastIndexOf(i - 1);\n                            unframedSet.splice(index + 1, 0, i);\n                            data.splice(index + 1, 0, duplicateData);\n                        }\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        if (data[cnt] && data[cnt][this_1.fieldKeys[fieldName]]) {\n                            cStartValue = Number(data[cnt][this_1.fieldKeys[fieldName]]);\n                            cEndValue = cStartValue + (group.rangeInterval - 1);\n                            startValue = (!startValue) ? cStartValue : startValue;\n                            endValue = ((!endValue) ? ((cEndValue > framedSetLength) ? framedSetLength : cEndValue) : ((endValue > framedSetLength) ? framedSetLength : endValue));\n                            if (cStartValue >= startValue && cStartValue <= endValue) {\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            else if (cStartValue > endValue && cStartValue === endValue + 1) {\n                                startValue = endValue + 1;\n                                endValue = ((startValue + (group.rangeInterval - 1) > framedSetLength) ? framedSetLength : startValue + (group.rangeInterval - 1));\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            var keys = Object.keys(data[cnt]);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((data[cnt][key]) ? true : false);\n                            }\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? data[cnt] : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_5 = this_1.formats.length; i < len_5; i++) {\n                        if (this_1.formats[i].name === fieldName) {\n                            this_1.formats.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var dataFields = this_1.rows;\n                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                    var pattern = [];\n                    if (!caption || caption === '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption === '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                        showSubTotals: actualField.showValueTypeIcon,\n                                        allowDragAndDrop: actualField.allowDragAndDrop,\n                                        showFilterIcon: actualField.showFilterIcon,\n                                        showSortIcon: actualField.showSortIcon,\n                                        showRemoveIcon: actualField.showRemoveIcon,\n                                        showEditIcon: actualField.showEditIcon\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption === '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                        showRemoveIcon: customGroupField.showRemoveIcon,\n                                        showSubTotals: customGroupField.showValueTypeIcon,\n                                        allowDragAndDrop: customGroupField.allowDragAndDrop,\n                                        showFilterIcon: customGroupField.showFilterIcon,\n                                        showSortIcon: customGroupField.showSortIcon,\n                                        showEditIcon: customGroupField.showEditIcon\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.formats));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.formats.push(formatfield);\n                    }\n                }\n                /* tslint:enable:max-line-length */\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        //this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.frameData = function (data) {\n        var fields = Object.keys(data);\n        var keyPos = 0;\n        var framedSet = {};\n        while (keyPos < fields.length) {\n            framedSet[fields[keyPos]] = undefined;\n            keyPos++;\n        }\n        return framedSet;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (startValue && cValue < startValue || endValue && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getFormattedFields = function (fields) {\n        var cnt = this.formats.length;\n        while (cnt--) {\n            this.formatFields[this.formats[cnt].name] = this.formats[cnt];\n            if (this.formats[cnt].type) {\n                this.dateFormatFunction[this.formats[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(this.formats[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: this.formats[cnt].type\n                    })\n                };\n            }\n            // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n            // if (fields[len] && fields[len].name === this.formats[cnt].name) {\n            //     this.formatFields[fields[len].name] = this.formats[cnt];\n            // }\n            // }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var keys = this.fields;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        this.getFormattedFields(dataFields);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var lenE = this.excludeFields.length;\n        lenE = lenE - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.excludeFields[lenE]);\n            this.fields.splice(index, 1);\n            if (this.fieldList) {\n                delete this.fieldList[this.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var len = keys.length;\n        var dataTypes = ['string', 'number', 'datetime', 'date', 'boolean'];\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    this.fieldList[key].showFilterIcon = (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true;\n                    this.fieldList[key].showRemoveIcon = (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true;\n                    this.fieldList[key].showSortIcon = (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true;\n                    this.fieldList[key].showEditIcon = (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true;\n                    this.fieldList[key].showValueTypeIcon = (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true;\n                    this.fieldList[key].allowDragAndDrop = (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true;\n                    this.fieldList[key].isCalculatedField = (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false;\n                    this.fieldList[key].showNoDataItems = (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false;\n                    this.fieldList[key].showSubTotals = (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true;\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].formattedMembers = {};\n                        this.fieldList[key].members = {};\n                    }\n                }\n                else {\n                    type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                        field.dataType.toLowerCase() : type;\n                    this.fieldList[key] = {\n                        caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                        id: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        isSelected: false,\n                        sort: isSort ? 'Ascending' : 'None',\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                        showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                            field.showRemoveIcon : true,\n                        showFilterIcon: (field && 'showFilterIcon' in field) ?\n                            field.showFilterIcon : true,\n                        showSortIcon: (field && 'showSortIcon' in field) ?\n                            field.showSortIcon : true,\n                        showNoDataItems: (field && 'showNoDataItems' in field) ?\n                            field.showNoDataItems : false,\n                        isCalculatedField: (field && 'isCalculatedField' in field) ?\n                            field.isCalculatedField : false,\n                        showEditIcon: (field && 'showEditIcon' in field) ?\n                            field.showEditIcon : true,\n                        showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                            field.showValueTypeIcon : true,\n                        allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                            field.allowDragAndDrop : true,\n                        showSubTotals: (field && 'showSubTotals' in field) ?\n                            field.showSubTotals : true\n                    };\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                    field.dataType.toLowerCase() : PivotUtil.getType(fields[this.fieldKeys[key]]);\n                this.fieldList[key] = {\n                    id: key,\n                    caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                    showFilterIcon: (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true,\n                    showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true,\n                    showSortIcon: (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true,\n                    showEditIcon: (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true,\n                    showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true,\n                    allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true,\n                    showSubTotals: (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true,\n                    showNoDataItems: (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false,\n                    isCalculatedField: (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false\n                };\n            }\n        }\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.getMappingField = function (key) {\n        var field = {};\n        if (this.fieldMapping.length > 0) {\n            for (var index = 0, cnt = this.fieldMapping.length; index < cnt; index++) {\n                if (this.fieldMapping[index].name === key) {\n                    field = this.fieldMapping[index];\n                    break;\n                }\n            }\n        }\n        return field;\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var cnt = fields.length;\n        var lnt = this.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n                field.allowDragAndDrop = fields[cnt].allowDragAndDrop;\n                field.showFilterIcon = fields[cnt].showFilterIcon;\n                field.showSortIcon = fields[cnt].showSortIcon;\n                field.showRemoveIcon = fields[cnt].showRemoveIcon;\n                field.showValueTypeIcon = fields[cnt].showValueTypeIcon;\n                field.showEditIcon = fields[cnt].showEditIcon;\n                field.showSubTotals = fields[cnt].showSubTotals;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.calculatedFieldSettings[lnt].name].isCalculatedField = true;\n                this.fieldList[this.calculatedFieldSettings[lnt].name].formula = this.calculatedFieldSettings[lnt].formula;\n            }\n        }\n    };\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).replace(/ +/g, '');\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            /* tslint:disable:typedef */\n            field.name = calcProperties ? calcProperties.name : field.name;\n            keys = keys.filter(function (key) { return key !== field.name; });\n            keys.push(field.name);\n            /* tslint:enable:typedef */\n            var formulaType = actualFormula.split('\\\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len];\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar'].indexOf(selectedString) !== -1) {\n                    var index = keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type,\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type,\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.validateValueFields = function () {\n        this.isValueHasAdvancedAggregate = false;\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var value = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(value.type) !== -1) {\n                this.isValueHasAdvancedAggregate = true;\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function (data, indMat) {\n        var keys = this.fields;\n        var dlen = data.length;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        for (var kl = 0; kl < kLn; kl++) {\n            var key = keys[kl];\n            if (!fList[key].members || this.allowDataCompression) {\n                fList[key].members = {};\n            }\n            if (!fList[key].formattedMembers || this.allowDataCompression) {\n                fList[key].formattedMembers = {};\n            }\n            if (!fList[key].dateMember || this.allowDataCompression) {\n                fList[key].dateMember = [];\n            }\n            var members = fList[key].members;\n            var isDataAvail = Object.keys(members).length > 0 ? true : false;\n            var formattedMembers = fList[key].formattedMembers;\n            var dateMember = fList[key].dateMember;\n            var type = fList[key].type;\n            var membersCnt = 0;\n            var fmembersCnt = 0;\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var mkey = data[dl][this.fieldKeys[key]];\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var fKey = mkey;\n                    var formattedValue = (this.pageSettings && !(this.formatFields[key] &&\n                        (['date', 'dateTime', 'time'].indexOf(this.formatFields[key].type) > -1))) ? ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    }) : this.getFormattedValue(mkey, key);\n                    if (formattedValue.formattedText) {\n                        fKey = formattedValue.formattedText;\n                    }\n                    if (!members.hasOwnProperty(mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                        /* tslint:disable-next-line:max-line-length */\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: (formattedValue.dateText ? formattedValue.dateText : formattedValue.actualText) });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                    if (!formattedMembers.hasOwnProperty(fKey)) {\n                        fmembersCnt++;\n                        formattedMembers[fKey] = {\n                            index: [dl], ordinal: fmembersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                    }\n                    else {\n                        formattedMembers[fKey].index.push(dl);\n                    }\n                }\n                if (!(indMat[dl])) {\n                    indMat[dl] = [];\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                else {\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                // }\n            }\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.generateValueMatrix = function (data) {\n        var keys = this.fields;\n        var len = data.length;\n        var vMat = [];\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var record = data[len];\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len])) {\n            vMat[len] = [];\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                vMat[len][tkln] = (flList[key].type === 'number' || isNullOrUndefined(data[len][this.fieldKeys[key]])) ?\n                    !isNaN(Number(data[len][this.fieldKeys[key]])) ?\n                        Number(data[len][this.fieldKeys[key]]) : undefined : 1;\n            }\n        }\n        return vMat;\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.indexMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var filters = this.filters;\n        var isInclude = false;\n        var filter = [];\n        //let type: string;\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln].filter ? cols[cln].filter.items : [];\n             if (filter.length && cols[cln].filter.type && cols[cln].filter.type === 'include') {\n                 //type = cols[cln].filter.type;\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            var field = this.fieldList[fieldName];\n            var members = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            isValidFilterElement = true;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var field_1 = _a[_i];\n                if (fieldName === field_1.name) {\n                    isValidFilterElement = false;\n                    break;\n                }\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _b = 0, dataFields_2 = dataFields; _b < dataFields_2.length; _b++) {\n                var field = dataFields_2[_b];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            /* tslint:disable:max-line-length */\n            if (filterElement.type === 'Label') {\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ? new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ? new Date(filterElement.value2) : filterElement.value2;\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            /* tslint:enable:max-line-length */\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        // }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = (this.formatFields[name] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[name].type) > -1)) ?\n            field.formattedMembers : field.members;\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (filter[fln]) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        /* tslint:disable-next-line:max-line-length */\n        var allMember = extend({}, (type === 'row' && this.rowGrandTotal ? this.rowGrandTotal : type === 'column' && this.columnGrandTotal ? this.columnGrandTotal : rows[rows.length - 1]), null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            if ((type === 'row' && this.rowGrandTotal === null) || (type === 'column' && this.columnGrandTotal === null)) {\n                rowFilterData.push(allMember);\n            }\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getCellSet(this.rawIndexObject),\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (index.hasOwnProperty(key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (index.hasOwnProperty(key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.data = dataSource.dataSource;\n        if (this.pageSettings && this.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        this.indexMatrix = [];\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].formattedMembers = {};\n            this.fieldList[field].dateMember = [];\n        }\n        this.fillFieldMembers(this.data, this.indexMatrix);\n        this.valueMatrix = this.generateValueMatrix(this.data);\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.generateGridData = function (dataSource, headerCollection) {\n        var keys = this.fields;\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        var size = 1;\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        var st1 = new Date().getTime();\n        this.validateValueFields();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0) {\n                    this.rMembers =\n                        this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                /* tslint:disable */\n                if (columns.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                        filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                /* tslint:enable */\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        this.pivotValues = [];\n        var gridData = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var valuesCount = (this.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders;\n            var columnHeaders = this.saveDataHeaders.columnHeaders;\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, (this.columnGrandTotal ? this.columnGrandTotal : columnHeaders[columnHeaders.length - 1]), valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, (this.rowGrandTotal ? this.rowGrandTotal : rowHeaders[rowHeaders.length - 1]), valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = extend({}, this.fieldList, null, true);\n            this.indexMatrix = [];\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var pageSize = 1;\n            this.updateFilterMembers(dataSource);\n            /* tslint:disable */\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            /* tslint:enable */\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.pageSettings) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        //this.getHeaderData(rmembers, rowheads, gridData, 0);              \n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        var st2 = new Date().getTime();\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n    };\n    PivotEngine.prototype.updateHeaders = function (rowFlag, columnFlag) {\n        /* removing the row grant-total members */\n        rowFlag = (isNullOrUndefined(rowFlag) ? (this.showGrandTotals && this.showRowGrandTotals) ?\n            true : (this.rows.length > 0) ? false : true : rowFlag);\n        if (((this.pageSettings && (this.removeRowGrandTotal)) || (!rowFlag && !this.rowGrandTotal)) &&\n            this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n            this.rMembers = this.rMembers.slice(0, this.rMembers.length - 1);\n        }\n        /* removing the column gran-total members */\n        columnFlag = (isNullOrUndefined(columnFlag) ? (this.showGrandTotals && this.showColumnGrandTotals) ?\n            true : (this.columns.length > 0) ? false : true : columnFlag);\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) || (!columnFlag && !this.columnGrandTotal)) &&\n            this.cMembers[this.cMembers.length - 1].type === 'grand sum') {\n            this.cMembers = this.cMembers.slice(0, this.cMembers.length - 1);\n        }\n    };\n    PivotEngine.prototype.updatePivotValues = function (updateHeaders) {\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (updateHeaders) {\n            this.updateHeaders(rowFlag, columnFlag);\n        }\n        /* removing the row grant-totals */\n        if (((this.pageSettings && (this.removeRowGrandTotal)) ||\n            (!rowFlag && !this.rowGrandTotal)) && this.valueContent.length > 0) {\n            var slicePos = 1;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1 + this.values.length;\n            }\n            if (this.pivotValues[this.pivotValues.length - slicePos] &&\n                this.pivotValues[this.pivotValues.length - slicePos][0].type === 'grand sum') {\n                this.pivotValues = this.pivotValues.slice(0, this.pivotValues.length - slicePos);\n                this.valueContent = this.valueContent.slice(0, this.valueContent.length - slicePos);\n            }\n        }\n        /* removing the column gran-totals */\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) ||\n            (!columnFlag && !this.columnGrandTotal)) && this.headerContent.length > 0) {\n            var slicePos = this.values.length;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1;\n            }\n            if (this.pivotValues[0][this.pivotValues[0].length - slicePos] &&\n                this.pivotValues[0][this.pivotValues[0].length - slicePos].type === 'grand sum') {\n                for (var ln = 0; ln < this.pivotValues.length; ln++) {\n                    if (this.pivotValues[ln]) {\n                        this.pivotValues[ln] = this.pivotValues[ln].slice(0, this.pivotValues[ln].length - slicePos);\n                    }\n                    if (this.headerContent[ln]) {\n                        for (var pos = this.pivotValues[ln].length; pos < (this.pivotValues[ln].length + slicePos); pos++) {\n                            delete this.headerContent[ln][pos];\n                        }\n                    }\n                }\n            }\n        }\n        this.removeRowGrandTotal = this.removeColumnGrandTotal = false;\n    };\n    /** @hidden */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        this.frameDrillObject();\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onSort = function (sortItem) {\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        /* tslint:disable:typedef */\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        /* tslint:enable:typedef */\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.rows[0] && this.rows[0].showNoDataItems) || (this.columns[0] && this.columns[0].showNoDataItems);\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onAggregation = function (field) {\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onCalcOperation = function (field) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.values.length - 1)) * this.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.values.length - 1)) * this.values.length;\n            }\n        }\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                if (drilledItem.memberName === headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter)\n                    .join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                        }\n                        else {\n                            var showSubTotals = this.showSubTotals && this.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    /* tslint:disable:typedef */\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return item.members.length > 0 ? item.members.length > 0 : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n        var filterObjects = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var item = _a[_i];\n            filterObjects[item] = item;\n        }\n        if (this.fieldFilterMem[filterItem.name]) {\n            rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n        }\n        if (addPos.length > 0) {\n            this.frameHeaderObjectsCollection = true;\n            if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                for (var i = 0; i < this.data.length; i++) {\n                    addPos.push(i);\n                }\n                //addPos = (this.data as any).map((item, pos) => { return pos; });\n            }\n            /* tslint:disable */\n            this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n            rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n            var headerNames_1 = {};\n            for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                var header = rawHeaders_1[_b];\n                headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n            }\n            var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                return !headerNames_1[header.valueSort.levelName.toString()];\n            });\n            /* tslint:enable: */\n            var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n            if (grandHeader.length > 0) {\n                rawHeaders.pop();\n            }\n            rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n        }\n        if (headersInfo.axis === 'row') {\n            this.rowCount = 0;\n        }\n        else {\n            this.columnCount = 0;\n        }\n        this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n        if (headersInfo.axis === 'row') {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n        }\n        else {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    /* tslint:enable:typedef */\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.rows : this.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateEngine = function () {\n        this.removeCount = 0;\n        this.validateValueFields();\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var valuesCount = (this.values.length);\n        this.getAggregatedHeaders(this.rows, this.columns, this.rMembers, this.cMembers, this.values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.showSubTotals && this.showColumnSubTotals && field.showSubTotals;\n        }\n        else {\n            showSubTotals = this.showSubTotals && this.showRowSubTotals && field.showSubTotals;\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.values.length : 1) :\n                    (this.valueAxis === 1 ? this.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var isNotDateType = !(this.formatFields && this.formatFields[headers[0].valueSort.axis] &&\n            this.formatFields[headers[0].valueSort.axis].type);\n        var childrens = this.fieldList[headers[0].valueSort.axis];\n        if (isNotDateType) {\n            if (childrens && childrens.type == 'number' && headers.length > 0 && (typeof (headers[0].actualText) == 'string') && ((/^\\d/).test(headers[0].actualText.toString()) === true)) {\n                return childrens.sort === 'Ascending' ?\n                    (headers.sort(function (a, b) { return !isNullOrUndefined(a.actualText) && !isNullOrUndefined(b.actualText) ? (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0) : 0; })) :\n                    childrens.sort === 'Descending' ?\n                        (headers.sort(function (a, b) { return !isNullOrUndefined(a.actualText) && !isNullOrUndefined(b.actualText) ? (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0) : 0; })) :\n                        headers;\n            }\n            else {\n                return sortOrder === 'Ascending' ?\n                    (headers.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                    sortOrder === 'Descending' ?\n                        (headers.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                        headers;\n            }\n        }\n        else {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                    headers;\n        }\n    };\n    /* tslint:enable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.enableValueSorting && this.valueSortSettings.headerText &&\n            this.valueSortSettings.headerText !== '' && this.values.length > 0) {\n            var textArray = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.values.length; i++) {\n                if (this.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.values.length === 1 && this.columns.length === 0) || this.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortSettings.headerText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.values[0].name].index;\n                mType = this.fieldList[this.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.pageSettings) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getCellSet(this.rawIndexObject),\n                    /* tslint:disable-next-line:max-line-length */\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    /* tslint:disable-next-line:max-line-length */\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        /* tslint:disable */\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ?\n                ((b['value'] || b['header']['type'] === 'grand sum' ?\n                    b['value'] : 0) - (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) :\n                ((a['value'] || a['header']['type'] === 'grand sum' ?\n                    a['value'] : 0) - (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        rMembers = aggreColl.map(function (item) { return item['header']; });\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n        /* tslint:enable */\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        this.rowGrandTotal = this.columnGrandTotal = null;\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (this.isValueHasAdvancedAggregate) {\n            /* inserting the row grant-total members */\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n            if (rowFlag) {\n                this.rowCount += this.rowValuesLength;\n            }\n            /* inserting the column gran-total members */\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n            if (columnFlag) {\n                this.columnCount += this.colValuesLength;\n            }\n        }\n        else {\n            if (rowFlag) {\n                /* inserting the row grant-total members */\n                this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                this.rowCount += this.rowValuesLength;\n            }\n            else {\n                this.rowGrandTotal = this.insertAllMember([], this.filterMembers, '', 'row')[0];\n            }\n            if (columnFlag) {\n                /* inserting the column gran-total members */\n                this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                this.columnCount += this.colValuesLength;\n            }\n            else {\n                this.columnGrandTotal = this.insertAllMember([], this.filterMembers, '', 'column')[0];\n            }\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                for (var colCnt = colLength - 1; colCnt > 0; colCnt--) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            if (!this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] = this.headerContent[rowPos][colCnt] = {\n                                type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                    (cell.formattedText + ' Total')),\n                                axis: 'column', level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                            };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (this.pivotValues[rowCnt][colCnt].type !== 'sum' &&\n                                this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (this.pivotValues[rowCnt][colCnt].type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] = this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index = this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject = this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        rowCells[colCnt].colSpan = spanCnt;\n                        rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        savedCell.colSpan = spanCnt;\n                        savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.frameDrillObject = function () {\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            for (var memberCnt = 0; memberCnt < drillOption.items.length; memberCnt++) {\n                var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                    drillOption.items[memberCnt].split(drillOption.delimiter).join(this.valueSortSettings.headerDelimiter);\n                this.fieldDrillCollection[memberString] = memberString;\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        if (keys) {\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.showHeaderWhenEmpty || (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.indexMatrix[position[pos]][childrens.index];\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][this.fieldKeys[fieldName]];\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } :\n                    {\n                        formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                            headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                            (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : headerValue\n                    };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var pindx = void 0;\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ?\n                        true : (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                        this.isExpandAll ? false : true : childrens.members[headerValue].isDrilled;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += this.rowValuesLength;\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0 && !showNoDataItems) {\n                    var headerValue = data[hierarchy[iln].index[0]][this.fieldKeys[keys[keyInd + 1].name]];\n                    var hasChild = (isNullOrUndefined(headerValue) || (this.localeObj &&\n                        headerValue === this.localeObj.getConstant('undefined'))) && hierarchy[iln].index.length === 1 ? false : true;\n                    hierarchy[iln].hasChild = hasChild;\n                }\n                else if (!this.showHeaderWhenEmpty && showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                    Object.keys(this.fieldList[keys[keyInd + 1].name].members).length) {\n                    hierarchy[iln].hasChild = true;\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.showSubTotals && this.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    /* tslint:disable:align */\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember);\n                    /* tslint:enable:align */\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            /* tslint:disable:typedef */\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n                else {\n                    if (childrens.type === 'number' && hierarchy.length > 0 && (typeof (hierarchy[0].actualText) === 'string') && ((/\\d/).test(hierarchy[0].actualText.toString()) === true)) {\n                        return childrens.sort === 'Ascending' ?\n                            (hierarchy.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                            childrens.sort === 'Descending' ?\n                                (hierarchy.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                hierarchy;\n                    }\n                    else {\n                        return childrens.sort === 'Ascending' ?\n                            (hierarchy.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                            childrens.sort === 'Descending' ?\n                                (hierarchy.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                                hierarchy;\n                    }\n                }\n            }\n            else {\n                return hierarchy;\n            }\n            /* tslint:enable:typedef */\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.indexMatrix[position[pos]][childrens.index];\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var value = data[position[pos]][this.fieldKeys[field]];\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(value, field) :\n                    { formattedText: value.toString(), actualText: value.toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    /* tslint:disable:align */\n                    hierarchy[iln].members =\n                        this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                    /* tslint:enable:align */\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            /* tslint:disable:typedef */\n            var lt = void 0;\n            for (var ln = 0, lt_1 = this.filterMembers.length; ln < lt_1; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n            /* tslint:enable:typedef */\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.pageSettings) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.values.length;\n            }\n            else {\n                this.colValuesLength = this.values.length;\n            }\n            this.memberCnt = -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.rowCurrentPage * this.pageSettings.rowSize) -\n                (this.pageSettings.rowSize)) * this.rowValuesLength;\n            var exactStartPos = (this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength)) > this.rowCount ?\n                (this.rowCount - (this.pageSettings.rowSize * 3 * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.rowCurrentPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength);\n            this.endPos = this.endPos > this.rowCount ? this.rowCount : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.columnCurrentPage * this.pageSettings.columnSize) -\n                (this.pageSettings.columnSize)) * this.colValuesLength;\n            exactStartPos = (this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength)) >\n                this.columnCount ?\n                (this.columnCount - (this.pageSettings.columnSize * 3 * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.columnCurrentPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength);\n            this.endPos = this.endPos > this.columnCount ? this.columnCount : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n            if (this.isValueHasAdvancedAggregate) {\n                if (this.rMembers[this.rMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1].type === 'grand sum') {\n                    this.rMembers.push(this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1]);\n                    this.removeRowGrandTotal = true;\n                }\n                if (this.cMembers[this.cMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1].type === 'grand sum') {\n                    this.cMembers.push(this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1]);\n                    this.removeColumnGrandTotal = true;\n                }\n            }\n            else {\n                this.rowGrandTotal = this.rowGrandTotal ? this.rowGrandTotal :\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1];\n                this.columnGrandTotal = this.columnGrandTotal ? this.columnGrandTotal :\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1];\n            }\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            this.memberCnt += axis === 'column' ? this.colValuesLength : this.rowValuesLength;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ? this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    /* tslint:disable:no-any */\n                    this.memberCnt -= !(this.showSubTotals && this.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ? this.colValuesLength : 0;\n                    /* tslint:enable:no-any */\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    /* tslint:disable:no-any */\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        /* tslint:disable:no-string-literal */\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        /* tslint:enable:no-string-literal */\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        set[len] = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            formattedText: 'Grand' + customText,\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        set[len].valueSort[set[len].formattedText] = 1;\n        set[len].valueSort.levelName = set[len].formattedText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            set[len].indexObject[filter[ln]] = filter[ln];\n        }\n        // if (axis === 'row') {\n        //     this.rowCount += this.rowValuesLength;\n        // } else {\n        //     this.columnCount += this.colValuesLength;\n        // }\n        return set;\n    };\n    /* tslint:enable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, tnum, data, vlt, rTotal, cTotal) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            tnum = data.length;\n            reformAxis[tnum] = rows[rln];\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            //let rplus: number = rln + 1;\n            //let lvl: number = rows[rln].level;\n            var isLeastNode = !reformAxis[tnum].members.length;\n            rows[rln].colIndex = 0;\n            rows[rln].rowIndex = tnum;\n            if (!data[tnum]) {\n                data[tnum] = [];\n                this.valueContent[actCnt] = {};\n                //data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            else {\n                // data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader)) {\n                var hpos = tnum;\n                var actpos = actCnt;\n                var rowIndex = tnum;\n                if (!(rows[rln].hasChild && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n                    !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals))) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        tnum++;\n                        actCnt++;\n                        var name_1 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                        var calObj = {\n                            axis: 'row',\n                            actualText: this.values[vln].name,\n                            formattedText: name_1,\n                            level: 0,\n                            valueSort: {},\n                            colIndex: 0,\n                            rowIndex: tnum,\n                            type: 'value'\n                        };\n                        if (!data[tnum]) {\n                            data[tnum] = [];\n                            this.valueContent[actCnt] = {};\n                            data[tnum][0] = this.valueContent[actCnt][0] = calObj;\n                        }\n                        var vData = data[tnum][0].valueSort;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData[data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1] = 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData.levelName = data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1;\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            //for (let vln: number = 0; (!this.valueAxis && vln < vlt); vln++) {\n                            this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                            dln = data[tnum].length;\n                            data[hpos][dln - 1] = this.valueContent[actpos][dln - 1] = {\n                                axis: 'value', actualText: '', colSpan: 1,\n                                colIndex: dln, formattedText: '', hasChild: false\n                            };\n                            // }\n                        }\n                    }\n                    rowIndex = tnum;\n                }\n                else {\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        dln = data[tnum].length;\n                        data[hpos][dln] = this.valueContent[actpos][dln] = {\n                            axis: 'value', actualText: '', colSpan: 1,\n                            colIndex: dln, formattedText: '', hasChild: false\n                        };\n                    }\n                    rowIndex = tnum + vlt;\n                }\n                this.recursiveRowData(rows, reformAxis, columns, rowIndex, data, vlt, isLeastNode, rln, vlt, rTotal, cTotal);\n            }\n            else {\n                for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, rTotal, cTotal);\n            }\n        }\n        /* for (let rlt: number = rows.length, rln: number = 0; rln < rlt; rln++) {\n            if (!data[rln]) {\n                data[rln] = [];\n                data[rln][0] = rows[rln].name;\n            } else {\n                data[rln][0] = rows[rln].name;\n            }\n            for (let cln: number = 0, dln: number = 1, clt: number = columns.length; cln < clt; dln = ++cln) {\n                data[rln][dln] = this.getAggregateValue(rows[rln].index, columns[cln].index, 11);\n            }\n        } */\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split(this.valueSortSettings.headerDelimiter);\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : headers), vln + 1));\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if (rln.level === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _a = 0, _b = rln.members; _a < _b.length; _a++) {\n                                            var member = _b[_a];\n                                            aggregateHeaders.push(member);\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(rln);\n                                    }\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: headers,\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(data[rln][cln].actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                        this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                        for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                            var index = colIndex_1[_i];\n                            pivotIndex[rln + ',' + index] = [rln, index];\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n            this.updatePivotValues(true);\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable:all */\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_2 = headers.value;\n            var valueCount = (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    if (this.valueAxis === 0 || (this.valueAxis && data[rln + valueCount] &&\n                                        data[rln + valueCount][0].actualText === name_2)) {\n                                        selectedRowValues = data[rln + valueCount];\n                                    }\n                                    else {\n                                        selectedRowValues = [];\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_7 = data.length, i = 0; i < len_7; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                        axisObj[cln].axis === 'value' &&\n                                        this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (selectedColumnValues.length === 0 && rowindexCollection.length === 0) {\n                            for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                var isSelectedColumn = false;\n                                if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort.levelName.indexOf(uniqueName) === 0) {\n                                    activeValues = activeColumn[cln];\n                                    for (var lnt = data.length, j = 0; j < lnt; j++) {\n                                        var axisObj = data[j];\n                                        if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                            axisObj[cln].axis === 'value' &&\n                                            this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                            isSelectedColumn = true;\n                                            // selectedColumnValues[i] = axisObj[cln] as IAxisSet;\n                                            rowindexCollection.push(j);\n                                        }\n                                    }\n                                    if (isSelectedColumn) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _a = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _a < selectedHeaderCollection_1.length; _a++) {\n                                    var item = selectedHeaderCollection_1[_a];\n                                    for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _b = 0, colIndex_2 = colIndex; _b < colIndex_2.length; _b++) {\n                                                    var index = colIndex_2[_b];\n                                                    var currentSet = data[rln + valueCount][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                        indexCollection.push([rln + valueCount, index]);\n                                                        if (pivotIndex[rln + valueCount + ',' + index]) {\n                                                            delete pivotIndex[rln + valueCount + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _c = 0, colIndex_3 = colIndex; _c < colIndex_3.length; _c++) {\n                                                var index = colIndex_3[_c];\n                                                var currentSet = data[rlen + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([rlen + valueCount, index]);\n                                                    if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                        delete pivotIndex[rlen + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _d = 0, indexCollection_2 = indexCollection; _d < indexCollection_2.length; _d++) {\n                                var index = indexCollection_2[_d];\n                                var currentSet = data[index[0]][index[1]];\n                                // let cVal: number = currentSet.value - (selectedRowValues[index[1]] as IAxisSet).value;\n                                var cVal = currentSet.actualValue - selectedRowValues[index[1]].actualValue;\n                                cVal = isNaN(cVal) ? 0 : (currentSet.value === 0 && selectedRowValues[index[1]].value === 0) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                }\n                                else {\n                                    // cVal = ((selectedRowValues[index[1]] as IAxisSet).value === 0 ?\n                                    // 0 : (cVal / (selectedRowValues[index[1]] as IAxisSet).value));\n                                    cVal = (selectedRowValues[index[1]].actualValue === 0 ?\n                                        0 : (cVal / selectedRowValues[index[1]].actualValue));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _e = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _e < selectedHeaderCollection_2.length; _e++) {\n                                    var item = selectedHeaderCollection_2[_e];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _f = 0, rowindexCollection_1 = rowindexCollection; _f < rowindexCollection_1.length; _f++) {\n                                                var index = rowindexCollection_1[_f];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _g = 0, rowindexCollection_2 = rowindexCollection; _g < rowindexCollection_2.length; _g++) {\n                                                var index = rowindexCollection_2[_g];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedColumn = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedColumn = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _h = 0, indexCollection_3 = indexCollection; _h < indexCollection_3.length; _h++) {\n                                var index = indexCollection_3[_h];\n                                var currentSet = data[index[0]][index[1]];\n                                var selectedColumnValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColumnValue = this.getAggregateValue(selectedRow.index, selectedColumn.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColumnValue = selectedColumnValues[index[0]].value;\n                                }\n                                var cVal = currentSet.value - selectedColumnValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _j = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _j < selectedHeaderCollection_3.length; _j++) {\n                                var item = selectedHeaderCollection_3[_j];\n                                for (var rlt = rowheads.length, i = 0; i < rlt; i++) {\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _k = 0, colIndex_4 = colIndex; _k < colIndex_4.length; _k++) {\n                                                var index = colIndex_4[_k];\n                                                var currentSet = data[i + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([i + valueCount, index]);\n                                                    if (pivotIndex[i + valueCount + ',' + index]) {\n                                                        delete pivotIndex[i + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _l = 0, indexCollection_4 = indexCollection; _l < indexCollection_4.length; _l++) {\n                                var i = indexCollection_4[_l];\n                                var currentSet = data[i[0]][i[1]];\n                                // let cVal: number = currentSet.value / (selectedRowValues[i[1]] as IAxisSet).value;\n                                var selectedRowValue = 0;\n                                if (selectedRowValues.length === 0 && activeValues) {\n                                    selectedRowValue = this.getAggregateValue(activeValues.index, colheads[i[1] - 1].indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedRowValue = selectedRowValues[i[1]].actualValue;\n                                }\n                                var cVal = currentSet.value / selectedRowValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _m = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _m < selectedHeaderCollection_4.length; _m++) {\n                                var item = selectedHeaderCollection_4[_m];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _o = 0, rowindexCollection_3 = rowindexCollection; _o < rowindexCollection_3.length; _o++) {\n                                            var index = rowindexCollection_3[_o];\n                                            var currentSet = data[index][j];\n                                            if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                isSelectedColumn = true;\n                                                indexCollection.push([index, j]);\n                                                if (pivotIndex[index + ',' + j]) {\n                                                    delete pivotIndex[index + ',' + j];\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedCol = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedCol = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _p = 0, indexCollection_5 = indexCollection; _p < indexCollection_5.length; _p++) {\n                                var i = indexCollection_5[_p];\n                                var currentSet = data[i[0]][i[1]];\n                                var selectedColValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColValue = this.getAggregateValue(selectedRow.index, selectedCol.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColValue = selectedColumnValues[i[0]].value;\n                                }\n                                var val = currentSet.value / selectedColValue;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _q = 0, colIndex_5 = colIndex; _q < colIndex_5.length; _q++) {\n                                var index = colIndex_5[_q];\n                                var cVal = 0;\n                                for (var _r = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _r < selectedHeaderCollection_5.length; _r++) {\n                                    var item = selectedHeaderCollection_5[_r];\n                                    for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen + valueCount][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rlen].level === item.level && currentSet.axis === 'value' &&\n                                                currentSet.actualText === name_2) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = (cVal === 0 && (currentSet.actualValue && currentSet.actualValue !== 0) ? '' :\n                                                        this.getFormattedValue(cVal, name_2).formattedText);\n                                                    if (!this.aggregatedValueMatrix[rlen + valueCount]) {\n                                                        this.aggregatedValueMatrix[rlen + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen + valueCount][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                    delete pivotIndex[rlen + valueCount + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                if (rowheads[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _s = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _s < selectedHeaderCollection_6.length; _s++) {\n                                        var item = selectedHeaderCollection_6[_s];\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln + valueCount][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln + valueCount]) {\n                                                        this.aggregatedValueMatrix[rln + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln + valueCount][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + valueCount + ',' + cln]) {\n                                                    delete pivotIndex[rln + valueCount + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getSelectedColumn = function (name, colheads) {\n        var set = { axis: 'column', index: [], indexObject: {} };\n        for (var _i = 0, colheads_1 = colheads; _i < colheads_1.length; _i++) {\n            var head = colheads_1[_i];\n            if (head && head.valueSort && head.valueSort.levelName.indexOf(name) === 0) {\n                set.index = set.index.concat(head.index).sort(function (a, b) { return a - b; });\n                set.indexObject = __assign({}, set.indexObject, head.indexObject);\n            }\n        }\n        return set;\n    };\n    PivotEngine.prototype.getSelectedRow = function (name, rowheads) {\n        for (var _i = 0, rowheads_1 = rowheads; _i < rowheads_1.length; _i++) {\n            var head = rowheads_1[_i];\n            if (head) {\n                if (head.valueSort && head.valueSort.levelName === name) {\n                    return head;\n                }\n                else if (name === '' && head.type === 'grand sum') {\n                    return head;\n                }\n            }\n        }\n        return null;\n    };\n    /* tslint:enable:all */\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum - vln].members, reformAxis, columns, tnum, data, vlt, rTotal, cTotal);\n        }\n        if (!this.pageSettings) {\n            reformAxis[tnum - vln].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.values[vln].name].index;\n        var aggregate = this.fieldList[this.values[vln].name].aggregateType;\n        var field = this.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        var actualValue = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]], [rows[rln], cTotal], [rTotal, columns[cln]], [rTotal, cTotal]];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_1 = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showRowSubTotals || !this.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] : [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_2 = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                }\n                break;\n            default:\n                var val = this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate);\n                value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals)) ? undefined : val;\n                actualValue = val;\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.values[vln].name,\n            row: rows[rln],\n            column: columns[cln],\n            value: value,\n            cellSets: this.getCellSet(this.rawIndexObject),\n            /* tslint:disable-next-line:max-line-length */\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            /* tslint:disable-next-line:max-line-length */\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate,\n            skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild ||\n            rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var isGrand = rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            (aggregate === 'Count' || aggregate === 'DistinctCount') ? value.toLocaleString() :\n                this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) &&\n            (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: 2 });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n        }\n        //dln = data[tnum].length;\n        /* tslint:disable-next-line:max-line-length */\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ? this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: isNullOrUndefined(value) ? 0 : value,\n            actualValue: isNullOrUndefined(actualValue) ? 0 : actualValue,\n            rowIndex: tnum, colIndex: dln, isSum: isSum, isGrandSum: isGrand\n        };\n        this.rawIndexObject = {};\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.getHeaderData = function (axis, reformAxis, data, tnum, vcnt) {\n        var rlt = axis.length;\n        var colItmLn = this.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            if (axis[rln].members.length) {\n                this.getHeaderData(axis[rln].members, reformAxis, data, tnum, vcnt);\n            }\n            var isTotalHide = true;\n            if ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.showSubTotals || !this.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[reformAxis.length] = this.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = reformAxis.length - 1;\n            }\n            else {\n                tnum = reformAxis.length;\n                reformAxis[tnum] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            axis[rln].colIndex = (tnum * vcnt) + vcnt;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            var isSingleMeasure = (this.columns.length === 0 && this.values.length === 1) ? true : false;\n            if ((this.isMutiMeasures || this.alwaysShowValueHeader || isSingleMeasure) && !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_3 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'column',\n                        actualText: this.values[vln].name,\n                        formattedText: name_3,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln,\n                        rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.pageSettings) {\n                reformAxis[tnum].members = [];\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        var rlt = rowIndex.length;\n        //let clt: number = columnIndex.length;\n        var mirror = {};\n        var ri = 0;\n        var ci = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        if (type && type.toLowerCase() === 'count') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    cellValue += (isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value]) ?\n                        0 : (this.allowDataCompression ? this.valueMatrix[rowIndex[ri]][value] : 1));\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'distinctcount') {\n            var duplicateValues = [];\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var val = (this.data[rowIndex[ri]][this.fieldKeys[this.fields[value]]]);\n                    var currentVal = void 0;\n                    // let currentVal: number = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(val)) {\n                        currentVal = val.toString();\n                        if (duplicateValues.length === 0 || (duplicateValues.length > 0 && duplicateValues.indexOf(currentVal) === -1)) {\n                            cellValue += (this.allowDataCompression && typeof val === 'number') ? val : 1;\n                            duplicateValues.push(currentVal);\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'product') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                        cellValue *= currentVal;\n                    }\n                    else if (isInit) {\n                        cellValue = currentVal;\n                    }\n                    isInit = false;\n                }\n                ri++;\n            }\n        }\n        else if (type && (['populationstdev', 'samplestdev', 'populationvar', 'samplevar']).indexOf(type.toLowerCase()) !== -1) {\n            var i = 0;\n            var val = 0;\n            var indexVal = [];\n            var avgVal = 0;\n            var cVal = 0;\n            var avgDifferenceVal = 0;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        val += currentVal;\n                        indexVal.push(currentVal);\n                        i++;\n                    }\n                }\n                ri++;\n            }\n            if (i > 0) {\n                avgVal = val / i;\n                for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                    var index = indexVal_1[_i];\n                    avgDifferenceVal += Math.pow((index - avgVal), 2);\n                }\n                if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                    cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                }\n                else {\n                    cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                }\n                cellValue = (cVal === 0 ? NaN : cVal);\n            }\n            else {\n                cellValue = val;\n            }\n        }\n        else if (type && type.toLowerCase() === 'min') {\n            var isFirst = true;\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value])) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                    }\n                    else {\n                        if (isFirst) {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value];\n                            isFirst = false;\n                        }\n                        else {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value] < cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'max') {\n            var isMaxFirst = true;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isMaxFirst) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                        isMaxFirst = false;\n                    }\n                    else {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value] > cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'calculatedfield') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var calcField = this.calculatedFields[this.fields[value]];\n                    var actualFormula = calcField.formula;\n                    var aggregateField = {};\n                    if (this.calculatedFormulas[calcField.name]) {\n                        var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                        for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                            var aggregatedValue = calculatedFormulas[len];\n                            var value_1 = aggregateField[aggregatedValue.formula];\n                            if (value_1 === undefined) {\n                                var type_1 = aggregatedValue.type;\n                                value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1);\n                                aggregateField[aggregatedValue.formula] = value_1;\n                            }\n                            actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                        }\n                    }\n                    cellValue = this.evaluate(actualFormula);\n                    cellValue = (cellValue === Infinity || cellValue === -Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ? undefined : JSON.parse(String(cellValue)));\n                }\n                ri++;\n            }\n        }\n        else {\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                        cellValue = currentVal;\n                    }\n                    else {\n                        if (isNullOrUndefined(cellValue)) {\n                            cellValue = 0;\n                        }\n                        cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                    }\n                    if (!isNullOrUndefined(currentVal)) {\n                        avgCnt++;\n                    }\n                }\n                ri++;\n            }\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri] !== undefined) {\n                 if (mirror[rowIndex[ri]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                     sum += this.valueMatrix[rowIndex[ri]][value];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    ;\n    /* tslint:enable */\n    /** hidden */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && value) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                    formattedValue.actualText = value;\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        var pattern = formatSetting.format.match(this.customRegex);\n                        var flag = true;\n                        if (isNullOrUndefined(formatSetting.minimumFractionDigits)) {\n                            delete formatSetting.minimumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.maximumFractionDigits)) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.minimumIntegerDigits)) {\n                            delete formatSetting.minimumIntegerDigits;\n                        }\n                        if (isNullOrUndefined(pattern)) {\n                            pattern = formatSetting.format.match(/^(('[^']+'|''|[^*@0])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@,.E])*)$/);\n                            delete formatSetting.useGrouping;\n                            flag = false;\n                        }\n                        var integerPart = pattern[6];\n                        if (flag) {\n                            formatSetting.useGrouping = integerPart.indexOf(',') !== -1;\n                        }\n                        var decimalPart = pattern[5];\n                        if (isBlazor() && decimalPart && decimalPart.indexOf('.') !== -1 && formatSetting.maximumFractionDigits) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                    }\n                    formattedValue.formattedText =\n                        this.globalize.formatNumber(!isNaN(Number(value)) ? Number(value) : value, formatSetting);\n                    formattedValue.actualText = !isNaN(Number(value)) ? Number(value) : value;\n                    formattedValue.dateText = !isNaN(Number(value)) ? Number(value) : value;\n                }\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^\\(\\)]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var fieldDrop = 'fieldDrop';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var editCompleted = 'editCompleted';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/** @hidden */\nexport var calculatedFieldCreate = 'calculatedFieldCreate';\n/** @hidden */\nexport var memberEditorOpen = 'memberEditorOpen';\n/** @hidden */\nexport var fieldRemove = 'fieldRemove';\n/** @hidden */\nexport var numberFormatting = 'numberFormatting';\n/** @hidden */\nexport var aggregateMenuOpen = 'aggregateMenuOpen';\n/** @hidden */\nexport var fieldDragStart = 'fieldDragStart';\n/** @hidden */\nexport var chartPointClick = 'chartPointClick';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n","/**\n * CSS Constants\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-wrapper';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-wrapper';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var MEMBER_SORT_CLASS = 'e-member-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DRAG_DISABLE_CLASS = 'e-disable-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-wrapper';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-wrapper';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-wrapper-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-wrapper-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var FILTER_SORT_CLASS = 'e-filter-sort';\n/** @hidden */\nexport var SORT_ASCEND_ICON_CLASS = 'e-sort-ascend-icon';\n/** @hidden */\nexport var SORT_DESCEND_ICON_CLASS = 'e-sort-descend-icon';\n/** @hidden */\nexport var SORT_SELECTED_CLASS = 'e-active';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-wrapper';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var EDITOR_SEARCH__INPUT_CLASS = 'e-editor-search-input';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-wrapper';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var CALC_CUSTOM_FORMAT_INPUTDIV = 'e-pivot-calc-custom-format-div';\n/** @hidden */\nexport var OLAP_CALC_CUSTOM_FORMAT_INPUTDIV = 'e-olap-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-olap-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-wrapper';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-wrapper';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var OLAP_FORMAT_TITLE_CLASS = 'e-olap-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var MOVABLECONTENT_DIV = 'e-movablecontent';\n/** @hidden */\nexport var FROZENCONTENT_DIV = 'e-frozencontent';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-movableheader';\n/** @hidden */\nexport var FROZENHEADER_DIV = 'e-frozenheader';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_ACCUMULATION_COLUMN = 'e-group-chart-accumulation-column';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN_DIV = 'e-group-chart-columns-dropdown-div';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN = 'e-group-chart-columns-dropdown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var EMPTY_FORMAT = 'e-pivot-conditional-empty-format';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n/** @hidden */\nexport var PIVOTCHART_INNER = 'e-pivotchart-inner';\n/** @hidden */\nexport var PIVOTCHART_TYPE_DIALOG = 'e-pivotchart-type-dialog';\n/** @hidden */\nexport var FORMAT_FONT_COLOR_PICKER = 'e-format-font-color-picker';\n/** @hidden */\nexport var GROUP_PIVOT_ROW = 'e-group-pivot-rows';\n","import { createElement, remove, extend, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.menuInfo = [];\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        var _this = this;\n        var fieldName = args.target.parentElement.id;\n        this.buttonElement = args.target.parentElement;\n        var isStringField = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 1 : 0;\n        this.summaryTypes = this.getMenuItem(isStringField).slice();\n        var eventArgs = {\n            cancel: false, fieldName: fieldName, aggregateTypes: this.summaryTypes\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.summaryTypes = observedArgs.aggregateTypes;\n                _this.createContextMenu(isStringField);\n                _this.currentMenu = args.target;\n                var pos = _this.currentMenu.getBoundingClientRect();\n                if (_this.parent.enableRtl) {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left - 105);\n                }\n                else {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left);\n                }\n            }\n        });\n    };\n    AggregateMenu.prototype.createContextMenu = function (isStringField) {\n        var _this = this;\n        var menuItems = [];\n        menuItems[isStringField] = [];\n        if (this.menuInfo[isStringField] && !this.menuInfo[isStringField].isDestroyed) {\n            this.menuInfo[isStringField].destroy();\n        }\n        var checkDuplicates = [];\n        for (var i = 0; i < this.summaryTypes.length; i++) {\n            var key = this.summaryTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + 'StringMenu_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + '_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n        }\n        if (menuItems[isStringField].length >= 7) {\n            menuItems[isStringField].splice(7);\n            menuItems[isStringField].push({\n                text: this.parent.localeObj.getConstant('MoreOption'),\n                id: this.parent.element.id + '_' + 'MoreOption'\n            });\n        }\n        var menuOptions;\n        menuOptions = {\n            items: menuItems[isStringField],\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this, isStringField),\n            onClose: function (args) {\n                _this.parentElement.querySelector('#' + _this.buttonElement.id).focus();\n            },\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var contextMenu = document.getElementById(this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu'));\n        if (contextMenu !== null) {\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu')\n            });\n        }\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo[isStringField] = new Menu(menuOptions);\n        this.menuInfo[isStringField].isStringTemplate = true;\n        this.menuInfo[isStringField].appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (isString, args) {\n        args.element.style.zIndex = (this.menuInfo[isString].element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /** @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement, type) {\n        var _this = this;\n        this.parentElement = parentElement;\n        var valueDialog = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.id }\n        });\n        this.parentElement.appendChild(valueDialog);\n        this.valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.valueDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            /* tslint:disable-next-line:max-line-length */\n            closeOnEscape: (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') ? false : true,\n            target: this.parentElement,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.valueDialog.isStringTemplate = true;\n        this.valueDialog.appendTo(valueDialog);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    /* tslint:disable:max-func-body-length */\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement, type) {\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = (type && type !== 'MoreOption') ? type : buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [];\n        var summaryItems = this.parent.aggregateTypes;\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryItems.length; i++) {\n            if (this.parent.getAllSummaryType().indexOf(summaryItems[i]) > -1 && checkDuplicates.indexOf(summaryItems[i]) < 0) {\n                summaryDataSource.push({ value: summaryItems[i], text: this.parent.localeObj.getConstant(summaryItems[i]) });\n                checkDuplicates.push(summaryItems[i]);\n            }\n        }\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        /* tslint:disable-next-line:max-line-length */\n        baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n        fieldItemDataSource = Object.keys(this.parent.engineModule.fieldList[(baseField.toString() !== 'undefined' ?\n            baseField : fieldDataSource[0].value)].formattedMembers);\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-wrapper', });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-wrapper' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-wrapper' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-wrapper' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-wrapper' });\n        /* tslint:disable-next-line:max-line-length */\n        var texttitle = createElement('div', { className: 'e-field-name-title', innerHTML: this.parent.localeObj.getConstant('sourceName') + '&nbsp;' });\n        var textContent = createElement('div', { className: 'e-field-name-content', innerHTML: buttonElement.id.toString() });\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('sourceCaption')\n        });\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text', innerHTML: this.parent.localeObj.getConstant('summarizeValuesBy')\n        });\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text', innerHTML: this.parent.localeObj.getConstant('baseField')\n        });\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('baseItem')\n        });\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.dataBind();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                fieldItemDataSource = Object.keys(popupInstance.parent.engineModule.fieldList[args.value].formattedMembers);\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3.dataBind();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: [fieldItemDataSource[0]], enableRtl: this.parent.enableRtl,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            value: fieldCaption, width: '100%'\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var type = menu.item.id.split('_').pop();\n            if (type === 'MoreOption' || type === 'PercentageOfDifferenceFrom'\n                || type === 'PercentageOfParentTotal' || type === 'DifferenceFrom') {\n                this.createValueSettingsDialog(buttonElement, this.parentElement, type);\n            }\n            else {\n                var field = buttonElement.getAttribute('data-uid');\n                var valuefields = this.parent.dataSourceSettings.values;\n                var contentElement = buttonElement.querySelector('.e-content');\n                var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                    this.parent.engineModule.fieldList[field].caption;\n                contentElement.innerHTML = captionName;\n                contentElement.setAttribute('title', captionName);\n                buttonElement.setAttribute('data-type', type);\n                for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                        /* tslint:disable:align */\n                        var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                            valuefields[vCnt].properties : valuefields[vCnt], null, true);\n                        /* tslint:enable:align */\n                        dataSourceItem.type = type;\n                        this.parent.engineModule.fieldList[field].aggregateType = type;\n                        valuefields.splice(vCnt, 1, dataSourceItem);\n                        this.parent.lastAggregationInfo = dataSourceItem;\n                    }\n                }\n                this.updateDataSource();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                /* tslint:disable:align */\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                /* tslint:enable:align */\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var dialogElement = this.valueDialog.element;\n        var captionInstance = getInstance('#' + this.parentElement.id + 'type_input_option', MaskedTextBox);\n        var summaryInstance = getInstance('#' + this.parentElement.id + '_type_option', DropDownList);\n        var baseFieldInstance = getInstance('#' + this.parentElement.id + '_base_field_option', DropDownList);\n        var baseItemInstance = getInstance('#' + this.parentElement.id + '_base_item_option', DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement = this.parentElement.\n                querySelector('.' + cls.PIVOT_BUTTON_CLASS + '.' + fieldName.replace(/[^A-Z0-9]/ig, ''));\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.e-content');\n            var captionName = this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value;\n            contentElement.innerHTML = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        this.valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        this.parentElement.querySelector('#' + this.buttonElement.id).focus();\n        if (this.valueDialog && !this.valueDialog.isDestroyed) {\n            this.valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo) {\n            if (this.menuInfo[1] !== undefined && !this.menuInfo[1].isDestroyed) {\n                this.menuInfo[1].destroy();\n            }\n            if (this.menuInfo[0] !== undefined && !this.menuInfo[0].isDestroyed) {\n                this.menuInfo[0].destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement } from '@syncfusion/ej2-base';\nimport { isBlazor, addClass, removeClass, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function () {\n        var parent = this.parent;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.parent.gridHeaderCellInfo = [];\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.e-grid')) {\n            if (!engine.isEngineUpdated) {\n                engine.headerContent = this.frameDataSource('header');\n                engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.enableValueSorting) {\n                    engine.valueContent = this.frameDataSource('value');\n                }\n                engine.isEngineUpdated = false;\n            }\n            /* tslint:disable */\n            this.parent.grid.setProperties({\n                columns: this.frameStackedHeaders(), dataSource: (this.parent.dataType === 'olap' ? true :\n                    parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData ? engine.valueContent :\n                    this.frameDataSource('value')\n            }, true);\n            /* tslint:enable */\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            var e = this.parent.element.querySelector('.e-movablecontent');\n            e.querySelector('colGroup').innerHTML =\n                this.parent.grid.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            this.parent.element.appendChild(createElement('div', { id: this.parent.element.id + '_grid' }));\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo('#' + this.parent.element.id + '_grid');\n        }\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.refreshHeader = function () {\n        if (this.parent.enableVirtualization) {\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            setStyleAttribute(mHdr.querySelector('.e-table'), {\n                transform: (mCont.querySelector('.e-table').style.transform).split(',')[0] + ',' + 0 + 'px)'\n            });\n            mHdr.scrollLeft = mCont.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? this.parent.width : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            allowReordering: (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering),\n            allowSelection: this.gridSettings.allowSelection,\n            /* tslint:disable-next-line */\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            /* tslint:disable-next-line */\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined\n        });\n        if (isBlazor()) {\n            var isJsComponent = 'isJsComponent';\n            /* tslint:disable-next-line */\n            this.parent.grid[isJsComponent] = true;\n        }\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.headerRefreshed = function (args) {\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1) {\n            this.parent.lastGridSettings = undefined;\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n        }\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    Render.prototype.dataBound = function (args) {\n        if (this.parent.cellTemplate && !isBlazor()) {\n            for (var _i = 0, _a = this.parent.gridHeaderCellInfo; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (this.parent.cellTemplate) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()(cell, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(cell.targetCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(cell.targetCell, element[0].outerHTML);\n                        }\n                    }\n                }\n            }\n            this.parent.gridHeaderCellInfo = [];\n        }\n        if (this.parent.element.querySelector('.e-firstcell')) {\n            if (this.parent.enableRtl) {\n                this.parent.element.querySelector('.e-firstcell').style.borderRight = 'none';\n            }\n            else {\n                this.parent.element.querySelector('.e-firstcell').style.borderLeft = 'none';\n            }\n        }\n        if (this.parent.grid && this.parent.grid.widthService) {\n            this.parent.grid.widthService.setWidthToTable();\n        }\n        /* tslint:disable-next-line */\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        if (this.parent.currentView !== 'Chart') {\n            this.parent.grid.hideScroll();\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        this.parent.notify(events.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            addClass([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    /* tslint:disable */\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked;\n            var elem = null;\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (cellTarget.classList.contains('e-stackedheadercelldiv') || cellTarget.classList.contains('e-cellvalue') ||\n                cellTarget.classList.contains('e-headercelldiv') || cellTarget.classList.contains('e-icons') || cellTarget.classList.contains('e-rhandler')) {\n                elem = cellTarget.parentElement;\n            }\n            else if (cellTarget.classList.contains('e-headercell') || cellTarget.classList.contains('e-rowcell') || cellTarget.classList.contains('e-columnsheader') ||\n                cellTarget.classList.contains('e-rowsheader') || cellTarget.classList.contains('e-valuescontent') || cellTarget.classList.contains('e-valuesheader')) {\n                elem = cellTarget;\n            }\n            else if (cellTarget.classList.contains('e-headertext')) {\n                elem = cellTarget.parentElement.parentElement;\n            }\n            if (!elem) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('aria-colindex'));\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var select = item.id;\n            switch (select) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('aria-colindex'))];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup') && isUngroupOption) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                                args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_CalculatedField').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_pdf').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_excel').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_csv').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_exporting').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if ((args.element.querySelector('#' + this_1.parent.element.id + '_aggregate')) &&\n                        (!args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.contains(cls.MENU_DISABLE))) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.add(cls.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice()\n                        };\n                        this_1.parent.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length >= 7) {\n                                    menuItem.splice(7);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    args.element.querySelector('#' + _this.parent.element.id + '_aggregate').classList.remove(cls.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        var hiddenItemsCount = 0;\n        for (var i = 0; i < args.items.length; i++) {\n            var classNameofItem = document.getElementById(args.items[i].id).className;\n            if (classNameofItem.match('e-menu-hide')) {\n                hiddenItemsCount++;\n            }\n        }\n        if (hiddenItemsCount === args.items.length) {\n            args.cancel = true;\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var event = new MouseEvent('dblclick', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true\n        });\n        var exportArgs = {};\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv') || target.classList.contains('e-icons') || target.classList.contains('e-rhandler')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('aria-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.pdfExport(exportArgs.pdfExportProperties, exportArgs.isMultipleExport, exportArgs.pdfDoc, exportArgs.isBlob);\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.excelExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.csvExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case this.parent.element.id + '_drillthrough_menu':\n                ele.dispatchEvent(event);\n                break;\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = \"\";\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[headerPosKeys[pos]][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName == '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('aria-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    /* tslint:enable */\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering);\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        /* tslint:disable-next-line */\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        /* tslint:disable-next-line */\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                /* tslint:disable-next-line */\n                if (!isNullOrUndefined(this.parent.pivotColumns[colPos][key])) {\n                    /* tslint:disable-next-line */\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        removeClass(this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt) {\n        if (this.parent.enableValueSorting && this.parent.dataType === 'pivot') {\n            var vSort = this.parent.dataSourceSettings.valueSortSettings;\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (this.parent.engineModule.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (this.parent.engineModule.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && rCnt === len && this.parent.dataSourceSettings.valueAxis === 'column') {\n                if (tCell.querySelector('.e-sortfilterdiv')) {\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-descending' : 'e-ascending');\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending' : 'e-icon-ascending');\n                }\n                else {\n                    tCell.appendChild(createElement('div', {\n                        className: (vSort.sortOrder === 'Descending' ?\n                            'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                            'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                    }));\n                }\n                if (!isNullOrUndefined(cell.hasChild) && cell.type !== 'grand sum' && tCell.querySelector('.e-expand') &&\n                    (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'))) {\n                    var element = (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'));\n                    setStyleAttribute(element, { 'padding-top': '12px' });\n                }\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        /* tslint:disable-next-line */\n        var column = args.column.field === '0.formattedText' ? '0.formattedText' : args.column.customAttributes.cell.valueSort.levelName;\n        this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.e-frozenheader').querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.e-frozencontent').querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        /* tslint:disable-next-line */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        /* tslint:disable-next-line */\n        if (tCell && (this.parent.notEmpty)) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            tCell.setAttribute('index', (Number(tCell.getAttribute('index')) + this.engine.headerContent.length).toString());\n            var cell = args.data[0];\n            if (tCell.getAttribute('aria-colindex') === '0') {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var level = cell.level ? cell.level : (isValueCell ? (this.lastSpan + 1) : 0);\n                    do {\n                        if (level > 0) {\n                            tCell.appendChild(createElement('span', {\n                                className: level === 0 ? '' : cls.NEXTSPAN,\n                            }));\n                        }\n                        level--;\n                    } while (level > -1);\n                    level = cell.level ? cell.level : 0;\n                    this.lastSpan = !isValueCell ? level : this.lastSpan;\n                    if (!cell.hasChild && level > 0) {\n                        tCell.appendChild(createElement('span', {\n                            className: cls.LASTSPAN,\n                        }));\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        fieldName = level > -1 ? this.parent.dataSourceSettings.rows[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapRowCellBoundEvent(tCell, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        localizedText = this.parent.localeObj.getConstant('grandTotal');\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                tCell.classList.add(cls.ROWSHEADER);\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    tCell.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    /* tslint:disable-next-line */\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row'\n                        && this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            var style = (tCell.querySelector('.e-expand') || tCell.querySelector('.e-collapse')) ?\n                                'padding-top: 18px' : 'padding-top: 12px';\n                            tCell.appendChild(createElement('div', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                                styles: style\n                            }));\n                        }\n                    }\n                }\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('aria-colindex'))];\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                if (cell.isGrandSum || this.colGrandPos === Number(tCell.getAttribute('aria-colindex')) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(!isNullOrUndefined(cell.value) ? cell.colIndex : cell.colIndex - 1)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (cell.cssClass) {\n                    tCell.classList.add(cell.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering && !this.parent.showGroupingBar) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes.cell.colIndex.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                var index = tCell.getAttribute('index');\n                var colindex = tCell.getAttribute('aria-colindex');\n                var templateID = index + '_' + colindex;\n                /* tslint:disable-next-line */\n                if (!(window && isBlazor())) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()({ targetCell: tCell }, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                else if (index && colindex) {\n                    this.parent.gridCellCollection[templateID] = tCell;\n                }\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    /* tslint:disable */\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var memberPosition = tupInfo.uNameCollection.indexOf(cell.actualText.toString());\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos === fieldSep.length) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var levelName = cell.memberType === 3 ? (this.measurePos + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_1 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_1 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_2 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_2 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_2 + 1) ? (currPos_2 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                tCell.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN,\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return tCell;\n    };\n    /* tslint:enable */\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var level = cell.level ? cell.level : 0;\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns &&\n                        this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = level > -1 && this.parent.dataSourceSettings.columns[level] ?\n                            this.parent.dataSourceSettings.columns[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                if (cell.type) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var localizedText = cell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    tCell.children[0].classList.add(cls.CELLVALUE);\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    tCell.insertBefore(div, tCell.children[0]);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex);\n                if (this.parent.cellTemplate) {\n                    var index = tCell.getAttribute('index');\n                    var colindex = tCell.getAttribute('aria-colindex');\n                    var templateID = index + '_' + colindex;\n                    /* tslint:disable-next-line */\n                    if (!(window && isBlazor())) {\n                        this.parent.gridHeaderCellInfo.push({ targetCell: tCell });\n                    }\n                    else if (index && colindex) {\n                        this.parent.gridCellCollection[templateID] = tCell;\n                    }\n                }\n                var field = void 0;\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                            (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(cls.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            tCell.setAttribute('colspan', cell.colSpan.toString());\n            tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('aria-colindex'))],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    /* tslint:disable-next-line */\n    Render.prototype.frameEmptyData = function () {\n        /* tslint:disable-next-line */\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    Render.prototype.calculateColWidth = function (colCount) {\n        var offsetWidth = this.parent.element.offsetWidth ? this.parent.element.offsetWidth :\n            this.parent.element.getBoundingClientRect().width;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * offsetWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        colCount = colCount - 1;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.resizeColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (isNaN(parHeight)) {\n            parHeight = parHeight > 300 ? parHeight : 300;\n        }\n        if (this.parent.currentView !== 'Chart') {\n            if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) ?\n                    this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS).offsetHeight : 0);\n                var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                gridHeight = parHeight - (gBarHeight + toolBarHeight) - 1;\n                if (elementCreated) {\n                    var tableHeight = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight;\n                    var contentHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                    var tableWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV + ' .' + cls.TABLE).offsetWidth;\n                    var contentWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetWidth;\n                    var horizontalOverflow = contentWidth < tableWidth;\n                    var verticalOverflow = contentHeight < tableHeight;\n                    var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                    if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                        !verticalOverflow && !commonOverflow) {\n                        this.parent.grid.height = 'auto';\n                    }\n                    else {\n                        this.parent.grid.height = gridHeight;\n                        this.parent.grid.dataBind();\n                    }\n                }\n                else {\n                    if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                        gridHeight = 'auto';\n                    }\n                }\n            }\n            else {\n                gridHeight = this.gridSettings.height;\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    Render.prototype.frameStackedHeaders = function () {\n        var singleValueFormat = this.parent.dataSourceSettings.values.length === 1 &&\n            !this.parent.dataSourceSettings.alwaysShowValueHeader ? this.formatList[this.parent.dataSourceSettings.values[0].name] : undefined;\n        var integrateModel = [];\n        if ((this.parent.dataType === 'olap' ? true : this.parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues ? this.engine.pivotValues[0].length : 0);\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                if (colField) {\n                    for (var cCnt = 0; cCnt < Object.keys(colField).length + (colField[0] ? 0 : 1); cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || headerCnt === 0) ?\n                                colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' ? 1 : colSpan;\n                        var rowSpan = (colField[cCnt] && colField[cCnt].rowSpan) ? colField[cCnt].rowSpan : 1;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            this.parent.localeObj.getConstant('grandTotal') : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': colField[cCnt] },\n                                /* tslint:disable-next-line */\n                                width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) : this.resColWidth,\n                                minWidth: 30,\n                                format: cCnt === 0 ? '' : (isNullOrUndefined(singleValueFormat) ? this.formatList[colField[cCnt].actualText] : singleValueFormat),\n                                allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true\n                            };\n                        }\n                        else if (headerSplit[cCnt]) {\n                            colSpan = (colField[cCnt] && colField[cCnt].type === 'grand sum' &&\n                                colField[cCnt].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!integrateModel[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(integrateModel[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        /* tslint:disable-next-line */\n                                        field: colField[cCnt] ? colField[cCnt].valueSort.levelName : '',\n                                        customAttributes: { 'cell': colField[cCnt] },\n                                        /* tslint:disable-next-line */\n                                        width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) :\n                                            this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true\n                                    };\n                                    innerModel = [integrateModel[splitPos[innerPos]]];\n                                }\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                integrateModel = columnModel.length > 0 ? columnModel : integrateModel;\n            } while (headerCnt > 0);\n            integrateModel[0] = {\n                field: (0 + '.formattedText'),\n                width: this.resColWidth,\n                minWidth: 30,\n                headerText: '',\n                allowReordering: false,\n                allowResizing: this.parent.gridSettings.allowResizing,\n                visible: true\n            };\n        }\n        else {\n            integrateModel = this.frameEmptyColumns();\n        }\n        if (integrateModel.length > 1) {\n            var lastColumn = integrateModel[integrateModel.length - 1];\n            lastColumn.minWidth = lastColumn.width;\n            lastColumn.width = 'auto';\n            if (lastColumn.columns && lastColumn.columns.length > 0 && !this.parent.allowPdfExport && !this.parent.allowExcelExport) {\n                this.configLastColumnWidth(lastColumn.columns[lastColumn.columns.length - 1]);\n            }\n        }\n        this.parent.triggerColumnRenderEvent(integrateModel);\n        return integrateModel;\n    };\n    Render.prototype.configLastColumnWidth = function (column) {\n        column.minWidth = column.width;\n        column.width = \"auto\";\n        if (column.columns && column.columns.length > 0) {\n            this.configLastColumnWidth(column.columns[column.columns.length - 1]);\n        }\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        /* tslint:disable-next-line */\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name]) {\n                    var fString = this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    format = fString.indexOf('#') > -1 ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    Render.prototype.excelColumnEvent = function (args) {\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    Render.prototype.excelRowEvent = function (args) {\n        if (args.column.field === '0.formattedText') {\n            var isValueCell = args.data[0].type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                /* tslint:disable-next-line */\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            /* tslint:disable-next-line */\n            if (isNullOrUndefined(args.data[this.colPos].value) || isNullOrUndefined(args.data[this.colPos].formattedText)) {\n                args.value = '';\n            }\n            else {\n                /* tslint:disable-next-line */\n                args.value = args.data[this.colPos].value || args.data[this.colPos].formattedText;\n            }\n        }\n        args = this.exportContentEvent(args);\n        this.parent.trigger(events.excelQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var isValueCell = args.data[0].type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level !== -1 ?\n                    args.data[0].level : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    ;\n    Render.prototype.exportHeaderEvent = function (args) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            if (this.actualText !== cell.actualText && cell.colSpan > 1 && cell.level > -1) {\n                args.gridCell.colSpan = args.cell.colSpan = cell.colSpan > -1 ? cell.colSpan : 1;\n            }\n            rowSpan = cell.rowSpan > -1 ? cell.rowSpan : 1;\n            if (args.name === 'excelHeaderQueryCellInfo') {\n                if (cell.rowSpan > -1) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!isNullOrUndefined(cell.type) && cell.level !== 0) {\n                    rowSpan = -1;\n                    args.cell.rowSpan = -1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > -1) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /* tslint:enable:no-any */\n    Render.prototype.exportContentEvent = function (args) {\n        args.value = args.data[Number(args.column.field.split('.formattedText')[0])].type === 'grand sum' ?\n            this.parent.localeObj.getConstant('grandTotal') : args.value;\n        return args;\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","import { KeyboardEvents, closest, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            shiftE: 'shift+E',\n            delete: 'delete',\n            enter: 'enter',\n            escape: 'escape',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'shiftE':\n                this.processEdit(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'escape':\n                this.processClose(e);\n                break;\n            case 'upArrow':\n            case 'downArrow':\n                this.processFilterNodeSelection(e);\n                break;\n        }\n    };\n    CommonKeyboardInteraction.prototype.getButtonElement = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        for (var i = 0, len = allPivotButtons.length; i < len; i++) {\n            if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                return allPivotButtons[i];\n            }\n        }\n        return target;\n    };\n    CommonKeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (target.querySelector('.' + cls.AXISFIELD_ICON_CLASS) && closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            }\n            else if (target.querySelector('.' + cls.CALC_EDIT)) {\n                target.querySelector('.' + cls.CALC_EDIT).click();\n            }\n            else if (target.querySelector('.' + cls.SORT_CLASS) &&\n                !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n                target.querySelector('.' + cls.SORT_CLASS).click();\n                this.getButtonElement(target).focus();\n            }\n            else if (target.querySelector('.' + cls.FILTER_COMMON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.SORT_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            this.getButtonElement(target).focus();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processEdit = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.CALC_EDIT)) {\n            target.querySelector('.' + cls.CALC_EDIT).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.FILTER_COMMON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            if (this.parent && this.parent.control && this.parent.moduleName === 'pivotview' &&\n                this.parent.control.grid && this.parent.control.showGroupingBar &&\n                this.parent.control.groupingBarModule && closest(target, '.' + cls.GROUP_ROW_CLASS) &&\n                this.parent.filterDialog && this.parent.filterDialog.dialogPopUp &&\n                !this.parent.filterDialog.dialogPopUp.isDestroyed && this.parent.filterDialog.dialogPopUp.element) {\n                var dialogElement_1 = this.parent.filterDialog.dialogPopUp.element;\n                var isExcelFilter_1 = this.parent.filterDialog.allowExcelLikeFilter;\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(function () {\n                    if (dialogElement_1 && dialogElement_1.classList.contains('e-popup-open')) {\n                        if (isExcelFilter_1 && dialogElement_1.querySelector('.e-dlg-closeicon-btn')) {\n                            dialogElement_1.querySelector('.e-dlg-closeicon-btn').focus();\n                        }\n                        else if (dialogElement_1.querySelector('input')) {\n                            dialogElement_1.querySelector('input').focus();\n                        }\n                    }\n                });\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilterNodeSelection = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.SELECT_ALL_CLASS) && e.keyCode === 40) {\n            /* tslint:disable-next-line:max-line-length */\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree && memberEditorTree.querySelector('li')) {\n                var firstLi = memberEditorTree.querySelector('li');\n                if (memberEditorTree.querySelector('li#_active')) {\n                    removeClass([memberEditorTree.querySelector('li#_active')], ['e-hover', 'e-node-focus']);\n                    memberEditorTree.querySelector('li#_active').removeAttribute('id');\n                }\n                firstLi.setAttribute('id', '_active');\n                addClass([firstLi], ['e-hover', 'e-node-focus']);\n                memberEditorTree.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS) && e.keyCode === 38) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree.querySelector('li#_active.e-hover.e-node-focus') && memberEditorTree.querySelector('li') &&\n                memberEditorTree.querySelector('li').classList.contains('e-prev-active-node') &&\n                memberEditorTree.querySelector('li') === memberEditorTree.querySelector('li#_active.e-hover.e-node-focus')) {\n                removeClass(memberEditorTree.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n                /* tslint:disable-next-line:max-line-length */\n                var allMemberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.SELECT_ALL_CLASS);\n                if (allMemberEditorTree && allMemberEditorTree.querySelector('li')) {\n                    var firstLi = allMemberEditorTree.querySelector('li');\n                    firstLi.setAttribute('id', '_active');\n                    addClass([firstLi], ['e-hover', 'e-node-focus']);\n                    allMemberEditorTree.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && target.id === this.parent.parentID + '_inputbox') {\n            if (e.action === 'upArrow') {\n                target.parentElement.querySelector('.e-spin-up').click();\n            }\n            else if (e.action === 'downArrow') {\n                target.parentElement.querySelector('.e-spin-down').click();\n            }\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.REMOVE_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            /* tslint:disable-next-line:max-line-length */\n            /* tslint:disable-next-line:no-any */\n            var dialogInstance = closest(target, '.e-popup.e-popup-open').ej2_instances[0];\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function EventBase(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.id;\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.id;\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            isDescending ? removeClass([target], cls.SORT_DESCEND_CLASS) : addClass([target], cls.SORT_DESCEND_CLASS);\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateFiltering\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                var members = PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember);\n                /* tslint:disable:typedef */\n                members =\n                    this.parent.engineModule.fieldList[fieldName].sort === 'Ascending' ?\n                        (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n                            ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        this.parent.engineModule.fieldList[fieldName].sort === 'Descending' ?\n                            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                                ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            members;\n                /* tslint:enable:typedef */\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                treeData =\n                    this.getTreeData(isInclude, members, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget = this.parent.control.filterTargetID;\n        if (isNullOrUndefined(popupTarget)) {\n            popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n                this.parent.element : document.getElementById(this.parent.parentID + '_Wrapper');\n        }\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     * @method isValidFilterItemsAvail\n     * @param  {string} fieldName - Gets filter members for the given field name.\n     * @return {boolean}\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            var engineModule = this.parent.engineModule;\n            var field = engineModule.fieldList[fieldName];\n            var members = (engineModule.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData, isHierarchy);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     * @method sortFilterData\n     * @param  {{ [key: string]: Object }[]} treeData - Gets filter members for the given field name.\n     * @return {{ [key: string]: Object }[]}\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            /* tslint:disable:typedef */\n            treeData = order === 'Ascending' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                    ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                    ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n            /* tslint:enable:typedef */\n        }\n        return treeData;\n    };\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData, isHierarchy);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        this.parent.isDateField = engineModule.formatFields[fieldName] &&\n            ((['date', 'dateTime', 'time']).indexOf(engineModule.formatFields[fieldName].type) > -1);\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = this.parent.isDateField ? member.formattedText : member.actualText.toString();\n            /* tslint:disable */\n            var obj = {\n                id: member.actualText.toString(),\n                actualText: member.actualText,\n                name: memberName,\n                isSelected: isInclude ? false : true\n            };\n            /* tslint:enable */\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[member.actualText] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * get the parent node of particular filter members.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData, isHierarchy) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node].parent;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @method onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} fieldCaption - Defines dropped position to the axis based on field position.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        var draggedClass;\n        var row = this.parent.dataSourceSettings.rows;\n        var column = this.parent.dataSourceSettings.columns;\n        var value = this.parent.dataSourceSettings.values;\n        var filter = this.parent.dataSourceSettings.filters;\n        var field = [row, column, value, filter];\n        for (var len = 0, lnt = field.length; len < lnt; len++) {\n            if (field[len]) {\n                for (var i = 0, n = field[len].length; i < n; i++) {\n                    if (field[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        field[len][i].name.toLowerCase() === '[measures]' && field[len][i].name.toLowerCase() === fieldName)) {\n                        draggedClass = len === 0 ? 'rows' : len === 1 ? 'columns' : len === 2 ? 'values' : 'filters';\n                    }\n                    if (!draggedClass) {\n                        draggedClass = 'fieldList';\n                    }\n                }\n            }\n        }\n        var eventdrop = {\n            fieldName: fieldName, dropField: PivotUtil.getFieldInfo(fieldName, this.control).fieldItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            dropAxis: droppedClass, dropPosition: droppedPosition, draggedAxis: draggedClass, cancel: false\n        };\n        var control = this.control.getModuleName() === 'pivotfieldlist' && this.control.isPopupView ?\n            this.control.pivotGridModule : this.control;\n        control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                droppedClass = observedArgs.dropAxis;\n                droppedPosition = observedArgs.dropPosition;\n                fieldName = observedArgs.dropField ? observedArgs.dropField.name : observedArgs.fieldName;\n                dataSourceItem = observedArgs.dropField;\n                if (_this.control && _this.btnElement && _this.btnElement.getAttribute('isvalue') === 'true') {\n                    switch (droppedClass) {\n                        case '':\n                            _this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            break;\n                        case 'rows':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'row' } }, true);\n                            break;\n                        case 'columns':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'column' } }, true);\n                            break;\n                    }\n                }\n                else {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.parent.dataType === 'olap') {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (_this.parent.dataSourceSettings.values.length === 0) {\n                        _this.removeFieldFromReport('[measures]');\n                    }\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.control) {\n                    var eventArgs = {\n                        fieldName: fieldName, droppedField: dataSourceItem,\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this.parent.dataSourceSettings),\n                        droppedAxis: droppedClass, droppedPosition: droppedPosition\n                    };\n                    /* tslint:disable */\n                    var dataSourceUpdate_1 = _this;\n                    control.trigger(events.onFieldDropped, eventArgs, function (droppedArgs) {\n                        dataSourceItem = droppedArgs.droppedField;\n                        if (dataSourceItem) {\n                            droppedPosition = droppedArgs.droppedPosition;\n                            droppedClass = droppedArgs.droppedAxis;\n                            switch (droppedClass) {\n                                case 'filters':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.push(dataSourceItem) : _this.parent.dataSourceSettings.filters.push(dataSourceItem));\n                                    break;\n                                case 'rows':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.push(dataSourceItem) : _this.parent.dataSourceSettings.rows.push(dataSourceItem));\n                                    break;\n                                case 'columns':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.push(dataSourceItem) : _this.parent.dataSourceSettings.columns.push(dataSourceItem));\n                                    break;\n                                case 'values':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.push(dataSourceItem) : _this.parent.dataSourceSettings.values.push(dataSourceItem));\n                                    if (isBlazor()) {\n                                        if (dataSourceUpdate_1.parent.dataType === 'olap' && !dataSourceUpdate_1.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = dataSourceUpdate_1.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                dataSourceUpdate_1.parent.dataSourceSettings.rows : dataSourceUpdate_1.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    else {\n                                        if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    break;\n                            }\n                            if (isBlazor()) {\n                                dataSourceUpdate_1.parent.control.pivotButtonModule.updateDataSource();\n                                dataSourceUpdate_1.parent.control.axisFieldModule.render();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @method removeFieldFromReport\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties : fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     * @param  {string} fieldName - Defines dropped field name to add dataSource.\n     * @method getNewField\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName, fieldItem) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                isNamedSet: fieldItem ? fieldItem.isNamedSet : field.isNamedSets,\n                isCalculatedField: fieldItem ? fieldItem.isCalculatedField : field.isCalculatedField,\n                type: (fieldItem ? (fieldItem.type === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : fieldItem.type) :\n                    (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType)),\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                type: (fieldItem ? ((fieldItem.type === undefined || fieldItem.type === null) ?\n                    field.type === 'number' ? 'Sum' : 'Count' : fieldItem.type) :\n                    ((field.aggregateType === undefined || field.aggregateType === null) ?\n                        field.type === 'number' ? 'Sum' :\n                            'Count' : field.aggregateType)),\n                showNoDataItems: fieldItem ? fieldItem.showNoDataItems : field.showNoDataItems,\n                baseField: fieldItem ? fieldItem.baseField : field.baseField,\n                baseItem: fieldItem ? fieldItem.baseItem : field.baseItem,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createErrorDialog\n     * @return {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description, target) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var zIndex = target ? Number(target.style.zIndex) + 1 : (this.parent.moduleName === 'pivotfieldlist' &&\n            this.parent.renderMode === 'Popup' && this.parent.control ? this.parent.control.dialogRenderer.fieldListDialog.zIndex + 1 :\n            (this.parent.moduleName === 'pivotfieldlist' && this.parent.renderMode === 'Fixed' && this.parent.control ? 1000002 :\n                (this.parent.moduleName === 'pivotview' && this.parent.control ? 1000002 : 1000001)));\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: zIndex,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute, closest, EventHandler } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     * @method createFilterDialog\n     * @return {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var _this = this;\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption }\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            // content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            content: '',\n            isModal: true,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: this.parent.renderMode === 'Popup' ? false : true,\n            target: target,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        var filterArgs = {\n            cancel: false,\n            fieldName: fieldName,\n            fieldMembers: this.parent.dataSourceSettings.allowMemberFilter ? treeData : [],\n            filterSetting: this.filterObject\n        };\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        control.trigger(events.memberEditorOpen, filterArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                treeData = observedArgs.fieldMembers;\n                if (_this.allowExcelLikeFilter) {\n                    _this.createTabMenu(treeData, fieldCaption, fieldName);\n                    addClass([_this.dialogPopUp.element], 'e-excel-filter');\n                    _this.updateCheckedState(fieldCaption);\n                }\n                else {\n                    _this.dialogPopUp.content = _this.createTreeView(treeData, fieldCaption, fieldName);\n                    _this.updateCheckedState(fieldCaption);\n                }\n                setStyleAttribute(_this.dialogPopUp.element, { 'visibility': 'visible' });\n                if (_this.allowExcelLikeFilter) {\n                    _this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n                }\n                _this.parent.control.pivotButtonModule.memberTreeView = _this.parent.filterDialog.memberTreeView;\n                /* tslint:disable-next-line:max-line-length */\n                _this.memberTreeView.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n                /* tslint:disable-next-line:max-line-length */\n                _this.allMemberSelect.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n            }\n            else {\n                _this.dialogPopUp.close();\n                _this.dialogPopUp = undefined;\n            }\n        });\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-wrapper-class', attrs: { 'type': 'button' }\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', {\n            attrs: { 'type': 'text', className: cls.EDITOR_SEARCH__INPUT_CLASS }\n        });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        this.createSortOptions(fieldName, searchWrapper, treeData);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            searchWrapper.appendChild(levelWrapper);\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '\"' + filterCaption + '\"',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv, fieldCaption);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState(fieldCaption);\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName };\n        var data = [{ id: 'all', name: this.parent.localeObj.getConstant('all'), isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            expandOn: 'None'\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        editorTreeWrapper.appendChild(labelWrapper);\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createSortOptions = function (fieldName, target, treeData) {\n        if (this.parent.dataType === 'pivot' && treeData && treeData.length > 0) {\n            var sortOrder = this.parent.engineModule.fieldList[fieldName].sort;\n            var sortWrapper = createElement('div', {\n                className: cls.FILTER_SORT_CLASS + ' e-btn-group' + (this.parent.enableRtl ? ' ' + cls.RTL : ''),\n                id: this.parent.element.id + '_Member_Sort'\n            });\n            this.parent.element.appendChild(sortWrapper);\n            var sortAscendElement = createElement('button', {\n                className: (sortOrder === 'Ascending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Ascend', attrs: { 'type': 'button' }\n            });\n            var sortDescendElement = createElement('button', {\n                className: (sortOrder === 'Descending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Descend', attrs: { 'type': 'button' }\n            });\n            var sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_ASCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortAscendElement);\n            sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_DESCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortDescendElement);\n            sortWrapper.appendChild(sortAscendElement);\n            sortWrapper.appendChild(sortDescendElement);\n            target.appendChild(sortWrapper);\n            this.unWireEvent(sortAscendElement, fieldName);\n            this.unWireEvent(sortDescendElement, fieldName);\n            this.wireEvent(sortAscendElement, fieldName);\n            this.wireEvent(sortDescendElement, fieldName);\n        }\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop',\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv, fieldCaption) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ? engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState(fieldCaption);\n        }, 500);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-any */\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        var target = args.event.target;\n        if (target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n        else if (args.event.keyCode === 38 && !isAllMember) {\n            removeClass(this.memberTreeView.element.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n            addClass(checkedNode, 'e-prev-active-node');\n        }\n    };\n    /* tslint:enable:no-any */\n    FilterDialog.prototype.applySorting = function (fieldName, args) {\n        var target = closest(args.target, '.' + cls.MEMBER_SORT_CLASS);\n        if (target) {\n            var sortElements = [].slice.call(closest(target, '.' + cls.FILTER_SORT_CLASS).querySelectorAll('.' + cls.MEMBER_SORT_CLASS));\n            if (target.querySelector('.' + cls.SORT_ASCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Ascending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[1]], cls.SORT_SELECTED_CLASS);\n            }\n            else if (target.querySelector('.' + cls.SORT_DESCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Descending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[0]], cls.SORT_SELECTED_CLASS);\n            }\n            else {\n                this.updateFilterMembers('None', fieldName);\n                removeClass(sortElements, cls.SORT_SELECTED_CLASS);\n            }\n        }\n    };\n    FilterDialog.prototype.updateFilterMembers = function (order, fieldName) {\n        var members = order === 'None' ?\n            PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember) : this.parent.currentTreeItems.slice();\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        var treeData = [];\n        /* tslint:disable:typedef */\n        members = order === 'Ascending' ? (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n            ((b.actualText > a.actualText) ? -1 : 0); })) : order === 'Descending' ?\n            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                ((b.actualText < a.actualText) ? -1 : 0); })) : members;\n        /* tslint:enable:typedef */\n        for (var i = 0, lnt = members.length; i < lnt; i++) {\n            if (order === 'None') {\n                var memberName = (this.parent.isDateField ? members[i].formattedText : members[i].actualText).toString();\n                var obj = {\n                    id: members[i].actualText.toString(),\n                    actualText: members[i].actualText,\n                    name: memberName,\n                    isSelected: this.parent.currentTreeItemsPos[members[i].actualText].isSelected\n                };\n                this.parent.currentTreeItems.push(obj);\n                if (this.editorSearch.value !== '') {\n                    if (obj.name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(obj);\n                        treeData.push(obj);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(obj);\n                    treeData.push(obj);\n                }\n            }\n            else {\n                this.parent.currentTreeItems.push(members[i]);\n                if (this.editorSearch.value !== '') {\n                    if (members[i].name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(members[i]);\n                        treeData.push(members[i]);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(members[i]);\n                    treeData.push(members[i]);\n                }\n            }\n            this.parent.currentTreeItemsPos[members[i].actualText].index = i;\n        }\n        var dataCount = this.memberTreeView.fields.dataSource.length;\n        /* tslint:disable-next-line:max-line-length */\n        this.memberTreeView.fields = { dataSource: treeData.slice(0, dataCount), id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        this.memberTreeView.dataBind();\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount, isSelected: obj.isSelected };\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            className: 'e-filter-tab-wrapper'\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    /* tslint:disable-next-line:max-line-length */\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject : undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ? measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id && field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter',\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS,\n            innerHTML: this.parent.localeObj.getConstant(type + 'TextContent')\n        });\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : ''),\n            innerHTML: this.parent.localeObj.getConstant('And')\n        });\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-wrapper' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE),\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-wrapper' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : ''),\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-wrapper' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_wrapper' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_wrapper' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS, width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    /* tslint:enable */\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var value1;\n        var value2;\n        /* tslint:disable:no-any */\n        if (type === 'date') {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n            value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        }\n        else {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = inputObj1.value;\n            value2 = inputObj2.value;\n        }\n        /* tslint:enable:no-any */\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function (fieldCaption) {\n        var filterDialog = this.dialogPopUp.element;\n        setStyleAndAttributes(filterDialog, { 'role': 'menu', 'aria-haspopup': 'true' });\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length -\n                nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        /* tslint:disable-next-line:max-line-length */\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, PivotUtil.cloneFilterSettings(this.parent.dataSourceSettings.filterSettings));\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    FilterDialog.prototype.wireEvent = function (element, fieldName) {\n        EventHandler.add(element, 'click', this.applySorting.bind(this, fieldName), this);\n    };\n    FilterDialog.prototype.unWireEvent = function (element, fieldName) {\n        EventHandler.remove(element, 'click', this.applySorting);\n    };\n    /**\n     * To close filter dialog.\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class\n     * @param  {CommonArgs} control?\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    /** Constructor for Common module */\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateCommonModule\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initialLoad, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialLoad, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showEditIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"dataType\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Allows the style information to cusotmize the pivot table cell apprearance.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Allows to specify the custom group information of specific field to create custom groups.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Allows options to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Allows you to set the credential information to access the specified SSAS cube.\n * > It is applicable only for OLAP data source.\n */\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"userName\", void 0);\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"password\", void 0);\n    return Authentication;\n}(ChildProperty));\nexport { Authentication };\n/**\n * Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.\n * * `catalog`: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. **Note: It is applicable only for OLAP data source.**\n * * `cube`: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. **Note: It is applicable only for OLAP data source.**\n * * `providerType`: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.\n * * `url`: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. **Note: It is applicable only for OLAP data source.**\n * * `localeIdentifier`: Allows you to set the specific culture code as number type to render pivot table with desired localization.\n * By default, the pivot table displays with culture code **1033**, which indicates \"en-US\" locale. **Note: It is applicale only for OLAP data source.**\n * * `dataSource`: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\n * You can fetch JSON data from remote server by using DataManager. **Note: It is applicable only for relational data source.**\n * * `rows`: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.\n * * `columns`: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.\n * * `values`: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.\n * * `filters`: Allows to filter the values in other axis based on the collection of filter fields in pivot table.\n * * `excludeFields`: Allows you to restrict the specific field(s) from displaying it in the field list UI.\n * You may also be unable to render the pivot table with this field(s) by doing so. **Note: It is applicable only for relational data source.**\n * * `expandAll`: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\n * By default, all the headers are collapsed in the pivot table. **Note: It is applicable only for Relational data.**\n * * `valueAxis`: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.\n * * `filterSettings`: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n * * `sortSettings`: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n * By default, the data source containing fields are display with Ascending order alone. To use this option, it requires the `enableSorting` property to be **true**.\n * * `enableSorting`: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.\n * * `formatSettings`: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n * * `drilledMembers`: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n * * `valueSortSettings`: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n * * `calculatedFieldSettings`: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n * * `allowMemberFilter`: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.\n * * `allowLabelFilter`: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.\n * * `allowValueFilter`: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.\n * * `showSubTotals`: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.\n * * `showRowSubTotals`: Allows to show or hide sub-totals in row axis of the pivot table.\n * * `showColumnSubTotals`: Allows to show or hide sub-totals in column axis of the pivot table.\n * * `showGrandTotals`: Allows to show or hide grand totals in both rows and columns axis of the pivot table.\n * * `showRowGrandTotals`: Allows to show or hide grand totals in row axis of the pivot table.\n * * `showColumnGrandTotals`: Allows to show or hide grand totals in column axis of the pivot table.\n * * `showHeaderWhenEmpty`: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\n * For example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom >> Undefined” in the header section.\n * * `alwaysShowValueHeader`: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.\n * * `conditionalFormatSettings`: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n * * `emptyCellsTextContent`: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.\n * * `groupSettings`: Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n * * `showAggregationOnValueField`: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\n * For example, if the value field \"Sold Amount\" is aggregated with Sum, it will be displayed with caption \"Sum of Sold Amount\" in its pivot button.\n * * `authentication`: Allows you to set the credential information to access the specified SSAS cube. **Note: It is applicable only for OLAP data source**.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"fieldMapping\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property('JSON')\n    ], DataSourceSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, Authentication)\n    ], DataSourceSettings.prototype, \"authentication\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ wrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Method to perform excel export.\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues]\n        };\n        this.parent.trigger(events.beforeExport, args);\n        var fileName = args.fileName;\n        var header = args.header;\n        var footer = args.footer;\n        var dataCollections = args.dataCollections;\n        /** Fill data and export */\n        /* tslint:disable-next-line:no-any */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var actualrCnt = 0;\n            var formatList = this.parent.renderModule.getFormatList();\n            var rows = [];\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var cellValue = pivotCell.axis === 'value' ? pivotCell.value : pivotCell.formattedText;\n                                if (pivotCell.type === 'grand sum') {\n                                    cellValue = this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan),\n                                    });\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            cells[cells.length - 1].value = '';\n                                        }\n                                        var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                            this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                            pivotCell.actualText;\n                                        cells[cells.length - 1].style = {\n                                            numberFormat: formatList[field], bold: false, wrapText: true\n                                        };\n                                        if (pivotCell.style) {\n                                            cells[cells.length - 1].style.backColor = pivotCell.style.backgroundColor;\n                                            cells[cells.length - 1].style.fontColor = pivotCell.style.color;\n                                            cells[cells.length - 1].style.fontName = pivotCell.style.fontFamily;\n                                            cells[cells.length - 1].style.fontSize = Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    else {\n                                        cells[cells.length - 1].style = {\n                                            bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0\n                                        };\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            cells[cells.length - 1].style.hAlign = 'Left';\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                cells[cells.length - 1].style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                cells[cells.length - 1].style.indent = pivotCell.level * 2;\n                                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    cells[cells.length - 1].style.borders = { color: '#000000', lineStyle: 'Thin' };\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            cells.push({\n                                index: cCnt + 1, value: '', colSpan: 1, rowSpan: 1,\n                            });\n                        }\n                    }\n                    rows.push({ index: actualrCnt, cells: cells });\n                }\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv');\n        book.save(fileName + (type === 'Excel' ? '.xlsx' : '.csv'));\n    };\n    /**\n     * To destroy the excel export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    ExcelExport.prototype.destroy = function () {\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var header = eventParams.args.header;\n        var footer = eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    PDFExport.prototype.exportToPDF = function () {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        this.parent.trigger(events.beforeExport, args);\n        this.gridStyle = args.style;\n        var document = new PdfDocument();\n        return { document: document, args: args };\n    };\n    /**\n     * To destroy the pdf export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            shiftEnter: 'shift+enter',\n            ctrlEnter: 'ctrl+enter',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape',\n            ctrlShiftF: 'ctrl+shift+f'\n        };\n        this.parent = parent;\n        this.event = undefined;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'shiftTab':\n                this.processShiftTab(e);\n                break;\n            case 'enter':\n            case 'shiftEnter':\n            case 'ctrlEnter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlShiftF':\n                this.toggleFieldList(e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i + 1] ? allPivotButtons[i + 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getPrevButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i - 1] ? allPivotButtons[i - 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.allpivotButtons = function (target) {\n        var buttons;\n        var columnFilterValueGroup = closest(target, '.' + cls.GRID_GROUPING_BAR_CLASS);\n        var rowGroup = closest(target, '.' + cls.GROUP_PIVOT_ROW);\n        var chartGroup = closest(target, '.' + cls.CHART_GROUPING_BAR_CLASS);\n        var tableAxis = target.classList.contains(cls.ROWSHEADER);\n        var chartAxis;\n        var rowAxis;\n        var columnFilterValueAxis;\n        if (columnFilterValueGroup !== null) {\n            rowAxis = columnFilterValueGroup.classList.contains(cls.GRID_GROUPING_BAR_CLASS);\n        }\n        else if (rowGroup !== null) {\n            columnFilterValueAxis = rowGroup.classList.contains(cls.GROUP_PIVOT_ROW);\n        }\n        else if (chartGroup !== null) {\n            chartAxis = chartGroup.classList.contains(cls.CHART_GROUPING_BAR_CLASS);\n        }\n        if (rowAxis || columnFilterValueAxis || tableAxis) {\n            /* tslint:disable */\n            var groupingbarButton = [].slice.call(this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var headerButton = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            buttons = groupingbarButton.concat(headerButton);\n        }\n        else if (chartAxis) {\n            buttons = [].slice.call(this.parent.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        }\n        /* tslint:enable */\n        return buttons;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n                var nextButton = this.getNextButton(target);\n                if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    if (this.parent.element.querySelector('.e-focused')) {\n                        this.parent.element.querySelector('.e-focused').setAttribute('tabindex', '-1');\n                        removeClass(this.parent.element.querySelectorAll('.e-focus'), 'e-focus');\n                        removeClass(this.parent.element.querySelectorAll('.e-focused'), 'e-focused');\n                        gridFocus.setFocusedElement(this.parent.element.querySelector('.e-headercell'));\n                        this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '0');\n                    }\n                    else {\n                        gridFocus.currentInfo.skipAction = true;\n                    }\n                    addClass([nextButton], 'e-btn-focused');\n                    nextButton.focus();\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList &&\n            target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList &&\n            target && closest(target, '.' + cls.PIVOT_VIEW_CLASS) && !closest(target, '.e-popup.e-popup-open')) {\n            if (this.parent.grid) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) && this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processShiftTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    target = this.parent.element.querySelector('.e-btn-focused') ? this.parent.element.querySelector('.e-btn-focused') :\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS);\n                    var allPivotButtons = this.allpivotButtons(target);\n                    if (allPivotButtons.length > 0 && allPivotButtons[allPivotButtons.length - 1]) {\n                        gridFocus.currentInfo.skipAction = true;\n                        allPivotButtons[allPivotButtons.length - 1].focus();\n                        removeClass(allPivotButtons, 'e-btn-focused');\n                        addClass([allPivotButtons[allPivotButtons.length - 1]], 'e-btn-focused');\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                var prevButton = this.getPrevButton(target);\n                if (prevButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    gridFocus.currentInfo.skipAction = true;\n                    prevButton.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && this.parent.grid && (target.classList.contains('e-movablefirst') ||\n            (target.classList.contains('e-rowsheader') && closest(target, 'tr').getAttribute('data-uid') ===\n                this.parent.grid.element.querySelector('.e-frozencontent tr').getAttribute('data-uid')))) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (target.classList.contains('e-movablefirst')) {\n                target = (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) ?\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) :\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS));\n                var element = gridFocus.getFocusedElement();\n                removeClass([element], ['e-focused', 'e-focus']);\n            }\n            var allPivotButtons_1 = this.allpivotButtons(target);\n            if (allPivotButtons_1.length > 0) {\n                gridFocus.currentInfo.skipAction = true;\n                setTimeout(function () {\n                    allPivotButtons_1[allPivotButtons_1.length - 1].focus();\n                });\n                removeClass(allPivotButtons_1, 'e-btn-focused');\n                addClass([allPivotButtons_1[allPivotButtons_1.length - 1]], 'e-btn-focused');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) &&\n            this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (e.keyCode === 13 && !e.shiftKey && !e.ctrlKey) {\n                if (target.querySelector('.' + cls.ICON)) {\n                    this.event = e;\n                    target.querySelector('.' + cls.ICON).click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                else if (target.classList.contains('e-valuescontent')) {\n                    target.dispatchEvent(new MouseEvent('dblclick', {\n                        'view': window,\n                        'bubbles': true,\n                        'cancelable': true\n                    }));\n                    if (target.querySelector('.e-numerictextbox')) {\n                        target.click();\n                    }\n                }\n                else if (target.classList.contains('e-numerictextbox')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    removeClass([element], ['e-focused', 'e-focus']);\n                }\n            }\n            else if (e.keyCode === 13 && e.shiftKey && !e.ctrlKey) {\n                if (this.parent.enableValueSorting) {\n                    this.event = e;\n                    target.click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n            else if (e.keyCode === 13 && !e.shiftKey && e.ctrlKey) {\n                if (this.parent.hyperlinkSettings && target.querySelector('a')) {\n                    target.querySelector('a').click();\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        /* tslint:disable */\n        removeClass(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR), [cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n        this.parent.renderModule.selected();\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        var target = e.target;\n        if (this.parent.grid && this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row' &&\n            !target.classList.contains('e-numerictextbox')) {\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('aria-colIndex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            /* tslint:disable */\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('aria-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n        }\n        else if (target && (e.keyCode === 37 || e.keyCode === 38) &&\n            this.parent && this.parent.showGroupingBar && this.parent.groupingBarModule && !target.classList.contains('e-numerictextbox')) {\n            if (this.parent.grid && this.parent.element.querySelector('.e-frozenheader') && this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus').length > 0) {\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus'), 'e-focus');\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focused'), 'e-focused');\n                this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '-1');\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.setFocusedElement(target);\n                addClass([target], ['e-focused', 'e-focus']);\n                target.setAttribute('tabindex', '0');\n                target.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target.classList.contains('e-numerictextbox') && e.action === 'rightArrow' || e.action === 'leftArrow') {\n            target.click();\n        }\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[aria-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    KeyboardInteraction.prototype.toggleFieldList = function (e) {\n        var target = e.target;\n        if (this.parent && !this.parent.isDestroyed && this.parent.showFieldList &&\n            this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed &&\n            this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (!this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN)) {\n                this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                e.preventDefault();\n                return;\n            }\n            else if (this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN) &&\n                this.parent.pivotFieldListModule.dialogRenderer && this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog &&\n                !this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.hide();\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS,\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n            if (document.querySelector('#' + this.parent.element.id + '_PivotContextMenu')) {\n                remove(document.querySelector('#' + this.parent.element.id + '_PivotContextMenu'));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, isBlazor, } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.parent = parent;\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n        var fCont = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n        var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n        EventHandler.clearEvents(mCont);\n        EventHandler.clearEvents(fCont);\n        if (this.engineModule) {\n            EventHandler.add(mCont, 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mCont, 'scroll wheel touchmove pointermove keyup keydown', this.onVerticalScroll(fCont, mCont), this);\n            EventHandler.add(mCont, 'mouseup touchend', this.common(mHdr, mCont, fCont), this);\n            EventHandler.add(fCont, 'wheel', this.onWheelScroll(mCont, fCont), this);\n            EventHandler.add(fCont, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(fCont, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n        }\n        this.parent.grid.isPreventScrollEvent = true;\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            fCont.scrollTop = top;\n            element.scrollTop = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = element.scrollTop + (_this.pageXY.y - pageXY.y);\n            var left = element.scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.parent.element.querySelector('.' + cls.HEADERCONTENT).contains(e.target)) {\n                if (_this.frozenPreviousValues.left === left || left < 0) {\n                    return;\n                }\n                mHdr.scrollLeft = left;\n                element.scrollLeft = left;\n                _this.pageXY.x = pageXY.x;\n                _this.frozenPreviousValues.left = left;\n            }\n            else {\n                if (_this.frozenPreviousValues.top === top || top < 0) {\n                    return;\n                }\n                fCont.scrollTop = top;\n                element.scrollTop = top;\n                _this.pageXY.y = pageXY.y;\n                _this.frozenPreviousValues.top = top;\n            }\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (mHdr, mCont, top, left, e) {\n        var _this = this;\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            engine.pageSettings = this.parent.pageSettings;\n        }\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var rowValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_1 = (this.parent.pageSettings.rowSize * rowValues_1 * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize_1);\n                if ((this.parent.scrollPosObject.vertical === section ||\n                    engine.pageSettings.rowSize >= engine.rowCount)) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                this.parent.scrollPosObject.vertical = section;\n                engine.pageSettings.rowCurrentPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var pivot_1 = this.parent;\n                        var sfBlazor = 'sfBlazor';\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.pivotValues = engine.pivotValues;\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                            var exactPage = Math.ceil(rowStartPos_1 / (pivot_1.pageSettings.rowSize * rowValues_1));\n                            var pos = exactSize_1 * exactPage -\n                                (engine.rowFirstLvl * rowValues_1 * pivot_1.gridSettings.rowHeight);\n                            pivot_1.scrollPosObject.verticalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        this.parent.engineModule.generateGridData(this.parent.dataSourceSettings, this.parent.engineModule.headerCollection);\n                        rowStartPos_1 = this.parent.engineModule.rowStartPos;\n                    }\n                }\n                else {\n                    this.parent.olapEngineModule.scrollPage('scroll');\n                    rowStartPos_1 = this.parent.olapEngineModule.pageRowStartPos;\n                }\n                if (!(isBlazor() && this.parent.dataType === 'pivot')) {\n                    this.parent.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowSize * rowValues_1));\n                    var pos = exactSize_1 * exactPage -\n                        (engine.rowFirstLvl * rowValues_1 * this.parent.gridSettings.rowHeight);\n                    this.parent.scrollPosObject.verticalSection = pos;\n                }\n            }\n            else {\n                var colValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_2 = (this.parent.pageSettings.columnSize *\n                    colValues_1 * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(left / exactSize_2);\n                if (this.parent.scrollPosObject.horizontal === section) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                var pivot = this.parent;\n                pivot.scrollPosObject.horizontal = section;\n                engine.pageSettings.columnCurrentPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                if (pivot.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var pivot_2 = this.parent;\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_2.dataSourceSettings], pivot_2.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            colStartPos_1 = pivot_2.engineModule.colStartPos;\n                            pivot_2.pivotValues = engine.pivotValues;\n                            var exactPage = Math.ceil(colStartPos_1 / (pivot_2.pageSettings.columnSize * colValues_1));\n                            var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                                colValues_1 * pivot_2.gridSettings.columnWidth);\n                            pivot_2.scrollPosObject.horizontalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, pivot.engineModule.headerCollection);\n                        colStartPos_1 = pivot.engineModule.colStartPos;\n                    }\n                }\n                else {\n                    pivot.olapEngineModule.scrollPage('scroll');\n                    colStartPos_1 = pivot.olapEngineModule.pageColStartPos;\n                }\n                if (!(isBlazor() && pivot.dataType === 'pivot')) {\n                    pivot.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(colStartPos_1 / (pivot.pageSettings.columnSize * colValues_1));\n                    var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                        colValues_1 * pivot.gridSettings.columnWidth);\n                    pivot.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n        };\n    };\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var left = mCont.scrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? mCont.scrollLeft : left;\n                    _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, left, e);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                fCont.scrollTop = mCont.scrollTop;\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'horizondal';\n            var horiOffset = -((left - _this.parent.scrollPosObject.horizontalSection - mCont.scrollLeft));\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',').length > 1 ?\n                mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() : \"0px)\";\n            if (mCont.scrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + mHdr.offsetWidth) -\n                (_this.parent.scrollPosObject.horizontalSection + mCont.querySelector('.e-table').offsetWidth));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - mCont.scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount\n                    - _this.parent.grid.columns[0].width);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = mCont.scrollLeft;\n        };\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (fCont, mCont) {\n        var _this = this;\n        var timeOutObj;\n        return function (e) {\n            var top = mCont.scrollTop * _this.parent.verticalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove' || e.type === 'keyup' || e.type === 'keydown') {\n                clearTimeout(timeOutObj);\n                timeOutObj = setTimeout(function () {\n                    _this.update(null, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n                }, 300);\n            }\n            /* tslint:enable */\n            if (_this.previousValues.top === top) {\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'vertical';\n            var vertiOffset = -((top - _this.parent.scrollPosObject.verticalSection - mCont.scrollTop));\n            var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n            if (mCont.scrollTop < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                -(_this.parent.scrollPosObject.verticalSection - top) : ((top + fCont.clientHeight) -\n                (_this.parent.scrollPosObject.verticalSection + fCont.querySelector('.e-table').offsetHeight));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.verticalSection > top ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (top > fCont.clientHeight) {\n                    if (_this.parent.scrollPosObject.top < 1) {\n                        _this.parent.scrollPosObject.top = fCont.clientHeight;\n                    }\n                    _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                    excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                        (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.verticalSection;\n                }\n                var movableTable = _this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                vertiOffset = -((top - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.scrollTop));\n                var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                    - movableTable.clientHeight);\n                if (vHeight > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                    vHeight = _this.parent.scrollerBrowserLimit;\n                }\n                if (vertiOffset > vHeight && vertiOffset > top) {\n                    vertiOffset = top;\n                    excessMove = 0;\n                }\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n                _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n            }\n            _this.previousValues.top = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = '';\n            fCont.scrollTop = mCont.scrollTop;\n            mCont.scrollTop = fCont.scrollTop;\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.clonedData = [];\n        this.isUpdated = false;\n        this.gridIndexObjects = {};\n        this.gridData = [];\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    DrillThroughDialog.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        this.gridData = eventArgs.rawData;\n        for (var i = 0; i < eventArgs.rawData.length; i++) {\n            this.clonedData.push(this.frameHeaderWithKeys(eventArgs.rawData[i]));\n        }\n        var actualText = eventArgs.currentCell.actualText.toString();\n        if (this.engine.fieldList[actualText].aggregateType !== 'Count' && this.parent.editSettings.allowInlineEditing &&\n            this.parent.editSettings.allowEditing && eventArgs.rawData.length === 1 &&\n            this.engine.fieldList[actualText].aggregateType !== 'DistinctCount' && typeof (eventArgs.rawData[0][actualText]) !== 'string') {\n            this.editCell(eventArgs);\n        }\n        else {\n            this.removeDrillThroughDialog();\n            var drillThroughDialog = createElement('div', {\n                id: this.parent.element.id + '_drillthrough',\n                className: cls.DRILLTHROUGH_DIALOG\n            });\n            this.parent.element.appendChild(drillThroughDialog);\n            this.dialogPopUp = new Dialog({\n                animationSettings: { effect: 'Fade' },\n                allowDragging: false,\n                header: this.parent.localeObj.getConstant('details'),\n                content: this.createDrillThroughGrid(eventArgs),\n                beforeOpen: function () {\n                    /* tslint:disable:align */\n                    _this.drillThroughGrid.setProperties({\n                        dataSource: _this.parent.editSettings.allowEditing ?\n                            _this.dataWithPrimarykey(eventArgs) : _this.gridData,\n                        height: !_this.parent.editSettings.allowEditing ? 300 : 220,\n                        rowHeight: _this.parent.gridSettings.rowHeight\n                    }, false);\n                },\n                beforeClose: function () {\n                    if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                        if (_this.parent.dataSourceSettings.type === 'CSV') {\n                            _this.updateData(_this.drillThroughGrid.dataSource);\n                        }\n                        var gridIndexObjectsValue = Object.keys(_this.gridIndexObjects);\n                        var previousPosition = [];\n                        for (var _i = 0, gridIndexObjectsValue_1 = gridIndexObjectsValue; _i < gridIndexObjectsValue_1.length; _i++) {\n                            var value = gridIndexObjectsValue_1[_i];\n                            previousPosition.push(_this.gridIndexObjects[value]);\n                        }\n                        var count = Object.keys(_this.gridIndexObjects).length;\n                        var addItems = [];\n                        var prevItems = [];\n                        var index = 0;\n                        /* tslint:disable:no-string-literal */\n                        for (var _a = 0, _b = _this.drillThroughGrid.dataSource; _a < _b.length; _a++) {\n                            var item = _b[_a];\n                            if (isNullOrUndefined(item['__index']) || item['__index'] === '') {\n                                for (var _c = 0, _d = _this.engine.fields; _c < _d.length; _c++) {\n                                    var field = _d[_c];\n                                    if (isNullOrUndefined(item[field])) {\n                                        delete item[field];\n                                    }\n                                }\n                                delete item['__index'];\n                                addItems.push(item);\n                            }\n                            else if (count > 0) {\n                                if (isBlazor() && _this.parent.editSettings.allowCommandColumns) {\n                                    _this.parent.engineModule.data[Number(item['__index'])] = item;\n                                }\n                                delete _this.gridIndexObjects[item['__index'].toString()];\n                                prevItems.push(item);\n                                count--;\n                            }\n                            if (_this.parent.dataSourceSettings.mode === 'Server') {\n                                if (item['__index']) {\n                                    delete item['__index'];\n                                }\n                                if (_this.gridData[index]['__index']) {\n                                    delete _this.gridData[index]['__index'];\n                                }\n                            }\n                            index++;\n                        }\n                        count = 0;\n                        if (isBlazor() && _this.parent.enableVirtualization) {\n                            var currModule_1 = _this;\n                            /* tslint:disable:no-any */\n                            currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'updateRawData', {\n                                'AddItem': addItems, 'RemoveItem': currModule_1.gridIndexObjects, 'ModifiedItem': currModule_1.gridData\n                            }).then(function (data) {\n                                currModule_1.parent.updateBlazorData(data, currModule_1.parent);\n                                currModule_1.parent.allowServerDataBinding = false;\n                                currModule_1.parent.setProperties({ pivotValues: currModule_1.parent.engineModule.pivotValues }, true);\n                                delete currModule_1.parent.bulkChanges.pivotValues;\n                                currModule_1.parent.allowServerDataBinding = true;\n                                currModule_1.isUpdated = false;\n                                currModule_1.gridIndexObjects = {};\n                            });\n                            /* tslint:enable:no-any */\n                        }\n                        else if (_this.parent.dataSourceSettings.mode === 'Server') {\n                            var gridIndex = [];\n                            var keys = Object.keys(_this.gridIndexObjects);\n                            for (var len = 0; len < keys.length; len++) {\n                                delete _this.parent.drillThroughValue.indexObject[_this.gridIndexObjects[keys[len]]];\n                                gridIndex.push({ Key: keys[len], Value: _this.gridIndexObjects[keys[len]] });\n                            }\n                            var indexObject = [];\n                            keys = Object.keys(_this.parent.drillThroughValue.indexObject);\n                            for (var len = 0; len < keys.length; len++) {\n                                indexObject.push({ Key: keys[len], Value: _this.parent.drillThroughValue.indexObject[keys[len]] });\n                            }\n                            _this.parent.getEngine('updateRawData', null, null, null, null, null, null, null, { 'addedData': addItems, 'removedData': gridIndex, 'updatedData': prevItems, indexObject: indexObject });\n                        }\n                        else {\n                            var items = [];\n                            var data = (_this.parent.allowDataCompression && _this.parent.enableVirtualization) ?\n                                _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                            for (var _e = 0, _f = data; _e < _f.length; _e++) {\n                                var item = _f[_e];\n                                delete item['__index'];\n                                if (_this.gridIndexObjects[count.toString()] === undefined) {\n                                    items.push(item);\n                                }\n                                count++;\n                            }\n                            /* tslint:enable:no-string-literal */\n                            items = items.concat(addItems);\n                            var eventArgs_1 = {\n                                currentData: _this.drillThroughGrid.dataSource,\n                                previousData: _this.clonedData,\n                                previousPosition: previousPosition,\n                                cancel: false\n                            };\n                            _this.parent.trigger(events.editCompleted, eventArgs_1);\n                            if (!eventArgs_1.cancel) {\n                                _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                                _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                                _this.parent.pivotValues = _this.engine.pivotValues;\n                            }\n                        }\n                    }\n                    if (!(isBlazor() && _this.parent.enableVirtualization)) {\n                        _this.isUpdated = false;\n                        _this.gridIndexObjects = {};\n                    }\n                },\n                isModal: true,\n                visible: true,\n                showCloseIcon: true,\n                locale: this.parent.locale,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.isAdaptive ? '100%' : '60%',\n                position: { X: 'center', Y: 'center' },\n                closeOnEscape: true,\n                target: document.body,\n                close: this.removeDrillThroughDialog.bind(this)\n            });\n            this.dialogPopUp.isStringTemplate = true;\n            this.dialogPopUp.appendTo(drillThroughDialog);\n            // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('details');\n            setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n        }\n    };\n    DrillThroughDialog.prototype.editCell = function (eventArgs) {\n        var _this = this;\n        var gridResize = this.parent.gridSettings.allowResizing;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        var indexObject = Number(Object.keys(eventArgs.currentCell.indexObject));\n        eventArgs.currentTarget.firstElementChild.style.display = 'none';\n        var cellValue = Number(eventArgs.rawData[0][actualText]);\n        var previousData = this.frameHeaderWithKeys(eventArgs.rawData[eventArgs.rawData.length - 1]);\n        var currentData = eventArgs.rawData[eventArgs.rawData.length - 1];\n        if (eventArgs.currentCell.actualText in previousData) {\n            currentData[eventArgs.currentCell.actualText] = eventArgs.currentCell.actualValue;\n        }\n        this.numericTextBox = new NumericTextBox({\n            value: cellValue,\n            enableRtl: this.parent.enableRtl,\n            enabled: true,\n            format: '####.##',\n            locale: this.parent.locale,\n            change: function () {\n                var textBoxValue = _this.numericTextBox.value;\n                var indexValue = eventArgs.currentCell.indexObject[indexObject];\n                eventArgs.rawData[0][actualText] = textBoxValue;\n                _this.parent.engineModule.data[indexValue] = eventArgs.rawData[0];\n            },\n            blur: function () {\n                var eventArgs = {\n                    currentData: currentData,\n                    previousData: previousData,\n                    previousPosition: currentData.index,\n                    cancel: false\n                };\n                _this.parent.trigger(events.editCompleted, eventArgs);\n                if (!eventArgs.cancel) {\n                    _this.parent.setProperties({ dataSourceSettings: { dataSource: _this.parent.engineModule.data } }, true);\n                    _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                    _this.parent.pivotValues = _this.engine.pivotValues;\n                    _this.parent.gridSettings.allowResizing = gridResize;\n                }\n            },\n        });\n        var textBoxElement = createElement('input', {\n            id: this.parent.element.id + '_inputbox',\n        });\n        eventArgs.currentTarget.appendChild(textBoxElement);\n        this.numericTextBox.appendTo(textBoxElement);\n        eventArgs.currentCell.value = this.numericTextBox.value;\n        this.numericTextBox.focusIn();\n        this.parent.gridSettings.allowResizing = false;\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThroughDialog.prototype.updateData = function (dataSource) {\n        var dataPos = 0;\n        var data = (this.parent.allowDataCompression && this.parent.enableVirtualization) ?\n            this.parent.engineModule.actualData : this.parent.engineModule.data;\n        while (dataPos < dataSource.length) {\n            var fields = Object.keys(dataSource[dataPos]);\n            var keyPos = 0;\n            var framedSet = [];\n            while (keyPos < fields.length) {\n                if (!isNullOrUndefined(this.parent.engineModule.fieldKeys[fields[keyPos]])) {\n                    framedSet[this.parent.engineModule.fieldKeys[fields[keyPos]]] = dataSource[dataPos][fields[keyPos]];\n                }\n                keyPos++;\n            }\n            data[dataSource[dataPos]['__index']] = framedSet;\n            dataPos++;\n        }\n        if (this.parent.allowDataCompression && this.parent.enableVirtualization) {\n            this.parent.engineModule.actualData = data;\n        }\n        else {\n            this.parent.engineModule.data = data;\n        }\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs) {\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> :<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            enableHover: false,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: !this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing\n        });\n        if (isBlazor()) {\n            /* tslint:disable-next-line */\n            this.drillThroughGrid['isJsComponent'] = true;\n        }\n        if (this.parent.dataType === 'olap') {\n            this.formatData();\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: isBlazor() ? undefined : this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            this.drillThroughGrid.editSettings = this.parent.editSettings;\n            if (this.parent.editSettings.allowCommandColumns) {\n                this.drillThroughGrid.editSettings.mode = 'Normal';\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                Grid.Inject(CommandColumn);\n                this.drillThroughGrid.columns.push({\n                    headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                    commands: [\n                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n                        { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n                        { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n                    ]\n                });\n            }\n            else {\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n            }\n            /* tslint:disable:align */\n            this.drillThroughGrid.columns.push({\n                field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false\n            });\n            /* tslint:disable-next-line:no-any */\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n            /* tslint:enable:align */\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function (rawData) {\n        var keys = this.parent.dataType === 'olap' ? rawData[0] ? Object.keys(rawData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    type: 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date') {\n                        editType = 'datepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    columns.push({\n                        field: key,\n                        headerText: this.engine.fieldList[key].caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        type: 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.formatData = function () {\n        var index = 0;\n        while (index < this.gridData.length) {\n            var data = this.gridData[index];\n            var keys = Object.keys(this.gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            this.gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = this.gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            /* tslint:disable-next-line:no-string-literal */\n            item['__index'] = indexString[count];\n            this.gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n            }\n        }\n    };\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        this.parent.drillThroughElement = element;\n        this.parent.drillThroughValue = pivotValue;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n                aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this;\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* tslint:disable:no-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n                        /* tslint:enable:no-any */\n                    });\n                }\n                else if (this.parent.dataSourceSettings.mode === 'Server') {\n                    this.parent.getEngine('fetchRawData', null, null, null, null, null, null, { rowIndex: rowIndex, columnIndex: colIndex });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization) && this.parent.dataSourceSettings.mode !== 'Server') {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ?\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] :\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    /** @hidden */\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split('.').join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split('.').join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this;\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationChart, PieSeries, FunnelSeries, PyramidSeries } from '@syncfusion/ej2-charts';\nimport { SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries } from '@syncfusion/ej2-charts';\nimport { MultiColoredAreaSeries, SplineSeries, StepLineSeries, AccumulationLegend, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries } from '@syncfusion/ej2-charts';\nimport { RadarSeries } from '@syncfusion/ej2-charts';\nimport { ScrollBar, Zoom, PolarSeries } from '@syncfusion/ej2-charts';\nimport { ParetoSeries, Export, Crosshair, MultiLevelLabel } from '@syncfusion/ej2-charts';\nimport { BubbleSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDataLabel } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\nvar PivotChart = /** @class */ (function () {\n    function PivotChart() {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.fieldPosition = [];\n        this.measurePos = -1;\n        this.measuresNames = {};\n        this.accumulationType = ['Pie', 'Pyramid', 'Doughnut', 'Funnel'];\n        /* tslint:enable:no-empty */\n    }\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotchart';\n    };\n    /* tslint:disable */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : parent.dataSourceSettings.values.length > 0;\n        if (isDataAvail) {\n            if (!this.parent.chart && (this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart'))) {\n                remove(this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n            }\n            if (this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n            }\n        }\n        else if (this.parent.chart) {\n            if (this.parent.element.querySelector('.e-chart')) {\n                this.parent.chart.series = [];\n                this.parent.chart.rows = [];\n                this.parent.chart.primaryXAxis.title = '';\n                this.parent.chart.primaryYAxis.title = '';\n                this.parent.chart.primaryXAxis.multiLevelLabels = [];\n                this.parent.chart.primaryYAxis.multiLevelLabels = [];\n                if (this.parent.chart.axes.length > 0) {\n                    this.parent.chart.axes[0].title = '';\n                }\n                this.parent.chart.primaryXAxis.zoomFactor = 1;\n            }\n            else if (this.parent.element.querySelector('.e-accumulationchart')) {\n                this.parent.chart.series[0].dataSource = [{}];\n                this.parent.chart.series[0].dataLabel = {};\n            }\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            if (!this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                if (this.parent.displayOption.view === 'Both') {\n                    this.parent.displayOption.primary === 'Chart' ?\n                        (this.parent.element.insertBefore((createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                        (this.parent.element.appendChild(createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })));\n                }\n                else {\n                    this.parent.element.appendChild(createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }));\n                }\n                var width = this.parent.width.toString();\n                if (this.parent.showToolbar && this.parent.grid) {\n                    width = this.parent.getGridWidthAsNumber().toString();\n                }\n                var height = this.getChartHeight();\n                var tmpChart = void 0;\n                if (this.chartSettings && this.chartSettings.chartSeries && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1) {\n                    tmpChart = new AccumulationChart({ width: width, height: height });\n                }\n                else {\n                    tmpChart = new Chart({ width: width, height: height });\n                }\n                tmpChart.appendTo('#' + this.parent.element.id + '_chart');\n                if (this.parent.showToolbar) {\n                    if (this.parent.displayOption.view === 'Both' && this.parent.currentView === 'Chart') {\n                        this.parent.grid.element.style.display = 'none';\n                    }\n                    if (this.parent.currentView !== 'Chart') {\n                        this.parent.element.querySelector('#' + this.parent.element.id + '_chart').style.display = 'none';\n                    }\n                }\n            }\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        this.accEmptyPoint = false;\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = (chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        if (this.parent.dataType === 'olap') {\n            levelPos = this.groupHierarchyWithLevels(pivotValues);\n            lastHierarchy = this.fieldPosition[this.fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (this.fieldPosition.length - 1) && this.fieldPosition.length > 1) ?\n                this.fieldPosition[this.fieldPosition.length - 2] : lastHierarchy;\n        }\n        for (var _b = 0, rKeys_1 = rKeys; _b < rKeys_1.length; _b++) {\n            var rKey = rKeys_1[_b];\n            var rowIndex = Number(rKey);\n            if (!isNullOrUndefined(pivotValues[rowIndex])) {\n                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                    (this.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                    var firstRowCell = pivotValues[rowIndex][0];\n                    var tupInfo = this.parent.dataType === 'olap' ?\n                        this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                    var fieldPos = -1;\n                    var currrentLevel = firstRowCell.level;\n                    if (this.parent.dataType === 'olap') {\n                        fieldPos = tupInfo.uNameCollection.split('::[').length - 1;\n                        if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                            tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                            firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                            integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                            levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                            integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                                (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                    (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                    (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ?\n                                        (levelPos[firstRowCell.hierarchy].start) :\n                                        levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                            levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                            currrentLevel = integratedLevel;\n                            indexCount += (prevCell && lastDimension === prevCell.hierarchy && !prevCell.isDrilled) ? 1 : 0;\n                            prevLevel = integratedLevel;\n                            prevCell = firstRowCell;\n                        }\n                    }\n                    else if (firstRowCell.type !== 'value') {\n                        if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                            indexCount++;\n                        }\n                        prevLevel = currrentLevel;\n                    }\n                    this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                    var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                        (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                    var text = firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                    var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                        ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                    var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort.levelName.toString();\n                    var cellInfo = {\n                        name: name_1,\n                        text: caption,\n                        hasChild: firstRowCell.hasChild,\n                        isDrilled: firstRowCell.isDrilled,\n                        levelName: levelName,\n                        level: currrentLevel,\n                        fieldName: firstRowCell.valueSort.axis ? firstRowCell.valueSort.axis.toString() : '',\n                        rowIndex: rowIndex,\n                        colIndex: 0,\n                        cell: firstRowCell\n                    };\n                    if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                        if (this.headerColl[indexCount]) {\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                        else {\n                            this.headerColl[indexCount] = {};\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                    }\n                    var rows = pivotValues[rowIndex];\n                    var cKeys = Object.keys(rows);\n                    var prevMemberCell = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                    }\n                    else {\n                        memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                    }\n                    for (var _c = 0, cKeys_1 = cKeys; _c < cKeys_1.length; _c++) {\n                        var cKey = cKeys_1[_c];\n                        var cellIndex = Number(cKey);\n                        var cell = pivotValues[rowIndex][cellIndex];\n                        var measureAllow = cell.rowHeaders === '' ? this.dataSourceSettings.rows.length === 0 : true;\n                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                            tupInfo.measureName : cell.actualText;\n                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                            actualText !== '' && ((chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? true : actualText === this.currentMeasure)) {\n                            if (isNullOrUndefined(firstRowCell.members)) {\n                                firstRowCell.members = [];\n                            }\n                            if (this.parent.dataType === 'olap' ? (lastHierarchy === firstRowCell.hierarchy ?\n                                ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                    (fieldPos === this.measurePos ? prevMemberCell.isDrilled : true) : firstRowCell.isDrilled) : true)\n                                : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                    prevMemberCell.members.length > 0 : firstRowCell.members.length > 0) || !measureAllow)) {\n                                break;\n                            }\n                            var colHeaders = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.columnHeaders.toString().split('.').join(' - ');\n                            var rowHeaders = this.parent.dataType === 'olap' ? cell.rowHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.rowHeaders.toString().split('.').join(' - ');\n                            var columnSeries = colHeaders + ' | ' + actualText;\n                            var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                                !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                                Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) : Number(cell.value) : Number(cell.value));\n                            if (yValue === 0) {\n                                this.accEmptyPoint = true;\n                            }\n                            if (this.columnGroupObject[columnSeries]) {\n                                this.columnGroupObject[columnSeries].push({\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue,\n                                    rIndex: rowIndex,\n                                    cIndex: cellIndex\n                                });\n                            }\n                            else {\n                                this.columnGroupObject[columnSeries] = [{\n                                        x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                        y: yValue,\n                                        rIndex: rowIndex,\n                                        cIndex: cellIndex\n                                    }];\n                            }\n                        }\n                        prevMemberCell = memberCell;\n                    }\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     * @returns void\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n        var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n            this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n        var chartType = this.chartSettings.chartSeries ? this.chartSettings.chartSeries.type : undefined;\n        if (this.accumulationType.indexOf(chartType) > -1) {\n            this.currentColumn = (columnKeys.indexOf(columnHeader + ' | ' + this.currentMeasure) > -1 && columnHeader !== undefined) ? columnHeader + ' | ' + this.currentMeasure : columnKeys[0];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n            currentSeries.dataSource = this.columnGroupObject[this.currentColumn];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            if (isBlazor()) {\n                if (isNullOrUndefined(this.persistSettings.chartSeries.dataLabel.visible)) {\n                    this.persistSettings.chartSeries.dataLabel.visible = true;\n                    this.persistSettings.chartSeries.dataLabel.position = \"Outside\";\n                }\n            }\n            if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.dataLabel) {\n                currentSeries.dataLabel = this.persistSettings.chartSeries.dataLabel;\n                currentSeries.dataLabel.name = 'x';\n            }\n            else {\n                currentSeries.dataLabel = { visible: true, position: \"Outside\", name: 'x' };\n                this.parent.setProperties({ chartSettings: { chartSeries: { dataLabel: { visible: true, position: \"Outside\" } } } }, true);\n            }\n            if (this.accEmptyPoint && currentSeries.emptyPointSettings) {\n                currentSeries.emptyPointSettings.mode = 'Zero';\n            }\n            else if (this.accEmptyPoint) {\n                currentSeries.emptyPointSettings = { mode: 'Zero' };\n            }\n            currentSeries.name = this.currentColumn;\n            if (chartType === 'Doughnut') {\n                currentSeries.type = 'Pie';\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '40%';\n            }\n            else if (chartType === 'Pie') {\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '0';\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        else {\n            for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n                var key = columnKeys_1[_i];\n                var currentSeries = {};\n                currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n                currentSeries.dataSource = this.columnGroupObject[key];\n                currentSeries.xName = 'x';\n                currentSeries.yName = 'y';\n                currentSeries.name = this.chartSettings.enableMultiAxis ? key : key.split(' | ')[0];\n                if (['Radar', 'Polar'].indexOf(chartType) < 0) {\n                    var measure = key.split(' | ')[1];\n                    currentSeries.yAxisName = this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n                }\n                if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = this.persistSettings.chartSeries.emptyPointSettings;\n                }\n                this.chartSeries = this.chartSeries.concat(currentSeries);\n            }\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.frameChartSeries = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            if ((this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) > -1 && ['fill', 'dashArray', 'width', 'segmentAxis',\n                'drawType', 'isClosed', 'segments', 'stackingGroup', 'marker', 'errorBar', 'trendlines', 'minRadius',\n                'splineType', 'maxRadius', 'cardinalSplineTension', 'columnWidth', 'columnSpacing', 'cornerRadius'].indexOf(keys[keyPos]) > -1) ||\n                (this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 && ['endAngle', 'explode', 'explodeAll', 'explodeIndex',\n                    'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'neckHeight', 'neckWidth', 'pyramidMode', 'startAngle',\n                    'dataLabel', 'innerRadius'].indexOf(keys[keyPos]) > -1)) {\n                keyPos++;\n                continue;\n            }\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        this.parent.showWaitingPopup();\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ?\n                (this.parent.element.insertBefore((!this.element ?\n                    (createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }))\n                    : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!this.chartElement && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).innerHTML = '';\n            this.chartElement = this.parent.element.querySelector('.' + cls.PIVOTCHART).appendChild(createElement('div', {\n                className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n            }));\n        }\n        if (this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER)) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER).innerHTML = '';\n        }\n        if (this.parent.showGroupingBar) {\n            this.element.style.minWidth = '400px !important';\n        }\n        else {\n            this.element.style.minWidth = '310px !important';\n        }\n        var width = this.parent.width.toString();\n        if (this.parent.showToolbar && this.parent.grid) {\n            width = this.parent.getGridWidthAsNumber().toString();\n        }\n        var height = this.getChartHeight();\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.accumulationType.indexOf(type) < 0) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height =\n                (height === 'auto' ? this.getChartAutoHeight() : height) + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            if (this.parent.chartSettings.chartSeries.type !== 'Polar' && this.parent.chartSettings.chartSeries.type !== 'Radar') {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n        }\n        if (this.parent.chart && ((this.parent.chart.getModuleName() === 'accumulationchart' &&\n            this.accumulationType.indexOf(type) < 0) || (this.parent.chart.getModuleName() === 'chart' &&\n            this.accumulationType.indexOf(type) > -1))) {\n            this.parent.chart.destroy();\n            if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n            }\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart')) ||\n            (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange)) {\n            if (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange && this.parent.chart) {\n                if (!this.parent.chart.isDestroyed) {\n                    this.parent.chart.destroy();\n                }\n                this.parent.chart = undefined;\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n                this.parent.toolbarModule.isMultiAxisChange = false;\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair);\n            AccumulationChart.Inject(PieSeries, FunnelSeries, PyramidSeries, AccumulationDataLabel, AccumulationLegend, AccumulationTooltip, Export);\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart = new AccumulationChart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    width: width,\n                    height: height.toString(),\n                    title: this.chartSettings.title,\n                    enableSmartLabels: this.chartSettings.enableSmartLabels,\n                    center: this.chartSettings.pieCenter,\n                    enableBorderOnMouseMove: this.chartSettings.enableBorderOnMouseMove,\n                    highLightMode: this.chartSettings.highlightMode,\n                    highlightPattern: this.chartSettings.highlightPattern,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    theme: this.chartSettings.theme,\n                    selectionMode: this.chartSettings.accumulationSelectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    locale: this.parent.locale,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this)\n                });\n            }\n            else {\n                this.parent.chart = new Chart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    zoomSettings: currentZoomSettings,\n                    axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                    rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                    columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                    primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                    primaryXAxis: currentXAxis,\n                    width: width,\n                    height: (this.parent.chartSettings.chartSeries.type !== 'Polar' &&\n                        this.parent.chartSettings.chartSeries.type !== 'Radar' && this.parent.chartSettings.enableScrollOnMultiAxis &&\n                        this.parent.chartSettings.enableMultiAxis && this.parent.dataSourceSettings.values.length > 0) ?\n                        Number(height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(height)) ?\n                            height.toString() : (Number(height) - 5).toString() :\n                            (!isNaN(Number(height)) || this.parent.dataSourceSettings.values.length > 1) ?\n                                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                                height.toString() : height.toString(),\n                    title: this.chartSettings.title,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    chartArea: this.chartSettings.chartArea,\n                    palettes: this.chartSettings.palettes,\n                    theme: this.chartSettings.theme,\n                    crosshair: this.chartSettings.crosshair,\n                    selectionMode: this.chartSettings.selectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    isTransposed: this.chartSettings.isTransposed,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    description: this.chartSettings.description,\n                    tabIndex: this.chartSettings.tabIndex,\n                    locale: this.parent.locale,\n                    enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    dragComplete: this.chartSettings.dragComplete ? this.chartSettings.dragComplete.bind(this) : undefined,\n                    zoomComplete: this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete.bind(this) : undefined,\n                    scrollStart: this.chartSettings.scrollStart ? this.chartSettings.scrollStart.bind(this) : undefined,\n                    scrollEnd: this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd.bind(this) : undefined,\n                    scrollChanged: this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this),\n                    axisLabelRender: this.axisLabelRender.bind(this),\n                    multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n                });\n            }\n            this.parent.chart.isStringTemplate = true;\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else if ((this.accumulationType.indexOf(type) < 0) && this.parent.chart.getModuleName() === 'chart') {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultiAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n        }\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chartInner');\n        }\n        else {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chart');\n        }\n    };\n    PivotChart.prototype.pointClick = function (args) {\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.seriesIndex].dataSource;\n        if (['Pie', 'Funnel', 'Doughnut', 'Pyramid', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            this.pivotIndex = {\n                rIndex: dataSource ? dataSource[args.pointIndex].rIndex : undefined,\n                cIndex: dataSource ? dataSource[args.pointIndex].cIndex : undefined,\n            };\n            this.creatMenu();\n            var pos = this.parent.element.getBoundingClientRect();\n            var y = (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 0) +\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 0) +\n                (window.scrollY || document.documentElement.scrollTop) + pos.top;\n            this.accumulationMenu.open(y + args.y, args.x + pos.left + (window.scrollX || document.documentElement.scrollLeft));\n        }\n        else if ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && this.parent.drillThroughModule) {\n            var rIndex = dataSource[args.pointIndex].rIndex;\n            var cIndex = dataSource[args.pointIndex].cIndex;\n            this.parent.drillThroughModule.executeDrillThrough(this.parent.pivotValues[rIndex][cIndex], rIndex, cIndex);\n        }\n        this.parent.trigger(events.chartPointClick, args);\n    };\n    /* tslint:enable */\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultiAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                    this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ?\n                    this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n                currentYAxis.plotOffsetTop = currentYAxis.plotOffsetTop ? currentYAxis.plotOffsetTop :\n                    this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                        this.chartSettings.chartSeries.type === 'StackingBar100' ? 50 : 30;\n                currentYAxis.rowIndex = valCnt;\n                currentYAxis.columnIndex = valCnt;\n                if (!resFormat) {\n                    currentYAxis.name = this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                rows.push({ height: divider });\n                columns.push({ width: divider });\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var lengthofFormat = void 0;\n            if (formatSetting) {\n                lengthofFormat = formatSetting.format.length;\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (((formatSetting.format.toLowerCase().match(/n[0-10]|p[0-10]|c[0-10]/) === null) || lengthofFormat > 3) ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    /** @hidden */\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = void 0;\n            if (!isNullOrUndefined(rows)) {\n                cKeys = Object.keys(rows);\n                for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                    var cellIndex = cKeys_2[_a];\n                    var cell = rows[Number(cellIndex)];\n                    if (!isNullOrUndefined(cell)) {\n                        if (cell.axis !== 'column') {\n                            return colIndexColl;\n                        }\n                        else if ((cell.type === 'sum' || (this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum'))\n                            && cell.rowSpan !== -1) {\n                            colIndexColl[cell.colIndex] = cell.colIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues) {\n        var _a, _b;\n        this.fieldPosition = [];\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            this.fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        this.fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < this.fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[this.fieldPosition[pos]] = {\n                    start: (lastEnd + 1),\n                    end: (lastEnd + Object.keys(group[this.fieldPosition[pos]]).length)\n                };\n                lastEnd = levelPos[this.fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    /* tslint:disable */\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1,\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    /* tslint:enable */\n    PivotChart.prototype.getZoomFactor = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (tooltip.enable && tooltip.template) {\n            this.templateFn = this.parent.templateParser(tooltip.template);\n        }\n        if (this.parent.tooltipTemplate) {\n            tooltip.template = tooltip.template ? tooltip.template : this.parent.tooltipTemplate;\n        }\n        if (isBlazor()) {\n            this.parent.allowServerDataBinding = false;\n            this.parent.setProperties({ chartSettings: { tooltip: { header: tooltip.header ? tooltip.header : '' } } }, true);\n            this.parent.allowServerDataBinding = true;\n        }\n        else {\n            tooltip.header = tooltip.header ? tooltip.header : '';\n        }\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    /* tslint:disable:no-any */\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        if (this.chartSettings.legendSettings) {\n            var keyPos = 0;\n            var keys = Object.keys(this.chartSettings.legendSettings);\n            while (keyPos < keys.length) {\n                legendSettings[keys[keyPos]] = this.chartSettings.legendSettings[keys[keyPos]];\n                keyPos++;\n            }\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1 && legendSettings.visible === undefined) {\n            legendSettings.visible = false;\n        }\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    /* tslint:enable:no-any */\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) { return args.caption || args.name; }).join(' / ');\n        currentXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true :\n            zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n            ((this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) ?\n                args.series.name ? args.series.name.split(' | ')[1] : args.data.seriesName ?\n                    args.data.seriesName.split(' | ')[1] : this.currentMeasure : this.measuresNames[this.currentMeasure] ?\n                this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        /* tslint:disable:no-any */\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.data.seriesIndex].dataSource;\n        var rowIndex = dataSource ? dataSource[args.data.pointIndex].rIndex : undefined;\n        var colIndex = dataSource ? dataSource[args.data.pointIndex].cIndex : undefined;\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure] ? this.measuresNames[measure] : measure];\n        var aggregateType = this.parent.dataType === 'olap' ? '' : this.parent.localeObj.getConstant(measureField.aggregateType);\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : aggregateType + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ') + measureField.caption;\n        var formattedText = this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 ?\n            args.text.split('<b>')[1].split('</b>')[0] : this.engineModule.pivotValues[rowIndex][colIndex].formattedText;\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var formattedValue = ((formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText) :\n            this.parent.engineModule.getFormattedValue(args.point.y, measureField.id).formattedText :\n            formattedText);\n        var columnText = (args.series.name ? args.series.name.split(' | ')[0] : args.data.seriesName.split(' | ')[0]);\n        var rowText = args.point.x;\n        if (this.parent.tooltipTemplate && this.parent.getTooltipTemplate() !== undefined || this.chartSettings.tooltip.template) {\n            var rowFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'row') : '';\n            var columnFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'Column') : '';\n            var templateVariable = {\n                rowHeaders: rowText,\n                columnHeaders: columnText,\n                aggregateType: aggregateType,\n                value: formattedValue,\n                valueField: measureField.caption,\n                rowFields: rowFields,\n                columnFields: columnFields\n            };\n            var template = void 0;\n            if (this.parent.chartSettings && this.parent.chartSettings.tooltip &&\n                this.parent.chartSettings.tooltip.enable && this.parent.chartSettings.tooltip.template) {\n                template = this.tooltipTemplateFn()(templateVariable, this, 'tooltipTemplate', this.element.id + '1tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                /* tslint:enable:no-any */\n                template = this.parent.getTooltipTemplate()(templateVariable, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            args.template = template;\n        }\n        else {\n            args.text = measureAggregatedName + ': ' + formattedValue +\n                (this.dataSourceSettings.columns.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + columnText)) +\n                (this.dataSourceSettings.rows.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + rowText));\n            this.parent.trigger(events.chartTooltipRender, args);\n        }\n    };\n    PivotChart.prototype.tooltipTemplateFn = function () {\n        return this.templateFn;\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName))) {\n                this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) >= 0)\n            && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'visible';\n        }\n        else if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n        }\n        this.parent.chart.height = ['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) < 0 &&\n            this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.parent.dataSourceSettings.values.length > 0 ? Number(this.parent.chart.height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ?\n            isNaN(Number(this.getChartHeight())) ? this.getChartHeight().toString() : (Number(this.getChartHeight()) - 5).toString() :\n            (!isNaN(Number(this.getChartHeight())) || this.parent.dataSourceSettings.values.length > 1) ?\n                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                this.getChartHeight().toString() : this.getChartHeight().toString();\n        this.updateView();\n        this.parent.notify(events.contentReady, {});\n        this.parent.trigger(events.chartLoaded, args);\n        this.parent.hideWaitingPopup();\n    };\n    /** @hidden */\n    PivotChart.prototype.updateView = function () {\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                }\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = '';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = '';\n                }\n            }\n        }\n    };\n    PivotChart.prototype.creatMenu = function () {\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n        }\n        var items = ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing)\n            && this.parent.drillThroughModule) ? ['expand', 'collapse', 'drillThrough', 'exit'] :\n            ['expand', 'collapse', 'exit'];\n        var option = [];\n        for (var i = 0; i < items.length; i++) {\n            option.push({\n                id: this.parent.element.id + '_DrillMenuChart_' + items[i],\n                text: this.parent.localeObj.getConstant(items[i]),\n                items: [],\n            });\n        }\n        var getString = this.getMenuItems();\n        var expand = [];\n        var collapse = [];\n        for (var i = 0; i < getString.length; i++) {\n            if (getString[i].type === 'expand') {\n                expand.push({ id: this.element.id + 'drillExpand_' + getString[i].key, text: getString[i].value });\n            }\n            else {\n                collapse.push({ id: this.element.id + 'drillCollapse_' + getString[i].key, text: getString[i].value });\n            }\n        }\n        if (expand.length > 0) {\n            option[0].items = expand;\n        }\n        if (collapse.length > 0) {\n            option[1].items = collapse;\n        }\n        var menuOptions = {\n            cssClass: this.parent.element.id + '_accumulationChart',\n            items: option,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.drillMenuOpen.bind(this),\n            select: this.drillMenuSelect.bind(this),\n        };\n        this.accumulationMenu = new ContextMenu(menuOptions);\n        var contextMenu;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart')) {\n            contextMenu = this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart');\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + '_accumulationChart'\n            });\n            this.parent.element.appendChild(contextMenu);\n        }\n        this.accumulationMenu.isStringTemplate = true;\n        this.accumulationMenu.appendTo(contextMenu);\n    };\n    PivotChart.prototype.drillMenuOpen = function (args) {\n        if (args.items[0] && args.items[0].text === this.parent.localeObj.getConstant('expand') &&\n            args.items[0].items && args.items[0].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('expand')], false);\n        }\n        if (args.items[1] && args.items[1].text === this.parent.localeObj.getConstant('collapse') &&\n            args.items[1].items && args.items[1].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('collapse')], false);\n        }\n    };\n    PivotChart.prototype.getMenuItems = function () {\n        var rowIndex = this.pivotIndex.rIndex;\n        var menuItem = [];\n        var pivotValues = this.engineModule.pivotValues;\n        var levelCol = [];\n        var pivotValue = pivotValues[rowIndex][this.pivotIndex.cIndex];\n        // let hierarchy: string = pivotValues[rowIndex][0].hierarchy;\n        var level = (!pivotValues[rowIndex][0].isNamedSet && pivotValues[rowIndex][0].hasChild) ?\n            pivotValues[rowIndex][0].level : undefined;\n        var levels = this.parent.dataType === 'olap' ? pivotValue.rowHeaders.toString().split(/~~|::/)\n            : pivotValue.rowHeaders.toString().split(this.engineModule.valueSortSettings.headerDelimiter);\n        while (pivotValues[rowIndex][0]) {\n            pivotValue = pivotValues[rowIndex][0];\n            if ((levels.length !== 0) && (levels.indexOf(pivotValue.formattedText.toString()) === (levels.length - 1))) {\n                if (pivotValue.hasChild && !pivotValue.isNamedSet && levelCol.indexOf(pivotValue.level) < 0 &&\n                    (level ? level >= pivotValue.level : (level === 0 ? (pivotValue.level === 0) : true))) {\n                    if (!pivotValue.isDrilled) {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'expand',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    else {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'collapse',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    levelCol.push(pivotValue.level);\n                    level = level ? (level - 1) : (pivotValue.level - 1);\n                }\n                var index = levels.indexOf(pivotValue.formattedText.toString());\n                levels.splice(index, 1);\n            }\n            if (pivotValue.level === 0 && pivotValue.hasChild && !pivotValue.isNamedSet) {\n                level = undefined;\n                levelCol = [];\n            }\n            rowIndex--;\n        }\n        return menuItem;\n    };\n    PivotChart.prototype.drillMenuSelect = function (args) {\n        var pivotValues = (this.parent.dataType === 'olap' ?\n            this.parent.olapEngineModule.pivotValues : this.parent.engineModule.pivotValues);\n        var option = (args.element.id).split('_DrillMenuChart_')[1];\n        if (args.element.id.indexOf(this.element.id + 'drill') === 0) {\n            var type = args.element.id.split(this.element.id + 'drill')[1].indexOf('Expand') >= 0 ? 'drillExpand' : 'drillCollapse';\n            var rowIndex = Number(args.element.id.split(this.element.id + type + '_')[1]);\n            var pivotValue = pivotValues[rowIndex][0];\n            var name_2 = this.parent.dataType === 'olap' ? pivotValue.formattedText :\n                (pivotValue.actualText ? pivotValue.actualText.toString() : pivotValue.formattedText.toString());\n            var text = pivotValue.formattedText ? pivotValue.formattedText.toString() : name_2;\n            var caption = (pivotValue.hasChild && !pivotValue.isNamedSet) ?\n                ((pivotValue.isDrilled ? ' - ' : ' + ') + text) : text;\n            var tupInfo = this.parent.dataType === 'olap' ?\n                this.engineModule.tupRowInfo[pivotValue.ordinal] : undefined;\n            var levelName = tupInfo ? tupInfo.uNameCollection : pivotValue.valueSort.levelName.toString();\n            var customAttributes = {\n                fieldName: pivotValue.valueSort.axis,\n                level: pivotValue.level,\n                hasChild: pivotValue.hasChild,\n                levelName: levelName,\n                name: name_2,\n                text: caption,\n                rowIndex: rowIndex,\n                colIndex: 0,\n                isDrilled: pivotValue.isDrilled,\n                cell: pivotValue\n            };\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, customAttributes);\n            }\n            else {\n                this.onDrill({ customAttributes: customAttributes });\n            }\n        }\n        else if (option === 'drillThrough') {\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.drillThroughModule.executeDrillThrough(pivotValues[this.pivotIndex.rIndex][this.pivotIndex.cIndex], this.pivotIndex.rIndex, this.pivotIndex.rIndex);\n        }\n        else if (option === 'exit') {\n            this.accumulationMenu.close();\n        }\n    };\n    PivotChart.prototype.getChartHeight = function () {\n        var height = isNullOrUndefined(this.parent.getHeightAsNumber()) ? 'auto' :\n            this.parent.getHeightAsNumber().toString();\n        if (!isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            if (this.parent.showToolbar && this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                    (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                        this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if (this.parent.showToolbar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42)).toString();\n            }\n            else if (this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if ((this.parent.chart && parseInt(this.parent.chart.height, 10) < 200) || this.parent.getHeightAsNumber() < 200) {\n                height = '200';\n            }\n        }\n        else {\n            height = 'auto';\n        }\n        return height;\n    };\n    PivotChart.prototype.getChartAutoHeight = function () {\n        var height = this.parent.element.offsetHeight;\n        if (this.parent.showToolbar && this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        else if (this.parent.showToolbar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42);\n        }\n        else if (this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        return height;\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels) {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        /* tslint:disable-next-line:no-any */\n        if (args.customAttributes && args.customAttributes.hasChild && !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    /** @hidden */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        /* tslint:enable:no-any */\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({\n                dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] }\n            }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        var drillArgs = {\n            drillInfo: drilledItem,\n            pivotview: isBlazor() ? undefined : pivot.parent\n        };\n        pivot.parent.trigger(events.drill, drillArgs);\n        if (pivot.parent.enableVirtualization) {\n            if (isBlazor()) {\n                /* tslint:disable */\n                var sfBlazor = 'sfBlazor';\n                var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem], drilledItem);\n                var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs], drillArgs);\n                pivot.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                    pivot.parent.updateBlazorData(data, pivot.parent);\n                    pivot.parent.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                    pivot.parent.allowServerDataBinding = false;\n                    pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    delete pivot.parent.bulkChanges.pivotValues;\n                    pivot.parent.allowServerDataBinding = true;\n                    pivot.parent.renderPivotGrid();\n                });\n                /* tslint:enable */\n            }\n            else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n                pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n            }\n            else {\n                pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                pivot.engineModule.onDrill(drilledItem);\n            }\n        }\n        else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n            pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings);\n        }\n        pivot.parent.allowServerDataBinding = false;\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        /* tslint:disable-next-line:no-any */\n        delete pivot.parent.bulkChanges.pivotValues;\n        pivot.parent.allowServerDataBinding = true;\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (isBlazor()) {\n            args.chart = this.parent.chart;\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) {\n            args.chart.primaryXAxis.zoomFactor = this.getZoomFactor();\n            if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n                args.chart.primaryXAxis.zoomFactor = 1;\n            }\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /**\n     * To destroy the chart module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.chart && !this.parent.chart.isDestroyed) {\n            if (this.accumulationMenu && this.accumulationMenu.isDestroyed) {\n                this.accumulationMenu.destroy();\n            }\n            this.parent.chart.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","/**\n * Specifies Chart Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartSubTitleFont = {\n        size: '11px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stockEventFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/base/themes';\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Allow options to customize the border of the chart such as color and border size in the pivot chart.\n * For example, to display the chart border color as red, set the properties `color` to either **\"red\"**\n * or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Allows to configure the position of the marker such as top and left in the chart.\n */\nvar Offset = /** @class */ (function (_super) {\n    __extends(Offset, _super);\n    function Offset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"y\", void 0);\n    return Offset;\n}(ChildProperty));\nexport { Offset };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * @public\n */\nvar Indexes = /** @class */ (function (_super) {\n    __extends(Indexes, _super);\n    function Indexes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"point\", void 0);\n    return Indexes;\n}(ChildProperty));\nexport { Indexes };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar ChartArea = /** @class */ (function (_super) {\n    __extends(ChartArea, _super);\n    function ChartArea() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Border)\n    ], ChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], ChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartArea.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartArea.prototype, \"backgroundImage\", void 0);\n    return ChartArea;\n}(ChildProperty));\nexport { ChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar CrosshairSettings = /** @class */ (function (_super) {\n    __extends(CrosshairSettings, _super);\n    function CrosshairSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], CrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], CrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], CrosshairSettings.prototype, \"lineType\", void 0);\n    return CrosshairSettings;\n}(ChildProperty));\nexport { CrosshairSettings };\n/**\n * Allows to configure the data label with different settings such as name, fill color, opacity, rotation angle, border, marging, etc in the chart.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartConnectorStyle = /** @class */ (function (_super) {\n    __extends(PivotChartConnectorStyle, _super);\n    function PivotChartConnectorStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Line')\n    ], PivotChartConnectorStyle.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartConnectorStyle.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartConnectorStyle.prototype, \"dashArray\", void 0);\n    return PivotChartConnectorStyle;\n}(ChildProperty));\nexport { PivotChartConnectorStyle };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartDataLabel = /** @class */ (function (_super) {\n    __extends(PivotChartDataLabel, _super);\n    function PivotChartDataLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartDataLabel.prototype, \"visible\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartDataLabel.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartDataLabel.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartDataLabel.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotChartDataLabel.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"ry\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartDataLabel.prototype, \"template\", void 0);\n    __decorate([\n        Complex({}, PivotChartConnectorStyle)\n    ], PivotChartDataLabel.prototype, \"connectorStyle\", void 0);\n    return PivotChartDataLabel;\n}(ChildProperty));\nexport { PivotChartDataLabel };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Allows to configure the error bar cap settings such as cap width, length, color, opacity.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\n/**\n * Allows options for customize the error bar chart with diffent settings such as type, direction, mode, color, width, etc.\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Allows to configure the trendlines of the chart such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar EmptyPointSettings = /** @class */ (function (_super) {\n    __extends(EmptyPointSettings, _super);\n    function EmptyPointSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], EmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], EmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], EmptyPointSettings.prototype, \"mode\", void 0);\n    return EmptyPointSettings;\n}(ChildProperty));\nexport { EmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar CornerRadius = /** @class */ (function (_super) {\n    __extends(CornerRadius, _super);\n    function CornerRadius() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomRight\", void 0);\n    return CornerRadius;\n}(ChildProperty));\nexport { CornerRadius };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar CrosshairTooltip = /** @class */ (function (_super) {\n    __extends(CrosshairTooltip, _super);\n    function CrosshairTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\n    return CrosshairTooltip;\n}(ChildProperty));\nexport { CrosshairTooltip };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar StripLineSettings = /** @class */ (function (_super) {\n    __extends(StripLineSettings, _super);\n    function StripLineSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], StripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], StripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], StripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], StripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], StripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], StripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], StripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], StripLineSettings.prototype, \"opacity\", void 0);\n    return StripLineSettings;\n}(ChildProperty));\nexport { StripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar LabelBorder = /** @class */ (function (_super) {\n    __extends(LabelBorder, _super);\n    function LabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], LabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], LabelBorder.prototype, \"type\", void 0);\n    return LabelBorder;\n}(ChildProperty));\nexport { LabelBorder };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar MajorGridLines = /** @class */ (function (_super) {\n    __extends(MajorGridLines, _super);\n    function MajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorGridLines.prototype, \"color\", void 0);\n    return MajorGridLines;\n}(ChildProperty));\nexport { MajorGridLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar MinorGridLines = /** @class */ (function (_super) {\n    __extends(MinorGridLines, _super);\n    function MinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorGridLines.prototype, \"color\", void 0);\n    return MinorGridLines;\n}(ChildProperty));\nexport { MinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar AxisLine = /** @class */ (function (_super) {\n    __extends(AxisLine, _super);\n    function AxisLine() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], AxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], AxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], AxisLine.prototype, \"color\", void 0);\n    return AxisLine;\n}(ChildProperty));\nexport { AxisLine };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar MajorTickLines = /** @class */ (function (_super) {\n    __extends(MajorTickLines, _super);\n    function MajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorTickLines.prototype, \"color\", void 0);\n    return MajorTickLines;\n}(ChildProperty));\nexport { MajorTickLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar MinorTickLines = /** @class */ (function (_super) {\n    __extends(MinorTickLines, _super);\n    function MinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorTickLines.prototype, \"color\", void 0);\n    return MinorTickLines;\n}(ChildProperty));\nexport { MinorTickLines };\n/**\n * Allows to configure the position of the legend such as top and left in the chart.\n */\nvar ChartLocation = /** @class */ (function (_super) {\n    __extends(ChartLocation, _super);\n    function ChartLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"y\", void 0);\n    return ChartLocation;\n}(ChildProperty));\nexport { ChartLocation };\n/**\n * Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\n/**\n * Allows options for customize the error bar chart series with diffent settings such as type, direction, mode, color, width, etc.\n */\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\n/**\n * Allows to configure the trendlines of the chart series such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\n/**\n * Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n */\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n */\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n * Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explodeAll\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"explodeIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property('30%')\n    ], PivotSeries.prototype, \"explodeOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"gapRatio\", void 0);\n    __decorate([\n        Property('Value')\n    ], PivotSeries.prototype, \"groupMode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"groupTo\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckHeight\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckWidth\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotSeries.prototype, \"pyramidMode\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"startAngle\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Complex(null, PivotChartDataLabel)\n    ], PivotSeries.prototype, \"dataLabel\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Allow options to customize the axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(Theme.axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('None')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(Theme.tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Allow options to customize the center of the pivot pie series chart.\n */\nvar PivotPieChartCenter = /** @class */ (function (_super) {\n    __extends(PivotPieChartCenter, _super);\n    function PivotPieChartCenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"x\", void 0);\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"y\", void 0);\n    return PivotPieChartCenter;\n}(ChildProperty));\nexport { PivotPieChartCenter };\n/**\n * Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n * Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\n * The following options are available to customize the pivot chart.\n * * `background`: Allows you to change the background color of the chart series in the pivot chart.\n * For example, to display the chart series with background color as red, set the property `background` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"**.\n * * `border`: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n * * `chartArea`: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n * * `chartSeries`: Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n * * `crosshair`: Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n * * `description`: Allows you to add a description of the pivot chart.\n * * `enableAnimation`: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.\n * * `enableExport`: Allows the pivot chart to be exported to either **PDF** or **PNG** or **JPEG** or **SVG** filter formats.\n * * `enableMultiAxis`: Allows you to draw the pivot chart with multiple value fields as separate chart area.\n * * `enableSideBySidePlacement`: Allows you to draw points of the column type pivot chart series as side by side.\n * * `isMultiSelect`: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property `selectionMode` to be **Point** or **Series** or **Cluster**.\n * * `isTransposed`: Allows you to render the pivot chart in a transposed manner or not.\n * * `legendSettings`: Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n * * `margin`: Allow options to customize the left, right, top and bottom margins of the pivot chart.\n * * `palettes`: Allows you to draw the chart series points with custom color in the pivot chart.\n * * `primaryXAxis`: Allow options to customize the horzontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `primaryYAxis`: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\n * title, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `selectedDataIndexes`: Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * * `selectionMode`: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\n * For example, to highlight a specific point in a specific series of the pivot chart, set the property `selectionMode` to **Point**.\n * * `showMultiLevelLabels`: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.\n * * `subTitle`: Allows you to add the subtitle to the pivot chart.\n * * `subTitleStyle`: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tabIndex`: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.\n * * `theme`: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.\n * * `title`: Allows you to add title to the pivot chart.\n * * `titleStyle`: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tooltip`: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n * * `useGroupingSeparator`: Allows the group separator to be shown to the values in the pivot chart.\n * * `value`: Allows you to draw a pivot chart with a specific value field during initial loading.\n * * `zoomSettings`: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"columnHeader\", void 0);\n    __decorate([\n        Property('-')\n    ], ChartSettings.prototype, \"columnDelimiter\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultiAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableScrollOnMultiAxis\", void 0);\n    __decorate([\n        Complex(Theme.chartTitleFont, Font)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.chartSubTitleFont, Font)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex(null, PivotPieChartCenter)\n    ], ChartSettings.prototype, \"pieCenter\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"accumulationSelectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    /* tslint:disable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        /* tslint:enable:no-any */\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        /* tslint:disable-next-line:max-line-length */\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        /* tslint:disable-next-line:max-line-length */\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        /* tslint:disable */\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n        /* tslint:enable */\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        /* tslint:disable */\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n        /* tslint:enable */\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            // if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n            //     query = query + ' * ' + measureQuery;\n            // }\n            /* tslint:disable:max-line-length */\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.drilledMembers.length > 0 ? '})' : '') + (this.isPaging && axis === 'columns' && drillQueryObj.query !== '' ? '-' + drillQueryObj.collection.join('-') : '') + ')';\n        }\n        // else if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n        //     query = 'NON EMPTY (' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE({' : '') + measureQuery;\n        //     query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n        //         (this.drilledMembers.length > 0 ? '})' : '') + ') ' + this.cellSetInfo + ' ON ' + axis.toUpperCase();\n        // }\n        /* tslint:enable:max-line-length */\n        return query;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                var item = _b[_a];\n                var drillQuery = [];\n                var rawQuery = [];\n                var i = 0;\n                var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                /* tslint:disable:max-line-length */\n                while (i < dimensions.length) {\n                    if (drillInfo_1[i] && drillInfo_1[i].indexOf(dimensions[i].name) !== -1) {\n                        if (drillInfo_1[drillInfo_1.length - 1].indexOf(dimensions[i].name) !== -1) {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '.CHILDREN})';\n                            }\n                            else {\n                                drillQuery.push('(' + drillInfo_1[i] + '.CHILDREN)');\n                                rawQuery.push('(' + drillInfo_1[i] + ')');\n                            }\n                        }\n                        else {\n                            if (drillInfo_1[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else if (drillInfo_1[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '})';\n                                }\n                                else {\n                                    drillQuery.push('({' + drillInfo_1[i] + '})');\n                                    rawQuery.push('({' + drillInfo_1[i] + '})');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_1[i] + ')');\n                                    rawQuery.push('(' + drillInfo_1[i] + ')');\n                                }\n                            }\n                        }\n                    }\n                    else if (!drillInfo_1[i] && dimensions[i]) {\n                        if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                            }\n                            else {\n                                drillQuery.push('(' + measureQuery + ')');\n                                rawQuery.push('(' + measureQuery + ')');\n                            }\n                        }\n                        else {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                            }\n                            else {\n                                drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                            }\n                        }\n                    }\n                    else {\n                        drillQuery = [];\n                        break;\n                    }\n                    i++;\n                }\n                if (drillQuery.length > 0 && drillQuery.length < drillInfo_1.length) {\n                    drillQuery = [];\n                    rawQuery = [];\n                }\n                // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                /* tslint:enable:max-line-length */\n                if (rawQuery.length > 0) {\n                    rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    /* tslint:disable */\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    /* tslint:enable */\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* tslint:disable:no-any */\n                    var filter = filters[field.name];\n                    /* tslint:enable:no-any */\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n            ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                /* tslint:disable-next-line:max-line-length */\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties) {\n        this.isEmptyData = false;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.enableValueSorting = false;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        /* tslint:disable:no-any */\n        this.locale = this.globalize.getCulture();\n        /* tslint:enable:no-any */\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.isPaging = this.pageSettings ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && this.savedFieldListData)) {\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function (direction, newPage, prevPage) {\n        MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.pivotValues = [];\n            this.valueContent = [];\n            this.headerContent = [];\n            this.colDepth = 0;\n            this.tupColumnInfo = [];\n            this.tupRowInfo = [];\n            this.colMeasures = {};\n            this.colMeasurePos = undefined;\n            this.rowMeasurePos = undefined;\n            this.rowStartPos = -1;\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var measureInfo = this.getMeasureInfo();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (customArgs.action === 'down') {\n            this.updateTupCollection(customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging) {\n                this.performColumnSorting();\n            }\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging) {\n                this.performRowSorting();\n            }\n        }\n        this.frameValues(valCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            var drillInfo = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            var drillEndPos = this.tupRowInfo[tupPos].drillEndPos;\n            var levelColl = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (allStartPos > drillStartPos) : true) : true;\n                /* tslint:disable-next-line:max-line-length */\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) || this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ? (allStartPos > withoutAllEndPos) : true;\n                if (members.length === allCount + (measure ? 1 : 0) && measure) {\n                    var levelName = 'Grand Total.' + members[measurePos].querySelector('Caption').textContent;\n                    gTotals.push({\n                        axis: 'row',\n                        actualText: this.getUniqueName(members[measurePos].querySelector('UName').textContent),\n                        colIndex: 0,\n                        formattedText: (typeColl[measurePos] === '3' &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                            members[measurePos].querySelector('Caption').textContent,\n                        hasChild: false,\n                        level: -1,\n                        rowIndex: position,\n                        index: [],\n                        ordinal: tupPos,\n                        colSpan: 1,\n                        rowSpan: 1,\n                        memberType: Number(typeColl[measurePos]),\n                        isDrilled: false,\n                        parentUniqueName: members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                            members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: members[measurePos].querySelector('LName').textContent,\n                        hierarchy: members[measurePos].getAttribute('Hierarchy'),\n                        valueSort: { levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy') }\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total.' + members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? prevParent.isDrilled : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            /* tslint:disable-next-line:no-string-literal */\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            var uniqueName = this.getUniqueName(member.querySelector('UName').textContent);\n                            pivotValues[position] = [{\n                                    axis: 'row',\n                                    actualText: uniqueName,\n                                    colIndex: 0,\n                                    formattedText: (typeColl[memPos] === '3' && this.dataFields[uniqueName] &&\n                                        this.dataFields[uniqueName].caption) ? this.dataFields[uniqueName].caption :\n                                        member.querySelector('Caption').textContent,\n                                    hasChild: Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                    level: lvl,\n                                    rowIndex: position,\n                                    index: [],\n                                    ordinal: tupPos,\n                                    type: 'header',\n                                    colSpan: 1,\n                                    rowSpan: 1,\n                                    memberType: Number(typeColl[memPos]),\n                                    isDrilled: this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                    parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                        member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                    levelUniqueName: member.querySelector('LName').textContent,\n                                    hierarchy: member.getAttribute('Hierarchy'),\n                                    isNamedSet: isNamedSet,\n                                    valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                }];\n                            prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                            if (!prevParent) {\n                                rowMembers.push(member.querySelector('Caption').textContent);\n                            }\n                            var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos]);\n                            pivotValues[position][0].valueSort.levelName = levelName;\n                            pivotValues[position][0].valueSort[levelName] = 1;\n                            valueContent[position - this.rowStartPos] = {};\n                            valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                            if (measure && measurePos > memPos) {\n                                prevUNArray[measurePos] = '';\n                            }\n                            for (var pos = memPos + 1; pos < members.length; pos++) {\n                                prevUNArray[pos] = '';\n                            }\n                            prevUNArray[memPos] = member.querySelector('UName').textContent;\n                            position++;\n                            lastMemPos = memPos;\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] === undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n    };\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            /* tslint:disable:no-any */\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.startsWith('[Measures]') ? '3' : '1';\n            }\n            var memberType = memberUName.startsWith('[Measures]') ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            /* tslint:enable:no-any */\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            /* tslint:disable-next-line:max-line-length */\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                allCount++;\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = { UName: (_a = {}, _a[memberlevel] = memberUName, _a), Caption: (_b = {}, _b[memberlevel] = memberCaption, _b) };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                /* tslint:disable:no-any */\n                var uNames = Object.values(this.headerGrouping[memPos].UName).join('~~');\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = Object.values(this.headerGrouping[memPos].Caption).join('~~');\n                /* tslint:enable:no-any */\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/~~|::\\[/).map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple) {\n        var captionColection = tuple.captionCollection;\n        if (tuple.measure) {\n            var measureName = tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~,::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join('.');\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionColection = captionCollectionArray.join('.');\n        }\n        return captionColection;\n    };\n    /** hidden */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            /* tslint:disable-next-line:max-line-length */\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] = this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        /* tslint:disable */\n        var _this = this;\n        /* tslint:enable */\n        /* tslint:disable-next-line:max-line-length */\n        maxLevel.map(function (item, pos) { _this.colDepth = _this.colDepth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) : (item === 0 ? 1 : item)); });\n        tupPos = 0;\n        var position = 1;\n        var lastAllStartPos;\n        var lastSavedInfo = {};\n        var drillLastAllStartPos;\n        var lastAllCount;\n        var drillLastAllCount;\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this.tupColumnInfo[tupPos].allStartPos;\n            var measure = this.tupColumnInfo[tupPos].measure;\n            var typeColl = this.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            if (isStartCol) {\n                if (allCount === 0) {\n                    var levelComp = [-1, -1, -1];\n                    if (this.tupColumnInfo[tupPos - 1] && this.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this.levelCompare(levelColl, this.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this.tupColumnInfo[tupPos].drillStartPos < 0) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this.setParentCollection(members);\n                        this.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        position++;\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this.totalCollection[this.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this.tupColumnInfo[tupPos];\n                }\n            }\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && withoutAllEndPos < allStartPos) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    /* tslint:disable-next-line:max-line-length */\n                    var endAllow = drillEndPos !== drillStartPos ? (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    /* tslint:disable-next-line:max-line-length */\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ? (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this.totalCollection[this.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, allStartPos: allStartPos, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/~~|::\\[/).map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        /* tslint:disable-next-line:max-line-length */\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                /* tslint:disable-next-line:max-line-length */\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ? this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.tupColumnInfo[tupPos].measurePosition !== memberPos) ?\n                    maxLevel[memberPos] :\n                    (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled && this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false :\n                        this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    if (memberType !== '2') {\n                        colMembers[member.querySelector('UName').textContent] = member.querySelector('Caption').textContent;\n                    }\n                    /* tslint:disable */\n                    var levelName = Object.values(colMembers).join('.');\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    var uName = this.getUniqueName(member.querySelector('UName').textContent);\n                    this.pivotValues[spanMemPos][position] = {\n                        axis: 'column',\n                        actualText: uName,\n                        colIndex: position,\n                        formattedText: (memberType === '3' && this.dataFields[uName] &&\n                            this.dataFields[uName].caption) ? this.dataFields[uName].caption :\n                            member.querySelector('Caption').textContent,\n                        hasChild: Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                        level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) - ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                        rowIndex: spanMemPos,\n                        ordinal: tupPos,\n                        memberType: Number(memberType),\n                        isDrilled: isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled,\n                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: member.querySelector('LName').textContent,\n                        hierarchy: member.getAttribute('Hierarchy'),\n                        isNamedSet: isNamedSet,\n                        valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                        /* tslint:enable */\n                    };\n                    if (!this.headerContent[spanMemPos]) {\n                        this.headerContent[spanMemPos] = {};\n                    }\n                    this.headerContent[spanMemPos][position] = this.pivotValues[spanMemPos][position];\n                    spanMemPos++;\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 && this.tupColumnInfo[tupPos].measurePosition !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n            }\n        }\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.performRowSorting = function () {\n        var _a;\n        if (this.enableSort && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? (currentTuple.measurePosition === 0 && currentCell.memberType === 3 ?\n                    currentTuple.measureName : currentTuple.uNameCollection) : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/~~|::\\[/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            /* tslint:disable:typedef */\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            /* tslint:enable:typedef */\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]]);\n                }\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = (tupInfo.measurePosition === 0 && axisSets[aPos].memberType === 3) ?\n                                tupInfo.measureName : tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                    var isLastMeasure = uName.lastIndexOf('::[') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::[').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                /* tslint:disable:no-string-literal */\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                /* tslint:enable:no-string-literal */\n                var currPos = gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[newPos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    OlapEngine.prototype.performColumnSorting = function () {\n        if (this.enableSort) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var key = void 0;\n                    var keys = void 0;\n                    var arrange = {};\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    for (k = k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType != 2 && header[k].hierarchy\n                                != '[Measures]' && header[k].level != -1) {\n                                if (isNullOrUndefined(arrange[header[k].formattedText]) || isNullOrUndefined(this.pivotValues[j - 1])) {\n                                    arrange[header[k].formattedText] = arrange[header[k].formattedText] ? arrange[header[k].formattedText] : [];\n                                    arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                }\n                                else if (arrange[header[k].formattedText] && this.pivotValues[j - 1]) {\n                                    var prevRowCell = this.pivotValues[j - 1][header[k].colIndex];\n                                    var prevColIndex = Object.values(arrange[header[k].formattedText])[0].colIndex;\n                                    var prevColRowCell = this.pivotValues[j - 1][prevColIndex];\n                                    if (prevRowCell.formattedText !== prevColRowCell.formattedText) {\n                                        var key_1 = Object.keys(arrange);\n                                        key_1 = this.sortColumnHeaders(key_1, this.sortObject[header[k - 1].levelUniqueName] ||\n                                            this.sortObject[header[k].hierarchy]);\n                                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                        for (var keyPos = 0; keyPos < key_1.length; keyPos++) {\n                                            var length_1 = Object.keys(arrange[key_1[keyPos]]).length;\n                                            for (var cellPos = 0; cellPos < length_1; cellPos++) {\n                                                value = temporary[index].length === 0 ? 1 : 0;\n                                                temporary[index][temporary[index].length + value] =\n                                                    arrange[key_1[keyPos]][Number(Object.keys(arrange[key_1[keyPos]])[cellPos])];\n                                            }\n                                        }\n                                        arrange = {};\n                                        arrange[header[k].formattedText] = [];\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                    else {\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                }\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                                key = Object.keys(arrange);\n                                key = this.sortColumnHeaders(key, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy]);\n                                isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                for (var l = 0; l < key.length; l++) {\n                                    var length_2 = Object.keys(arrange[key[l]]).length;\n                                    for (var q = 0; q < length_2; q++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[key[l]][Number(Object.keys(arrange[key[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy != '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                            }\n                            if (header[k].level != -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy != '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length === 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value] =\n                                            arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value] = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        keys = Object.keys(arrange);\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        key = this.sortColumnHeaders(keys, order);\n                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] =\n                                    arrange[key[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    != pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] = pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::[').length <= currentTuple.measurePosition;\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers) {\n        if (headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var order = (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]);\n            if (order === 'Ascending' || order === undefined) {\n                headers === headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                    ((b.formattedText > a.formattedText) ? -1 : 0); });\n            }\n            else if (order === 'Descending') {\n                headers === headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                    ((b.formattedText < a.formattedText) ? -1 : 0); });\n            }\n            else {\n                headers;\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (keys, order) {\n        if (order === 'Ascending' || order === undefined) {\n            keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n        }\n        else if (order === 'Descending') {\n            keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n        }\n        return keys;\n    };\n    /* tslint:enable */\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (tuple.measurePosition >= (uniqueNameColl.split('::[').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                /* tslint:disable-next-line:max-line-length */\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ? this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (tupColInfo.measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        currCell.type = 'sum';\n                        /* tslint:disable-next-line:max-line-length */\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort.levelName = currCell.valueSort.levelName;\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        var levelName = 'Grand Total';\n                        if (nextRowCell && colMeasureCount > 0) {\n                            levelName = nextRowCell.memberType === 3 ? ('Grand Total.' + nextRowCell.formattedText) :\n                                nextRowCell.valueSort.levelName;\n                        }\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        currCell.valueSort.levelName = levelName;\n                        currCell.valueSort[levelName.toString()] = 1;\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort.levelName = currCell.valueSort.levelName;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 && nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = currCell.isDrilled ? 1 : (spanCollection[rowPos + 1][colPos] + 1);\n                            /* tslint:disable-next-line:max-line-length */\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && currCell.level === -1 && nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        /* tslint:disable-next-line:max-line-length */\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !nextRowCell.isDrilled) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ? spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ? spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.frameValues = function (tuples, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        var valCollection = {};\n        for (var colPos = 0; colPos < tuples.length; colPos++) {\n            valCollection[Number(tuples[colPos].getAttribute('CellOrdinal'))] = tuples[colPos];\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                    ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                        this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                        columns[0].actualText);\n                if (columns[0].type === 'header') {\n                    columns[colPos] = {\n                        axis: 'value',\n                        actualText: this.getUniqueName(measure),\n                        formattedText: '',\n                        value: 0,\n                        colIndex: colPos,\n                        rowIndex: rowPos\n                    };\n                }\n                else {\n                    var valElement = void 0;\n                    var formattedText = void 0;\n                    var value = '0';\n                    var measureName = this.getUniqueName(measure);\n                    var showTotals = true;\n                    if (this.tupRowInfo[rowOrdinal]) {\n                        showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                    }\n                    else {\n                        showTotals = this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals;\n                    }\n                    valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                    formattedText = !showTotals ? '' :\n                        ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                            valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                    value = !showTotals ? '0' :\n                        ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                            valElement.querySelector('Value').textContent : null);\n                    formattedText = showTotals && !isNullOrUndefined(value) ?\n                        this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) :\n                        formattedText;\n                    var isSum = (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                        this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                        (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                            this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                    /* tslint:disable */\n                    var isGrand = (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].measurePosition === 0 ? this.tupRowInfo[rowOrdinal].allStartPos === 1 : this.tupRowInfo[rowOrdinal].allStartPos === 0) : false) ||\n                        (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].measurePosition === 0 ? this.tupColumnInfo[colOrdinal].allStartPos === 1 : this.tupColumnInfo[colOrdinal].allStartPos === 0) : false);\n                    /* tslint:enable */\n                    columns[colPos] = {\n                        axis: 'value',\n                        actualText: measureName,\n                        formattedText: formattedText,\n                        colOrdinal: colOrdinal,\n                        rowOrdinal: rowOrdinal,\n                        columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                        rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                        value: !isNullOrUndefined(value) ? Number(value) : null,\n                        colIndex: colPos,\n                        rowIndex: rowPos,\n                        isSum: isSum,\n                        isGrandSum: isGrand\n                    };\n                }\n                this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n            }\n        }\n    };\n    /** hidden */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                if ((formatObj.format) && !(this.formatRegex.test(formatObj.format))) {\n                    var pattern = formatObj.format.match(this.customRegex);\n                    var integerPart = pattern[6];\n                    formatObj.useGrouping = integerPart.indexOf(',') !== -1;\n                }\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 1) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = vTuples.length; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    vOrdinalIndex[vOrdinalIndex.length] = Number(vTuples[j].getAttribute('CellOrdinal'));\n                }\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[index] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[orderedVTuples.length] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            /* tslint:disable-next-line:max-line-length */\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) || tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                var splitLevels = memberArray[memPos].split('~~');\n                var drillLevel = splitLevels.indexOf(memberName);\n                var cropLevels = [];\n                for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                    cropLevels.push(splitLevels[lPos]);\n                }\n                joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n            }\n            else {\n                joinArray[joinArray.length] = memberArray[memPos];\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::[')[fieldPos];\n                    drillField = drillField[0] === '[' ? drillField : ('[' + drillField);\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n        this.getAxisFields();\n        this.frameSortObject();\n        this.updateFieldlist();\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ? this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldList[fieldName].allowDragAndDrop = true;\n                this.savedFieldList[fieldName].showFilterIcon = true;\n                this.savedFieldList[fieldName].showSortIcon = true;\n                this.savedFieldList[fieldName].showEditIcon = true;\n                this.savedFieldList[fieldName].showRemoveIcon = true;\n                this.savedFieldList[fieldName].showValueTypeIcon = true;\n                this.savedFieldListData[i].sort = sortOrder;\n                this.savedFieldListData[i].allowDragAndDrop = true;\n                this.savedFieldListData[i].showFilterIcon = true;\n                this.savedFieldListData[i].showSortIcon = true;\n                this.savedFieldListData[i].showEditIcon = true;\n                this.savedFieldListData[i].showRemoveIcon = true;\n                this.savedFieldListData[i].showValueTypeIcon = true;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            /* tslint:disable:max-line-length */\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] && this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldList[fieldName].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldList[fieldName].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldList[fieldName].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldList[fieldName].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldList[fieldName].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldList[fieldName].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldListData[i].isSelected = true;\n                this.savedFieldListData[i].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldListData[i].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldListData[i].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldListData[i].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldListData[i].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldListData[i].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] && this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            /* tslint:enable:max-line-length */\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if (!isAvail || (fieldName.toLowerCase() === '[calculated members].[_0]' &&\n                    this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES'\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><Header/><Body><Discover xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    /* tslint:enable:max-line-length */\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = {\n                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n            };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName]) {\n        //     return this.dataFields[fieldName].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this), \n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var filters;\n        var filteritems = [];\n        var filterQuery = '';\n        for (var i = 0; i < this.filters.length; i++) {\n            filters = this.filterMembers[this.filters[i].name];\n            if (filters) {\n                for (var j = 0; j < filters.length; j++) {\n                    filterQuery = filterQuery + filters[j];\n                    filterQuery = j < filters.length - 1 ? filterQuery + ',' : filterQuery + '';\n                }\n                filteritems[i] = filterQuery;\n                filterQuery = '';\n            }\n        }\n        for (var i = 0; i < filteritems.length; i++) {\n            filterQuery = filterQuery === '' ? '{' + filteritems[i] + '}' : (filterQuery + ',' + '{' + filteritems[i] + '}');\n        }\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from ' +\n            (filterQuery === '' ? '[' + this.dataSourceSettings.cube + ']' : '(SELECT (' + filterQuery + ') ON COLUMNS FROM [' +\n                this.dataSourceSettings.cube + '])');\n        drillQuery = drillQuery.replace(/&/g, '&amp;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/\\&/g, '&amp;');\n        if (!isAllFilterData) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n    };\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/\\&/g, '&amp;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchSearchMembers' });\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var nodeAttr = { 'data-fieldName': fieldName };\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    var nodeSelect = (customArgs.loadLevelMembers ? this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            hierarchyElements.push({\n                pid: field.querySelector('DIMENSION_UNIQUE_NAME').textContent,\n                id: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS'\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        allowDragAndDrop: (this.dataFields[field.name] ? this.dataFields[field.name].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showSortIcon : true),\n                        showEditIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showValueTypeIcon : true),\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName)\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: (this.isMondrian ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS'\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_4 = fields; _a < fields_4.length; _a++) {\n            var field = fields_4[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    /* tslint:disable-next-line:max-line-length */\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                /* tslint:disable-next-line:max-line-length */\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false,\n                allowDragAndDrop: (this.dataFields[id] ? this.dataFields[id].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[id] ? this.dataFields[id].showFilterIcon : true),\n                showSortIcon: (this.dataFields[id] ? this.dataFields[id].showSortIcon : true),\n                showEditIcon: (this.dataFields[id] ? this.dataFields[id].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[id] ? this.dataFields[id].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[id] ? this.dataFields[id].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[\\[\\]\\&']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0 && (dimensionName !== hierarchyName || this.isMondrian)) {\n                var parentID = dimensionName + (this.isMondrian ? '~#^Dim' : '');\n                if (hierarchyFolderName !== '') {\n                    var folderName = dimensionName + (this.isMondrian ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                    var curParentElement = [];\n                    for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                        var item = dimensionElements_2[_c];\n                        if (item.tag === folderName && item.pid === parentID) {\n                            curParentElement.push(item);\n                        }\n                    }\n                    if (curParentElement.length === 0) {\n                        var fieldObj_1 = {\n                            hasChildren: true,\n                            isSelected: false,\n                            pid: dimensionName + (this.isMondrian ? '~#^Dim' : ''),\n                            id: folderName,\n                            name: hierarchyFolderName,\n                            spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                            tag: folderName,\n                            caption: hierarchyFolderName,\n                            // aggregateType: this.getAggregateType(hierarchyFolderName),\n                            type: 'string'\n                        };\n                        dimensionElements.push(fieldObj_1);\n                    }\n                    parentID = folderName;\n                }\n                var fieldObj = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                    // hasChildren: true,\n                    isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                    pid: parentID,\n                    id: hierarchyName,\n                    name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                    hasAllMember: isAllMemberAvail,\n                    allMember: allMember,\n                    tag: hierarchyName,\n                    caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    // aggregateType: this.getAggregateType(hierarchyName),\n                    type: 'string',\n                    filter: [],\n                    dateMember: [],\n                    sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                    actualFilter: [],\n                    filterMembers: [],\n                    childMembers: [],\n                    searchMembers: [],\n                    members: {},\n                    currrentMembers: {},\n                    levels: [],\n                    levelCount: 1,\n                    /* tslint:disable-next-line:max-line-length */\n                    isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                    isExcelFilter: false,\n                    allowDragAndDrop: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].allowDragAndDrop : true),\n                    showFilterIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showFilterIcon : true),\n                    showSortIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showSortIcon : true),\n                    showEditIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showEditIcon : true),\n                    showRemoveIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showRemoveIcon : true),\n                    showValueTypeIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showValueTypeIcon : true)\n                };\n                dimensionElements.push(fieldObj);\n                this.fieldList[hierarchyName] = fieldObj;\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS'\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_6 = fields; _i < fields_6.length; _i++) {\n            var field = fields_6[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES'\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS'\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_7 = fields; _a < fields_7.length; _a++) {\n            var field = fields_7[_a];\n            /* tslint:disable-next-line:max-line-length */\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString,\n                allowDragAndDrop: (this.dataFields[measureName] ? this.dataFields[measureName].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showFilterIcon : true),\n                showSortIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showSortIcon : true),\n                showEditIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc, request, customArgs) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            beforeSend: this.beforeSend.bind(this),\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                return e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.beforeSend = function (args) {\n        if (this.dataSourceSettings.authentication.userName && this.dataSourceSettings.authentication.password) {\n            /* tslint:disable */\n            args.httpRequest.setRequestHeader(\"Authorization\", \"Basic \" + btoa(this.dataSourceSettings.authentication.userName + \":\" +\n                this.dataSourceSettings.authentication.password));\n            /* tslint:enable */\n        }\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        /* tslint:disable:max-line-length */\n        if (this.isMondrian) {\n            sourceInfo = '';\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" SOAP-ENV:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><SOAP-ENV:Body><Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            xmlMsg = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> <Header></Header> <Body> <Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        /* tslint:enable:max-line-length */\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: !isNullOrUndefined(locale) ? locale.toString() : '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* tslint:disable */\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/* tslint:enable */\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options?\n     * @param  {string|HTMLElement} element?\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.request = new XMLHttpRequest();\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({ args: [this], member: 'groupingbar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalformatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberformatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldlist' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.commonModule = new Common(this);\n        }\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            /* tslint:enable */\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axes',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormatingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen,\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                groupItems.push(this.buildDefaultItems('Group'));\n                groupItems.push(this.buildDefaultItems('Ungroup'));\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.setProperties({ pivotValues: [] }, true);\n        /* tslint:disable-next-line:no-any */\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n                if (this.displayOption.view !== 'Chart') {\n                    this.renderEmptyGrid();\n                }\n                this.showWaitingPopup();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else if (this.currentAction === 'fetchRawData') {\n                    var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()] ?\n                        this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption : this.drillThroughValue.actualText.toString();\n                    var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n                    var rawData = JSON.parse(engine.rawData);\n                    var parsedObj = JSON.parse(engine.indexObject);\n                    var indexObject = {};\n                    for (var len = 0; len < parsedObj.length; len++) {\n                        indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                    }\n                    this.drillThroughValue.indexObject = indexObject;\n                    this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n                }\n                else {\n                    this.engineModule.fieldList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pageSettings;\n                    var valueSort = JSON.parse(engine.valueSortSettings);\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule && this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotFieldListModule.calculatedFieldModule.endDialog();\n                    this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n            if (this.currentAction === 'onScroll') {\n                if (this.scrollDirection === 'vertical') {\n                    var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.rowSize * rowValues * this.gridSettings.rowHeight);\n                    var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowSize * rowValues));\n                    var pos = exactSize * exactPage - (this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight);\n                    this.scrollPosObject.verticalSection = pos;\n                }\n                else if (this.scrollDirection === 'horizondal') {\n                    var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth);\n                    var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnSize * colValues));\n                    var pos = exactSize * exactPage - (this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth);\n                    this.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        var customProperties = {\n            pageSettings: this.pageSettings,\n            enableValueSorting: this.enableValueSorting,\n            enableDrillThrough: (this.allowDrillThrough || this.editSettings.allowEditing),\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotView.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            /* tslint:disable-next-line:max-line-length */\n            dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n                PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            }\n            else {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            }\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            if (_this_1.dataSourceSettings.mode !== 'Server') {\n                _this_1.notify(events.initialLoad, {});\n            }\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string}\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* tslint:disable */\n        this.chartSettings['tooltipRender'] = undefined;\n        /* tslint:enable */\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* tslint:disable */\n        if (isBlazor()) {\n            pivotData = persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        /* tslint:enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        this.engineModule.fieldList = null;\n                        this.showWaitingPopup();\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                                    this.engineModule.fieldList = null;\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    this.notify(events.dataReady, {});\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        /* tslint:disable-next-line:max-line-length */\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultiAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    this.chartModule.loadChart(this, this.chartSettings);\n                    this.notify(events.uiUpdate, this);\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n                        var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    if (isBlazor()) {\n                        this.refresh();\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    this.renderPivotGrid();\n                    break;\n                case 'groupingBarSettings':\n                    this.axisFieldModule.render();\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        if (this.currentView === 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart) {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && this.element.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                this.element.querySelector('#' + this.element.id + '_PivotFieldList').style.display = 'none';\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        var _this_1 = this;\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                /* tslint:disable-next-line:no-any */\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        /* tslint:disable-next-line */\n                        var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* tslint:disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* tslint:enable */\n                }\n                else {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType\n                    };\n                    /* tslint:enable:align */\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.allowServerDataBinding = false;\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            delete pivot.bulkChanges.pivotValues;\n                            pivot.allowServerDataBinding = true;\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot.dataSourceSettings.mode === 'Server') {\n                        if (isSorted)\n                            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                        else if (isAggChange)\n                            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                        else if (isCalcChange)\n                            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                        else if (isFiltered)\n                            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                        else\n                            pivot.getEngine('onDrop', null, null, null, null, null, null);\n                        pivot.lastSortInfo = {};\n                        pivot.lastAggregationInfo = {};\n                        pivot.lastCalcFieldInfo = {};\n                        pivot.lastFilterInfo = {};\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('Excel');\n        }\n        else {\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('CSV');\n        }\n        else {\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization) {\n            this.pdfExportModule.exportToPDF();\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param type - Defines the export type.\n     * @param fileName - Defines file name of export document.\n     * @param orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param width - Defines width of the export document.\n     * @param height - Defines height of the export document.\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    if (pivot_1.enableVirtualization) {\n                        if (isBlazor()) {\n                            /* tslint:disable */\n                            var sfBlazor = 'sfBlazor';\n                            var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                            var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                            var args = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                            pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                                pivot_1.updateBlazorData(data, pivot_1);\n                                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                                pivot_1.allowServerDataBinding = false;\n                                pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                                delete pivot_1.bulkChanges.pivotValues;\n                                pivot_1.allowServerDataBinding = true;\n                                pivot_1.renderPivotGrid();\n                            });\n                            /* tslint:enable */\n                        }\n                        else if (_this_1.dataSourceSettings.mode === 'Server') {\n                            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                    }\n                    if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                        pivot_1.allowServerDataBinding = false;\n                        pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot_1.bulkChanges.pivotValues;\n                        pivot_1.allowServerDataBinding = true;\n                        pivot_1.renderPivotGrid();\n                    }\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: isBlazor() ? undefined : pivot,\n            cancel: false\n        };\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        if (drillInfo && drillInfo.action === 'down') {\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            var fields = drillInfo.memberName.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _i = 0, _a = this.dataSourceSettings.drilledMembers; _i < _a.length; _i++) {\n                var field = _a[_i];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n            }\n            else {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!this.dataSourceSettings.drilledMembers) {\n                    this.dataSourceSettings.drilledMembers = [drilledMember];\n                }\n                else {\n                    this.dataSourceSettings.drilledMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = this.dataSourceSettings.drilledMembers.length; i < cnt; i++) {\n                    var drillItem = this.dataSourceSettings.drilledMembers[i];\n                    var member = drillSet;\n                    if (drillItem.delimiter) {\n                        member = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                        if (drillItem.items[itemPos].indexOf(member) !== 0) {\n                            items[items.length] = drillItem.items[itemPos];\n                        }\n                    }\n                    drillItem.items = items;\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, _d = this.dataSourceSettings.drilledMembers; _c < _d.length; _c++) {\n                var fields = _d[_c];\n                if (fields.items.length > 0) {\n                    drilledMembers_1.push(fields);\n                }\n            }\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onContentReady = function () {\n        if (this.currentView !== 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            this.hideWaitingPopup();\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = (this.gridSettings.columnWidth * engine.columnCount\n                    - this.grid.columns[0].width);\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                var verOffset = (mCnt.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.scrollTop)) + 'px)';\n                var horiOffset = (mCnt.scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((mCnt.scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - mCnt.scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    /* tslint:disable-next-line */\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    templateObject.rowHeaders = pivotCell.rowHeaders;\n                    templateObject.columnHeaders = pivotCell.columnHeaders;\n                    templateObject.rowIndex = pivotCell.rowIndex;\n                    templateObject.columnIndex = pivotCell.colIndex;\n                    templateObject.isGrandTotal = pivotCell.isGrandSum;\n                    templateObject.isTotal = pivotCell.isSum;\n                    templateObject.rowSpan = pivotCell.rowSpan;\n                    templateObject.columnSpan = pivotCell.colSpan;\n                    templateObject.isDrilled = pivotCell.isDrilled;\n                    templateObject.hasChild = pivotCell.hasChild;\n                    templateObject.valueSortInfo = pivotCell.valueSort;\n                    /* tslint:disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.pivotValues && this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[cell.actualText] &&\n                    this.olapEngineModule.dataFields[cell.actualText].caption) ?\n                    this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var rowHeaders = this.getRowText(rowIndex, 0);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = ((cell.formattedText === '0' || cell.formattedText === '') ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields,\n                };\n                /* tslint:disable-next-line:max-line-length */\n                this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((engineModule.rows[i].caption) ? engineModule.rows[i].caption : engineModule.rows[i].name);\n            }\n        }\n        else {\n            /* tslint:disable:max-line-length */\n            if (engineModule.columns.length > 0) {\n                var pos = engineModule.values.length === 0 ? 0 : Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = engineModule.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((engineModule.columns[j].caption) ? engineModule.columns[j].caption : engineModule.columns[j].name);\n            }\n            /* tslint:enable:max-line-length */\n        }\n        return fields;\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                /* tslint:disable */\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                /* tslint:enable */\n                this.showWaitingPopup();\n                var pivot_2 = this;\n                //setTimeout(() => {\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.allowServerDataBinding = false;\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            delete pivot_2.bulkChanges.pivotValues;\n                            pivot_2.allowServerDataBinding = true;\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                        pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                    pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_2.bulkChanges.pivotValues;\n                    pivot_2.allowServerDataBinding = true;\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* tslint:disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* tslint:enable */\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* tslint:disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* tslint:enable */\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString());\n            var colWidth = this.renderModule.calculateColWidth(this.pivotColumns ? this.pivotColumns.length : 0);\n            for (var i = 1; i < this.pivotColumns.length; i++) {\n                this.pivotColumns[i].width = colWidth;\n            }\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < 300) {\n            height = 300;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        /* tslint:disable */\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        /* tslint:enable */\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    /* tslint:disable-next-line */\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* tslint:disable */\n        if (ele) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode == 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_1 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            /* tslint:disable */\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            /* tslint:enable */\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            /* tslint:disable:no-empty */\n            this.grid.showSpinner = function () { };\n            this.grid.hideSpinner = function () { };\n            /* tslint:enable:no-empty */\n            this.element.appendChild(createElement('div', { id: this.element.id + '_grid' }));\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo('#' + this.element.id + '_grid');\n            /* tslint:disable-next-line:no-any */\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n                _this_1.grid.element.querySelector('.e-movablecontent').style.overflowY = 'auto';\n            });\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    if (isBlazor()) {\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var sfBlazor = 'sfBlazor';\n                    var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        if (data === 0) {\n                            _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), (pivot_3.dataSourceSettings.type === 'CSV' ?\n                                _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON')));\n                            return;\n                        }\n                        else {\n                            pivot_3.updateBlazorData(data, pivot_3);\n                            PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                            pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                        }\n                    });\n                }\n                else {\n                    if (_this_1.dataSourceSettings.mode !== 'Server') {\n                        _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    }\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                /* tslint:disable-next-line:no-any */\n                delete _this_1.bulkChanges.pivotValues;\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = PivotUtil.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = PivotUtil.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /* tslint:enable */\n    PivotView.prototype.generateData = function () {\n        if (this.displayOption.view !== 'Chart') {\n            this.renderEmptyGrid();\n        }\n        this.showWaitingPopup();\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n    };\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this;\n        if (isBlazor()) {\n            if (pivot.dataType === 'olap') {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({\n                        dataSourceSettings: {\n                            dataSource: undefined\n                        }\n                    }, true);\n                    pivot.allowServerDataBinding = true;\n                }\n            }\n        }\n        if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n            if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                if (isBlazor() && pivot.enableVirtualization) {\n                    if (!pivot.element.querySelector('.e-spinner-pane')) {\n                        this.showWaitingPopup();\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                        if (!this.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        this.engineModule.data = pivot.remoteData;\n                        this.initEngine();\n                    }\n                    else {\n                        setTimeout(pivot.getData.bind(pivot), 100);\n                    }\n                }\n            }\n            else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0)) {\n                if (pivot.dataType === 'pivot') {\n                    this.hideWaitingPopup();\n                    pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                }\n                pivot.initEngine();\n            }\n            else {\n                if (this.dataSourceSettings.mode === 'Server') {\n                    this.getEngine(\"onRefresh\");\n                }\n                this.hideWaitingPopup();\n            }\n        }\n        else if (isBlazor() && pivot.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        //setTimeout(() => {\n        pivot.engineModule.data = e.result;\n        if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            pivot.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n        //});\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            // (pivotValues[i][j] as IAxisSet).enableHyperlink = false;\n                            var label = this.hyperlinkSettings.headerText;\n                            var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                i : (this.dataType === 'pivot' ?\n                                this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                            var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                            if ((pivotValues[colIndex[label.split('.').length - 1]] &&\n                                pivotValues[colIndex[label.split('.').length - 1]][j] &&\n                                pivotValues[colIndex[label.split('.').length - 1]][j].\n                                    valueSort && pivotValues[colIndex[label.split('.').length - 1]][j].\n                                valueSort[label])) {\n                                for (var _i = 0, colIndex_2 = colIndex; _i < colIndex_2.length; _i++) {\n                                    var index = colIndex_2[_i];\n                                    if (pivotValues[index][j] &&\n                                        pivotValues[index][j].axis === 'column' &&\n                                        (pivotValues[index][j].valueSort.levelName.indexOf(label) > -1)) {\n                                        pivotValues[index][j].enableHyperlink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            if (isBlazor()) {\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n            else {\n                this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n            }\n        }\n        /* tslint:disable-next-line:max-line-length */\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            if (!isBlazor()) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            }\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        /* tslint:disable-next-line:max-line-length */\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n                var fieldName = fields_1[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        /* tslint:disable-next-line:max-line-length */\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n            /* tslint:disable */\n            if (isBlazor()) {\n                this.engineModule.data = data;\n                this.allowServerDataBinding = false;\n                this.setProperties({\n                    dataSourceSettings: {\n                        rows: axisFields[0], columns: axisFields[1], values: axisFields[2], filters: axisFields[3],\n                        filterSettings: fieldSettings[0], sortSettings: fieldSettings[1], formatSettings: fieldSettings[2],\n                        drilledMembers: fieldSettings[3], groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n                    }\n                }, true);\n                this.allowServerDataBinding = true;\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function (e) {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    /* tslint:enable */\n    /* tslint:enable:max-func-body-length */\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns void\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.isAdaptive && this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.chart) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && this.element.querySelector('#' + this.element.id + '_chart')) {\n                remove(this.element.querySelector('#' + this.element.id + '_chart'));\n            }\n        }\n        if (this.grid) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && this.element.querySelector('#' + this.element.id + '_grid')) {\n                remove(this.element.querySelector('#' + this.element.id + '_grid'));\n            }\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            if (this.element.querySelector('.e-spinner-pane')) {\n                remove(this.element.querySelector('.e-spinner-pane'));\n            }\n            if (this.showFieldList && document.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                remove(document.querySelector('#' + this.element.id + '_PivotFieldList'));\n            }\n        }\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     * @returns void\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"editCompleted\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     * @returns void\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Wrapper',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('staticFieldList')\n            });\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons();\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: true,\n                enableRtl: this.parent.enableRtl,\n                change: this.onCheckChange.bind(this)\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo('#' + this.parent.element.id + 'DeferUpdateCheckBox');\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.renderMode === 'Popup' ?\n                    (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                isPrimary: true\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton1');\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.renderMode === 'Popup' ?\n                (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton2');\n        this.deferUpdateCancelButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.cancelButtonClick.bind(this) :\n            this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1', attrs: { 'type': 'button' }\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2', attrs: { 'type': 'button' }\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        this.parent.allowDeferLayoutUpdate = !this.parent.allowDeferLayoutUpdate;\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n            this.deferUpdateCancelButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        this.cancelButtonClick();\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.pivotChange = false;\n        }\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        //setTimeout(() => {\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = extend({}, parent.dataSourceSettings, null, true);\n        parent.clonedFieldList = extend({}, parent.pivotFieldList, null, true);\n        //});\n    };\n    DialogRenderer.prototype.cancelButtonClick = function () {\n        /* tslint:disable:align */\n        if (isBlazor() && !this.parent.isPopupView) {\n            /* tslint:disable-next-line:max-line-length */\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.parent.clonedDataSource.properties));\n        }\n        else {\n            this.parent.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n        }\n        /* tslint:enable:align */\n        if (this.parent.dataType === 'olap') {\n            this.parent.olapEngineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                var name_1 = _a[_i];\n                var item = this.parent.clonedFieldList[name_1];\n                this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n            }\n        }\n        else {\n            this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n        }\n        this.parent.updateDataSource(false, true);\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList')\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                close: this.removeFieldListIcon.bind(this),\n                open: this.dialogOpen.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_dialog-content'), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: false,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons();\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_title'), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    DialogRenderer.prototype.dialogOpen = function () {\n        this.adaptiveElement.refresh();\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            selected: this.tabSelect.bind(this)\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('button', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'type': 'button',\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE,\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS,\n            innerHTML: this.parent.localeObj.getConstant('addPrompt')\n        });\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function (event) {\n        if (!this.parent.isAdaptive) {\n            if (this.parent.dialogRenderer.fieldListDialog) {\n                this.parent.dialogRenderer.fieldListDialog.hide();\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            }\n        }\n        this.parent.notify(events.initCalculatedField, {});\n    };\n    DialogRenderer.prototype.showFieldListDialog = function (event) {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    DialogRenderer.prototype.onShowFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            if (this.parent.isAdaptive) {\n                this.parent.axisFieldModule.render();\n            }\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        this.parent.dialogRenderer.fieldListDialog.show();\n        this.parent.dialogRenderer.fieldListDialog.element.style.top =\n            parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n    };\n    DialogRenderer.prototype.onCloseFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.dataSourceSettings =\n                extend({}, this.parent.clonedDataSource.properties, null, true);\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            /* tslint:disable:align */\n            this.parent.pivotGridModule.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n            /* tslint:enable:align */\n            if (Object.keys(this.parent.clonedFieldList).length > 0) {\n                this.parent.dataType === 'olap' ? this.parent.olapEngineModule.fieldList =\n                    extend({}, this.parent.clonedFieldList, null, true) :\n                    this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            }\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n            this.parent.pivotGridModule.notify(events.contentReady, this);\n        }\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (this.parent.isAdaptive && this.parent.allowCalculatedField && this.parent.calculatedFieldModule) {\n            if (this.adaptiveElement && this.adaptiveElement.selectedItem === 4) {\n                if (this.adaptiveElement.element.querySelector('#' + this.parent.element.id + 'droppable')) {\n                    /* tslint:disable */\n                    this.parent.calculatedFieldModule\n                        .updateAdaptiveCalculatedField(false);\n                    /* tslint:enable */\n                }\n                else {\n                    this.parent.notify(events.initCalculatedField, { edit: false });\n                }\n            }\n        }\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     * @returns void\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('allFields')\n            });\n            var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_CLASS + '-outer-div' });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: 'e-field-header-wrapper' });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS,\n                    innerHTML: this.parent.localeObj.getConstant('centerHeader')\n                });\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = { 'None': 'sortNone', 'Ascend': 'sortAscending', 'Descend': 'sortDescending' };\n        var keys = Object.keys(options);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var option = keys_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option,\n                    'title': this.parent.localeObj.getConstant(options[option])\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS,\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            enableRtl: this.parent.enableRtl,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            allowDrag = true;\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            /* tslint:disable */\n            var field = PivotUtil.getFieldInfo(args.nodeData.id, this.parent);\n            /* tslint:enable */\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: (field.fieldItem ? field.fieldItem.allowDragAndDrop ?\n                        this.parent.localeObj.getConstant('drag') : '' : this.parent.localeObj.getConstant('drag')),\n                    'aria-disabled': 'false'\n                },\n                className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' +\n                    (field.fieldItem ? field.fieldItem.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : '')\n            });\n            if (args.node.querySelector('.e-checkbox-wrapper') &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.e-checkbox-wrapper'));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.e-checkbox-wrapper').style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: false,\n            target: this.parentElement.parentElement,\n            close: this.dialogClose.bind(this)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.dialogClose = function () {\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            nodeChecked: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        /* tslint:disable-next-line:max-line-length */\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        var _this = this;\n        if (args.event.target.classList.contains(cls.DRAG_CLASS) &&\n            !args.event.target.classList.contains(cls.DRAG_DISABLE_CLASS)) {\n            var fieldInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n            var dragEventArgs = {\n                fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n                dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n            };\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.parent.isDragging = true;\n                    addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n                    var data = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        data = _this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    else {\n                        data = _this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                    if (data && data.aggregateType === 'CalculatedField') {\n                        for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                            var axisContent = axis_1[_i];\n                            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        }\n                    }\n                    var dragItem = args.clonedNode;\n                    if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                        _this.parent.renderMode) === 'Popup') {\n                        dragItem.style.zIndex = (_this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                    }\n                }\n                else {\n                    _this.parent.isDragging = false;\n                    args.cancel = true;\n                }\n            });\n        }\n        else {\n            this.parent.isDragging = false;\n            args.cancel = true;\n        }\n    };\n    // private getFieldDragArgs(args: DragAndDropEventArgs): FieldDragStartEventArgs {\n    //     let fieldInfo: FieldItemInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n    //     let dragEventArgs: any = {\n    //         fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n    //         dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n    //     }\n    //     let treeModule: TreeViewRenderer = this;\n    //     if (isBlazor()) {\n    //         dragEventArgs = this.getFieldDragEventArgs(dragEventArgs);\n    //         dragEventArgs.then((e: any) => {\n    //             return e;\n    //         });\n    //     }\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs);\n    //     return dragEventArgs;\n    // }\n    // private getFieldDragEventArgs(dragEventArgs: FieldDragStartEventArgs): FieldDragStartEventArgs | Deferred {\n    //     let callbackPromise: Deferred = new Deferred();\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs, (observedArgs: FieldDragStartEventArgs) => {\n    //         callbackPromise.resolve(observedArgs);\n    //     });\n    //     return callbackPromise;\n    // }\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.allowDeferLayoutUpdate) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].id === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args) {\n        var _this = this;\n        var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n        if (!isNullOrUndefined(node)) {\n            var li_1 = closest(node, 'li');\n            var id_1 = li_1.getAttribute('data-uid');\n            if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n                this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            }\n            var list = this.parent.pivotFieldList;\n            var selectedNode_1 = list[id_1];\n            var fieldInfo_1 = PivotUtil.getFieldInfo(id_1, this.parent);\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            if (args.action === 'check') {\n                var eventdrop = {\n                    fieldName: id_1, dropField: fieldInfo_1.fieldItem,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    dropAxis: (selectedNode_1.type === 'number' || (selectedNode_1.type === 'CalculatedField' &&\n                        selectedNode_1.formula && selectedNode_1.formula.indexOf('Measure') > -1 &&\n                        this.parent.dataType === 'olap')) ? 'values' : 'rows',\n                    dropPosition: fieldInfo_1.position, draggedAxis: 'fieldlist', cancel: false\n                };\n                control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        var addNode = _this.parent.pivotCommon.dataSourceUpdate.getNewField(id_1, fieldInfo_1.fieldItem);\n                        _this.updateReportSettings(addNode, observedArgs);\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n            else {\n                var removeFieldArgs = {\n                    cancel: false, fieldName: id_1,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    fieldItem: fieldInfo_1.fieldItem, axis: fieldInfo_1.axis\n                };\n                control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id_1);\n                        if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateReportSettings = function (newField, dropArgs) {\n        var dropPosition = dropArgs.dropPosition;\n        var dropClass = dropArgs.dropAxis;\n        switch (dropClass) {\n            case 'filters':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.filters.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.filters.push(newField);\n                break;\n            case 'rows':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.rows.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.rows.push(newField);\n                break;\n            case 'columns':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.columns.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.columns.push(newField);\n                break;\n            case 'values':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.values.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.values.push(newField);\n                if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                    !(this.parent.olapEngineModule).isMeasureAvail) {\n                    var measureField = {\n                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined,\n                    };\n                    var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                        this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                    fieldAxis.push(measureField);\n                }\n                break;\n        }\n    };\n    TreeViewRenderer.prototype.updateCheckState = function (selectedNode) {\n        var chkState = this.fieldTable.element.querySelectorAll('.e-checkbox-wrapper');\n        var innerText = this.fieldTable.element.querySelectorAll('.e-list-text');\n        var checkClass = this.fieldTable.element.querySelectorAll('.e-frame');\n        for (var i = 0; i < chkState.length; i++) {\n            if (selectedNode.caption === innerText[i].textContent) {\n                if (chkState[i].getAttribute('aria-checked') === 'false') {\n                    chkState[i].setAttribute('aria-checked', 'false');\n                    checkClass[i].classList.add(cls.NODE_CHECK_CLASS);\n                }\n                else {\n                    chkState[i].setAttribute('aria-checked', 'true');\n                    checkClass[i].classList.remove(cls.NODE_CHECK_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeStateChange = function (id, args, selectedNode) {\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            selectedNode.isSelected = args.action === 'check';\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.updateFieldlistData(id, args.action === 'check');\n            }\n            this.updateDataSource();\n        }\n        var parent = this.parent;\n        setTimeout(function () {\n            parent.axisFieldModule.render();\n        });\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args) {\n        var _this = this;\n        var fieldList = this.parent.pivotFieldList;\n        var selectedNode = fieldList[args.data[0].id.toString()];\n        var fieldInfo = PivotUtil.getFieldInfo(selectedNode.id.toString(), this.parent);\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        if (args.action === 'check') {\n            var eventdrop = {\n                fieldName: fieldInfo.fieldName, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: 'rows', draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedNodes.push(selectedNode.id.toString());\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: fieldInfo.fieldName,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var count = _this.selectedNodes.length;\n                    while (count--) {\n                        if (_this.selectedNodes[count] === selectedNode.id.toString()) {\n                            _this.selectedNodes.splice(count, 1);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = this.parent.pivotFieldList ? Object.keys(this.parent.pivotFieldList) : [];\n            var fieldList = {};\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var key = keys_2[_i];\n                var member = this.parent.pivotFieldList[key];\n                fieldList[key] = { id: member.id, caption: member.caption, isSelected: member.isSelected };\n            }\n            if (this.parent.isAdaptive) {\n                /* tslint:disable-next-line:max-line-length */\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns, this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    fieldList[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    fieldList[item.name].isSelected = true;\n                }\n            }\n            var list = fieldList;\n            for (var _b = 0, keys_3 = keys; _b < keys_3.length; _b++) {\n                var member = keys_3[_b];\n                var obj = list[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData ? this.parent.olapEngineModule.fieldListData : [];\n        if (this.parent.isAdaptive) {\n            /* tslint:disable-next-line:max-line-length */\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                /* tslint:disable */\n                var framedSet = void 0;\n                /* tslint:enable */\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        if (target.className.indexOf('e-selected') === -1) {\n            switch (option) {\n                case 'None':\n                    this.fieldListSort = 'None';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Ascend':\n                    this.fieldListSort = 'Ascend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Descend':\n                    this.fieldListSort = 'Descend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    break;\n            }\n            this.refreshTreeView();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (this.parent.dataType === 'olap') {\n            var measure = void 0;\n            var calcMember = void 0;\n            if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                calcMember = treeData[0];\n                measure = treeData[1];\n                treeData.splice(0, 2);\n            }\n            else {\n                measure = treeData[0];\n                treeData.splice(0, 1);\n            }\n            /* tslint:disable:typedef */\n            treeData = sortOrder === 'Ascend' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 : ((b.caption > a.caption) ? -1 : 0); })) :\n                sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 : ((b.caption < a.caption) ? -1 : 0); })) :\n                    treeData;\n            /* tslint:enable:typedef */\n            if (calcMember) {\n                treeData.splice(0, 0, calcMember, measure);\n            }\n            else {\n                treeData.splice(0, 0, measure);\n            }\n        }\n        else {\n            this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function (e) {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     * @return {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, Droppable, EventHandler, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     * @returns void\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-wrapper'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant(fieldLabels[len]) },\n                innerHTML: this.parent.localeObj.getConstant(fieldLabels[len])\n            });\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS,\n                innerHTML: localePrompt\n            });\n            var droppable = new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-wrapper'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (e.type === 'mouseleave') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    /* tslint:disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n                field.push({\n                    name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis, showRemoveIcon: true, allowDragAndDrop: true\n                });\n            }\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n                    var element = _b[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        this.parent.localeObj.getConstant('filterAxisPrompt') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _c = 0, _d = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _c < _d.length; _c++) {\n                        var element = _d[_c];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name,\n                                    'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                    'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                        this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                        this.parent.pivotGridModule !== undefined &&\n                                        this.parent.pivotGridModule.enableVirtualization)))) {\n                                    this.createSortOption(buttonElement, field[i].name, field[i]);\n                                }\n                                if (axis !== 'values' && valuePos !== i) {\n                                    this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                }\n                                if (axis === 'values') {\n                                    this.getTypeStatus(field, i, buttonElement);\n                                }\n                            }\n                            if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                var calcElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                    className: cls.ICON + ' ' + cls.CALC_EDIT\n                                });\n                                if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                                    removeClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                buttonElement.appendChild(calcElement);\n                            }\n                            var removeElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                            });\n                            if (this.parent.getModuleName() === 'pivotview') {\n                                if ((this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon)) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            else {\n                                if (field[i].showRemoveIcon) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            buttonElement.appendChild(removeElement);\n                            buttonWrapper.appendChild(dropIndicatorElement);\n                            buttonWrapper.appendChild(buttonElement);\n                            buttonWrapper.appendChild(dropLastIndicatorElement);\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultiAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    value: !parent_1.chartSettings.enableMultiAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n                        var element = _f[_e];\n                        _loop_1(element);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n                        var element = _h[_g];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n                            var currentMeasure = this.parent.chartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                                var rKey = rKeys_1[_j];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                                        var cKey = cKeys_1[_k];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split('.').join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                this.columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    this.columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this.columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                this.columnFieldDropDownList.isStringTemplate = true;\n                                this.columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    /* tslint:enable */\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n            this.createSummaryType(buttonElement, field[i].name, field[i]);\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.id;\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                this.parent.pivotFieldListModule &&\n                !this.parent.pivotFieldListModule.isDestroyed)) {\n                this.parent.pivotFieldListModule.element\n                    .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.pivotFieldListModule.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n            }\n            else {\n                if (!this.parent.isAdaptive) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n            }\n        }\n        else if (this.parent.getModuleName() === 'pivotfieldlist') {\n            if (this.parent.isAdaptive) {\n                this.parent.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n                this.parent.calculatedFieldModule.buttonCall = true;\n            }\n            else {\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                if (this.parent.calculatedFieldModule) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag'),\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        pivotButton.appendChild(dragWrapper);\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter'),\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                    }\n                }\n                if (isBlazor()) {\n                    e.bindEvents(e.dragElement);\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20, } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        /* tslint:disable-next-line:max-line-length */\n        if (args.target.classList && (args.target.classList.contains(cls.GROUP_CHART_VALUE) || args.target.classList.contains(cls.GROUP_CHART_VALUE_DROPDOWN))) {\n            args.target = this.parent.element.querySelector('.' + cls.GROUP_CHART_ROW);\n        }\n        if (args.target.classList && args.element && (args.target.classList.contains(cls.GROUP_CHART_COLUMN) || args.target.classList.contains(cls.GROUP_CHART_COLUMN_DROPDOWN))) {\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            var thisObj = this;\n            //setTimeout(() => {\n            thisObj.parent.axisFieldModule.render();\n            //});\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.id : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            /* tslint:disable-next-line:max-line-length */\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n                    this.updateDataSource(true);\n                }\n                var thisObj = this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n        }\n    };\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        pivotObj.mouseEventArgs = args;\n        pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ?\n            this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Wrapper');\n        var fieldName = args.target.parentElement.id;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n            var $this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                $this_1.parent.engineModule.fieldList[fieldName].dateMember = dateMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].formattedMembers = formattedMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].members = members;\n                $this_1.updateFilterEvents();\n            });\n        }\n        else if (pivotObj.dataSourceSettings.mode === 'Server') {\n            pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n        }\n        else {\n            this.updateFilterEvents();\n        }\n        /* tslint:enable */\n    };\n    /** @hidden */\n    PivotButton.prototype.updateFilterEvents = function () {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n        var target = pivotObj.mouseEventArgs.target;\n        this.fieldName = target.parentElement.id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this);\n            // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n            // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n            // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n            this.bindDialogEvents();\n        }\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                /* tslint:disable:max-line-length */\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n                /* tslint:enable:max-line-length */\n            },\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var _this = this;\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n            value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = dialogElement.querySelector('#' + this.parent.element.id + '_' + inputElementString);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n            remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n        }\n    };\n    PivotButton.prototype.setFocus = function () {\n        if (this.parentElement) {\n            var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (target.parentElement.getAttribute('isvalue') === 'true') {\n                    _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    if (_this.parent.dataType === 'olap') {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                else {\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                    _this.parent.axisFieldModule.render();\n                }\n                _this.updateDataSource();\n            }\n        });\n    };\n    /** @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-uid') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        /* tslint:disable:no-any */\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.id] = item.id;\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.id] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.id].isSelected = state === 'check';\n            }\n        }\n        /* tslint:enable:no-any */\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.id);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n                var item = pivotButtons_2[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n            var item = pivotButtons_3[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        /* tslint:disable */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        /* tslint:enable */\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (fields[len]) {\n                var args = {\n                    field: fields[len],\n                    axis: axis[len].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex, getInstance } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { DataSourceSettings } from '../../pivotview/model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotFieldListModel} options?\n     * @param  {string|HTMLButtonElement} element?\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.pivotChange = false;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this.isPopupView = false;\n        /** @hidden */\n        _this.enableValueSorting = false;\n        _this.request = new XMLHttpRequest();\n        _this.remoteData = [];\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        return modules;\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            /* tslint:enable */\n            apply: 'Apply',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            summarizeValuesBy: 'Summarize values by',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            yes: 'Yes',\n            no: 'No',\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.captionData = [];\n        this.wireEvent();\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n        var localeObj = this.pivotGridModule ? this.pivotGridModule.localeObj :\n            (this.staticPivotGridModule ? this.staticPivotGridModule.localeObj : this.localeObj);\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        return customProperties;\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var customProperties = {\n            pageSettings: this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined,\n            enableValueSorting: this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined,\n            enableDrillThrough: this.pivotGridModule ?\n                (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true,\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotFieldList.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else {\n                    this.engineModule.fieldList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n                    var valueSort = JSON.parse(engine.valueSortSettings);\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotGridModule && this.pivotGridModule.calculatedFieldModule && this.pivotGridModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotGridModule.calculatedFieldModule.endDialog();\n                    this.pivotGridModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n        }\n    };\n    PivotFieldList.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotFieldList.prototype.initialLoad = function () {\n        var _this = this;\n        /* tslint:disable-next-line:max-line-length */\n        this.trigger(events.load, { dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings }, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this.dataSourceSettings.dataSource;\n            }\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass);\n            }\n            _this.notify(events.initialLoad, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Binding events to the Pivot Field List element.\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    if (isBlazor()) {\n                        break;\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    break;\n                case 'dataSourceSettings':\n                    if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                        if (this.isPopupView && this.pivotGridModule &&\n                            this.pivotGridModule.showGroupingBar && this.pivotGridModule.groupingBarModule) {\n                            var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                            var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                            var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                            var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                            /* tslint:disable-next-line:max-line-length */\n                            this.pivotGridModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                            this.pivotGridModule.axisFieldModule.render();\n                        }\n                        else if (!this.isPopupView && this.staticPivotGridModule && !this.staticPivotGridModule.isDestroyed) {\n                            var pivot = this.staticPivotGridModule;\n                            if (pivot.showGroupingBar && pivot.groupingBarModule) {\n                                pivot.axisFieldModule.render();\n                            }\n                            if (pivot.showFieldList && pivot.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                pivot.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                pivot.pivotFieldListModule.axisFieldModule.render();\n                                if (pivot.pivotFieldListModule.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                                    pivot.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        this.axisFieldModule.render();\n                        if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                            this.notify(events.treeViewUpdate, {});\n                        }\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = void 0;\n                    if (isBlazor()) {\n                        pivotDataSet = _this.engineModule.data;\n                    }\n                    else {\n                        pivotDataSet = _this.dataSourceSettings.dataSource;\n                    }\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : PivotUtil.getClonedData(pivotDataSet));\n                    if (isBlazor()) {\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                        _this.setProperties({ dataSourceSettings: { dataSource: pivotDataSet } }, true);\n                    }\n                }\n                var customProperties = _this.frameCustomProperties();\n                customProperties.enableValueSorting = _this.staticPivotGridModule ?\n                    _this.staticPivotGridModule.enableValueSorting : _this.enableValueSorting;\n                if (_this.dataSourceSettings.mode !== 'Server') {\n                    _this.engineModule.renderEngine(_this.dataSourceSettings, customProperties, _this.getValueCellInfo.bind(_this));\n                }\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                _this.olapEngineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(_this.olapEngineModule.fieldListData, _this.olapEngineModule.fieldList));\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                this.dataSourceSettings.dataSource.length > 0) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                if (this.dataType === 'pivot' && this.remoteData.length > 0) {\n                    this.engineModule.data = this.remoteData;\n                    this.initEngine();\n                }\n                else {\n                    setTimeout(this.getData.bind(this), 100);\n                }\n            }\n        }\n        else if (isBlazor() && this.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Wrapper'));\n        }\n        this.renderModule.render();\n        this.fieldListSpinnerElement = this.renderMode === 'Popup' ?\n            this.dialogRenderer.fieldListDialog.element : this.element.querySelector('.e-pivotfieldlist-wrapper');\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.fieldListSpinnerElement, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement }, this.createElement);\n        }\n        var args;\n        args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: document.getElementById(this.element.id + '_Wrapper'),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        this.getFields(dataSourceSettings);\n        if (this.captionData.length > 0) {\n            var lnt = this.captionData.length;\n            var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            while (lnt--) {\n                if (this.captionData[lnt]) {\n                    for (var _i = 0, _a = this.captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        /* tslint:disable-next-line:max-line-length */\n        this.captionData = [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values, dataSourceSettings.filters];\n    };\n    /* tslint:disable */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        var _this = this;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && pivot.pivotGridModule.enableVirtualization ?\n            pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    if (!isSorted) {\n                        customProperties.enableValueSorting = pivot.staticPivotGridModule ?\n                            pivot.staticPivotGridModule.enableValueSorting : pivot.enableValueSorting;\n                    }\n                    else {\n                        pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                        customProperties.enableValueSorting = false;\n                    }\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                        var interopArguments = {};\n                        if (isSorted) {\n                            pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            if ((isBlazor())) {\n                                interopArguments = { 'key': 'onSort', 'arg': pivot.lastSortInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onSort(pivot.lastSortInfo);\n                            }\n                            pivot.lastSortInfo = {};\n                        }\n                        if (isFiltered) {\n                            if (isBlazor()) {\n                                var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                                interopArguments = {\n                                    'key': 'onFilter',\n                                    'arg': { 'lastFilterInfo': pivot.lastFilterInfo, 'filterSettings': dataArgs }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (isBlazor()) {\n                                interopArguments = { 'key': 'onAggregation', 'arg': pivot.lastAggregationInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (isBlazor()) {\n                                interopArguments = {\n                                    'key': 'onCalcOperation',\n                                    'arg': {\n                                        lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                        values: pivot.dataSourceSettings.values,\n                                        calculatedFieldSettings: pivot.dataSourceSettings.calculatedFieldSettings\n                                    }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        if (isBlazor()) {\n                            var args_1 = window['sfBlazor'].copyWithoutCircularReferences([interopArguments['arg']], interopArguments['arg']);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", interopArguments['key'], args_1).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                    if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                                        pivot.calculatedFieldModule.endDialog();\n                                        pivot.calculatedFieldModule.isRequireUpdate = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        if (isBlazor() && pageSettings) {\n                            var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'renderEngine', { 'dataSourceSettings': dataArgs, 'customProperties': customProperties }).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                }\n                            });\n                        }\n                        else if (pivot.dataSourceSettings.mode === 'Server') {\n                            if (isSorted)\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            else if (isAggChange)\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            else if (isCalcChange)\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            else if (isFiltered)\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            else\n                                control.getEngine('onDrop', null, null, null, null, null, null);\n                            pivot.lastSortInfo = {};\n                            pivot.lastAggregationInfo = {};\n                            pivot.lastCalcFieldInfo = {};\n                            pivot.lastFilterInfo = {};\n                        }\n                        else {\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        }\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed);\n                }\n                if (!(isBlazor() && pageSettings)) {\n                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                }\n            }\n            else {\n                pivot.axisFieldModule.render();\n                pivot.isRequiredUpdate = false;\n            }\n            if (!(isBlazor() && pageSettings)) {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n        });\n        //});\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            var dataSource = pivot.dataSourceSettings.dataSource;\n            if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                observedArgs.dataSourceSettings.dataSource = dataSource;\n            }\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = isBlazor() ? pivot.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = isBlazor() ? pivot.engineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = extend({}, pivot.dataSourceSettings, null, true);\n                    pivot.clonedFieldList = extend({}, pivot.pivotFieldList, null, true);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (pivot.renderMode === 'Popup' && pivot.allowDeferLayoutUpdate) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                /* tslint:disable:align */\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n                /* tslint:enable:align */\n            }\n            if (pivot.renderMode === 'Popup' && pivot.pivotGridModule &&\n                pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n    };\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n        }\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     * @method updateControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            if (isBlazor() && !this.isPopupView) {\n                PivotUtil.updateDataSourceSettings(this, PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings));\n            }\n            else {\n                this.setProperties({ dataSourceSettings: control.dataSourceSettings }, true);\n            }\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.renderMode === 'Popup') {\n                this.pivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (this.renderMode === 'Fixed' && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n                this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n            }\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     * @method refreshTargetControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            control.clonedDataSet = this.clonedDataSet;\n            if (isBlazor()) {\n                PivotUtil.updateDataSourceSettings(control, PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings));\n            }\n            else {\n                control.setProperties({ dataSourceSettings: this.dataSourceSettings }, true);\n            }\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            if (!this.pivotChange) {\n                control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            }\n            var eventArgs = {\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings),\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n            if (control.enableVirtualization && isBlazor()) {\n                control.renderPivotGrid();\n            }\n            else {\n                control.dataBind();\n            }\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n            }\n        });\n    };\n    /**\n     * Destroys the Field Table component.\n     * @method destroy\n     * @return {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.allowDeferLayoutUpdate && this.dialogRenderer &&\n            this.dialogRenderer.deferUpdateCheckBox && !this.dialogRenderer.deferUpdateCheckBox.isDestroyed) {\n            this.dialogRenderer.deferUpdateCheckBox.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        if (this.renderMode === 'Popup') {\n            if (this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.dialogRenderer.fieldListDialog.destroy();\n            }\n            if (document.getElementById(this.element.id + '_Wrapper')) {\n                remove(document.getElementById(this.element.id + '_Wrapper'));\n            }\n        }\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotFieldList.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, isBlazor } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /** Constructor for calculatedfield module */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.inputObj = null;\n        this.treeObj = null;\n        this.droppable = null;\n        this.menuObj = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.formatText = null;\n        this.formatType = null;\n        this.fieldType = null;\n        this.parentHierarchy = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n        this.confirmPopUp = null;\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedfield';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-hover.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                case 'shiftE':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node);\n                    }\n                    break;\n                case 'delete':\n                    if (node.tagName === 'LI' && !node.querySelector('.e-list-icon.e-format') && !node.querySelector('.e-list-icon').classList.contains('.e-icons') && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                        node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon'))) {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n                    }\n                    break;\n                case 'enter':\n                    var field = node.getAttribute('data-field');\n                    var type = node.getAttribute('data-type');\n                    var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n                    if (this.parent.dataType === 'pivot') {\n                        if (dropField.value === '') {\n                            if (type === CALC) {\n                                dropField.value = node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                        else if (dropField.value !== '') {\n                            if (type === CALC) {\n                                dropField.value = dropField.value + node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                    }\n                    else {\n                        if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                            this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                            field = this.parent.olapEngineModule.fieldList[field].tag;\n                        }\n                        if (dropField.value === '') {\n                            dropField.value = field;\n                        }\n                        else if (dropField.value !== '') {\n                            dropField.value = dropField.value + field;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {NodeClickEventArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = closest(e.event.target, 'li');\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED) ||\n            e.event.target.classList.contains(cls.GRID_REMOVE)) {\n            if (!this.parent.isAdaptive) {\n                this.displayMenu(node, e.node, e.event.target);\n            }\n            else if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n                if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDIT) && e.event.target.classList.contains(cls.CALC_EDIT)) {\n                    this.isEdit = true;\n                    this.currentFieldName = node.getAttribute('data-field');\n                    this.fieldText = node.getAttribute('data-caption');\n                    this.formulaText = node.getAttribute('data-formula');\n                    this.formatType = node.getAttribute('data-formatString');\n                    this.formatText = this.formatType === 'Custom' ? node.getAttribute('data-customString') : null;\n                    this.fieldType = node.getAttribute('data-membertype');\n                    this.parentHierarchy = this.fieldType === 'Dimension' ? node.getAttribute('data-hierarchy') : null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDITED) && e.event.target.classList.contains(cls.CALC_EDITED)) {\n                    this.isEdit = false;\n                    this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                    this.parentHierarchy = this.fieldType = this.formatType = null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-icons') && e.event.target.classList.contains(cls.GRID_REMOVE)) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, e.node);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {AccordionClickArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.accordionClickHandler = function (e) {\n        if (e.item && e.item.iconCss.indexOf('e-list-icon') !== -1 &&\n            closest(e.originalEvent.target, '.e-acrdn-header-icon')) {\n            var node = closest(e.originalEvent.target, '.e-acrdn-header').querySelector('.' + cls.CALCCHECK);\n            var fieldName = node.getAttribute('data-field');\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            var optionElement = closest(e.originalEvent.target, '.e-acrdn-header-icon');\n            if (optionElement.querySelector('.' + cls.CALC_EDIT) && e.originalEvent.target.classList.contains(cls.CALC_EDIT)) {\n                this.isEdit = true;\n                this.currentFieldName = this.fieldText = fieldName;\n                this.formulaText = this.parent.engineModule.fieldList[fieldName].formula;\n                this.formatText = formatObj ? formatObj.format : '';\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n            }\n            else if (optionElement.querySelector('.' + cls.CALC_EDITED) &&\n                e.originalEvent.target.classList.contains(cls.CALC_EDITED)) {\n                this.isEdit = false;\n                this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n            }\n            else if (optionElement.querySelector('.' + cls.GRID_REMOVE) &&\n                e.originalEvent.target.classList.contains(cls.GRID_REMOVE)) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionCreated = function () {\n        var allElement = this.accordion.element.querySelectorAll('.e-acrdn-item');\n        for (var i = 0; i < allElement.length; i++) {\n            if (allElement[i].querySelector('.' + cls.CALC_EDIT) || allElement[i].querySelector('.' + cls.CALC_EDITED)) {\n                var element = createElement('span', {\n                    className: 'e-list-icon ' + cls.GRID_REMOVE + ' e-icons',\n                });\n                append([element], allElement[i].querySelector('.e-acrdn-header-icon'));\n            }\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     * @param  {HTMLElement} node\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.displayMenu = function (node, treeNode, target) {\n        var edit = target ? target.classList.contains(cls.CALC_EDIT) : true;\n        var edited = target ? target.classList.contains(cls.CALC_EDITED) : true;\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'pivot' && node.querySelector('.e-list-icon.e-format') &&\n            node.querySelector('.e-list-icon.e-format').classList.contains(cls.ICON) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.GRID_REMOVE) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n            if (this.menuObj && !this.menuObj.isDestroyed) {\n                this.menuObj.destroy();\n            }\n            this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n            this.openContextMenu(node);\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDIT) &&\n            node.querySelector('.' + cls.CALC_EDIT).classList.contains('e-list-icon') && edit ||\n            (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active') && ((target && !target.classList.contains(cls.GRID_REMOVE)) || !target)))) {\n            this.isEdit = true;\n            var fieldName = node.getAttribute('data-field');\n            var caption = node.getAttribute('data-caption');\n            this.currentFieldName = fieldName;\n            this.inputObj.value = caption;\n            this.inputObj.dataBind();\n            var formatString = node.getAttribute('data-formatString');\n            var dialogElement = this.dialog.element;\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            if (this.parent.dataType === 'olap') {\n                var memberType = node.getAttribute('data-membertype');\n                var parentHierarchy = node.getAttribute('data-hierarchy');\n                var expression = node.getAttribute('data-formula');\n                var customString = node.getAttribute('data-customString');\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('caption');\n                document.querySelector('#' + this.parentID + 'droppable').value = expression;\n                memberTypeDrop.readonly = true;\n                memberTypeDrop.value = memberType;\n                memberTypeDrop.dataBind();\n                if (memberType === 'Dimension') {\n                    hierarchyDrop.value = parentHierarchy;\n                }\n                if (formatString !== '') {\n                    formatDrop.value = formatString;\n                    formatDrop.dataBind();\n                }\n                customFormat.value = customString;\n            }\n            else {\n                customFormat.value = formatString;\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clearCalculatedField'));\n                document.querySelector('#' + this.parentID + 'droppable').value = node.getAttribute('data-uid');\n            }\n            customFormat.dataBind();\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDITED) &&\n            node.querySelector('.' + cls.CALC_EDITED).classList.contains('e-list-icon') && edited ||\n            (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.inputObj.dataBind();\n            var dialogElement = this.dialog.element;\n            /* tslint:disable:max-line-length */\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            customFormat.value = '';\n            customFormat.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('fieldTitle');\n                hierarchyDrop.index = 0;\n                hierarchyDrop.dataBind();\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n            }\n            else {\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n            }\n            document.querySelector('#' + this.parentID + 'droppable').value = '';\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.GRID_REMOVE) &&\n            node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon')) && !edit && !edited) {\n            var dropField = document.querySelector('#' + this.parentID + 'droppable');\n            var field = {\n                name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n                caption: this.inputObj.value,\n                formula: dropField.value\n            };\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), field, true, treeNode);\n        }\n    };\n    CalculatedField.prototype.removeCalcField = function (node) {\n        var dataSourceSettings = this.parent.dataSourceSettings;\n        var fieldName = node.getAttribute('data-field');\n        var calcfields = dataSourceSettings.calculatedFieldSettings;\n        var engineModule;\n        if (this.parent.dataType === 'pivot') {\n            if (!this.parent.isAdaptive) {\n                this.treeObj.removeNodes([node]);\n            }\n            else {\n                var index = parseInt(node.getAttribute('id').split(this.parentID + '_')[1], 10);\n                if (typeof index === 'number') {\n                    this.accordion.removeItem(index);\n                }\n            }\n        }\n        for (var i = 0; i < calcfields.length; i++) {\n            if (calcfields[i] && calcfields[i].name === fieldName) {\n                calcfields.splice(i, 1);\n                break;\n            }\n        }\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n            var fields_1 = engineModule.fieldListData ? engineModule.fieldListData : [];\n            /* tslint:disable:no-any */\n            for (var _i = 0, _a = Object.keys(fields_1); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (fields_1[item].name === fieldName) {\n                    var index = parseInt(item, 10);\n                    if (typeof (index) === 'number') {\n                        fields_1.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            /* tslint:enable:no-any */\n            var parentID = this.treeObj.getNode(node).parentID;\n            this.treeObj.removeNodes([node]);\n            if (calcfields.length <= 0) {\n                this.treeObj.removeNodes([parentID]);\n            }\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fields) {\n            for (var i = 0; i < engineModule.fields.length; i++) {\n                if (engineModule.fields[i] === fieldName) {\n                    engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (engineModule.savedFieldList && engineModule.savedFieldList[fieldName]) {\n            delete engineModule.savedFieldList[fieldName];\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName]) {\n            delete engineModule.fieldList[fieldName];\n        }\n        var formatFields = dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatFields.length; i++) {\n            if (formatFields[i] && formatFields[i].name === fieldName) {\n                formatFields.splice(i, 1);\n                break;\n            }\n        }\n        var fields = [dataSourceSettings.values, dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.filters];\n        for (var i = 0, n = fields.length; i < n; i++) {\n            for (var j = 0, length_1 = fields[i].length; j < length_1; j++) {\n                if (fields[i][j].name === fieldName) {\n                    fields[i].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        /* tslint:enable:max-line-length */\n        if (this.isEdit && this.currentFieldName === fieldName) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n        }\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n            this.parent.updateDataSource();\n        }\n        this.removeErrorDialog();\n    };\n    /**\n     * To set position for context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.openContextMenu = function (node) {\n        var _this = this;\n        var fieldName = node.getAttribute('data-field');\n        var type = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 'string' : 'number';\n        var validSummaryTypes = (type === 'string' ? this.getValidSummaryType().slice(0, 2) : this.getValidSummaryType());\n        var eventArgs = {\n            cancel: false, fieldName: fieldName,\n            aggregateTypes: this.getMenuItems(type).slice()\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var duplicateTypes = [];\n                var items = [];\n                for (var _i = 0, _a = observedArgs.aggregateTypes; _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (validSummaryTypes.indexOf(option) > -1 && duplicateTypes.indexOf(option) === -1) {\n                        duplicateTypes.push(option);\n                        items.push({\n                            id: _this.parent.element.id + 'Calc_' + option,\n                            text: _this.parent.localeObj.getConstant(option)\n                        });\n                    }\n                }\n                _this.createMenu(items, node);\n                var pos = node.getBoundingClientRect();\n                var offset = window.scrollY || document.documentElement.scrollTop;\n                if (_this.parent.enableRtl) {\n                    _this.menuObj.open(pos.top + offset, pos.left - 100);\n                }\n                else {\n                    _this.menuObj.open(pos.top + offset, pos.left + 150);\n                }\n            }\n        });\n    };\n    /**\n     * Triggers while select menu.\n     * @param  {MenuEventArgs} menu\n     * @returns void\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split('_').pop());\n            this.curMenu.textContent = field + ' (' + menu.element.textContent + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '-1');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.createMenu = function (menuItems, node) {\n        var _this = this;\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu',\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            // beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this),\n            onClose: function () {\n                _this.treeObj.element.focus();\n                addClass([node], ['e-hover', 'e-node-focus']);\n            }\n        };\n        var contextMenu;\n        if (document.querySelector('#' + this.parentID + 'CalcContextmenu')) {\n            contextMenu = document.querySelector('#' + this.parentID + 'CalcContextmenu');\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parentID + 'CalcContextmenu'\n            });\n        }\n        this.dialog.element.appendChild(contextMenu);\n        this.menuObj = new Menu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(contextMenu);\n    };\n    /**\n     * Triggers while click OK button.\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.applyFormula = function () {\n        var _this = this;\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        var eventArgs = {\n            fieldName: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            calculatedField: this.getCalculatedFieldInfo(),\n            calculatedFieldSettings: PivotUtil.cloneCalculatedFieldSettings(this.parent.dataSourceSettings.calculatedFieldSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.calculatedFieldCreate, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var calcInfo = observedArgs.calculatedField;\n                if (!_this.isEdit) {\n                    if (currentObj.parent.dataType === 'olap') {\n                        var field = calcInfo.name;\n                        if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                            currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                            isExist = true;\n                        }\n                    }\n                    else {\n                        for (var _i = 0, _a = Object.keys(currentObj.parent.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            if (calcInfo.name && calcInfo.name === key &&\n                                currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                                isExist = true;\n                            }\n                        }\n                    }\n                }\n                if (isExist) {\n                    currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n                    return;\n                }\n                _this.existingReport = extend({}, _this.parent.dataSourceSettings, null, true);\n                var report = _this.parent.dataSourceSettings;\n                if (!isNullOrUndefined(calcInfo.name) && calcInfo.name !== '' &&\n                    !isNullOrUndefined(calcInfo.caption) && calcInfo.caption !== '' && calcInfo.formula && calcInfo.formula !== '') {\n                    var field = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        field = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula,\n                            formatString: calcInfo.formatString\n                        };\n                        if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                            field.hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                        }\n                        _this.isFieldExist = false;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name) {\n                                    _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name && _this.isEdit) {\n                                    report.calculatedFieldSettings[i].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                                    _this.parent.olapEngineModule.fieldList[field.name].caption = calcInfo.caption;\n                                    report.calculatedFieldSettings[i].formatString = field.formatString;\n                                    report.calculatedFieldSettings[i].formula = field.formula;\n                                    field = report.calculatedFieldSettings[i];\n                                    _this.isFieldExist = true;\n                                    break;\n                                }\n                            }\n                            var axisFields = [report.rows, report.columns, report.values, report.filters];\n                            var isFieldExist = false;\n                            for (var _b = 0, axisFields_1 = axisFields; _b < axisFields_1.length; _b++) {\n                                var fields = axisFields_1[_b];\n                                for (var _c = 0, fields_2 = fields; _c < fields_2.length; _c++) {\n                                    var item = fields_2[_c];\n                                    if (item.isCalculatedField && field.name !== null &&\n                                        item.name === field.name && _this.isEdit) {\n                                        item.caption = calcInfo.caption;\n                                        _this.isFieldExist = true;\n                                        isFieldExist = true;\n                                        break;\n                                    }\n                                }\n                                if (isFieldExist) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (!_this.isFieldExist) {\n                            report.calculatedFieldSettings.push(field);\n                        }\n                        _this.parent.lastCalcFieldInfo = field;\n                    }\n                    else {\n                        field = {\n                            name: calcInfo.name,\n                            caption: calcInfo.caption,\n                            type: 'CalculatedField'\n                        };\n                        var cField = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula\n                        };\n                        if (!isNullOrUndefined(calcInfo.formatString)) {\n                            cField.formatString = calcInfo.formatString;\n                        }\n                        _this.isFieldExist = true;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                            return;\n                                        }\n                                    }\n                                    _this.isFieldExist = false;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && field.name !== null &&\n                                    report.values[i].name === field.name && _this.isEdit) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            report.values[i].caption = calcInfo.caption;\n                                            _this.currentFormula = report.calculatedFieldSettings[j].formula;\n                                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                                            _this.parent.engineModule.fieldList[field.name].caption = calcInfo.caption;\n                                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                            _this.isFieldExist = false;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (_this.isFieldExist) {\n                            report.values.push(field);\n                            report.calculatedFieldSettings.push(cField);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                        }\n                        _this.parent.lastCalcFieldInfo = cField;\n                    }\n                    _this.addFormula(report, field.name);\n                }\n                else {\n                    if (isNullOrUndefined(calcInfo.name) || calcInfo.name === '' ||\n                        isNullOrUndefined(calcInfo.caption) || calcInfo.caption === '') {\n                        _this.inputObj.value = '';\n                        addClass([document.getElementById(_this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                        document.getElementById(_this.parentID + 'ddlelement').focus();\n                    }\n                    else {\n                        _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormula'));\n                    }\n                }\n            }\n            else {\n                _this.endDialog();\n                _this.parent.lastCalcFieldInfo = {};\n                _this.isFormula = false;\n            }\n        });\n    };\n    /* tslint:disable:max-line-length */\n    CalculatedField.prototype.getCalculatedFieldInfo = function () {\n        var field;\n        var dropField = document.querySelector('#' + this.parentID + 'droppable');\n        var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.adaptiveElement.element : this.dialog.element;\n        var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n        field = {\n            name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            caption: this.inputObj.value,\n            formula: dropField.value\n        };\n        if (this.parent.dataType === 'olap') {\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            field.formatString = (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value);\n            if (memberTypeDrop.value === 'Dimension') {\n                field.hierarchyUniqueName = hierarchyDrop.value;\n            }\n        }\n        else {\n            field.formatString = customFormat.value;\n        }\n        return field;\n    };\n    /* tslint:enable:max-line-length */\n    CalculatedField.prototype.updateFormatSettings = function (report, fieldName, formatString) {\n        var newFormat = { name: fieldName, format: formatString, useGrouping: true };\n        var isFormatExist = false;\n        for (var i = 0; i < report.formatSettings.length; i++) {\n            if (report.formatSettings[i].name === fieldName) {\n                if (formatString === 'undefined' || formatString === undefined || formatString === '') {\n                    report.formatSettings.splice(i, 1);\n                    isFormatExist = true;\n                    break;\n                }\n                else {\n                    var formatObj = report.formatSettings[i].properties ?\n                        report.formatSettings[i].properties : report.formatSettings[i];\n                    formatObj.format = formatString;\n                    report.formatSettings.splice(i, 1, formatObj);\n                    isFormatExist = true;\n                    break;\n                }\n            }\n        }\n        if (!isFormatExist && formatString !== '') {\n            report.formatSettings.push(newFormat);\n        }\n    };\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(report));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: report }, true);\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            this.parent.updateDataSource(false);\n            var pivot = this.parent.getModuleName() === 'pivotfieldlist' ?\n                this.parent.pivotGridModule : this.parent;\n            if (!(isBlazor() && pivot && pivot.enableVirtualization) && (pivot && pivot.dataSourceSettings.mode !== 'Server')) {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode === 'Fixed' && this.parent.allowDeferLayoutUpdate) {\n                this.parent.pivotChange = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        if (this.dialog) {\n            this.dialog.close();\n        }\n        else {\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n            /* tslint:disable:max-line-length */\n            var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.parentElement : this.dialog.element;\n            this.parent.dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable').value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'Custom_Format_Element').value = '';\n            if (this.parent.dataType === 'olap') {\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n                hierarchyDrop.index = 0;\n                hierarchyDrop.enabled = false;\n                hierarchyDrop.dataBind();\n                customFormat.enabled = false;\n                customFormat.dataBind();\n            }\n            /* tslint:enable:max-line-length */\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        if (isBlazor()) {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.existingReport));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        }\n        if (this.isEdit) {\n            var calcFields = this.parent.dataSourceSettings.calculatedFieldSettings;\n            for (var i = 0; calcFields && i < calcFields.length; i++) {\n                if (calcFields[i].name === this.field) {\n                    calcFields[i].formula = this.currentFormula;\n                    break;\n                }\n            }\n        }\n        else if (this.parent.engineModule.fields) {\n            for (var i = 0; i < this.parent.engineModule.fields.length; i++) {\n                if (this.parent.engineModule.fields[i] === this.field) {\n                    this.parent.engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     * @param  {PivotGrid|PivotFieldList} parent\n     * @returns Object\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            fields = PivotUtil.getClonedData(parent.olapEngineModule.fieldListData ? parent.olapEngineModule.fieldListData : []);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-calcMemberGroupCDB') > -1)) {\n                    item.expanded = this.isEdit;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = (parent.engineModule.fieldList ? Object.keys(parent.engineModule.fieldList) : []); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var type = null;\n                var typeVal = null;\n                if ((parent.engineModule.fieldList[key].type !== 'number' || parent.engineModule.fieldList[key].type === 'include' ||\n                    parent.engineModule.fieldList[key].type === 'exclude') &&\n                    (parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                    typeVal = COUNT;\n                }\n                else {\n                    typeVal = parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                        (parent.engineModule.fieldList[key].aggregateType) : SUM;\n                }\n                type = this.parent.localeObj.getConstant(typeVal);\n                fields.push({\n                    index: parent.engineModule.fieldList[key].index,\n                    name: parent.engineModule.fieldList[key].caption + ' (' + type + ')',\n                    type: typeVal,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: parent.engineModule.fieldList[key].formula,\n                    field: key,\n                    caption: parent.engineModule.fieldList[key].caption ? parent.engineModule.fieldList[key].caption : key\n                });\n            }\n        }\n        return fields;\n    };\n    /**\n     * Triggers before menu opens.\n     * @param  {BeforeOpenCloseMenuEventArgs} args\n     * @returns void\n     */\n    /**\n     * Trigger while drop node in formula field.\n     * @param  {DragAndDropEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     * @returns void\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (document.querySelector('#' + this.parentID + 'calculateddialog') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'calculateddialog'));\n            while (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n                remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n            }\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        }));\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn',\n                    content: this.parent.localeObj.getConstant('clear'),\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        this.dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (_this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement')) {\n                    _this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement').focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: false,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'calculateddialog');\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        this.dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function (args) {\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('createCalculatedField');\n        this.dialog.element.querySelector('.e-dlg-header').\n            setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function (args) {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.treeObj.destroy();\n        this.dialog.destroy();\n        this.newFields = null;\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n        }\n        remove(document.getElementById(this.parentID + 'calculateddialog'));\n        if (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n            remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n        }\n        var timeOut = ((this.parent.getModuleName() === 'pivotview') ||\n            ((this.parent.getModuleName() === 'pivotfieldlist') &&\n                this.parent.renderMode === 'Fixed')) ? 0 : 500;\n        if (this.buttonCall) {\n            this.buttonCall = false;\n            setTimeout(this.setFocus.bind(this), timeOut);\n        }\n    };\n    CalculatedField.prototype.setFocus = function () {\n        var parentElement;\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.element) {\n            parentElement = this.parent.element;\n        }\n        else if (document.getElementById(this.parent.element.id + '_Wrapper')) {\n            parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        }\n        if (parentElement) {\n            var pivotButtons = [].slice.call(parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.currentFieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * To render dialog elements.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var olapCalcDiv = createElement('div', { id: this.parentID + 'Olap_Calc_Div', className: 'e-olap-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn', innerHTML: this.parent.localeObj.getConstant('add'),\n                className: cls.CALCADDBTN, attrs: { 'type': 'button' }\n            });\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn', innerHTML: this.parent.localeObj.getConstant('cancel'),\n                className: cls.CALCCANCELBTN, attrs: { 'type': 'button' }\n            });\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle',\n                    innerHTML: this.parent.localeObj.getConstant('fieldTitle')\n                });\n                olapCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'outerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(inputDiv) : outerDiv.appendChild(inputDiv));\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                        this.parent.localeObj.getConstant('formulaField'))\n                });\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-wrapper' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        width: 220\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            treeOuterDiv.appendChild(createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW }));\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapFieldTreeDiv.appendChild(wrapDiv) : outerDiv.appendChild(wrapDiv));\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                        this.parent.localeObj.getConstant('formula'))\n                });\n                (this.parent.dataType === 'olap' ? olapCalcDiv.appendChild(formulaTitle) : outerDiv.appendChild(formulaTitle));\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA,\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(dropDiv) : outerDiv.appendChild(dropDiv));\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn', innerHTML: this.parent.localeObj.getConstant('apply'),\n                    className: cls.CALCOKBTN, attrs: { 'type': 'button' }\n                });\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('memberType')\n                    });\n                    olapCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(memberTypeDrop) : olapCalcDiv.appendChild(memberTypeDrop));\n                if (!this.parent.isAdaptive) {\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('selectedHierarchy')\n                    });\n                    olapCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', { id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(hierarchyDrop) : olapCalcDiv.appendChild(hierarchyDrop));\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    olapCalcDiv.appendChild(formatTitle);\n                }\n                var formatDrop = createElement('div', { id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(formatDrop) : olapCalcDiv.appendChild(formatDrop));\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.OLAP_CALC_CUSTOM_FORMAT_INPUTDIV });\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                olapCalcDiv.appendChild(customFormatDiv);\n                (this.parent.isAdaptive ? outerDiv.appendChild(customFormatDiv) : olapCalcDiv.appendChild(customFormatDiv));\n                if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                    var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                    outerDiv.appendChild(okBtn);\n                }\n                else {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                    outerDiv.appendChild(olapCalcDiv);\n                }\n            }\n            else {\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.CALC_CUSTOM_FORMAT_INPUTDIV });\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    customFormatDiv.appendChild(formatTitle);\n                }\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                (this.parent.isAdaptive ? outerDiv.insertBefore(customFormatDiv, outerDiv.querySelector('#' + this.parentID + 'buttonDiv')) : outerDiv.appendChild(customFormatDiv));\n            }\n        }\n        return outerDiv;\n    };\n    /**\n     * To create calculated field adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function (isEdit) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement;\n        if (isEdit) {\n            if (dialogElement.element.querySelector('#' + this.parentID + 'droppable')) {\n                this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value;\n                this.fieldText = this.inputObj.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n                var memberTypeDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                this.fieldType = memberTypeDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n                var hierarchyDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                this.parentHierarchy = this.fieldType === 'Dimension' ? hierarchyDrop.value : null;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n                var formatDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                this.formatType = formatDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n                var customFormat = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                this.formatText = this.parent.dataType === 'olap' ? this.formatType === 'Custom' ? customFormat.value : null : customFormat.value;\n            }\n        }\n        else {\n            this.currentFieldName = this.formulaText = this.fieldText = this.formatText = null;\n            this.fieldType = this.formatType = this.parentHierarchy = null;\n        }\n        this.renderMobileLayout(dialogElement);\n    };\n    /**\n     * To update calculated field info in adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.updateAdaptiveCalculatedField = function (isEdit, fieldName) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement.element;\n        this.isEdit = isEdit;\n        var calcInfo = (isEdit ? (this.parent.dataType === 'pivot' ?\n            this.parent.engineModule.fieldList[fieldName] : this.parent.olapEngineModule.fieldList[fieldName]) :\n            {\n                id: null, caption: null, formula: null, fieldType: 'Measure',\n                formatString: (this.parent.dataType === 'pivot' ? null : 'Standard'), parentHierarchy: null\n            });\n        this.currentFieldName = calcInfo.id;\n        if (dialogElement.querySelector('#' + this.parentID + 'droppable')) {\n            this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value = calcInfo.formula;\n            this.fieldText = this.inputObj.value = calcInfo.caption;\n            this.inputObj.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            this.fieldType = memberTypeDrop.value = calcInfo.fieldType;\n            memberTypeDrop.readonly = isEdit ? true : false;\n            memberTypeDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            if (this.fieldType === 'Dimension') {\n                this.parentHierarchy = hierarchyDrop.value = calcInfo.parentHierarchy;\n            }\n            else {\n                this.parentHierarchy = null;\n                hierarchyDrop.index = 0;\n            }\n            hierarchyDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n            var formatStringData = ['Standard', 'Currency', 'Percent'];\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            this.formatType = formatDrop.value = (formatStringData.indexOf(calcInfo.formatString) > -1 ? calcInfo.formatString : 'Custom');\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            if (this.parent.dataType === 'pivot') {\n                this.formatText = customFormat.value = formatObj ? formatObj.format : null;\n            }\n            else {\n                this.formatText = customFormat.value = (this.formatType === 'Custom' ? calcInfo.formatString : null);\n            }\n            customFormat.dataBind();\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createOlapDropElements = function () {\n        var _this = this;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : this.dialog.element);\n        var mData = [];\n        var fData = [];\n        var fieldData = [];\n        var memberTypeData = ['Measure', 'Dimension'];\n        var formatStringData = ['Standard', 'Currency', 'Percent', 'Custom'];\n        for (var _i = 0, memberTypeData_1 = memberTypeData; _i < memberTypeData_1.length; _i++) {\n            var type = memberTypeData_1[_i];\n            mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n        }\n        for (var _a = 0, formatStringData_1 = formatStringData; _a < formatStringData_1.length; _a++) {\n            var format = formatStringData_1[_a];\n            fData.push({ value: format, text: this.parent.localeObj.getConstant(format) });\n        }\n        var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        for (var _b = 0, _c = fields; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (item.spriteCssClass &&\n                (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                    item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                fieldData.push({ value: item.id, text: item.caption });\n            }\n        }\n        var memberTypeObj = new DropDownList({\n            dataSource: mData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.fieldType !== null ? this.fieldType : mData[0].value,\n            readonly: this.isEdit,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                hierarchyListObj.enabled = args.value === 'Dimension' ? true : false;\n                _this.fieldType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                hierarchyListObj.dataBind();\n            }\n        });\n        memberTypeObj.isStringTemplate = true;\n        memberTypeObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'));\n        var hierarchyListObj = new DropDownList({\n            dataSource: fieldData, enableRtl: this.parent.enableRtl,\n            allowFiltering: true,\n            enabled: memberTypeObj.value === 'Dimension' ? true : false,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n            fields: { value: 'value', text: 'text' },\n            value: this.parentHierarchy !== null && memberTypeObj.value === 'Dimension' ?\n                this.parentHierarchy : fieldData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                _this.parentHierarchy = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        hierarchyListObj.isStringTemplate = true;\n        hierarchyListObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'));\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.formatType !== null ? this.formatType : fData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                _this.formatType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Format_Div'));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            value: this.formatText !== null && formatStringObj.value === 'Custom' ? this.formatText : null,\n            enabled: formatStringObj.value === 'Custom' ? true : false,\n            change: function (args) {\n                _this.formatText = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                /* tslint:disable-next-line:max-line-length */\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None'\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                keyPress: function (args) {\n                    if (args.event.keyCode === 39) {\n                        args.cancel = true;\n                    }\n                },\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parentID + 'tree');\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-dimensionCDB-icon,.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            dragItem.style.zIndex = (this.dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     * @param  {DrawNodeEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatStringData = ['Standard', 'Currency', 'Percent'];\n                var formatString = void 0;\n                formatString = (field.formatString ? formatStringData.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : '');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customString', (formatString === 'Custom' ? field.formatString : ''));\n                var removeElement = createElement('span', {\n                    className: cls.GRID_REMOVE + ' e-icons e-list-icon'\n                });\n                liTextElement.classList.add('e-calcfieldmember');\n                if (this.parent.isAdaptive) {\n                    var editElement = createElement('span', {\n                        className: 'e-list-edit-icon' + (this.isEdit && this.currentFieldName === field.id ?\n                            ' e-edited ' : ' e-edit ') + cls.ICON\n                    });\n                    var editWrapper = createElement('div', { className: 'e-list-header-icon' });\n                    editWrapper.appendChild(editElement);\n                    editWrapper.appendChild(removeElement);\n                    liTextElement.appendChild(editWrapper);\n                }\n                else {\n                    liTextElement.appendChild(removeElement);\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var formatObj = PivotUtil.getFieldByName(field, this.parent.dataSourceSettings.formatSettings);\n            args.node.setAttribute('data-formatString', formatObj ? formatObj.format : '');\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            var spaceElement = createElement('div', {\n                className: ' e-iconspace'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            /* tslint:disable-next-line:max-line-length */\n            append([spaceElement, args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.getMenuItems(this.parent.engineModule.fieldList[field].type).length <= 0) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('remove'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.GRID_REMOVE);\n                addClass([args.node.querySelector('.' + 'e-iconspace')], [cls.CALC_EDIT, cls.ICON, 'e-list-icon']);\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('aria-disabled', 'false');\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('tabindex', '-1');\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n                removeClass([args.node.querySelector('.e-iconspace')], 'e-iconspace');\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     * @param  {string} key\n     * @returns HTMLElement\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n        var type = this.getMenuItems(this.parent.engineModule.fieldList[key].type);\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + key + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key, 'data-value': type[i] },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    CalculatedField.prototype.getMenuItems = function (fieldType, summaryType) {\n        var menuItems = !isNullOrUndefined(summaryType) ? summaryType : this.parent.aggregateTypes;\n        var type = [];\n        var menuTypes = this.getValidSummaryType();\n        for (var i = 0; i < menuItems.length; i++) {\n            if ((menuTypes.indexOf(menuItems[i]) > -1) && (type.indexOf(menuItems[i]) < 0)) {\n                if (((menuItems[i] === COUNT || menuItems[i] === DISTINCTCOUNT) && fieldType !== 'number')\n                    || (fieldType === 'number')) {\n                    type.push(menuItems[i]);\n                }\n            }\n        }\n        return type;\n    };\n    CalculatedField.prototype.getValidSummaryType = function () {\n        return [COUNT, DISTINCTCOUNT, SUM, AVG,\n            MIN, MAX, PRODUCT, STDEV, STDEVP,\n            VAR, VARP];\n    };\n    /**\n     * To get Accordion Data.\n     * @param  {PivotView | PivotFieldList} parent\n     * @returns AccordionItemModel\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var data = [];\n        var keys = Object.keys(parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            data.push({\n                header: '<input id=' + this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=' + this.parent.engineModule.fieldList[key].caption + ' data-type=' +\n                    this.parent.engineModule.fieldList[key].type + '/>',\n                content: (this.parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    (this.getMenuItems(this.parent.engineModule.fieldList[key].type).length < 1)) ? '' :\n                    this.createTypeContainer(key).outerHTML,\n                iconCss: this.parent.engineModule.fieldList[key].aggregateType === CALC ? 'e-list-icon' + ' ' +\n                    (this.isEdit && this.currentFieldName === key ? 'e-edited' : 'e-edit') : ''\n            });\n        }\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     * @param  {Tab} tabObj\n     * @returns void\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        var _this = this;\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        if (this.parent.dataType === 'olap' && this.parent.isAdaptive && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null) {\n            this.createOlapDropElements();\n        }\n        var cancelBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo('#' + this.parentID + 'cancelBtn');\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({ cssClass: cls.FLAT + ' ' + cls.OUTLINE_CLASS, isPrimary: true });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo('#' + this.parentID + 'okBtn');\n            this.inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName'),\n                change: function (args) {\n                    _this.fieldText = args.value;\n                    _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                }\n            });\n            this.inputObj.isStringTemplate = true;\n            this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n            if (this.parent.dataType === 'pivot') {\n                var formatInputObj = new MaskedTextBox({\n                    placeholder: this.parent.localeObj.getConstant('numberFormatString'),\n                    change: function (args) {\n                        _this.formatText = args.value;\n                        _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                    }\n                });\n                formatInputObj.isStringTemplate = true;\n                formatInputObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n                if (this.formatText !== null && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT) !== null) {\n                    this.parent.\n                        /* tslint:disable-next-line:max-line-length */\n                        dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT).value = this.formatText;\n                    formatInputObj.value = this.formatText;\n                }\n            }\n            if (this.formulaText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable') !== null) {\n                var drop = this.parent.\n                    dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable');\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                this.inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo('#' + this.parentID + 'addBtn');\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    /* tslint:disable-next-line:max-line-length */\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    nodeClicked: this.fieldClickHandler.bind(this),\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this),\n                    nodeSelected: function (args) {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo('#' + this.parentID + 'accordDiv');\n            }\n            else {\n                this.accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    expanding: this.accordionExpand.bind(this),\n                    clicked: this.accordionClickHandler.bind(this),\n                    created: this.accordionCreated.bind(this)\n                });\n                this.accordion.isStringTemplate = true;\n                this.accordion.appendTo('#' + this.parentID + 'accordDiv');\n                this.updateType();\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            var keys = Object.keys(this.parent.engineModule.fieldList);\n            for (var index = 0, i = keys.length; index < i; index++) {\n                var key = keys[index];\n                var type = this.parent.engineModule.fieldList[key].type !== 'number' ? [COUNT, DISTINCTCOUNT] :\n                    [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton = void 0;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i_1 = 0; i_1 < type.length; i_1++) {\n                        radiobutton = new RadioButton({\n                            label: this.parent.localeObj.getConstant(type[i_1]),\n                            name: AGRTYPE + key,\n                            checked: args.element.querySelector('[data-type').getAttribute('data-type') === type[i_1],\n                            change: this.onChange.bind(this),\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo('#' + this.parentID + 'radio' + key + type[i_1]);\n                    }\n                }\n            }\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.parentElement.querySelector('.e-label')\n            .innerText;\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', args.event.target.getAttribute('data-value'));\n    };\n    CalculatedField.prototype.updateType = function () {\n        var keys = Object.keys(this.parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            var type = null;\n            if ((this.parent.engineModule.fieldList[key].type !== 'number' ||\n                this.parent.engineModule.fieldList[key].type === 'include' ||\n                this.parent.engineModule.fieldList[key].type === 'exclude') &&\n                (this.parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                type = COUNT;\n            }\n            else {\n                type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                    this.parent.engineModule.fieldList[key].aggregateType : SUM;\n            }\n            var checkbox = new CheckBox({\n                label: this.parent.engineModule.fieldList[key].caption + ' (' + this.parent.localeObj.getConstant(type) + ')'\n            });\n            checkbox.isStringTemplate = true;\n            checkbox.appendTo('#' + this.parentID + '_' + index);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-field', key);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-type', type);\n        }\n    };\n    /**\n     * Trigger while click cancel button.\n     * @returns void\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     * @returns void\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function (args) {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout(args && args.edit !== undefined ? args.edit : true);\n            this.isEdit = (args && args.edit !== undefined ? args.edit : this.isEdit);\n        }\n        else if (!this.parent.isAdaptive) {\n            this.isEdit = (args && args.edit !== undefined ? args.edit : false);\n            this.renderDialogLayout();\n            if (args && args.edit) {\n                var target = this.treeObj.element.querySelector('li[data-field=\"' + args.fieldName + '\"]');\n                if (target) {\n                    addClass([target], ['e-active', 'e-node-focus']);\n                    target.setAttribute('aria-selected', 'true');\n                    target.id = this.treeObj.element.id + '_active';\n                    if (this.parent.dataType === 'pivot') {\n                        /* tslint:disable-next-line */\n                        var e = { event: { target: target.querySelector('.e-list-icon.e-edit.e-icons') } };\n                        this.fieldClickHandler(e);\n                    }\n                    else {\n                        this.displayMenu(target);\n                    }\n                }\n            }\n            this.dialog.element.style.top = parseInt(this.dialog.element.style.top, 10) < 0 ? '0px' : this.dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        this.dialog.content = this.renderDialogElements();\n        this.dialog.refresh();\n        this.inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName')\n        });\n        this.inputObj.isStringTemplate = true;\n        this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n        if (this.parent.dataType === 'pivot') {\n            var customerFormatObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('numberFormatString')\n            });\n            customerFormatObj.isStringTemplate = true;\n            customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n        }\n        if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        this.createTreeView();\n        this.droppable = new Droppable(this.dialog.element.querySelector('#' + this.parentID + 'droppable'));\n        this.keyboardEvents = new KeyboardEvents(this.parent.calculatedFieldModule.dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter', shiftE: 'shift+E', delete: 'delete' },\n            eventName: 'keydown'\n        });\n    };\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createConfirmDialog\n     * @return {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createConfirmDialog = function (title, description, calcInfo, isRemove, node) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        /* tslint:disable:max-line-length */\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: isRemove ? this.removeCalcField.bind(this, node) : this.replaceFormula.bind(this, calcInfo),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + ' ' + cls.FLAT_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('yes') : this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.removeErrorDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('no') : this.parent.localeObj.getConstant('cancel'), isPrimary: true\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this),\n        });\n        /* tslint:enable:max-line-length */\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        // this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    CalculatedField.prototype.replaceFormula = function (calcInfo) {\n        var report = this.parent.dataSourceSettings;\n        if (this.parent.dataType === 'olap') {\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                    if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                    }\n                    report.calculatedFieldSettings[j].formatString = calcInfo.formatString;\n                    report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === calcInfo.name) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                            this.updateFormatSettings(report, calcInfo.name, calcInfo.formatString);\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, calcInfo.name);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        if (document.getElementById(this.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parentID + '_ErrorDialog').parentElement);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /** Constructor for Field List module */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldlist';\n    };\n    FieldList.prototype.initiateModule = function () {\n        this.element = createElement('div', {\n            id: this.parent.element.id + '_PivotFieldList',\n            styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                ';display:none'\n        });\n        this.parent.element.parentElement.setAttribute('id', 'ContainerWrapper');\n        this.parent.element.parentElement.appendChild(this.element);\n        this.parent.element.parentElement.appendChild(this.parent.element);\n        this.parent.pivotFieldListModule = new PivotFieldList({\n            dataSourceSettings: {\n                providerType: this.parent.dataSourceSettings.providerType,\n                rows: [],\n                columns: [],\n                values: [],\n                filters: []\n            },\n            spinnerTemplate: this.parent.spinnerTemplate,\n            allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n            renderMode: 'Popup',\n            allowCalculatedField: this.parent.allowCalculatedField,\n            showValuesButton: this.parent.showValuesButton,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            target: this.parent.element.parentElement,\n            aggregateTypes: this.parent.aggregateTypes,\n            maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n            aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n        });\n        this.parent.pivotFieldListModule.isPopupView = true;\n        this.parent.pivotFieldListModule.pivotGridModule = this.parent;\n        this.parent.pivotFieldListModule.appendTo('#' + this.element.id);\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.element) {\n            this.element.style.display = 'block';\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else if (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)))) {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth && (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS))))) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateModule,\n            update: this.updateControl\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.update, this);\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.update);\n    };\n    /**\n     * To destroy the Field List\n     * @return {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule) {\n            this.parent.pivotFieldListModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import { PivotButton } from '../actions/pivot-button';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, prepend } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the grouping bar pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        /* tslint:disable:no-any */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        this.createPivotButtons();\n        var pivotButtons = [];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!element.classList.contains(cls.GROUP_CHART_ROW)) {\n                pivotButtons = pivotButtons.concat([].slice.call(element.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n            }\n        }\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            var indentDiv = createElement('span', {\n                className: 'e-indent-div',\n                styles: 'width:' + j * indentWidth + 'px'\n            });\n            prepend([indentDiv], pivotButtons[j]);\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.'\n            + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if ((this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) ||\n                (this.parent.dataSourceSettings.columns.length > 0 ? !element.classList.contains(cls.GROUP_CHART_COLUMN) : true)) {\n                element.innerHTML = '';\n            }\n        }\n        /* tslint:enable:no-any */\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        var count = axis.length;\n        for (var i = 0, lnt = fields.length; i < lnt; i++) {\n            if (fields[i]) {\n                var args = {\n                    field: fields[i],\n                    axis: axis[i].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingbar';\n    };\n    /** @hidden */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(this.leftAxisPanel);\n        this.groupingTable.appendChild(this.rightAxisPanel);\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    /* tslint:disable-next-line:no-any */\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                /* tslint:disable:no-any */\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                /* tslint:enable:no-any */\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                if (columns[cCnt].width != \"auto\") {\n                    columns[cCnt].width = width;\n                }\n                else {\n                    columns[cCnt].minWidth = width;\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.fieldsDropDown = [];\n        this.conditionsDropDown = [];\n        this.fontNameDropDown = [];\n        this.fontSizeDropDown = [];\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalformatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n        }));\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON,\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition'),\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_APPLY_BUTTON,\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_CANCEL_BUTTON,\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.isAdaptive) {\n            this.dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, header: this.parent.localeObj.getConstant('conditionalFormating'), target: document.body\n            });\n        }\n        else {\n            this.dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, isModal: false, closeOnEscape: true, enableRtl: this.parent.enableRtl,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormating'), target: this.parent.element\n            });\n        }\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'conditionalformatting');\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function (args) {\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).\n            setAttribute('title', this.parent.localeObj.getConstant('conditionalFormating'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var _this = this;\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            _this.destroyColorPickers();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            this.parent.renderPivotGrid();\n            this.dialog.close();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        this.dialog.close();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ||\n                document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value === '') {\n                document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ?\n                    document.querySelector('#' + this.parentID + 'conditionvalue1' + i).focus() :\n                    document.querySelector('#' + this.parentID + 'conditionvalue2' + i).focus();\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value);\n            this.newFormat[i].value2 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                className: cls.EMPTY_FORMAT,\n                innerHTML: this.parent.localeObj.getConstant('emptyFormat')\n            });\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        this.dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { type: 'button', 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.FORMAT_INNER });\n            var table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            var tRow = createElement('tr');\n            var td = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('value')\n            });\n            td.appendChild(valuelabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            measureDropdown.appendChild(measureInput);\n            td.appendChild(measureDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            td.appendChild(conditionDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var style = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ? 'display:none; width:10px' : '';\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: this.parent.isAdaptive ? style === '' ? 'width: 35%' : 'width: 100%' : style === '' ? 'width: 45px' :\n                    'width: 120px',\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE1\n            });\n            td.appendChild(value1);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i, className: cls.FORMAT_VALUE_SPAN,\n                innerHTML: '&', styles: style\n            });\n            td.appendChild(valuespan);\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: (this.parent.isAdaptive && style === '') ? 'width: 35%' : style === '' ? 'width: 45px' : style,\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE2\n            });\n            td.appendChild(value2);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            if (this.parent.isAdaptive) {\n                innerDiv.appendChild(table);\n                table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            }\n            tRow = createElement('tr');\n            td = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('formatLabel')\n            });\n            td.appendChild(formatlabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            td.appendChild(fontNameDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            td.appendChild(fontSizeDropdown);\n            tRow.appendChild(td);\n            if (this.parent.isAdaptive) {\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n            }\n            td = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_FONT_COLOR\n            });\n            td.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_BACK_COLOR\n            });\n            td.appendChild(colorPicker2);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var valuePreview = createElement('div', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                innerHTML: '123.45',\n            });\n            td.appendChild(valuePreview);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            innerDiv.appendChild(table);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            fields.push({\n                index: i_1 + 1,\n                name: this.parent.dataSourceSettings.values[i_1].caption || this.parent.dataSourceSettings.values[i_1].name,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        this.fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.measureChange.bind(this, i)\n        });\n        this.fieldsDropDown[i].isStringTemplate = true;\n        this.fieldsDropDown[i].appendTo('#' + this.parentID + 'measureinput' + i);\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        this.conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.conditionChange.bind(this, i)\n        });\n        this.conditionsDropDown[i].isStringTemplate = true;\n        this.conditionsDropDown[i].appendTo('#' + this.parentID + 'conditioninput' + i);\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        this.fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupWidth: '150px', popupHeight: '200px',\n            change: this.fontNameChange.bind(this, i)\n        });\n        this.fontNameDropDown[i].isStringTemplate = true;\n        this.fontNameDropDown[i].appendTo('#' + this.parentID + 'fontnameinput' + i);\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        this.fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px',\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            change: this.fontSizeChange.bind(this, i)\n        });\n        this.fontSizeDropDown[i].isStringTemplate = true;\n        this.fontSizeDropDown[i].appendTo('#' + this.parentID + 'fontsizeinput' + i);\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.width =\n                this.parent.isAdaptive ? '10%' : '10px';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n        }\n        else {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '100%' : '120px';\n        }\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + ' ' + cls.FORMAT_FONT_COLOR_PICKER,\n            value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i)\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo('#' + this.parentID + 'fontcolor' + i);\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor = color;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = format.style.fontFamily;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i)\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo('#' + this.parentID + 'backgroundcolor' + i);\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo('#' + this.parentID + 'removeButton' + i);\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.destroyColorPickers();\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     * @returns boolean\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     * @returns { r: number, g: number, b: number } | null\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     * @returns string\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        else if (colour.search('rgba') === 0) {\n            var value = colour.substr(5).split(')')[0].split(',');\n            var rgb = '';\n            var a = '';\n            for (var i = 0; i < value.length - 1; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            a = (Math.round(+value[3] * 255)).toString(16);\n            return '#' + rgb + a;\n        }\n        else if (colour.search('rgb') === 0) {\n            var value = colour.substr(4).split(')')[0].split(',');\n            var rgb = '';\n            for (var i = 0; i < value.length; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            return '#' + rgb;\n        }\n        return '#d5d5d5';\n    };\n    ConditionalFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.destroyColorPickers();\n            this.dialog.destroy();\n        }\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting')) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n    };\n    ConditionalFormatting.prototype.destroyColorPickers = function () {\n        for (var i = 0; i < (this.newFormat ? this.newFormat.length : 0); i++) {\n            if (this.fontColor && this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                this.fontColor[i].destroy();\n            }\n            if (this.backgroundColor && this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                this.backgroundColor[i].destroy();\n            }\n        }\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     * @returns void\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        this.dialog.refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     * @returns void\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.close();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, isBlazor, getInstance, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { Deferred } from '@syncfusion/ej2-data';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        /** @hidden */\n        this.isMultiAxisChange = false;\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList'));\n        }\n        else if (this.parent.showGroupingBar &&\n            this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar'));\n        }\n        else {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_grid'));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            items: this.getItems(),\n            allowKeyboard: false,\n        });\n        this.toolbar.isStringTemplate = true;\n        var viewStr = 'viewContainerRef';\n        var registerTemp = 'registeredTemplate';\n        if (this.parent[viewStr]) {\n            this.toolbar[registerTemp] = {};\n            this.toolbar[viewStr] = this.parent[viewStr];\n        }\n        if (this.parent.toolbarTemplate && typeof (this.parent.toolbarTemplate) === 'string') {\n            this.toolbar.appendTo(this.parent.toolbarTemplate);\n            this.parent.element.replaceChild(this.toolbar.element, this.parent.element.querySelector('.' + cls.GRID_TOOLBAR));\n            this.toolbar.element.classList.add(cls.GRID_TOOLBAR);\n        }\n        else {\n            this.toolbar.appendTo('#' + this.parent.element.id + 'pivot-toolbar');\n            this.toolbar.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n        }\n        if (this.parent.chart) {\n            this.parent.chart.setProperties({ width: this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString() }, true);\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        /* tslint:disable:no-any */\n        var reports = { reportName: [] };\n        var tool = this;\n        if (isBlazor()) {\n            reports = this.fetchReportsArgs();\n            reports.then(function (e) {\n                tool.reportList.dataSource = e.reportName;\n                return e;\n            });\n        }\n        else {\n            /* tslint:enable:no-any */\n            this.parent.trigger(events.fetchReport, reports);\n        }\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    /* tslint:disable */\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    var toDisable = this.parent.displayOption.view === 'Chart';\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                        id: this.parent.element.id + 'grid', cssClass: toDisable ? cls.MENU_DISABLE : '',\n                        click: this.menuItemClick.bind(this)\n                    });\n                    break;\n                case 'Chart':\n                    var validTypes = (this.parent.displayOption.view === 'Table');\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                        id: this.parent.element.id + 'chartmenu', cssClass: validTypes ? cls.MENU_DISABLE : ''\n                    });\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType === 'olap') {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n                default:\n                    if (typeof (item) === 'object') {\n                        items.push(item);\n                    }\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf('FieldList') === -1 && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList') &&\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display === 'none') {\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    /* tslint:enable */\n    Toolbar.prototype.reportChange = function (args) {\n        this.dropArgs = args;\n        if (this.parent.isModified && this.currentReport !== '') {\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n        }\n        else {\n            this.reportLoad(args);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this_1 = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this_1.currentReport = observedArgs.reportName;\n                _this_1.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else if (this.currentReport === '' && (args.item.id === (this.parent.element.id + 'save') || args.item.id === (this.parent.element.id + 'saveas'))) {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function (args) {\n        if (!(this.mdxDialog && !this.mdxDialog.isDestroyed)) {\n            this.renderMDXDialog();\n        }\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            innerHTML: this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim(),\n            attrs: { 'readonly': 'readonly' }\n        });\n        outerDiv.appendChild(textarea);\n        this.mdxDialog.content = outerDiv;\n        this.mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        if (args) {\n            this.dialog.header = args.item.tooltipText;\n            var outerDiv = createElement('div', {\n                className: cls.GRID_REPORT_OUTER\n            });\n            var label = createElement('div', {\n                className: cls.GRID_REPORT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('reportName')\n            });\n            var input = createElement('input', {\n                className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n                innerHTML: (action && action === 'rename' ? this.currentReport : ''),\n                attrs: {\n                    'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                    'value': (action && action === 'rename' ? this.currentReport : '')\n                },\n            });\n            input.setSelectionRange(input.textContent.length, input.textContent.length);\n            outerDiv.appendChild(label);\n            outerDiv.appendChild(input);\n            this.dialog.content = outerDiv;\n            this.dialog.refresh();\n            this.dialog.show();\n        }\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        switch (args.item.id) {\n            case (this.parent.element.id + 'save'):\n            case (this.parent.element.id + 'saveas'):\n                this.saveReport(args);\n                break;\n            case (this.parent.element.id + 'remove'):\n                this.action = 'Remove';\n                if (this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                }\n                else {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                }\n                return;\n            case (this.parent.element.id + 'rename'):\n                this.renameReport(args);\n                break;\n            case (this.parent.element.id + 'new'):\n                this.action = 'New';\n                this.newArgs = args;\n                if (this.parent.isModified && this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                }\n                else {\n                    this.createNewReport(args);\n                }\n                break;\n            case (this.parent.element.id + 'load'):\n                this.action = 'Load';\n                break;\n            case (this.parent.element.id + 'fieldlist'):\n                if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                    this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.show();\n                }\n                break;\n            case (this.parent.element.id + 'formatting'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'mdxQuery'):\n                this.mdxQueryDialog(args);\n                break;\n            case (this.parent.element.id + 'numberFormatting'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'report-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'report-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        }));\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parent.element.id + 'report-dialog');\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'mdx-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'mdx-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        }));\n        this.mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.mdxDialog.isStringTemplate = true;\n        this.mdxDialog.appendTo('#' + this.parent.element.id + 'mdx-dialog');\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var textArea = this.mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var reportInput = this.dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        if ((this.dialog.header === this.parent.localeObj.getConstant('save') ||\n            this.dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'Save';\n            this.currentReport = reportInput.value;\n            var isExist_1 = false;\n            /* tslint:disable */\n            var _this_2 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_1 = true;\n                        break;\n                    }\n                }\n                if (isExist_1) {\n                    _this_2.createConfirmDialog(_this_2.parent.localeObj.getConstant('alert'), _this_2.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_2.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var saveArgs = {\n                    report: _this_2.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_2.parent.trigger(events.saveReport, saveArgs);\n                _this_2.parent.isModified = false;\n                _this_2.updateReportList();\n                _this_2.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('new') &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'New';\n            this.currentReport = reportInput.value;\n            var isExist_2 = false;\n            /* tslint:disable */\n            var _this_3 = this;\n            /* tslint:enable */\n            var reports_1 = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports_1, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === reports_1.reportName[i]) {\n                        isExist_2 = true;\n                        break;\n                    }\n                }\n                if (isExist_2) {\n                    _this_3.createConfirmDialog(_this_3.parent.localeObj.getConstant('alert'), _this_3.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_3.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                _this_3.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    _this_3.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: _this_3.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_3.parent.trigger(events.saveReport, saveArgs);\n                _this_3.parent.isModified = false;\n                _this_3.updateReportList();\n                _this_3.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            if (this.currentReport === reportInput.value) {\n                this.dialog.hide();\n                return;\n            }\n            this.action = 'Rename';\n            var isExist_3 = false;\n            /* tslint:disable */\n            var _this_4 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_4.renameText = reportInput.value;\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_3 = true;\n                        break;\n                    }\n                }\n                if (isExist_3) {\n                    _this_4.createConfirmDialog(_this_4.parent.localeObj.getConstant('alert'), _this_4.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_4.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var renameArgs = {\n                    reportName: _this_4.currentReport,\n                    rename: reportInput.value\n                };\n                _this_4.parent.trigger(events.renameReport, renameArgs);\n                _this_4.currentReport = reportInput.value;\n                _this_4.updateReportList();\n                _this_4.dialog.hide();\n            });\n        }\n    };\n    Toolbar.prototype.createNewReport = function (args) {\n        this.dialogShow(args);\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        this.dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('yes'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('no'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        var _this_1 = this;\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.removeReport, removeArgs);\n            var reports = this.fetchReports();\n            if (reports.reportName && reports.reportName.length > 0) {\n                var loadArgs = {\n                    reportName: reports.reportName[reports.reportName.length - 1]\n                };\n                this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                    _this_1.currentReport = observedArgs.reportName;\n                    _this_1.parent.isModified = false;\n                });\n                this.currentReport = reports.reportName[reports.reportName.length - 1];\n            }\n            else {\n                this.currentReport = '';\n                this.parent.isModified = false;\n                this.action = '';\n            }\n            this.updateReportList();\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '' && this.parent.isModified) {\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.createNewReport(this.newArgs);\n                }\n                else {\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else if (this.action === 'New') {\n                this.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                this.updateReportList();\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: this.renameText,\n                isReportExists: true\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = this.renameText;\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        this.confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        if (this.action === 'New') {\n            if (this.parent.isModified) {\n                this.createNewReport(this.newArgs);\n            }\n            else {\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            this.currentReport = this.reportList.value;\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            this.dialog.hide();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        this.confirmPopUp.hide();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.createChartMenu = function () {\n        var _this_1 = this;\n        if (document.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            var menuItems = [];\n            var types = this.getValidChartType();\n            for (var i = 0; (i < types.length && i < 7); i++) {\n                var type = types[i];\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant(type.toLowerCase()),\n                    id: this.parent.element.id + '_' + type,\n                });\n            }\n            if (menuItems.length === 7) {\n                menuItems.splice(6);\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant('MoreOption'),\n                    id: this.parent.element.id + '_' + 'ChartMoreOption',\n                });\n            }\n            var toDisable = (menuItems.length <= 0 || this.parent.displayOption.view === 'Table');\n            menuItems.push({\n                separator: true\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('multipleAxes'),\n                id: this.parent.element.id + '_' + 'multipleAxes'\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('showLegend'),\n                id: this.parent.element.id + '_' + 'showLegend'\n            });\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : menuItems,\n                }];\n            if (this.chartMenu && !this.chartMenu.isDestroyed) {\n                this.chartMenu.destroy();\n            }\n            this.chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this),\n                beforeOpen: this.whitespaceRemove.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                },\n                beforeItemRender: this.multipleAxesCheckbox.bind(this)\n            });\n            this.chartMenu.isStringTemplate = true;\n            this.chartMenu.appendTo('#' + this.parent.element.id + 'chart_menu');\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.create = function () {\n        var _this_1 = this;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            this.createChartMenu();\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'export_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            this.exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.exportMenu.isStringTemplate = true;\n            this.exportMenu.appendTo('#' + this.parent.element.id + 'export_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'subtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.subTotalMenu.isStringTemplate = true;\n            this.subTotalMenu.appendTo('#' + this.parent.element.id + 'subtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'grandtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.grandTotalMenu.isStringTemplate = true;\n            this.grandTotalMenu.appendTo('#' + this.parent.element.id + 'grandtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'formatting_menu')) {\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormatMenu'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormatingMenu'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            this.formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.formattingMenu.isStringTemplate = true;\n            this.formattingMenu.appendTo('#' + this.parent.element.id + 'formatting_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_reportlist')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.parent.localeObj.getConstant('defaultReport')\n            };\n            if (isBlazor()) {\n                var pivotData = JSON.parse(saveArgs.report);\n                pivotData.dataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n                saveArgs.report = JSON.stringify(pivotData);\n            }\n            this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n            this.parent.trigger(events.saveReport, saveArgs);\n            var reports = this.fetchReports();\n            this.reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                cssClass: cls.REPORT_LIST_DROP,\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            this.reportList.isStringTemplate = true;\n            this.reportList.appendTo('#' + this.parent.element.id + '_reportlist');\n        }\n        this.updateItemElements();\n    };\n    Toolbar.prototype.updateItemElements = function () {\n        var itemElements = [].slice.call(this.toolbar.element.querySelectorAll('.e-toolbar-item'));\n        for (var _i = 0, itemElements_1 = itemElements; _i < itemElements_1.length; _i++) {\n            var element = itemElements_1[_i];\n            if (element.querySelector('button')) {\n                element.querySelector('button').setAttribute('tabindex', '0');\n            }\n            else if (element.querySelector('.e-menu.e-menu-parent')) {\n                element.querySelector('.e-menu.e-menu-parent').setAttribute('tabindex', '-1');\n                if (element.querySelector('.e-menu-item.e-menu-caret-icon')) {\n                    element.querySelector('.e-menu-item.e-menu-caret-icon').setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.whitespaceRemove = function (args) {\n        args.element.style.padding = '0px';\n        var separator = args.element.querySelector('.e-separator');\n        if (separator) {\n            separator.style.margin = '0px';\n        }\n    };\n    Toolbar.prototype.multipleAxesCheckbox = function (args) {\n        if (this.parent.element.id + '_' + 'multipleAxes' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'checkBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('multipleAxes'),\n                cssClass: 'e-multipleAxes',\n                checked: this.parent.chartSettings.enableMultiAxis,\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'checkBox');\n            if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) &&\n                !args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.add(cls.MENU_DISABLE);\n                checkbox.disabled = true;\n            }\n            else if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) &&\n                args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.remove(cls.MENU_DISABLE);\n                checkbox.disabled = false;\n            }\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-multipleAxes');\n            args.element.appendChild(checkboxObj);\n        }\n        else if (this.parent.element.id + '_' + 'showLegend' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'showLegendCheckBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('showLegend'),\n                checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n                cssClass: 'e-showLegend',\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'showLegendCheckBox');\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-showLegend');\n            args.element.appendChild(checkboxObj);\n        }\n    };\n    Toolbar.prototype.getLableState = function (type) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.showLableState = chartSettings.legendSettings.visible;\n        }\n        else {\n            this.showLableState = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1 ?\n                false : true;\n        }\n        return this.showLableState;\n    };\n    Toolbar.prototype.getAllChartItems = function () {\n        return ['Line', 'Column', 'Area', 'Bar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea',\n            'SplineArea', 'Scatter', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto',\n            'Polar', 'Radar', 'Pie', 'Pyramid', 'Funnel', 'Doughnut'];\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        if (this.parent.currentView === 'Table') {\n            addClass(items.slice(3), cls.MENU_HIDE);\n            removeClass(items.slice(1, 3), cls.MENU_HIDE);\n        }\n        else {\n            addClass(items.slice(1, 3), cls.MENU_HIDE);\n            removeClass(items.slice(3), cls.MENU_HIDE);\n        }\n    };\n    /* tslint:disable:max-line-length */\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    /* tslint:enable:max-line-length */\n    Toolbar.prototype.updateReportList = function () {\n        var reports;\n        if (isBlazor()) {\n            /* tslint:disable */\n            var _this_5 = this;\n            /* tslint:enable */\n            reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_5.reportList.dataSource = observedArgs.reportName;\n                if (_this_5.currentReport === '' && _this_5.reportList.dataSource.length > 0) {\n                    _this_5.reportList.value = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.reportList.text = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.currentReport = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                }\n                else {\n                    _this_5.reportList.value = _this_5.currentReport;\n                    _this_5.reportList.text = _this_5.currentReport;\n                }\n                _this_5.reportList.refresh();\n            });\n        }\n        else {\n            reports = this.fetchReports();\n            this.reportList.dataSource = reports.reportName;\n            if (this.currentReport === '' && this.reportList.dataSource.length > 0) {\n                this.reportList.value = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.reportList.text = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.currentReport = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            }\n            else {\n                this.reportList.value = this.currentReport;\n                this.reportList.text = this.currentReport;\n            }\n            this.reportList.refresh();\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.menuItemClick = function (args) {\n        var exportArgs = {};\n        var type;\n        if (this.getAllChartItems().indexOf(args.item.id.split(this.parent.element.id + '_')[1]) > -1 ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'ChartMoreOption') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'multipleAxes') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'showLegend')) {\n            type = args.item.id.split(this.parent.element.id + '_')[1];\n        }\n        /* tslint:disable:max-line-length */\n        switch (args.item.id) {\n            case (this.parent.element.id + 'grid'):\n                if (this.parent.grid && this.parent.chart) {\n                    this.parent.grid.element.style.display = '';\n                    this.parent.chart.element.style.display = 'none';\n                    if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                        this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                    this.parent.currentView = 'Table';\n                    this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                    if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    this.parent.layoutRefresh();\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + 'pdf'):\n                if (this.parent.currentView === 'Table') {\n                    exportArgs = {\n                        pdfExportProperties: { fileName: 'Export.pdf' },\n                        pdfDoc: undefined,\n                        isBlob: false,\n                        isMultipleExport: false\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.pdfExport(exportArgs.pdfExportProperties, exportArgs.isMultipleExport, exportArgs.pdfDoc, exportArgs.isBlob);\n                }\n                else {\n                    exportArgs = {\n                        width: undefined,\n                        height: undefined,\n                        orientation: PdfPageOrientation.Landscape,\n                        type: 'PDF',\n                        fileName: 'result',\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                }\n                break;\n            case (this.parent.element.id + 'excel'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.excelExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case (this.parent.element.id + 'csv'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.csv' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.csvExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                break;\n            case (this.parent.element.id + 'png'):\n                exportArgs = {\n                    type: 'PNG',\n                    width: undefined,\n                    height: undefined,\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'jpeg'):\n                exportArgs = {\n                    type: 'JPEG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                    width: undefined,\n                    height: undefined,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'svg'):\n                exportArgs = {\n                    width: undefined,\n                    height: undefined,\n                    type: 'SVG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type, exportArgs.fileName, exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'notsubtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: false, showColumnSubTotals: false, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: false, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'notgrandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: false, showColumnGrandTotals: false, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: false, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'numberFormattingMenu'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'conditionalFormattingMenu'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + '_' + type):\n                if (args.item && args.item.text) {\n                    if (type === 'ChartMoreOption') {\n                        this.createChartTypeDialog();\n                    }\n                    else if (type === 'multipleAxes') {\n                        if (this.parent.chartSettings.enableScrollOnMultiAxis) {\n                            this.isMultiAxisChange = true;\n                        }\n                        this.parent.chartSettings.enableMultiAxis = !this.parent.chartSettings.enableMultiAxis;\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                    else if (this.getAllChartItems().indexOf(type) > -1) {\n                        this.updateChartType(type, false);\n                    }\n                    else if (type === 'showLegend') {\n                        this.parent.chart.legendSettings.visible = !this.showLableState;\n                        if (this.parent.chartSettings.legendSettings) {\n                            this.parent.chartSettings.legendSettings.visible = !this.showLableState;\n                        }\n                        else {\n                            this.parent.setProperties({ chartSettings: { legendSettings: { visible: !this.showLableState } } }, true);\n                        }\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n        }\n        /* tslint:enable:max-line-length */\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    Toolbar.prototype.getValidChartType = function () {\n        var menuItems = [];\n        for (var i = 0; (i <= this.parent.chartTypes.length); i++) {\n            var type = this.parent.chartTypes[i];\n            if ((this.getAllChartItems().indexOf(type) > -1) && (menuItems.indexOf(type) < 0)) {\n                menuItems.push(type);\n            }\n        }\n        return menuItems;\n    };\n    Toolbar.prototype.createChartTypeDialog = function () {\n        var _this_1 = this;\n        var chartDialog = this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + '_ChartTypeDialog',\n            className: cls.PIVOTCHART_TYPE_DIALOG\n        }));\n        this.chartTypesDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('chartTypeSettings'),\n            content: this.getDialogContent(),\n            isModal: true,\n            beforeOpen: this.beforeOpen.bind(this),\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: function () { _this_1.chartTypeDialogUpdate(); },\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true },\n                },\n                {\n                    click: function () { _this_1.removeDialog(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            close: this.removeDialog.bind(this)\n        });\n        this.chartTypesDialog.isStringTemplate = true;\n        this.chartTypesDialog.appendTo(chartDialog);\n    };\n    Toolbar.prototype.removeDialog = function () {\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_ChartTypeDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ChartTypeDialog'));\n        }\n    };\n    Toolbar.prototype.chartTypeDialogUpdate = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var chartType = getInstance('#' + this.parent.element.id + '_ChartTypeOption', DropDownList).value;\n        var checked = getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).checked;\n        var checkedShow = getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked;\n        this.parent.chart.legendSettings.visible = checkedShow;\n        if (this.chartLableState) {\n            this.parent.chart.legendSettings.visible = checkedShow;\n            if (this.parent.chartSettings.legendSettings) {\n                this.parent.chartSettings.legendSettings.visible = checkedShow;\n            }\n            else {\n                this.parent.setProperties({ chartSettings: { legendSettings: { visible: checkedShow } } }, true);\n            }\n        }\n        this.updateChartType(chartType, false);\n        this.parent.chartSettings.enableMultiAxis = checked;\n        this.chartTypesDialog.close();\n    };\n    Toolbar.prototype.updateChartType = function (type, isMultiAxis) {\n        if (this.getAllChartItems().indexOf(type) > -1) {\n            if (this.parent.chart) {\n                this.parent.currentView = 'Chart';\n                this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                /* tslint:disable:max-line-length */\n                this.parent.chart.element.style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                this.parent.chart.setProperties({ width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()) }, true);\n                if (this.parent.chartSettings.chartSeries.type === type && !isMultiAxis) {\n                    this.parent.chartModule.updateView();\n                }\n                else {\n                    this.parent.chartSettings.chartSeries.type = type;\n                }\n            }\n        }\n    };\n    Toolbar.prototype.getDialogContent = function () {\n        var mainWrapper = createElement('div', { className: 'e-chart-type-div-content' });\n        var optionWrapperDiv = createElement('div', { className: 'e-chart-type-option-wrapper' });\n        var optionTextDiv = createElement('div', {\n            className: 'e-chart-type-option-text', innerHTML: this.parent.localeObj.getConstant('ChartType')\n        });\n        var dropOptionDiv = createElement('div', { id: this.parent.element.id + '_ChartTypeOption' });\n        optionWrapperDiv.appendChild(optionTextDiv);\n        optionWrapperDiv.appendChild(dropOptionDiv);\n        var chartTypeDatasource = [];\n        var chartType = this.getValidChartType();\n        for (var i = 0; i < chartType.length; i++) {\n            chartTypeDatasource.push({ value: chartType[i], text: this.parent.localeObj.getConstant(chartType[i].toLowerCase()) });\n        }\n        var optionWrapper = new DropDownList({\n            dataSource: chartTypeDatasource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.chartSeries.type ? this.parent.chartSettings.chartSeries.type : this.getValidChartType()[0],\n            width: '100%',\n            change: this.changeDropDown.bind(this)\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(dropOptionDiv);\n        mainWrapper.appendChild(optionWrapperDiv);\n        var checkboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogMultipleAxis',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(checkboxWrap);\n        var labelCheckboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogShowLabel',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(labelCheckboxWrap);\n        return mainWrapper;\n    };\n    Toolbar.prototype.changeDropDown = function (args) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (!(chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined)) {\n            var checked = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1 ?\n                false : true;\n            getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked = checked;\n        }\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1) {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = true;\n        }\n        else {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = false;\n        }\n    };\n    Toolbar.prototype.beforeOpen = function () {\n        var _this_1 = this;\n        var checkbox = new CheckBox({\n            label: this.parent.localeObj.getConstant('multipleAxes'),\n            cssClass: 'e-dialog-multiple-axis',\n            checked: this.parent.chartSettings.enableMultiAxis ? this.parent.chartSettings.enableMultiAxis : false,\n            enableRtl: this.parent.enableRtl,\n        });\n        var checkbox1 = new CheckBox({\n            label: this.parent.localeObj.getConstant('showLegend'),\n            checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n            change: function () { _this_1.chartLableState = true; },\n            cssClass: 'e-dialog-show-legend',\n            enableRtl: this.parent.enableRtl,\n        });\n        checkbox1.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogShowLabel'));\n        checkbox.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogMultipleAxis'));\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            checkbox.disabled = true;\n        }\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.chartLableState = true;\n        }\n        else {\n            this.chartLableState = false;\n        }\n    };\n    /**\n     * To refresh the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.createToolbar();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.confirmPopUp && !this.confirmPopUp.isDestroyed) {\n            this.confirmPopUp.destroy();\n        }\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (this.mdxDialog && !this.mdxDialog.isDestroyed) {\n            this.mdxDialog.destroy();\n        }\n        if (this.chartMenu && !this.chartMenu.isDestroyed) {\n            this.chartMenu.destroy();\n        }\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (this.exportMenu && !this.exportMenu.isDestroyed) {\n            this.exportMenu.destroy();\n        }\n        if (this.subTotalMenu && !this.subTotalMenu.isDestroyed) {\n            this.subTotalMenu.destroy();\n        }\n        if (this.grandTotalMenu && !this.grandTotalMenu.isDestroyed) {\n            this.grandTotalMenu.destroy();\n        }\n        if (this.formattingMenu && !this.formattingMenu.isDestroyed) {\n            this.formattingMenu.destroy();\n        }\n        if (this.reportList && !this.reportList.isDestroyed) {\n            this.reportList.destroy();\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n        }\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar')) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n    };\n    Toolbar.prototype.focusToolBar = function () {\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-selected'), 'e-selected');\n        if (document.querySelector('.e-toolbar-items')) {\n            addClass([document.querySelector('.e-toolbar-items')], 'e-focused');\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberformatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     * @returns void\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.dialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerHTML = this.parent.localeObj.getConstant('numberFormat');\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('values')\n        });\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('formatType')\n        });\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('grouping')\n        });\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('decimalPlaces')\n        });\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('customFormatString')\n        });\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatValueDrop')) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                valueFields.push({\n                    index: i + 1, name: this.parent.dataSourceSettings.values[i].caption || this.parent.dataSourceSettings.values[i].name,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            this.valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP, change: this.valueChange.bind(this), width: '100%'\n            });\n            this.valuesDropDown.isStringTemplate = true;\n            this.valuesDropDown.appendTo('#' + this.parent.element.id + '_FormatValueDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 2, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            this.formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl,\n                cssClass: cls.FORMATTING_FORMAT_DROP, width: '100%'\n            });\n            this.formatDropDown.isStringTemplate = true;\n            this.formatDropDown.appendTo('#' + this.parent.element.id + '_FormatDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_GroupingDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            this.groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP, width: '100%'\n            });\n            this.groupingDropDown.isStringTemplate = true;\n            this.groupingDropDown.appendTo('#' + this.parent.element.id + '_GroupingDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_DecimalDrop')) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 },\n            ];\n            this.decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP, popupHeight: 150, width: '100%'\n            });\n            this.decimalDropDown.isStringTemplate = true;\n            this.decimalDropDown.appendTo('#' + this.parent.element.id + '_DecimalDrop');\n        }\n        if (this.formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.parent.dataSourceSettings.formatSettings;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString.split('')[0].toLowerCase();\n                if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n                    this.formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                        this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                        this.parent.localeObj.getConstant('number');\n                    this.decimalDropDown.value = Number(fString.split('')[1]);\n                    this.groupingDropDown.value = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                        this.parent.localeObj.getConstant('false');\n                }\n                else {\n                    this.formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n                    this.customText.value = fString;\n                }\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = 0;\n            this.groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            this.groupingDropDown.enabled = false;\n            this.decimalDropDown.enabled = false;\n        }\n        else {\n            this.customText.disabled = true;\n            this.groupingDropDown.enabled = true;\n            this.decimalDropDown.enabled = true;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text;\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = this.formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                this.formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            text += this.decimalDropDown.value;\n        }\n        else {\n            text = this.customText.value;\n        }\n        var format = extend([], this.parent.dataSourceSettings.formatSettings, true);\n        if (this.valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            var fieldList = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule.fieldList : this.parent.engineModule.fieldList;\n            for (var _i = 0, _a = Object.keys(fieldList); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (fieldList[key].type === 'number') {\n                    this.insertFormat(key, text);\n                }\n            }\n        }\n        else {\n            this.insertFormat(this.valuesDropDown.value.toString(), text);\n        }\n        var eventArgs = {\n            formatSettings: PivotUtil.cloneFormatSettings(this.parent.dataSourceSettings.formatSettings),\n            formatName: this.valuesDropDown.value.toString(),\n            cancel: false\n        };\n        this.parent.trigger(events.numberFormatting, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: observedArgs.formatSettings } }, true);\n                try {\n                    _this.parent.updateDataSource(false);\n                    _this.dialog.close();\n                }\n                catch (exception) {\n                    _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n                    /* tslint:disable-next-line:max-line-length */\n                    _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormat'), _this.dialog.element);\n                    _this.parent.hideWaitingPopup();\n                }\n            }\n            else {\n                _this.dialog.close();\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            }\n        });\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text) {\n        var isExist = false;\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false\n        };\n        var format = this.parent.dataSourceSettings.formatSettings;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     * @hidden\n     */\n    function Grouping(parent) {\n        /* tslint:disable-next-line:max-line-length */\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        this.parentElement = parentElement;\n        this.selectedCellsInfo = [];\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('aria-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        this.selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        this.selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedOptions\n     * @param  {SelectedCellsInfo[]} axis - Get the members name from the given selected cells information\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (this.selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (this.selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            if (isBlazor()) {\n                PivotUtil.setPivotProperties(this.parent, { dataSourceSettings: { groupSettings: groupFields } });\n            }\n            else {\n                this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            }\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            this.parent.notify(events.initialLoad, {});\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames, type) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        /* tslint:disable */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        /* tslint:enable */\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type) {\n        var _this = this;\n        var groupDialog = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialog);\n        this.groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.groupDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            overlayClick: function () { _this.removeDialog(); },\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement\n        });\n        this.groupDialog.isStringTemplate = true;\n        this.groupDialog.appendTo(groupDialog);\n    };\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-wrapper' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    /* tslint:disable:max-line-length */\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text', innerHTML: this.parent.localeObj.getConstant('groupFieldCaption')\n                    });\n                    /* tslint:enable:max-line-length */\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-wrapper' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text', innerHTML: this.parent.localeObj.getConstant('groupTitle')\n                    });\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-wrapper' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        value: caption, width: '100%'\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        width: '100%'\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-wrapper'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-wrapper'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-wrapper'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text', innerHTML: this.parent.localeObj.getConstant('groupBy')\n                    });\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') },\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        /* tslint:disable */\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            select: function () {\n                                groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                if (intervalObj_1.checkBoxSelectionModule.activeLi.length === 0) {\n                                    groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                            }\n                        });\n                        /* tslint:enable */\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%'\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%'\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    /* tslint:disable:max-func-body-length */\n    Grouping.prototype.updateGroupSettings = function () {\n        var dialogElement = this.groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance('#' + this.parentElement.id + 'group_input_option', MaskedTextBox);\n            var captionInputInstance = getInstance('#' + this.parentElement.id + 'group_caption_option', MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            /* tslint:disable-next-line:max-line-length */\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ? customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_start_option', CheckBox);\n            var endCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_end_option', CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_start_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_start_input', NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_end_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_end_input', NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_interval_input', MultiSelect) :\n                getInstance('#' + this.parentElement.id + 'group_interval_input', NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        this.groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item, pos) { return item.name; });\n                if (newItems) {\n                    /* tslint:disable-next-line:max-line-length */\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item, pos) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        return orderedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            var selectedOptions = [];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if (this.parent.grid && this.parent.grid.isDestroyed) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        if (this.groupDialog && !this.groupDialog.isDestroyed) {\n            this.groupDialog.destroy();\n        }\n        if (this.parentElement && document.getElementById(this.parentElement.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_GroupDialog'));\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.render\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.handlers.load, this); //For initial rendering\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","getDay","getHours","getMinutes","getSeconds","getMilliseconds","isNaN","Number","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedPivotValues","pivotValues","clonedSets","i","j","this","getClonedPivotValueObj","undefined","getDefinedObj","inArray","collection","cnt","isContainCommonElements","collection1","collection2","lnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","type","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","slice","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","fieldMapping","showSubTotals","showRowSubTotals","showColumnSubTotals","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","showAggregationOnValueField","authentication","CloneAuthenticationObject","updateDataSourceSettings","clonedCollection","collection_1","set","name","caption","axis","baseField","baseItem","isCalculatedField","isNamedSet","showNoDataItems","dataType","showFilterIcon","showSortIcon","showRemoveIcon","showValueTypeIcon","showEditIcon","allowDragAndDrop","collection_2","condition","items","levelCount","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_3","order","collection_4","delimiter","collection_5","calendar","currency","format","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","userName","password","collection_6","formatString","formula","hierarchyUniqueName","collection_7","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_8","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_9","groupName","getFilterItemByName","fieldName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","getFieldInfo","len","fieldItem","position","fieldList","olapEngineModule","engineModule","isNamedSets","aggregateType","isButtonIconRefesh","prop","oldProp","newProp","isButtonRefresh","propValidation","oldAxesProp","newAxesProp","axes","oldAxis","newAxis","indexOf","options","oldAxisProp","newAxisProp","k","a","b","c","propValidation_1","validation","exception","formatPivotValues","Axis","actualText","ActualText","indexObject","IndexObject","index","Index","rowHeaders","RowHeaders","columnHeaders","ColumnHeaders","formattedText","FormattedText","actualValue","ActualValue","rowIndex","RowIndex","colIndex","ColIndex","colSpan","ColSpan","level","Level","rowSpan","RowSpan","isSum","IsSum","isGrandSum","IsGrandSum","valueSort","ValueSort","ordinal","Ordinal","hasChild","HasChild","isDrilled","IsDrilled","Value","Type","members","Members","formatFieldList","fList","id","Id","Caption","FormatString","formattedMembers","FormattedMembers","dateMember","DateMember","filter","Filter","sort","Sort","AggregateType","BaseField","BaseItem","filterType","FilterType","Format","Formula","isSelected","IsSelected","isExcelFilter","IsExcelFilter","ShowNoDataItems","isCustomField","IsCustomField","ShowFilterIcon","ShowSortIcon","ShowRemoveIcon","ShowEditIcon","ShowValueTypeIcon","AllowDragAndDrop","IsCalculatedField","ShowSubTotals","frameContent","rowPosition","dataContent","pivot","isEmptyData","isEngineUpdated","rowCnt","start","end","rCnt","cCnt","getLocalizedObject","locale","localeObj","getConstant","generateUUID","d","Date","getTime","d2","performance","now","replace","r","Math","random","floor","toString","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","PivotEngine","aggregatedValueMatrix","valueContent","formatFields","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeadersCount","columnHeadersCount","rMembers","cMembers","groupingFields","valueMatrix","indexMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rowGrandTotal","columnGrandTotal","removeRowGrandTotal","removeColumnGrandTotal","isValueHasAdvancedAggregate","rawIndexObject","isEditing","actualData","groupRawIndex","fieldKeys","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","customRegex","formatRegex","renderEngine","dataSource","customProperties","fn","getValueCellInfo","globalize","Internationalization","fieldsType","enableSort","isValueFilterEnabled","isDrillThrough","isBlazor","shift","pageSettings","getGroupedRawData","formats","groups","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMutiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fillFieldMembers","updateSortSettings","generateValueMatrix","filterMembers","columnLength","updateFilterMembers","generateGridData","report","pos","splice","frameHeaderWithKeys","countFields","map","hasCountField","realData","headerFields","concat","groupRawData","finalData","groupKeys","indexLength","currData","vPos","hPos","memberJoin","join","currFieldName","currValue","savedData","summType","_this","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","len_1","interval","isInRangeAvail","getRange","newDate","newFieldName","setFullYear","getFullYear","month","ceil","getMonth","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","newField","len_3","startValue","endValue","cStartValue","cEndValue","unframedSet","dataLength","framedSetLength","max","len_4","duplicateData","frameData","lastIndexOf","_b","keys_2","_c","axisFields_2","field","len_5","customFieldName","pattern","match","parentField","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","parseInt","getFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","getCalculatedField","lenE","dataTypes","getMappingField","toLowerCase","updateTreeViewData","updateFieldList","actualFormula","this_2","calc","calcProperties","powerFunction","formulaType","split","lmt","aggregateValue","selectedString","filterElements","filterElements_1","dataFields_1","validateValueFields","indMat","dlen","kLn","kl","isDataAvail","membersCnt","fmembersCnt","dl","mkey","fKey","formattedValue","getFormattedValue","String","dateText","vMat","keyLen","flList","tkln","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","member","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","valueFilter","rowFilterData","isValueFiltered","allMember","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","row","column","cellSets","getCellSet","rowCellType","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","updateHeaders","rowFlag","columnFlag","updatePivotValues","slicePos","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","memberName","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","engine","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","header","grandHeader","pop","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","framedHeader","isNotDateType","childrens","test","isNullArgument","textArray","hText","mIndex","mType","getMember","sortByValueRow","vlen","aggreColl","rMembers_1","rMembers_2","insertAllMember","rowLength","rowCells","savedCell","spanCnt","indexObj","colCnt","cell","rowPos","cellType","isSpanned","fieldCnt","drillOption","memberString","keyInd","parentMember","valueFil","hierarchy","rlen","decisionObj","isNoData","isDateType","savedMembers","lt","memInd","headerValue","availData","filterPosition","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","lt_1","rowCurrentPage","rowSize","exactStartPos","performSlicing","columnCurrentPage","columnSize","startPos","removeChildMembers","framedMember","customText","reformAxis","tnum","vlt","rTotal","cTotal","actCnt","isLeastNode","hpos","actpos","vln","name_1","calObj","vData","cln","clt","updateRowData","recursiveRowData","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","updateSelectedHeaders","childMembers","aggregateHeaders","children","vCount","isChild","uniqueName","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_2","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","len_6","cLevelName","axisObj","isSelectedColumn","len_7","uniqueLevelName","colIndex_3","currentSet","selectedHeaderCollection_1","colIndex_2","indexCollection_2","cVal","formatNumber","clen","_g","rowindexCollection_2","selectedHeaderCollection_2","rowindexCollection_1","selectedColumn","getSelectedColumn","_h","indexCollection_3","selectedColumnValue","selectedRow","getSelectedRow","_j","selectedHeaderCollection_3","_k","colIndex_4","_l","indexCollection_4","selectedRowValue","_m","selectedHeaderCollection_4","_o","rowindexCollection_3","selectedCol","_p","indexCollection_5","selectedColValue","_q","colIndex_5","_r","selectedHeaderCollection_5","_s","selectedHeaderCollection_6","colheads_1","head","rowheads_1","gTotalIndex","totalValues","gTotalIndex_1","rIndex","val_1","gTotalIndex_2","val_2","isGrand","subTotal","toLocaleString","currentCellSets","keys_3","vcnt","colItmLn","sortText","isTotalHide","lvl","isSingleMeasure","name_3","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","formatField","flag","integerPart","decimalPart","items_1","text","RegExp","initialLoad","uiUpdate","contentReady","dataReady","ROOT","RTL","DEVICE","ICON","COLLAPSE","EXPAND","TABLE","CALCINPUT","FLAT","FORMAT","FORMULA","MENU_HIDE","INPUT","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","GRID_REMOVE","GRID_TOOLBAR","PIVOTCHART","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","AggregateMenu","parent","menuInfo","render","args","parentElement","openContextMenu","target","buttonElement","isStringField","summaryTypes","getMenuItem","eventArgs","cancel","aggregateTypes","getModuleName","isPopupView","trigger","observedArgs","createContextMenu","currentMenu","getBoundingClientRect","enableRtl","open","top","window","scrollY","document","documentElement","scrollTop","left","menuItems","isDestroyed","destroy","checkDuplicates","element","getAllSummaryType","menuOptions","beforeOpen","beforeMenuOpen","bind","onClose","querySelector","focus","select","selectOptionInContextMenu","contextMenu","getElementById","innerHTML","createElement","appendChild","Menu","isStringTemplate","appendTo","isString","zIndex","display","createValueSettingsDialog","valueDialog","className","attrs","data-field","Dialog","animationSettings","effect","allowDragging","content","createFieldOptions","isModal","visible","showCloseIcon","width","height","X","Y","buttons","click","updateValueSettings","buttonModel","cssClass","isPrimary","hide","closeOnEscape","renderMode","overlayClick","removeDialog","close","fieldCaption","getAttribute","summaryType","summaryDataSource","summaryItems","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","textContent","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","dataBind","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","allowDeferLayoutUpdate","notify","events.uiUpdate","triggerPopulateEvent","dialogElement","captionInstance","getInstance","summaryInstance","baseFieldInstance","baseItemInstance","remove","Render","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","gridSettings","formatList","getFormatList","aggMenu","gridHeaderCellInfo","gridCellCollection","injectGridModules","getRowStartPos","grid","frameDataSource","frameStackedHeaders","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","getHeaderContent","calculateGridWidth","calculateGridHeight","bindGrid","on","headerRefreshed","refreshHeader","enableVirtualization","mHdr","mCont","vtr","virtualHeaderDiv","setStyleAttribute","transform","scrollLeft","isEmpty","Grid","frozenColumns","frozenRows","enableHover","frameEmptyData","frameEmptyColumns","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","rowHeight","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","excelDataBound","lastGridSettings","gridObject","pivotColumns","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","startIndex","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","cellTemplate","getCellTemplate","enableHtmlSanitizer","appendHtml","targetCell","SanitizeHtmlHelper","sanitize","outerHTML","borderRight","borderLeft","widthService","setWidthToTable","notEmpty","currentView","hideScroll","setFocusOnLastCell","events.contentReady","keyboardModule","event","nodeName","gridFocus","serviceLocator","getService","setFocusedElement","addClass","cellTarget","lastCellClicked","elem","bool","isGroupElement","classList","contains","allowGrouping","groupingModule","validateField","pivotValue1","querySelectorAll","cls.EXPAND","add","cls.MENU_HIDE","cls.COLLAPSE","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","innerText","allowCalculatedField","fieldType_1","menuItem","hiddenItemsCount","MouseEvent","view","bubbles","cancelable","exportArgs","ele","rowIndx","colIndx","pivotValue","pdfDoc","isBlob","isMultipleExport","pdfExportProperties","fileName","pdfExport","workbook","excelExportProperties","excelExport","csvExport","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","validateColumnTotalcell","headerPosKeys","sumLock","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","vSort","lock","padding-top","customAttributes","refreshUI","offsetWidth","firstColWidth","gridColumn","firstRowHeight","offsetHeight","e","clearTimeout","timeOutObj","setTimeout","onSelect","pivotArgs","currentCell","selectedElements_1","customClass","hyperlinkSettings","isValueCell","onOlapRowCellBoundEvent","localizedText","rowGrandPos","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","styles","colGrandPos","isSummaryCellHyperlink","isValueCellHyperlink","colindex","templateID","unWireEvents","wireEvents","pivotview","rowMeasurePos","tupRowInfo","tupInfo","memberPosition","uNameCollection","fieldSep","substring","memberType","nxtIndextCount","lastIndextCount","prevHasChild","fPos","indent","iPos","maxIndent","hierarchyName","levelUniqueName","currPos_1","lvlPosition","hierarchyPOs","currPos_2","currHierarchyPos","currPos","lvlPos","hasChild_1","measurePosition","allStartPos","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnCellHyperlink","hdrdiv","lineHeight","div","navigator","userAgent","insertBefore","tupColumnInfo","prevCell","isSpannedCell","colLength","currCell","parentCellSpan","parentCellPos","onHyperCellClick","nativeEvent","getElement","0","1","calculateColWidth","colCount","parWidth","parseFloat","columnWidth","colWidth","resizeColWidth","eleWidth","elementCreated","gridHeight","parHeight","getHeightAsNumber","cls.GRID_TOOLBAR","tableHeight","cls.TABLE","contentHeight","tableWidth","horizontalOverflow","verticalOverflow","commonOverflow","singleValueFormat","integrateModel","headerCnt","headerSplit","splitPos","columnModel","actualCnt","colField","setSavedWidth","minWidth","tmpSpan","innerModel","innerPos","clipMode","lastColumn","configLastColumnWidth","triggerColumnRenderEvent","formatArray","fString","fCnt","exportHeaderEvent","hAlign","exportContentEvent","paragraphIndent","excelRows","cells","tmpCell","gridCell","EventHandler","CommonKeyboardInteraction","keyConfigs","shiftF","shiftS","shiftE","delete","enter","escape","upArrow","downArrow","tabIndex","KeyboardEvents","keyAction","keyActionHandler","eventName","processFilter","processSort","processEdit","processDelete","processEnter","processClose","processFilterNodeSelection","getButtonElement","allPivotButtons","closest","preventDefault","moduleName","filterDialog","dialogPopUp","dialogElement_1","isExcelFilter_1","allowExcelLikeFilter","keyCode","memberEditorTree","firstLi","removeAttribute","allMemberEditorTree","parentID","dialogInstance","ej2_instances","button","pivotButtons_1","EventBase","updateSorting","checkisDescending","isDescending","sortObj","newSortObj","lastSortInfo","updateFiltering","treeData","getOlapData","isValidFilterItemsAvail","getTreeData","popupTarget","filterTargetID","createFilterDialog","isItemAvail","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","levels","getFilterMembers","getMembers","currrentMembers","searchMembers","isHierarchy","filterItemObj","dummyfilterItems","memberObject","filterItems_1","getParentNode","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","getParentIDs","treeObj","pid","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","isDataOverflow","isChecked","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","isDateField","filterItems_3","isSearchRender","hasChildren","updateChildNodeStates","members_4","state","sMembers","members_5","parentItem","parentNodes","selectedNodes_1","parent_1","members_6","isNodeExpand","NodeStateModified","onStateModified","droppedClass","nodeDropped","droppedPosition","dataSourceUpdate","btnElement","actualFieldName","tag","description","errorDialog","createErrorDialog","getButtonPosition","updateFieldlistData","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","draggedClass","eventdrop","dropField","dropAxis","dropPosition","draggedAxis","removeFieldFromReport","getNewField","droppedField","droppedAxis","dataSourceUpdate_1","droppedArgs","isMeasureAvail","measureField","fieldAxis","pivotButtonModule","axisFieldModule","ErrorDialog","dialogRenderer","fieldListDialog","errorPopUp","closeErrorDialog","body","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","data-fieldName","aria-label","filterCaption","headerTemplate","filterObject","getFilterObject","iconCss","disabled","closeFilterDialog","removeFilterDialog","filterArgs","fieldMembers","filterSetting","createTabMenu","updateCheckedState","createTreeView","visibility","memberTreeView","nodeChecked","nodeStateModified","allMemberSelect","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","createSortOptions","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","nodeAttr","htmlAttributes","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeSelected","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","sortWrapper","cls.FILTER_SORT_CLASS","cls.RTL","sortAscendElement","cls.SORT_SELECTED_CLASS","sortDescendElement","sortBtnElement","Button","unWireEvent","wireEvent","dropMenu","DropDownButton","selectedLevel","nodeLimit","getSearchMembers","isAllMember","checkedNode","getNode","uncheckAll","checkAll","applySorting","sortElements","dataCount","nodeData","childNodes","getChildMembers","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","fieldType","formatObj","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","measures","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","unshift","levelObj","fieldlistData_1","fieldListData","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","cloneNode","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","valueIndex","lDataSource","levelIndex","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","NumericTextBox","inputObj2_2","inputObj1_3","inputObj2_3","role","aria-haspopup","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","PivotCommon","pivotEngine","Common","commonModule","addEventListener","initiateCommonModule","pivotCommon","Browser","isDevice","handlers","load","events.initialLoad","removeEventListener","off","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","FieldListFieldOptions","Style","ConditionalFormatSettings","FormatSettings","GroupSettings","CalculatedFieldSettings","CustomGroups","DrillOptions","ValueSortSettings","Authentication","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","mode","cellSelectionMode","wrapMode","Event","exportToExcel","clonedValues","currentPivotValues","exportAllPages","applyFormatting","footer","dataCollections","workSheets","dataColl","colLen","rowLen","actualrCnt","maxLevel","pivotCell","rowOrdinal","measureName","numberFormat","bold","wrapText","backColor","fontColor","fontName","vAlign","borders","lineStyle","Workbook","worksheets","save","PDFExport","addPage","eventParams","page","pages","font","PdfStandardFont","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","brush","PdfSolidBrush","PdfColor","pen","PdfPen","PdfPageTemplateElement","RectangleF","graphics","clientSize","drawString","PdfStringFormat","PdfTextAlignment","Center","template","footerTemplate","bottom","hexDecToRgb","hexDec","Error","bigint","g","getFontStyle","theme","fontType","Bold","italic","Italic","underline","Underline","strikeout","Strikeout","getBorderStyle","borderStyle","PdfBorders","pdfColor","all","borderWidth","borderColor","dashStyle","getDashStyle","dashType","getStyle","border","gridStyle","Helvetica","getFontFamily","fontStyle","penBrushColor","setRecordThemeStyle","record","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","applyEvent","headerStyle","firstColumnWidth","size","dataCollIndex","vLen","allowRepeatHeader","integratedCnt","pdfGrid","PdfGrid","pageSize","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","columnSpan","applyStyle","processCellStyle","stringFormat","indent_1","alignment","Right","Left","lineAlignment","PdfVerticalAlignment","Middle","getColumn","draw","PointF","conditionalFormattingModule","hexToRgb","backgroundBrush","textBrush","family","getFont","cellStyle","arg","textBrushColor","textPenColor","textColor","textPen","PdfDocument","KeyboardInteraction","tab","shiftTab","shiftUp","shiftDown","shiftLeft","shiftRight","shiftEnter","ctrlEnter","leftArrow","rightArrow","ctrlShiftF","pivotViewKeyboardModule","processTab","processShiftTab","processSelection","clearSelection","toggleFieldList","getNextButton","allpivotButtons","getPrevButton","chartAxis","rowAxis","columnFilterValueAxis","columnFilterValueGroup","rowGroup","chartGroup","tableAxis","groupingbarButton","headerButton","getFocusedElement","nextButton","currentInfo","skipAction","showFieldList","toolbar","toolbarModule","activeElement","gridElement","getElementsByTagName","lastChild","prevButton","allPivotButtons_1","shiftKey","ctrlKey","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","rowIndex_1","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","pivotFieldListModule","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldElement","items_2","items_3","dropClass","VirtualScroll","previousValues","frozenPreviousValues","eventType","addInternalEvents","fCont","clearEvents","onHorizondalScroll","onVerticalScroll","common","onWheelScroll","setPageXY","onTouchScroll","isPreventScrollEvent","deltaMode","deltaY","getPointXY","pageXY","x","y","touches","pageX","pageY","pointerType","update","direction","rowValues_1","exactSize_1","section","scrollPosObject","vertical","hideWaitingPopup","showWaitingPopup","rowStartPos_1","pivot_1","sfBlazor","copyWithoutCircularReferences","interopAdaptor","invokeMethodAsync","then","updateBlazorData","exactPage","verticalSection","getEngine","scrollPage","pageRowStartPos","colValues_1","exactSize_2","horizontal","colStartPos_1","pivot_2","horizontalSection","pageColStartPos","verticalScrollScale","horizontalScrollScale","scrollDirection","horiOffset","vertiOffset","trim","scrollerBrowserLimit","excessMove","notLastPage","clientWidth","vWidth","clientHeight","movableTable","vHeight","removeInternalEvents","DrillThroughDialog","indexString","isUpdated","gridIndexObjects","gridData","showDrillThroughDialog","rawData","editSettings","allowInlineEditing","allowEditing","editCell","removeDrillThroughDialog","drillThroughDialog","createDrillThroughGrid","drillThroughGrid","dataWithPrimarykey","beforeClose","updateData","previousPosition","gridIndexObjectsValue_1","addItems","prevItems","allowCommandColumns","currModule_1","AddItem","RemoveItem","ModifiedItem","bulkChanges","gridIndex","drillThroughValue","Key","addedData","removedData","updatedData","eventArgs_1","currentData","previousData","gridResize","currentTarget","firstElementChild","numericTextBox","textBoxValue","indexValue","blur","textBoxElement","focusIn","dataPos","drillThroughBody","drillThroughBodyHeader","toolbarItems","Toolbar","ColumnChooser","showColumnChooser","gridColumns","allowPaging","formatData","dialogModule","gridObj","Edit","Page","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","isPrimaryKey","actionComplete","requestType","beforeBatchSave","frameGridColumns","reverse","validationRules","required","editType","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","drillThroughElement","valueCaption","aggType","tupleInfo","colOrdinal","getUniqueName","getDrillThroughData","maxRowsInDrillThrough","gridJSON","ColumnIndex","parsedObj","triggerDialog","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","valuetText","drillThrough","PivotChart","headerColl","columnGroupObject","fieldPosition","measuresNames","accumulationType","loadChart","chartSettings","colMeasurePos","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","zoomFactor","dataLabel","refresh","displayOption","primary","cls.PIVOTCHART","showToolbar","getGridWidthAsNumber","getChartHeight","chartSeries","AccumulationChart","Chart","enableMultiAxis","measureList","accEmptyPoint","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","groupHierarchyWithLevels","rKeys_1","rKey","firstRowCell","fieldPos","currrentLevel","cKeys","prevMemberCell","cKeys_1","cKey","cellIndex","measureAllow","colHeaders","columnSeries","yValue","refreshChart","persistSettings","getPersistData","columnDelimiter","columnHeader","chartType","currentColumn","currentSeries","frameChartSeries","xName","yName","emptyPointSettings","innerRadius","columnKeys_1","yAxisName","seriesEvent","pivotChart","bindChart","frameObjectWithKeys","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","chartElement","enableScrollOnMultiAxis","getChartAutoHeight","overflow","overflowX","isMultiAxisChange","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","PieSeries","FunnelSeries","PyramidSeries","AccumulationDataLabel","AccumulationLegend","AccumulationTooltip","legendSettings","tooltip","enableSmartLabels","center","pieCenter","enableBorderOnMouseMove","highLightMode","highlightMode","highlightPattern","titleStyle","subTitle","subTitleStyle","margin","background","selectionMode","accumulationSelectionMode","isMultiSelect","enableExport","selectedDataIndexes","enableAnimation","useGroupingSeparator","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","tooltipRender","loaded","resized","zoomSettings","chartArea","palettes","crosshair","isTransposed","enableSideBySidePlacement","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","axisLabelRender","multiLevelLabelClick","seriesIndex","pointIndex","creatMenu","accumulationMenu","scrollX","drillThroughModule","percentChart","percentAggregateTypes","valCnt","divider","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","plotOffsetTop","lengthofFormat","colIndexColl","rKeys_2","cKeys_2","fieldCount","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","span","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","getZoomFactor","calculatedWidth","seriesLength","templateFn","templateParser","tooltipTemplate","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","showMultiLevelLabels","majorTickLines","enableSelectionZooming","seriesName","point","columnText","rowText","getTooltipTemplate","rowFields","getHeaderField","columnFields","templateVariable","valueField","tooltipTemplateFn","isChartLoaded","alignIcon","multilabelAxisName","updateView","getString","getMenuItems","expand","collapse","drillMenuOpen","drillMenuSelect","enableItems","levelCol","labelInfo","memberUqName","fieldAvail","memIndex","drillArgs","drillInfo","drillItem","renderPivotGrid","zoomModule","isZoomed","Theme","axisLabelFont","fontWeight","axisTitleFont","chartTitleFont","chartSubTitleFont","crosshairLabelFont","tooltipLabelFont","legendLabelFont","stripLineLabelFont","stockEventFont","Animation","ChartSegment","Font","Margin","Border","Offset","Indexes","ChartArea","CrosshairSettings","DataLabelSettings","right","PivotChartConnectorStyle","PivotChartDataLabel","MarkerSettings","ErrorBarCapSettings","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","CrosshairTooltip","StripLineSettings","LabelBorder","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","ChartLocation","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","PivotChartSeriesErrorSettings","PivotChartSeriesTrendline","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","PivotChartSettingsIndexes","PivotChartSettingsMargin","PivotAxis","PivotTooltipSettings","PivotPieChartCenter","PivotZoomSettings","ChartSettings","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isPaging","updateDrilledItems","fieldDataObj","fieldListObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","query","frameMDXQuery","request","LCID","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","calColumnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","updateValueSortQuery","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_1","drillQuery","rawQuery","drillInfo_1","heirarchize","slicers","i_1","colUqName","getDimensionUniqueName","slicerUqName","dimension","hasAllMember","hierarchyNode","curElement","hierarchyNode_1","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","namedSetsPosition","colDepth","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","getCulture","getAxisFields","frameSortObject","setNamedSetsPosition","updateFieldlist","loadCalculatedMemberElements","updateFilterItems","xmlDoc","xmlaCellSet","countCells","newPage","prevPage","colMeasures","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","rowTuples","valCollection","measureInfo","getMeasureInfo","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","tuples","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","startTupPos","memPos","prevParent","typeColl","typeCollection","drillStartPos","startDrillUniquename","drillEndPos","firstTupMembers","drillAllow","withoutAllAllow","parentUniqueName","lastPos","lastMemPos","withoutAllDrilled","getCaptionCollectionWithMeasure","showTotals","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","memberUName","startsWith","memberCaption","parentUName","UName","currUName","currCaption","currLevel","uNames","captions","uName","uCollection","parentLevel","setDrillInfo","tuple","captionColection","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberPos","memberDepth","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","childMember","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","rPos","currentTuple","frameUniqueName","getParentUname","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","newPos","temporary","grandTotal","arrange","prevRowCell","prevColIndex","prevColRowCell","key_1","sortColumnHeaders","length_1","cellPos","l","length_2","q","weight","hgt","height1","hgt1","leng","m","pElement","cElement","o","hasLastMeasure","measureAvail","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","rowEndPos","startRowOrdinal","lastColCell","valElement","formatDate","mAxis","measureAxis","measureIndex","valueInfo","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","values_2","vOrdinalIndex","cRow","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillField","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","actualFilter","expression","parentHierarchy","isSelect","getFieldListItems","getAggregateType","isMembersAvail","selectedElements","parentNodes_1","currentItems","selectedElement","drilledItems","maxRows","filteritems","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","isSearchFilter","loadLevelMember","isAllFilterData","filterParentQuery","dimProp","generateMembers","loadLevelMembers","memberUQName","getCalcChildMembers","searchString","maxNodeLimit","parentUqName","expanded","nodeSelect","fieldDate","hierarchyElements","fields_2","isAllMemberAvail","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","spriteCssClass","fields_3","dimensionName","dimensionCaption","defaultHierarchy","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_4","fieldObj","loadHierarchyElements","dataFields_4","fields_5","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_6","levelCaption","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_7","measureGRPName","measuresGroups","success","Ajax","contentType","beforeSend","onSuccess","DOMParser","parseFromString","onFailure","send","httpRequest","setRequestHeader","btoa","connectionInfo","getMDXQuery","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","_this_1","lastFilterInfo","lastCalcFieldInfo","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","remoteData","defaultItems","isCellBoxMultiSelection","totColWidth","posCount","isModified","isInitialRendering","needsID","pivotRefresh","Component","XMLHttpRequest","setValue","mergePersistPivotData","PivotView_1","requiredModules","modules","allowConditionalFormatting","allowNumberFormatting","toolbarTemplate","preRender","isIE","info","isTouchMode","initProperties","renderToolTip","defaultLocale","total","noValue","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Min","SampleVar","PopulationVar","RunningTotals","Max","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","pdf","excel","csv","png","jpeg","svg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","grouping","true","false","decimalPlaces","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Currency","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormatingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","L10n","isDragging","onBeforeTooltipOpen","showTooltip","showTipPointer","mouseTrail","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","aggregateGroup","buildDefaultItems","exportGroupItems","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","chartPointClick","updatePageSettings","chartModule","colValues","rowValues","heightAsNumber","getWidthAsNumber","loadData","guid","renderEmptyGrid","withCredentials","onreadystatechange","onReadyStateChange","readyState","DONE","responseText","currentAction","currentMembers","dateMembers","updateFilterEvents","pivotCount","RowCount","ColumnCount","RowStartPosition","ColumnStartPosition","RowFirstLevel","ColumnFirstLevel","HeaderText","HeaderDelimiter","SortOrder","initEngine","isRequireUpdate","endDialog","exactSize","aggField","cField","rawDataArgs","editArgs","enableDrillThrough","stringify","params","aggregatedItem","calculatedItem","fetchRawDataArgs","hash","jsonObject","cellTemplateFn","spinnerTemplate","createSpinner","loadArgs","updateClass","renderComplete","generateData","events.dataReady","onContentReady","keyEntity","addOnPersist","loadPersistData","persistData","pivotData","blazdataSource","localStorage","getItem","showConditionalFormattingDialog","withHeader","onPropertyChanged","updateGroupingReport","refreshData","treeViewModule","fieldTable","renderLayout","clonedDataSet","dataSet","refreshToolbar","createChartMenu","compile","innerHtml","tempElement","firstChild","resetBlazorTemplate","clonedDataSource","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","formatUnit","showSpinner","hideSpinner","isRefreshGrid","isSorted","isFiltered","isAggChange","isCalcChange","interopArguments","enginePopulatedEventMethod","datasourceSettings","excelExportModule","pdfExportModule","chartExport","orientation","exportModule","printChart","print","chartDrillInfo","clonedDrillMembers_1","drillMembers","drilledItem_1","drillArgs_1","onOlapDrill","clonedDrillMembers","drilledMember","drillSet","itemPos","fieldListSpinnerElement","isEmptyGrid","virtualDiv","mCnt","verOffset","unwireEvents","gridCells","gridCells_1","templateObject","isGrandTotal","isTotal","valueSortInfo","updateBlazorTemplate","hasField","getRowText","getColText","limit","colText","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","parentAt","lastSelectedElement","mouseMoveHandler","mouseUpHandler","CellClicked","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","setCommonColumnsWidth","onWindowResize","rowDeselect","selectRow","cellClick","getSelectedCellsPos","setSavedSelectedCells","applyRowSelection","rCount","colStart","colEnd","rowStart","isCtrl","showPopup","queryStringArray","isToggle","activeColumns","actColPos","rowSelectedList","isTargetSelected","scrollModule","setWidth","setHeight","overflowY","isArray","clonedReport","pivot_3","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalLen","blazPivotValues","valLen","getData","aggregateObj","bindTriggerEvents","getObject","executeQuery","requiresCount","result","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","insertRule","createTextNode","conditionalSettings","ilen","jlen","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","isDateGroupUpdated","drillObj","settingsObj","isExists","removeButtonFocus","numberFormattingModule","isServerRendered","cls.ROOT","showNumberFormattingDialog","NotifyPropertyChanges","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","cancelButtonClick","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldList","pivotFieldList","pivotChange","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","dialogOpen","offsetTop","adaptiveElement","selectedNodes","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","onShowFieldList","show","updateAdaptiveCalculatedField","TreeViewRenderer","fieldListSort","renderTreeDialog","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","centerDiv","axisHeader","renderTreeView","headerWrapper","None","Ascend","Descend","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeStateChange","autoCheck","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","dialogClose","textChange","addNode","liList","disabledList","fieldInfo","draggedNode","dragEventArgs","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","droppableButton","wrapperElement","li_1","id_1","selectedNode_1","fieldInfo_1","updateCheckState","updateSelectedNodes","updateReportSettings","updateNodeStateChange","removeFieldArgs","dropArgs","chkState","checkClass","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","updateDropIndicator","PivotButton","menuOption","PivotFieldList","axisField","AxisFieldRenderer","renderPivotButton","valuePos","showValuesButton","groupingBarSettings","isMeasureFieldsAvail","buttonWrapper","data-tag","cls.PIVOT_BUTTON_CLASS","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","calcElement","removeElement","pivotButton","createDraggable","valueData","valueFiedDropDownList","ddlDiv","availColindex","columnData","firstValueRow","columnFieldDropDownList","delimiter_1","aggregation","filterMem","updateButtontext","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","validateDropdown","createSummaryType","createMenuOption","openCalculatedFieldDialog","buttonCall","draggable","Draggable","clone","enableTailMode","enableAutoScroll","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","filterCLass","cls.FILTER_COMMON_CLASS","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","loop","actualFilterItems","updatedFilterItems_1","cloneElement","intDestroy","detach","fieldListPopup","bindEvents","cursorAt","isNOU","targetTouches","cursor","isButtonDropped","droppableTarget","thisObj","pivotObj","mouseEventArgs","$this_1","parsedData","bindDialogEvents","updateDialogButtonEvents","ClearFilter","updateFilterState","updateCustomFilter","removeDataSourceSettings","inputElementString","focusElement","filterEventArgs","refreshPivotButtonState","setFocus","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","sNodeLength","pivotButtons_2","selectedButton","pivotButtons_3","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","captionData","frameCustomProperties","staticPivotGridModule","fieldListRender","requireRefresh","pivotDataSet","this$_2","getFieldCaption","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","dataArgs","updateOlapDataSource","pivotId","ID","VARP","CALC","isFormula","existingReport","dialog","inputObj","droppable","newFields","isFieldExist","formulaText","fieldText","formatText","isEdit","currentFieldName","confirmPopUp","displayMenu","cls.GRID_REMOVE","createConfirmDialog","fieldClickHandler","cls.FORMAT","renderMobileLayout","accordionClickHandler","originalEvent","optionElement","accordionCreated","allElement","accordion","append","clearFormula","treeNode","edited","customString","memberTypeDrop","hierarchyDrop","formatDrop","readonly","curMenu","removeCalcField","calcfields","removeItem","removeNodes","validSummaryTypes","getValidSummaryType","duplicateTypes","createMenu","offset","selectContextMenu","applyFormula","currentObj","isExist","calculatedField","getCalculatedFieldInfo","calcInfo","currentFormula","updateFormatSettings","addFormula","newFormat","isFormatExist","showError","cls.CALCINPUT","calcFields","getFieldListData","typeVal","icon","fieldDropped","textCovered","currentValue","cursorPos","selectionStart","textAfterText","textBeforeText","setSelectionRange","createDialog","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","timeOut","renderDialogElements","outerDiv","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","olapCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","formatStringData","createOlapDropElements","mData","fData","fieldData","memberTypeData_1","formatStringData_1","memberTypeObj","hierarchyListObj","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","editElement","editWrapper","liTextElement_1","spaceElement","prepend","createTypeContainer","input","data-ftxt","data-value","menuTypes","getAccordionData","cls.FLAT","cancelBtnClick","formatInputObj","Accordion","expanding","accordionExpand","clicked","created","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","isRemove","replaceFormula","cls.OK_BUTTON_CLASS","FieldList","initiateModule","aggregateCellInfo","updateControl","currentWidth","actualWidth","abs","AxisFields","indentDiv","GroupingBar","touchObj","Touch","tapHold","tapHoldHandler","groupingTable","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","rowPanel","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","axisPanels_1","displayMode","groupingChartTable","appendToElement","emptyRowCount","emptyHeader","colGroupElement","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","rowHeader_1","rhElement","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","valueColWidth","setColWidth","dropIndicatorUpdate","ConditionalFormatting","fieldsDropDown","conditionsDropDown","fontNameDropDown","fontSizeDropDown","addButtonClick","cls.FLAT_CLASS","refreshConditionValues","destroyColorPickers","addFormat","createDialogElements","renderDropDowns","renderColorPicker","innerDiv","table","tRow","td","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","cls.INPUT","valuespan","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","popupHeight","popupWidth","measureChange","conditionChange","fontNames","fontNameChange","fontSizeChange","ColorPicker","cls.FORMAT_COLOR_PICKER","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","charAt","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","rgb","round","currentReport","createToolbar","renderDialog","tool","getItems","allowKeyboard","viewStr","replaceChild","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","resolve","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","toDisable","cls.TOOLBAR_GRID","menuItemClick","validTypes","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","reportLoad","itemData","saveReport","saveArgs","dialogShow","mdxQueryDialog","mdxDialog","renderMDXDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","newArgs","createNewReport","okBtnClick","copyMDXQuery","textArea","execCommand","err","reportInput","isExist_2","_this_3","reports_1","updateReportList","isExist_3","_this_4","renameText","renameArgs","isExist_1","_this_2","okButtonClick","removeArgs","isReportExists","getValidChartType","separator","cls.TOOLBAR_CHART","chartMenu","whitespaceRemove","focusToolBar","beforeItemRender","multipleAxesCheckbox","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","subTotalMenu","updateSubtotalSelection","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","updateItemElements","itemElements_1","inputCheckbox","checkboxObj","getLableState","showLableState","getAllChartItems","cls.PIVOT_DISABLE_ICON","_this_5","PdfPageOrientation","Landscape","createChartTypeDialog","updateChartType","chartTypes","chartDialog","chartTypesDialog","getDialogContent","chartTypeDialogUpdate","checkedShow","chartLableState","isMultiAxis","mainWrapper","optionWrapperDiv","optionTextDiv","dropOptionDiv","chartTypeDatasource","changeDropDown","checkboxWrap","labelCheckboxWrap","NumberFormatting","updateFormatting","renderControls","outerElement","tValue","valueLable","valueDrop","formatLable","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","valueChange","formatDropDown","dropDownChange","groupingDropDown","decimalDropDown","first","insertFormat","formatName","Grouping","isUpdate","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","currentField","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","checkBoxSelectionModule","activeLi","selectedInterval","intervalObj","min","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupOrders_1","orderedSettings","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.PivotView","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping"],"mappings":"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"}