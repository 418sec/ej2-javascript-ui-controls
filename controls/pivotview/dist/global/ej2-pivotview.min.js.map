{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/common/actions/common.js","../../src/pivotview/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/common/base/themes.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/base/pivotview.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        val = (value && value.getDay) ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : !isNaN(Number(value)) ?\n            'number' : typeof (value);\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                /* tslint:disable:no-any */\n                var framedSet = {};\n                /* tslint:enable:no-any */\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] = this.getClonedPivotValueObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotUtil.getClonedPivotValueObj = function (data) {\n        var keyPos = 0;\n        /* tslint:disable:no-any */\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.getDefinedObj = function (data) {\n        var keyPos = 0;\n        var framedSet = {};\n        /* tslint:enable:no-any */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                if (!(data[fields[keyPos]] === null || data[fields[keyPos]] === undefined)) {\n                    framedSet[fields[keyPos]] = data[fields[keyPos]];\n                }\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.isContainCommonElements = function (collection1, collection2) {\n        var isContain = false;\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    /* tslint:enable:no-any */\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = this.getDefinedObj({\n            type: dataSourceSettings.type,\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            fieldMapping: this.cloneFieldSettings(dataSourceSettings.fieldMapping),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings),\n            showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n            authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n        });\n        /* tslint:enable:no-any */\n        return clonesDataSource;\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            this.setPivotProperties(control, {\n                dataSourceSettings: this.getDefinedObj({\n                    type: dataSourceSettings.type,\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    fieldMapping: dataSourceSettings.fieldMapping,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings,\n                    showAggregationOnValueField: dataSourceSettings.showAggregationOnValueField,\n                    authentication: this.CloneAuthenticationObject(dataSourceSettings.authentication),\n                })\n                /* tslint:enable:no-any */\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                var field = {};\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type,\n                    dataType: set.dataType,\n                    showFilterIcon: set.showFilterIcon,\n                    showSortIcon: set.showSortIcon,\n                    showRemoveIcon: set.showRemoveIcon,\n                    showValueTypeIcon: set.showValueTypeIcon,\n                    showEditIcon: set.showEditIcon,\n                    allowDragAndDrop: set.allowDragAndDrop\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    order: set.order\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneAuthenticationObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                userName: collection.userName,\n                password: collection.password\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push(this.getDefinedObj({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                    /* tslint:disable:no-any */\n                }));\n                /* tslint:enable:no-any */\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotUtil.getFieldInfo = function (fieldName, control) {\n        var rows = this.cloneFieldSettings(control.dataSourceSettings.rows);\n        var columns = this.cloneFieldSettings(control.dataSourceSettings.columns);\n        var values = this.cloneFieldSettings(control.dataSourceSettings.values);\n        var filters = this.cloneFieldSettings(control.dataSourceSettings.filters);\n        var fields = [rows, columns, values, filters];\n        for (var i = 0, len = fields.length; i < len; i++) {\n            for (var j = 0, cnt = (fields[i] ? fields[i].length : 0); j < cnt; j++) {\n                if (fields[i][j] && fields[i][j].name === fieldName) {\n                    /* tslint:disable-next-line:max-line-length */\n                    return { fieldName: fieldName, fieldItem: fields[i][j], axis: i === 0 ? 'rows' : i === 1 ? 'columns' : i === 2 ? 'values' : 'filters', position: j };\n                }\n            }\n        }\n        var fieldList = control.dataType === 'olap' ?\n            control.olapEngineModule.fieldList[fieldName] : control.engineModule.fieldList[fieldName];\n        var fieldItem = (fieldList ? {\n            name: fieldName,\n            caption: fieldList.caption,\n            baseField: fieldList.baseField,\n            baseItem: fieldList.baseItem,\n            isCalculatedField: fieldList.isCalculatedField,\n            isNamedSet: fieldList.isNamedSets,\n            showNoDataItems: fieldList.showNoDataItems,\n            showSubTotals: fieldList.showSubTotals,\n            type: fieldList.aggregateType,\n            showFilterIcon: fieldList.showFilterIcon,\n            showSortIcon: fieldList.showSortIcon,\n            showRemoveIcon: fieldList.showRemoveIcon,\n            showValueTypeIcon: fieldList.showValueTypeIcon,\n            showEditIcon: fieldList.showEditIcon,\n            allowDragAndDrop: fieldList.allowDragAndDrop\n        } : undefined);\n        return { fieldName: fieldName, fieldItem: fieldItem, axis: 'fieldlist', position: -1 };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.isButtonIconRefesh = function (prop, oldProp, newProp) {\n        var isButtonRefresh = false;\n        try {\n            if (prop === 'dataSourceSettings' && oldProp.dataSourceSettings && newProp.dataSourceSettings) {\n                var propValidation = ['notAvail', 'notAvail', 'notAvail', 'notAvail'];\n                var oldAxesProp = Object.keys(oldProp.dataSourceSettings);\n                var newAxesProp = Object.keys(newProp.dataSourceSettings);\n                if (oldAxesProp && newAxesProp && newAxesProp.length > 0 && oldAxesProp.length === newAxesProp.length) {\n                    var axes = ['rows', 'columns', 'values', 'filters'];\n                    /* tslint:disable:no-any */\n                    for (var i = 0; i < newAxesProp.length; i++) {\n                        var oldAxis = (newAxesProp[i] in oldProp.dataSourceSettings && !isNullOrUndefined(oldProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(oldProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        var newAxis = (newAxesProp[i] in newProp.dataSourceSettings && !isNullOrUndefined(newProp.dataSourceSettings[newAxesProp[i]])) ? Object.keys(newProp.dataSourceSettings[newAxesProp[i]]) : [];\n                        if (axes.indexOf(newAxesProp[i]) !== -1 && axes.indexOf(oldAxesProp[i]) !== -1 &&\n                            oldAxis && newAxis && newAxis.length > 0 && oldAxis.length === newAxis.length) {\n                            /* tslint:disable-next-line:max-line-length */\n                            var options = ['showFilterIcon', 'showSortIcon', 'showRemoveIcon', 'showValueTypeIcon', 'showEditIcon', 'allowDragAndDrop'];\n                            for (var j = 0; j < newAxis.length; j++) {\n                                var oldAxisProp = Object.keys(oldProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                var newAxisProp = Object.keys(newProp.dataSourceSettings[newAxesProp[i]][newAxis[j]]);\n                                for (var k = 0; k < newAxisProp.length; k++) {\n                                    if (options.indexOf(newAxisProp[k]) !== -1 && options.indexOf(oldAxisProp[k]) !== -1) {\n                                        propValidation[i] = 'update';\n                                    }\n                                    else {\n                                        propValidation[i] = 'break';\n                                        break;\n                                    }\n                                }\n                                if (propValidation[i] === 'break') {\n                                    break;\n                                }\n                            }\n                        }\n                        else {\n                            propValidation[i] = 'break';\n                        }\n                        if (propValidation[i] === 'break') {\n                            break;\n                        }\n                    }\n                    /* tslint:enable:no-any */\n                }\n                var a = 0;\n                var b = 0;\n                var c = 0;\n                for (var _i = 0, propValidation_1 = propValidation; _i < propValidation_1.length; _i++) {\n                    var validation = propValidation_1[_i];\n                    if (validation === 'break') {\n                        a++;\n                    }\n                    if (validation === 'notAvail') {\n                        b++;\n                    }\n                    if (validation === 'update') {\n                        c++;\n                    }\n                }\n                isButtonRefresh = (a > 0 || b === 4) ? false : (a === 0 && b < 4 && c > 0);\n            }\n        }\n        catch (exception) {\n            isButtonRefresh = false;\n        }\n        return isButtonRefresh;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPivotValues = function (pivotValues) {\n        var values = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                values[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        values[i][j] = {\n                            axis: pivotValues[i][j].Axis,\n                            actualText: pivotValues[i][j].ActualText,\n                            indexObject: pivotValues[i][j].IndexObject,\n                            index: pivotValues[i][j].Index,\n                            rowHeaders: pivotValues[i][j].RowHeaders,\n                            columnHeaders: pivotValues[i][j].ColumnHeaders,\n                            formattedText: pivotValues[i][j].FormattedText,\n                            actualValue: pivotValues[i][j].ActualValue,\n                            rowIndex: pivotValues[i][j].RowIndex,\n                            colIndex: pivotValues[i][j].ColIndex,\n                            colSpan: pivotValues[i][j].ColSpan,\n                            level: pivotValues[i][j].Level,\n                            rowSpan: pivotValues[i][j].RowSpan,\n                            isSum: pivotValues[i][j].IsSum,\n                            isGrandSum: pivotValues[i][j].IsGrandSum,\n                            valueSort: pivotValues[i][j].ValueSort,\n                            ordinal: pivotValues[i][j].Ordinal,\n                            hasChild: pivotValues[i][j].HasChild,\n                            isDrilled: pivotValues[i][j].IsDrilled,\n                            value: pivotValues[i][j].Value,\n                            type: pivotValues[i][j].Type,\n                            members: pivotValues[i][j].Members\n                        };\n                    }\n                }\n            }\n        }\n        return values;\n    };\n    PivotUtil.formatPdfHeaderFooter = function (pdf) {\n        var contents = [];\n        if (!isNullOrUndefined(pdf)) {\n            for (var i = 0; i < pdf.length; i++) {\n                var a = pdf[i];\n                var content = {\n                    type: a.Type,\n                    pageNumberType: a.PageNumberType,\n                    style: a.Style ? {\n                        penColor: a.Style.PenColor,\n                        penSize: a.Style.PenSize,\n                        dashStyle: a.Style.DashStyle,\n                        textBrushColor: a.Style.TextBrushColor,\n                        textPenColor: a.Style.TextPenColor,\n                        fontSize: a.Style.FontSize,\n                        hAlign: a.Style.HAlign,\n                        vAlign: a.Style.VAlign\n                    } : a.Style,\n                    points: a.Points !== null ? {\n                        x1: a.Points.X1,\n                        y1: a.Points.Y1,\n                        x2: a.Points.X2,\n                        y2: a.Points.Y2\n                    } : null,\n                    format: a.Format,\n                    position: a.Position !== null ? {\n                        x: a.Position.X,\n                        y: a.Position.Y,\n                    } : null,\n                    size: a.Size !== null ? {\n                        height: a.Size.Height,\n                        width: a.Size.Width,\n                    } : null,\n                    src: a.Src,\n                    value: a.Value,\n                    font: a.Font\n                };\n                contents.push(content);\n            }\n        }\n        return contents;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatPdfExportProperties = function (pdf) {\n        var values;\n        values = this.getDefinedObj({\n            pageOrientation: typeof pdf.PageOrientation === 'string' ? pdf.PageOrientation : null,\n            pageSize: typeof pdf.PageSize === 'string' ? pdf.PageSize : null,\n            header: !isNullOrUndefined(pdf.Header) ? {\n                fromTop: pdf.Header.FromTop,\n                height: pdf.Header.Height,\n                contents: this.formatPdfHeaderFooter(pdf.Header.Contents),\n            } : null,\n            columns: pdf.Columns,\n            footer: !isNullOrUndefined(pdf.Footer) ? {\n                fromTop: pdf.Footer.FromBottom,\n                height: pdf.Footer.Height,\n                contents: this.formatPdfHeaderFooter(pdf.Footer.Contents),\n            } : null,\n            includeHiddenColumn: pdf.IncludeHiddenColumn,\n            dataSource: pdf.DataSource,\n            exportType: typeof pdf.ExportType === 'string' ? pdf.ExportType : null,\n            theme: !isNullOrUndefined(pdf.Theme) ? {\n                header: pdf.Theme.Header,\n                record: pdf.Theme.Record,\n                caption: pdf.Theme.Caption\n            } : null,\n            fileName: pdf.FileName,\n            hierarchyExportMode: typeof pdf.HierarchyExportMode === 'string' ? pdf.HierarchyExportMode : null,\n            allowHorizontalOverflow: pdf.AllowHorizontalOverflow\n        });\n        return values;\n    };\n    PivotUtil.formatExcelStyle = function (style) {\n        var prop;\n        if (!isNullOrUndefined(style)) {\n            prop = this.getDefinedObj({\n                fontColor: style.FontColor,\n                fontName: style.FontName,\n                fontSize: style.FontSize,\n                hAlign: style.HAlign === String ? style.HAlign : null,\n                vAlign: style.VAlign === String ? style.VAlign : null,\n                bold: style.Bold,\n                indent: style.Indent,\n                italic: style.Italic,\n                underline: style.Underline,\n                backColor: style.BackColor,\n                wrapText: style.WrapText,\n                borders: style.Borders,\n                numberFormat: style.NumberFormat,\n                type: style.Type\n            });\n        }\n        return prop;\n    };\n    PivotUtil.formatExcelCell = function (cell) {\n        var cells = [];\n        if (!isNullOrUndefined(cell)) {\n            for (var i = 0; i < cell.length; i++) {\n                var prop = this.getDefinedObj({\n                    index: !isNullOrUndefined(cell[i].Index) ? cell[i].Index : null,\n                    colSpan: !isNullOrUndefined(cell[i].ColSpan) ? cell[i].ColSpan : null,\n                    value: !isNullOrUndefined(cell[i].Value) ? cell[i].Value : null,\n                    hyperlink: {\n                        target: !isNullOrUndefined(cell[i].Hyperlink) ? cell[i].Hyperlink.Target : null,\n                        displayText: !isNullOrUndefined(cell[i].Hyperlink) ? cell[i].Hyperlink.DisplayText : null\n                    },\n                    styles: this.formatExcelStyle(cell[i].Style),\n                    rowSpan: !isNullOrUndefined(cell[i].RowSpan) ? cell[i].RowSpan : null\n                });\n            }\n        }\n        return cells;\n    };\n    PivotUtil.formatExcelHeaderFooter = function (excel) {\n        var rows = [];\n        if (!isNullOrUndefined(excel)) {\n            for (var i = 0; i < excel.Rows.length; i++) {\n                var row = excel.Rows[i];\n                var prop = this.getDefinedObj({\n                    index: !isNullOrUndefined(row.Index) ? row.Index : null,\n                    cells: this.formatExcelCell(row.Cells),\n                    grouping: !isNullOrUndefined(row.Grouping) ? row.Grouping : null\n                });\n                rows.push(prop);\n            }\n        }\n        return rows;\n    };\n    PivotUtil.formatExcelExportProperties = function (excel) {\n        var prop;\n        prop = this.getDefinedObj({\n            dataSource: excel.DataSource,\n            query: excel.Query,\n            multipleExport: this.getDefinedObj({\n                type: !isNullOrUndefined(excel.MultipleExport) ? excel.MultipleExport.Type : null,\n                blankRows: !isNullOrUndefined(excel.MultipleExport) ? excel.MultipleExport.BlankRows : null\n            }),\n            header: this.getDefinedObj({\n                headerRows: !isNullOrUndefined(excel.Header) ? excel.Header.HeaderRows : null,\n                rows: this.formatExcelHeaderFooter(excel.Header)\n            }),\n            footer: this.getDefinedObj({\n                footerRows: !isNullOrUndefined(excel.Footer) ? excel.Footer.FooterRows : null,\n                rows: this.formatExcelHeaderFooter(excel.Footer)\n            }),\n            columns: excel.Columns,\n            exportType: typeof excel.ExportType === 'string' ? excel.ExportType : undefined,\n            includeHiddenColumn: excel.IncludeHiddenColumn,\n            theme: !isNullOrUndefined(excel.Theme) ? {\n                header: this.formatExcelStyle(excel.Theme.Header),\n                record: this.formatExcelStyle(excel.Theme.Record),\n                caption: this.formatExcelStyle(excel.Theme.Caption)\n            } : undefined,\n            fileName: excel.FileName,\n            hierarchyExportMode: typeof excel.HierarchyExportMode === 'string' ? excel.HierarchyExportMode : undefined\n        });\n        return prop;\n    };\n    /* tslint:disable:no-any */\n    PivotUtil.formatFieldList = function (fieldList) {\n        var keys = Object.keys(fieldList);\n        var fList = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (fieldList[keys[i]]) {\n                fList[keys[i]] = {\n                    id: fieldList[keys[i]].Id,\n                    caption: fieldList[keys[i]].Caption,\n                    type: fieldList[keys[i]].Type,\n                    formatString: fieldList[keys[i]].FormatString,\n                    index: fieldList[keys[i]].Index,\n                    members: fieldList[keys[i]].Members,\n                    formattedMembers: fieldList[keys[i]].FormattedMembers,\n                    dateMember: fieldList[keys[i]].DateMember,\n                    filter: fieldList[keys[i]].Filter,\n                    sort: fieldList[keys[i]].Sort,\n                    aggregateType: fieldList[keys[i]].AggregateType,\n                    baseField: fieldList[keys[i]].BaseField,\n                    baseItem: fieldList[keys[i]].BaseItem,\n                    filterType: fieldList[keys[i]].FilterType,\n                    format: fieldList[keys[i]].Format,\n                    formula: fieldList[keys[i]].Formula,\n                    isSelected: fieldList[keys[i]].IsSelected,\n                    isExcelFilter: fieldList[keys[i]].IsExcelFilter,\n                    showNoDataItems: fieldList[keys[i]].ShowNoDataItems,\n                    isCustomField: fieldList[keys[i]].IsCustomField,\n                    showFilterIcon: fieldList[keys[i]].ShowFilterIcon,\n                    showSortIcon: fieldList[keys[i]].ShowSortIcon,\n                    showRemoveIcon: fieldList[keys[i]].ShowRemoveIcon,\n                    showEditIcon: fieldList[keys[i]].ShowEditIcon,\n                    showValueTypeIcon: fieldList[keys[i]].ShowValueTypeIcon,\n                    allowDragAndDrop: fieldList[keys[i]].AllowDragAndDrop,\n                    isCalculatedField: fieldList[keys[i]].IsCalculatedField,\n                    showSubTotals: fieldList[keys[i]].ShowSubTotals\n                };\n            }\n        }\n        return fList;\n    };\n    PivotUtil.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    PivotUtil.getLocalizedObject = function (control) {\n        var locale = new Object();\n        locale[\"Null\"] = control.localeObj.getConstant('null');\n        locale[\"Years\"] = control.localeObj.getConstant('Years');\n        locale[\"Quarters\"] = control.localeObj.getConstant('Quarters');\n        locale[\"Months\"] = control.localeObj.getConstant('Months');\n        locale[\"Days\"] = control.localeObj.getConstant('Days');\n        locale[\"Hours\"] = control.localeObj.getConstant('Hours');\n        locale[\"Minutes\"] = control.localeObj.getConstant('Minutes');\n        locale[\"Seconds\"] = control.localeObj.getConstant('Seconds');\n        locale[\"QuarterYear\"] = control.localeObj.getConstant('QuarterYear');\n        locale[\"Of\"] = control.localeObj.getConstant('of');\n        locale[\"Qtr\"] = control.localeObj.getConstant('qtr');\n        locale[\"Undefined\"] = control.localeObj.getConstant('undefined');\n        locale[\"GroupOutOfRange\"] = control.localeObj.getConstant('groupOutOfRange');\n        locale[\"Group\"] = control.localeObj.getConstant('group');\n        return locale;\n    };\n    PivotUtil.updateReport = function (control, report) {\n        control.setProperties({ dataSourceSettings: { rows: [] } }, true);\n        control.setProperties({ dataSourceSettings: { columns: [] } }, true);\n        control.setProperties({ dataSourceSettings: { formatSettings: [] } }, true);\n        for (var i = 0; i < report.Rows.length; i++) {\n            control.dataSourceSettings.rows.push({\n                name: report.Rows[i].Name,\n                caption: report.Rows[i].Caption,\n                showNoDataItems: report.Rows[i].ShowNoDataItems,\n                baseField: report.Rows[i].BaseField,\n                baseItem: report.Rows[i].BaseItem,\n                showFilterIcon: report.Rows[i].ShowFilterIcon,\n                showSortIcon: report.Rows[i].ShowSortIcon,\n                showEditIcon: report.Rows[i].ShowEditIcon,\n                showRemoveIcon: report.Rows[i].ShowRemoveIcon,\n                showSubTotals: report.Rows[i].ShowValueTypeIcon,\n                allowDragAndDrop: report.Rows[i].AllowDragAndDrop,\n                axis: report.Rows[i].Axis,\n                dataType: report.Rows[i].DataType,\n                isCalculatedField: report.Rows[i].IsCalculatedField,\n                showValueTypeIcon: report.Rows[i].ShowValueTypeIcon,\n                type: report.Rows[i].Type\n            });\n        }\n        for (var i = 0; i < report.Columns.length; i++) {\n            control.dataSourceSettings.columns.push({\n                name: report.Columns[i].Name,\n                caption: report.Columns[i].Caption,\n                showNoDataItems: report.Columns[i].ShowNoDataItems,\n                baseField: report.Columns[i].BaseField,\n                baseItem: report.Columns[i].BaseItem,\n                showFilterIcon: report.Columns[i].ShowFilterIcon,\n                showSortIcon: report.Columns[i].ShowSortIcon,\n                showEditIcon: report.Columns[i].ShowEditIcon,\n                showRemoveIcon: report.Columns[i].ShowRemoveIcon,\n                showSubTotals: report.Columns[i].ShowValueTypeIcon,\n                allowDragAndDrop: report.Columns[i].AllowDragAndDrop,\n                axis: report.Columns[i].Axis,\n                dataType: report.Columns[i].DataType,\n                isCalculatedField: report.Columns[i].IsCalculatedField,\n                showValueTypeIcon: report.Columns[i].ShowValueTypeIcon,\n                type: report.Columns[i].Type\n            });\n        }\n        for (var i = 0; i < report.FormatSettings.length; i++) {\n            control.dataSourceSettings.formatSettings.push({\n                name: report.FormatSettings[i].Name,\n                format: report.FormatSettings[i].Format,\n                type: report.FormatSettings[i].Type,\n                currency: report.FormatSettings[i].Currency,\n                maximumFractionDigits: report.FormatSettings[i].MaximumFractionDigits,\n                maximumSignificantDigits: report.FormatSettings[i].MaximumSignificantDigits,\n                minimumFractionDigits: report.FormatSettings[i].MinimumFractionDigits,\n                minimumIntegerDigits: report.FormatSettings[i].MinimumIntegerDigits,\n                minimumSignificantDigits: report.FormatSettings[i].MinimumSignificantDigits,\n                skeleton: report.FormatSettings[i].Skeleton,\n                useGrouping: report.FormatSettings[i].UseGrouping\n            });\n        }\n    };\n    PivotUtil.generateUUID = function () {\n        var d = new Date().getTime();\n        var d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16;\n            if (d > 0) {\n                r = (d + r) % 16 | 0;\n                d = Math.floor(d / 16);\n            }\n            else {\n                r = (d2 + r) % 16 | 0;\n                d2 = Math.floor(d2 / 16);\n            }\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        /** @hidden */\n        this.fieldKeys = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        this.fieldMapping = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn) {\n        this.getValueCellInfo = fn;\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rowGrandTotal = null;\n        this.columnGrandTotal = null;\n        this.removeRowGrandTotal = false;\n        this.removeColumnGrandTotal = false;\n        this.isValueHasAdvancedAggregate = false;\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        var fields;\n        var val;\n        var filterRw;\n        this.globalize = new Internationalization();\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.enableSort = dataSource.enableSorting;\n        this.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true : dataSource.showHeaderWhenEmpty;\n        this.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true : dataSource.showColumnSubTotals;\n        this.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true : dataSource.showRowGrandTotals;\n        this.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true : dataSource.showColumnGrandTotals;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = dataSource;\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = (isBlazor() && !dataSource.dataSource && this.data && this.data.length > 0) ?\n                this.data : dataSource.dataSource;\n        }\n        if (this.data && this.data[0]) {\n            if (!this.fieldList) {\n                if (dataSource.type === 'CSV') {\n                    this.fields = this.data.shift();\n                }\n                else {\n                    this.fields = Object.keys(this.data[0]);\n                }\n                for (var i = 0; i < this.fields.length; i++) {\n                    this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n                }\n            }\n            if (customProperties && customProperties.pageSettings && customProperties.pageSettings.allowDataCompression) {\n                this.actualData = this.data;\n                this.data = this.getGroupedRawData(dataSource);\n            }\n            this.rows = dataSource.rows ? dataSource.rows : [];\n            this.columns = dataSource.columns ? dataSource.columns : [];\n            this.filters = dataSource.filters ? dataSource.filters : [];\n            this.values = dataSource.values ? dataSource.values : [];\n            this.formats = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.groups = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            this.fieldMapping = dataSource.fieldMapping ? dataSource.fieldMapping : [];\n            fields = this.getGroupData(this.data);\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fieldKeys[this.fields[i]] = dataSource.type === 'CSV' ? i : this.fields[i];\n            }\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMutiMeasures = this.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = this.pageSettings && this.pageSettings.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(dataSource, Object.keys(this.fieldList));\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var columnLength = this.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.columns[columnLength].name] = this.columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (dataSource, fields) {\n        var report = {};\n        report[0] = dataSource.rows;\n        report[1] = dataSource.columns;\n        report[2] = dataSource.values;\n        report[3] = dataSource.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if ((this.excludeFields.indexOf(report[pos][cnt].name) > -1) || (!isNullOrUndefined(fields) && fields.indexOf(report[pos][cnt].name) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                }\n            }\n            pos++;\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = this.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[this.fieldKeys[countFields[vPos]]] = isNullOrUndefined(currData[this.fieldKeys[countFields[vPos]]]) ? currData[this.fieldKeys[countFields[vPos]]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[this.fieldKeys[headerFields[hPos]]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[this.fieldKeys[currFieldName]];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                groupRawData[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    /* tslint:enable */\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getGroupData = function (data) {\n        var _this = this;\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if (group.type === 'Date' && this_1.groupingFields[fieldName]) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' || !this_1.groupingFields[fieldName]) {\n                        /* tslint:disable:typedef */\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (Number(a[_this.fieldKeys[fieldName]]) > Number(b[_this.fieldKeys[fieldName]]))\n                                ? 1 : ((Number(b[_this.fieldKeys[fieldName]]) > Number(a[_this.fieldKeys[fieldName]]))\n                                ? -1 : 0); });\n                        }\n                        /* tslint:enable:typedef */\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                else if (group.type === 'Custom' && this_1.fields.indexOf(fieldName + '_custom_group') > -1) {\n                    return { value: fieldkeySet };\n                }\n                var len = data.length;\n                /* tslint:disable:max-line-length */\n                while (len--) {\n                    var item = data[len];\n                    if (item[this_1.fieldKeys[fieldName]] && group.type === 'Date') {\n                        var date = new Date(item[this_1.fieldKeys[fieldName]].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setFullYear(date.getFullYear())).toString());\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), newDate.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setHours(date.getHours())).toString());\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setMinutes(date.getMinutes())).toString());\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                            if (this_1.fields.indexOf(newFieldName) === -1) {\n                                                this_1.fields.push(newFieldName);\n                                            }\n                                            item[this_1.fieldKeys[newFieldName]] = (isInRangeAvail ? undefined : new Date(newDate.setSeconds(date.getSeconds())).toString());\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, Number(item[this_1.fieldKeys[fieldName]]));\n                        item[this_1.fieldKeys[fieldName]] = isInRangeAvail ? undefined : item[this_1.fieldKeys[fieldName]];\n                    }\n                    else if (item[this_1.fieldKeys[fieldName]] && group.type === 'Custom' && group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            {\n                                var cGroup = customGroups[i];\n                                if (cGroup.items && cGroup.items.length > 1) {\n                                    customGroupFieldName = newFieldName;\n                                    this_1.fieldKeys[newFieldName] = this_1.dataSourceSettings.type === 'CSV' ? (this_1.fieldKeys[newFieldName] ? this_1.fieldKeys[newFieldName] : this_1.fields.length) : newFieldName;\n                                    if (this_1.fields.indexOf(newFieldName) === -1) {\n                                        this_1.fields.push(newFieldName);\n                                    }\n                                    var isDataMatch = PivotUtil.inArray(item[this_1.fieldKeys[fieldName]].toString(), cGroup.items) === -1 ? false : true;\n                                    item[this_1.fieldKeys[newFieldName]] = (isDataMatch ? (cGroup.groupName && cGroup.groupName !== '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue && groupValue !== item[this_1.fieldKeys[fieldName]].toString()) ?\n                                        groupValue : item[this_1.fieldKeys[fieldName]].toString());\n                                    groupValue = item[this_1.fieldKeys[newFieldName]];\n                                }\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    //this.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.rows;\n                                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                                    while (gCnt--) {\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + (actualField.caption ? actualField.caption : actualField.name) + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                                showFilterIcon: actualField.showFilterIcon,\n                                                showSortIcon: actualField.showSortIcon,\n                                                showEditIcon: actualField.showEditIcon,\n                                                showRemoveIcon: actualField.showRemoveIcon,\n                                                showSubTotals: actualField.showValueTypeIcon,\n                                                allowDragAndDrop: actualField.allowDragAndDrop\n                                            };\n                                            axis.splice(i, 0, newField);\n                                        }\n                                    }\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.formats.length; i < len_3; i++) {\n                            if (this_1.formats[i].name === groupKeys[gCnt]) {\n                                this_1.formats.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.formats.push(formatSettings);\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var startValue = void 0;\n                    var endValue = void 0;\n                    var cStartValue = void 0;\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    while (cnt < dataLength) {\n                        unframedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        if (data[cnt][this_1.fieldKeys[fieldName]] && framedSet.indexOf(Number(data[cnt][this_1.fieldKeys[fieldName]])) === -1) {\n                            framedSet.push(Number(data[cnt][this_1.fieldKeys[fieldName]]));\n                        }\n                        cnt++;\n                    }\n                    var framedSetLength = Math.max.apply(Math, framedSet);\n                    for (var i = framedSet[0], len_4 = framedSetLength; i < len_4; i++) {\n                        if (unframedSet.indexOf(i) < 0) {\n                            var duplicateData = this_1.frameData(data[0]);\n                            duplicateData[this_1.fieldKeys[fieldName]] = i;\n                            var index = unframedSet.lastIndexOf(i - 1);\n                            unframedSet.splice(index + 1, 0, i);\n                            data.splice(index + 1, 0, duplicateData);\n                        }\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        if (data[cnt] && data[cnt][this_1.fieldKeys[fieldName]]) {\n                            cStartValue = Number(data[cnt][this_1.fieldKeys[fieldName]]);\n                            cEndValue = cStartValue + (group.rangeInterval - 1);\n                            startValue = (!startValue) ? cStartValue : startValue;\n                            endValue = ((!endValue) ? ((cEndValue > framedSetLength) ? framedSetLength : cEndValue) : ((endValue > framedSetLength) ? framedSetLength : endValue));\n                            if (cStartValue >= startValue && cStartValue <= endValue) {\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            else if (cStartValue > endValue && cStartValue === endValue + 1) {\n                                startValue = endValue + 1;\n                                endValue = ((startValue + (group.rangeInterval - 1) > framedSetLength) ? framedSetLength : startValue + (group.rangeInterval - 1));\n                                data[cnt][this_1.fieldKeys[fieldName]] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            var keys = Object.keys(data[cnt]);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((data[cnt][key]) ? true : false);\n                            }\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? data[cnt] : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_5 = this_1.formats.length; i < len_5; i++) {\n                        if (this_1.formats[i].name === fieldName) {\n                            this_1.formats.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var dataFields = this_1.rows;\n                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                    var pattern = [];\n                    if (!caption || caption === '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption === '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                        showSubTotals: actualField.showValueTypeIcon,\n                                        allowDragAndDrop: actualField.allowDragAndDrop,\n                                        showFilterIcon: actualField.showFilterIcon,\n                                        showSortIcon: actualField.showSortIcon,\n                                        showRemoveIcon: actualField.showRemoveIcon,\n                                        showEditIcon: actualField.showEditIcon\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption === '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                        showRemoveIcon: customGroupField.showRemoveIcon,\n                                        showSubTotals: customGroupField.showValueTypeIcon,\n                                        allowDragAndDrop: customGroupField.allowDragAndDrop,\n                                        showFilterIcon: customGroupField.showFilterIcon,\n                                        showSortIcon: customGroupField.showSortIcon,\n                                        showEditIcon: customGroupField.showEditIcon\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.formats));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.formats.push(formatfield);\n                    }\n                }\n                /* tslint:enable:max-line-length */\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        //this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.frameData = function (data) {\n        var fields = Object.keys(data);\n        var keyPos = 0;\n        var framedSet = {};\n        while (keyPos < fields.length) {\n            framedSet[fields[keyPos]] = undefined;\n            keyPos++;\n        }\n        return framedSet;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (startValue && cValue < startValue || endValue && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getFormattedFields = function (fields) {\n        var cnt = this.formats.length;\n        while (cnt--) {\n            this.formatFields[this.formats[cnt].name] = this.formats[cnt];\n            if (this.formats[cnt].type) {\n                this.dateFormatFunction[this.formats[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(this.formats[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: this.formats[cnt].type\n                    })\n                };\n            }\n            // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n            // if (fields[len] && fields[len].name === this.formats[cnt].name) {\n            //     this.formatFields[fields[len].name] = this.formats[cnt];\n            // }\n            // }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var keys = this.fields;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        this.getFormattedFields(dataFields);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var lenE = this.excludeFields.length;\n        lenE = lenE - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.excludeFields[lenE]);\n            this.fields.splice(index, 1);\n            if (this.fieldList) {\n                delete this.fieldList[this.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var len = keys.length;\n        var dataTypes = ['string', 'number', 'datetime', 'date', 'boolean'];\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    this.fieldList[key].showFilterIcon = (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true;\n                    this.fieldList[key].showRemoveIcon = (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true;\n                    this.fieldList[key].showSortIcon = (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true;\n                    this.fieldList[key].showEditIcon = (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true;\n                    this.fieldList[key].showValueTypeIcon = (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true;\n                    this.fieldList[key].allowDragAndDrop = (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true;\n                    this.fieldList[key].isCalculatedField = (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false;\n                    this.fieldList[key].showNoDataItems = (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false;\n                    this.fieldList[key].showSubTotals = (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true;\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].formattedMembers = {};\n                        this.fieldList[key].members = {};\n                    }\n                }\n                else {\n                    type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                        field.dataType.toLowerCase() : type;\n                    this.fieldList[key] = {\n                        caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                        id: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        isSelected: false,\n                        sort: isSort ? 'Ascending' : 'None',\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                        showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                            field.showRemoveIcon : true,\n                        showFilterIcon: (field && 'showFilterIcon' in field) ?\n                            field.showFilterIcon : true,\n                        showSortIcon: (field && 'showSortIcon' in field) ?\n                            field.showSortIcon : true,\n                        showNoDataItems: (field && 'showNoDataItems' in field) ?\n                            field.showNoDataItems : false,\n                        isCalculatedField: (field && 'isCalculatedField' in field) ?\n                            field.isCalculatedField : false,\n                        showEditIcon: (field && 'showEditIcon' in field) ?\n                            field.showEditIcon : true,\n                        showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                            field.showValueTypeIcon : true,\n                        allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                            field.allowDragAndDrop : true,\n                        showSubTotals: (field && 'showSubTotals' in field) ?\n                            field.showSubTotals : true\n                    };\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                var field = this.getMappingField(key);\n                type = (field && 'dataType' in field && field.dataType && dataTypes.indexOf(field.dataType.toLowerCase()) > -1) ?\n                    field.dataType.toLowerCase() : PivotUtil.getType(fields[this.fieldKeys[key]]);\n                this.fieldList[key] = {\n                    id: key,\n                    caption: (field && 'caption' in field && field.caption) ? field.caption : key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)),\n                    showFilterIcon: (field && 'showFilterIcon' in field) ?\n                        field.showFilterIcon : true,\n                    showRemoveIcon: (field && 'showRemoveIcon' in field) ?\n                        field.showRemoveIcon : true,\n                    showSortIcon: (field && 'showSortIcon' in field) ?\n                        field.showSortIcon : true,\n                    showEditIcon: (field && 'showEditIcon' in field) ?\n                        field.showEditIcon : true,\n                    showValueTypeIcon: (field && 'showValueTypeIcon' in field) ?\n                        field.showValueTypeIcon : true,\n                    allowDragAndDrop: (field && 'allowDragAndDrop' in field) ?\n                        field.allowDragAndDrop : true,\n                    showSubTotals: (field && 'showSubTotals' in field) ?\n                        field.showSubTotals : true,\n                    showNoDataItems: (field && 'showNoDataItems' in field) ?\n                        field.showNoDataItems : false,\n                    isCalculatedField: (field && 'isCalculatedField' in field) ?\n                        field.isCalculatedField : false\n                };\n            }\n        }\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.getMappingField = function (key) {\n        var field = {};\n        if (this.fieldMapping.length > 0) {\n            for (var index = 0, cnt = this.fieldMapping.length; index < cnt; index++) {\n                if (this.fieldMapping[index].name === key) {\n                    field = this.fieldMapping[index];\n                    break;\n                }\n            }\n        }\n        return field;\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var cnt = fields.length;\n        var lnt = this.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n                field.allowDragAndDrop = fields[cnt].allowDragAndDrop;\n                field.showFilterIcon = fields[cnt].showFilterIcon;\n                field.showSortIcon = fields[cnt].showSortIcon;\n                field.showRemoveIcon = fields[cnt].showRemoveIcon;\n                field.showValueTypeIcon = fields[cnt].showValueTypeIcon;\n                field.showEditIcon = fields[cnt].showEditIcon;\n                field.showSubTotals = fields[cnt].showSubTotals;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.calculatedFieldSettings[lnt].name].isCalculatedField = true;\n                this.fieldList[this.calculatedFieldSettings[lnt].name].formula = this.calculatedFieldSettings[lnt].formula;\n            }\n        }\n    };\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).replace(/ +/g, '');\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            /* tslint:disable:typedef */\n            field.name = calcProperties ? calcProperties.name : field.name;\n            keys = keys.filter(function (key) { return key !== field.name; });\n            keys.push(field.name);\n            /* tslint:enable:typedef */\n            var formulaType = actualFormula.split('\\\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len];\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar'].indexOf(selectedString) !== -1) {\n                    var index = keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type,\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type,\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.validateValueFields = function () {\n        this.isValueHasAdvancedAggregate = false;\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var value = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(value.type) !== -1) {\n                this.isValueHasAdvancedAggregate = true;\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function (data, indMat) {\n        var keys = this.fields;\n        var dlen = data.length;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        for (var kl = 0; kl < kLn; kl++) {\n            var key = keys[kl];\n            if (!fList[key].members || this.allowDataCompression) {\n                fList[key].members = {};\n            }\n            if (!fList[key].formattedMembers || this.allowDataCompression) {\n                fList[key].formattedMembers = {};\n            }\n            if (!fList[key].dateMember || this.allowDataCompression) {\n                fList[key].dateMember = [];\n            }\n            var members = fList[key].members;\n            var isDataAvail = Object.keys(members).length > 0 ? true : false;\n            var formattedMembers = fList[key].formattedMembers;\n            var dateMember = fList[key].dateMember;\n            var type = fList[key].type;\n            var membersCnt = 0;\n            var fmembersCnt = 0;\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var mkey = data[dl][this.fieldKeys[key]];\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var fKey = mkey;\n                    var formattedValue = (this.pageSettings && !(this.formatFields[key] &&\n                        (['date', 'dateTime', 'time'].indexOf(this.formatFields[key].type) > -1))) ? ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    }) : this.getFormattedValue(mkey, key);\n                    if (formattedValue.formattedText) {\n                        fKey = formattedValue.formattedText;\n                    }\n                    if (!members.hasOwnProperty(mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                        /* tslint:disable-next-line:max-line-length */\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: (formattedValue.dateText ? formattedValue.dateText : formattedValue.actualText) });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                    if (!formattedMembers.hasOwnProperty(fKey)) {\n                        fmembersCnt++;\n                        formattedMembers[fKey] = {\n                            index: [dl], ordinal: fmembersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                    }\n                    else {\n                        formattedMembers[fKey].index.push(dl);\n                    }\n                }\n                if (!(indMat[dl])) {\n                    indMat[dl] = [];\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                else {\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                // }\n            }\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.generateValueMatrix = function (data) {\n        var keys = this.fields;\n        var len = data.length;\n        var vMat = [];\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var record = data[len];\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len])) {\n            vMat[len] = [];\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                vMat[len][tkln] = (flList[key].type === 'number' || isNullOrUndefined(data[len][this.fieldKeys[key]])) ?\n                    !isNaN(Number(data[len][this.fieldKeys[key]])) ?\n                        Number(data[len][this.fieldKeys[key]]) : undefined : 1;\n            }\n        }\n        return vMat;\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.indexMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var filters = this.filters;\n        var isInclude = false;\n        var filter = [];\n        //let type: string;\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln].filter ? cols[cln].filter.items : [];\n             if (filter.length && cols[cln].filter.type && cols[cln].filter.type === 'include') {\n                 //type = cols[cln].filter.type;\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            var field = this.fieldList[fieldName];\n            var members = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            isValidFilterElement = true;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var field_1 = _a[_i];\n                if (fieldName === field_1.name) {\n                    isValidFilterElement = false;\n                    break;\n                }\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _b = 0, dataFields_2 = dataFields; _b < dataFields_2.length; _b++) {\n                var field = dataFields_2[_b];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            /* tslint:disable:max-line-length */\n            if (filterElement.type === 'Label') {\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ? new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ? new Date(filterElement.value2) : filterElement.value2;\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            /* tslint:enable:max-line-length */\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        // }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = (this.formatFields[name] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[name].type) > -1)) ?\n            field.formattedMembers : field.members;\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (filter[fln]) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        /* tslint:disable-next-line:max-line-length */\n        var allMember = extend({}, (type === 'row' && this.rowGrandTotal ? this.rowGrandTotal : type === 'column' && this.columnGrandTotal ? this.columnGrandTotal : rows[rows.length - 1]), null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            if ((type === 'row' && this.rowGrandTotal === null) || (type === 'column' && this.columnGrandTotal === null)) {\n                rowFilterData.push(allMember);\n            }\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    /* tslint:disable:max-line-length */\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getCellSet(this.rawIndexObject),\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (index.hasOwnProperty(key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (index.hasOwnProperty(key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.data = dataSource.dataSource;\n        if (this.pageSettings && this.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        this.indexMatrix = [];\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].formattedMembers = {};\n            this.fieldList[field].dateMember = [];\n        }\n        this.fillFieldMembers(this.data, this.indexMatrix);\n        this.valueMatrix = this.generateValueMatrix(this.data);\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.generateGridData = function (dataSource, headerCollection) {\n        var keys = this.fields;\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        var size = 1;\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        var st1 = new Date().getTime();\n        this.validateValueFields();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0) {\n                    this.rMembers =\n                        this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                /* tslint:disable */\n                if (columns.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                        filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                /* tslint:enable */\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        this.pivotValues = [];\n        var gridData = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var valuesCount = (this.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders;\n            var columnHeaders = this.saveDataHeaders.columnHeaders;\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, (this.columnGrandTotal ? this.columnGrandTotal : columnHeaders[columnHeaders.length - 1]), valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, (this.rowGrandTotal ? this.rowGrandTotal : rowHeaders[rowHeaders.length - 1]), valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = extend({}, this.fieldList, null, true);\n            this.indexMatrix = [];\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var pageSize = 1;\n            this.updateFilterMembers(dataSource);\n            /* tslint:disable */\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            /* tslint:enable */\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.pageSettings) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        //this.getHeaderData(rmembers, rowheads, gridData, 0);              \n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        var st2 = new Date().getTime();\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n    };\n    PivotEngine.prototype.updateHeaders = function (rowFlag, columnFlag) {\n        /* removing the row grant-total members */\n        rowFlag = (isNullOrUndefined(rowFlag) ? (this.showGrandTotals && this.showRowGrandTotals) ?\n            true : (this.rows.length > 0) ? false : true : rowFlag);\n        if (((this.pageSettings && (this.removeRowGrandTotal)) || (!rowFlag && !this.rowGrandTotal)) &&\n            this.rMembers[this.rMembers.length - 1].type === 'grand sum') {\n            this.rMembers = this.rMembers.slice(0, this.rMembers.length - 1);\n        }\n        /* removing the column gran-total members */\n        columnFlag = (isNullOrUndefined(columnFlag) ? (this.showGrandTotals && this.showColumnGrandTotals) ?\n            true : (this.columns.length > 0) ? false : true : columnFlag);\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) || (!columnFlag && !this.columnGrandTotal)) &&\n            this.cMembers[this.cMembers.length - 1].type === 'grand sum') {\n            this.cMembers = this.cMembers.slice(0, this.cMembers.length - 1);\n        }\n    };\n    PivotEngine.prototype.updatePivotValues = function (updateHeaders) {\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (updateHeaders) {\n            this.updateHeaders(rowFlag, columnFlag);\n        }\n        /* removing the row grant-totals */\n        if (((this.pageSettings && (this.removeRowGrandTotal)) ||\n            (!rowFlag && !this.rowGrandTotal)) && this.valueContent.length > 0) {\n            var slicePos = 1;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1 + this.values.length;\n            }\n            if (this.pivotValues[this.pivotValues.length - slicePos] &&\n                this.pivotValues[this.pivotValues.length - slicePos][0].type === 'grand sum') {\n                this.pivotValues = this.pivotValues.slice(0, this.pivotValues.length - slicePos);\n                this.valueContent = this.valueContent.slice(0, this.valueContent.length - slicePos);\n            }\n        }\n        /* removing the column gran-totals */\n        if (((this.pageSettings && (this.removeColumnGrandTotal)) ||\n            (!columnFlag && !this.columnGrandTotal)) && this.headerContent.length > 0) {\n            var slicePos = this.values.length;\n            if (this.valueAxis && this.values.length > 0) {\n                slicePos = 1;\n            }\n            if (this.pivotValues[0][this.pivotValues[0].length - slicePos] &&\n                this.pivotValues[0][this.pivotValues[0].length - slicePos].type === 'grand sum') {\n                for (var ln = 0; ln < this.pivotValues.length; ln++) {\n                    if (this.pivotValues[ln]) {\n                        this.pivotValues[ln] = this.pivotValues[ln].slice(0, this.pivotValues[ln].length - slicePos);\n                    }\n                    if (this.headerContent[ln]) {\n                        for (var pos = this.pivotValues[ln].length; pos < (this.pivotValues[ln].length + slicePos); pos++) {\n                            delete this.headerContent[ln][pos];\n                        }\n                    }\n                }\n            }\n        }\n        this.removeRowGrandTotal = this.removeColumnGrandTotal = false;\n    };\n    /** @hidden */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        this.frameDrillObject();\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onSort = function (sortItem) {\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        /* tslint:disable:typedef */\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        /* tslint:enable:typedef */\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.rows[0] && this.rows[0].showNoDataItems) || (this.columns[0] && this.columns[0].showNoDataItems);\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onAggregation = function (field) {\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onCalcOperation = function (field) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.values.length - 1)) * this.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.values.length - 1)) * this.values.length;\n            }\n        }\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                if (drilledItem.memberName === headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter)\n                    .join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                        }\n                        else {\n                            var showSubTotals = this.showSubTotals && this.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    /* tslint:disable:typedef */\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return item.members.length > 0 ? item.members.length > 0 : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n        var filterObjects = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var item = _a[_i];\n            filterObjects[item] = item;\n        }\n        if (this.fieldFilterMem[filterItem.name]) {\n            rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n        }\n        if (addPos.length > 0 && headersInfo.fields.length > 0) {\n            this.frameHeaderObjectsCollection = true;\n            if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                for (var i = 0; i < this.data.length; i++) {\n                    addPos.push(i);\n                }\n                //addPos = (this.data as any).map((item, pos) => { return pos; });\n            }\n            /* tslint:disable */\n            this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n            rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n            var headerNames_1 = {};\n            for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                var header = rawHeaders_1[_b];\n                headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n            }\n            var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                return !headerNames_1[header.valueSort.levelName.toString()];\n            });\n            /* tslint:enable: */\n            var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n            if (grandHeader.length > 0) {\n                rawHeaders.pop();\n            }\n            rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n        }\n        if (headersInfo.axis === 'row') {\n            this.rowCount = 0;\n        }\n        else {\n            this.columnCount = 0;\n        }\n        this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n        if (headersInfo.axis === 'row') {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n        }\n        else {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    /* tslint:enable:typedef */\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.rows : this.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateEngine = function () {\n        this.removeCount = 0;\n        this.validateValueFields();\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var valuesCount = (this.values.length);\n        this.getAggregatedHeaders(this.rows, this.columns, this.rMembers, this.cMembers, this.values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, (this.rowGrandTotal ? this.rowGrandTotal : this.rMembers[this.rMembers.length - 1]), (this.columnGrandTotal ? this.columnGrandTotal : this.cMembers[this.cMembers.length - 1]));\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.showSubTotals && this.showColumnSubTotals && field ? field.showSubTotals : true;\n        }\n        else {\n            showSubTotals = this.showSubTotals && this.showRowSubTotals && field ? field.showSubTotals : true;\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.values.length : 1) :\n                    (this.valueAxis === 1 ? this.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var isNotDateType = !(this.formatFields && this.formatFields[headers[0].valueSort.axis] &&\n            this.formatFields[headers[0].valueSort.axis].type);\n        var childrens = this.fieldList[headers[0].valueSort.axis];\n        if (isNotDateType) {\n            if (childrens && childrens.type == 'number' && headers.length > 0 && (typeof (headers[0].actualText) == 'string')) {\n                var stringValue = [];\n                var alphaNumbervalue = [];\n                for (var i = 0; i < headers.length; i++) {\n                    if (isNaN(headers[i].actualText.toString().charAt(0))) {\n                        stringValue.push(headers[i]);\n                    }\n                    else {\n                        alphaNumbervalue.push(headers[i]);\n                    }\n                }\n                if (stringValue.length > 0) {\n                    stringValue = childrens.sort === 'Ascending' ? (stringValue.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ? (stringValue.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) : stringValue;\n                }\n                if (alphaNumbervalue.length > 0) {\n                    alphaNumbervalue = childrens.sort === 'Ascending' ?\n                        (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                            alphaNumbervalue;\n                }\n                return headers = alphaNumbervalue.concat(stringValue);\n            }\n            else {\n                return sortOrder === 'Ascending' ?\n                    (headers.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                    sortOrder === 'Descending' ?\n                        (headers.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                        headers;\n            }\n        }\n        else {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                    headers;\n        }\n    };\n    /* tslint:enable:typedef no-any */\n    /** @hidden */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.enableValueSorting && this.valueSortSettings.headerText &&\n            this.valueSortSettings.headerText !== '' && this.values.length > 0) {\n            var textArray = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.values.length; i++) {\n                if (this.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.values.length === 1 && this.columns.length === 0) || this.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortSettings.headerText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.values[0].name].index;\n                mType = this.fieldList[this.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.pageSettings) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getCellSet(this.rawIndexObject),\n                    /* tslint:disable-next-line:max-line-length */\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    /* tslint:disable-next-line:max-line-length */\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        /* tslint:disable */\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ?\n                ((b['value'] || b['header']['type'] === 'grand sum' ?\n                    b['value'] : 0) - (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) :\n                ((a['value'] || a['header']['type'] === 'grand sum' ?\n                    a['value'] : 0) - (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        rMembers = aggreColl.map(function (item) { return item['header']; });\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n        /* tslint:enable */\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        this.rowGrandTotal = this.columnGrandTotal = null;\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (this.isValueHasAdvancedAggregate) {\n            /* inserting the row grant-total members */\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n            if (rowFlag) {\n                this.rowCount += this.rowValuesLength;\n            }\n            /* inserting the column gran-total members */\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n            if (columnFlag) {\n                this.columnCount += this.colValuesLength;\n            }\n        }\n        else {\n            if (rowFlag) {\n                /* inserting the row grant-total members */\n                this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n                this.rowCount += this.rowValuesLength;\n            }\n            else {\n                this.rowGrandTotal = this.insertAllMember([], this.filterMembers, '', 'row')[0];\n            }\n            if (columnFlag) {\n                /* inserting the column gran-total members */\n                this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n                this.columnCount += this.colValuesLength;\n            }\n            else {\n                this.columnGrandTotal = this.insertAllMember([], this.filterMembers, '', 'column')[0];\n            }\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                for (var colCnt = colLength - 1; colCnt > 0; colCnt--) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            if (!this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] = this.headerContent[rowPos][colCnt] = {\n                                type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                    (cell.formattedText + ' Total')),\n                                axis: 'column', level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                            };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (this.pivotValues[rowCnt][colCnt].type !== 'sum' &&\n                                this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (this.pivotValues[rowCnt][colCnt].type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] = this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index = this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject = this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        rowCells[colCnt].colSpan = spanCnt;\n                        rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        savedCell.colSpan = spanCnt;\n                        savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.frameDrillObject = function () {\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            for (var memberCnt = 0; memberCnt < drillOption.items.length; memberCnt++) {\n                var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                    drillOption.items[memberCnt].split(drillOption.delimiter).join(this.valueSortSettings.headerDelimiter);\n                this.fieldDrillCollection[memberString] = memberString;\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        if (keys) {\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            if (isNullOrUndefined(this.reportDataType)) {\n                this.reportDataType = {};\n                for (var i = 0; i < this.dataSourceSettings.rows.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.rows[i].name] = this.dataSourceSettings.rows[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.columns[i].name] = this.dataSourceSettings.columns[i].dataType;\n                }\n                for (var i = 0; i < this.dataSourceSettings.values.length; i++) {\n                    this.reportDataType[this.dataSourceSettings.values[i].name] = this.dataSourceSettings.values[i].dataType;\n                }\n            }\n            childrens.type = !isNullOrUndefined(this.reportDataType[childrens.id]) ? this.reportDataType[childrens.id] : childrens.type;\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.showHeaderWhenEmpty || (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.indexMatrix[position[pos]][childrens.index];\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][this.fieldKeys[fieldName]];\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } :\n                    {\n                        formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                            headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                            (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : headerValue\n                    };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var pindx = void 0;\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ?\n                        true : (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                        this.isExpandAll ? false : true : childrens.members[headerValue].isDrilled;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += this.rowValuesLength;\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0 && !showNoDataItems) {\n                    var headerValue = data[hierarchy[iln].index[0]][this.fieldKeys[keys[keyInd + 1].name]];\n                    var hasChild = (isNullOrUndefined(headerValue) || (this.localeObj &&\n                        headerValue === this.localeObj.getConstant('undefined'))) && hierarchy[iln].index.length === 1 ? false : true;\n                    hierarchy[iln].hasChild = hasChild;\n                }\n                else if (!this.showHeaderWhenEmpty && showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                    Object.keys(this.fieldList[keys[keyInd + 1].name].members).length) {\n                    hierarchy[iln].hasChild = true;\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.showSubTotals && this.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    /* tslint:disable:align */\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember);\n                    /* tslint:enable:align */\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            /* tslint:disable:typedef */\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n                else {\n                    if (childrens.type === 'number' && hierarchy.length > 0 && (typeof (hierarchy[0].actualText) === 'string')) {\n                        var stringValue = [];\n                        var alphaNumbervalue = [];\n                        for (var i = 0; i < hierarchy.length; i++) {\n                            if (isNaN(hierarchy[i].actualText.toString().charAt(0))) {\n                                stringValue.push(hierarchy[i]);\n                            }\n                            else {\n                                alphaNumbervalue.push(hierarchy[i]);\n                            }\n                        }\n                        if (stringValue.length > 0) {\n                            stringValue = childrens.sort === 'Ascending' ? (stringValue.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                                childrens.sort === 'Descending' ? (stringValue.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) : stringValue;\n                        }\n                        if (alphaNumbervalue.length > 0) {\n                            alphaNumbervalue = childrens.sort === 'Ascending' ?\n                                (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) > Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) > Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                childrens.sort === 'Descending' ?\n                                    (alphaNumbervalue.sort(function (a, b) { return (Number(a.actualText.toString().match(/\\d+/)[0]) < Number(b.actualText.toString().match(/\\d+/)[0])) ? 1 : ((Number(b.actualText.toString().match(/\\d+/)[0]) < Number(a.actualText.toString().match(/\\d+/)[0])) ? -1 : 0); })) :\n                                    alphaNumbervalue;\n                        }\n                        return hierarchy = alphaNumbervalue.concat(stringValue);\n                    }\n                    else {\n                        return childrens.sort === 'Ascending' ?\n                            (hierarchy.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                            childrens.sort === 'Descending' ?\n                                (hierarchy.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                                hierarchy;\n                    }\n                }\n            }\n            else {\n                return hierarchy;\n            }\n            /* tslint:enable:typedef */\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.indexMatrix[position[pos]][childrens.index];\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var value = data[position[pos]][this.fieldKeys[field]];\n                value = value === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(value)) : value;\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(value, field) :\n                    { formattedText: value.toString(), actualText: value.toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    /* tslint:disable:align */\n                    hierarchy[iln].members =\n                        this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                    /* tslint:enable:align */\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            /* tslint:disable:typedef */\n            var lt = void 0;\n            for (var ln = 0, lt_1 = this.filterMembers.length; ln < lt_1; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n            /* tslint:enable:typedef */\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.pageSettings) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.values.length;\n            }\n            else {\n                this.colValuesLength = this.values.length;\n            }\n            this.memberCnt = -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.rowCurrentPage * this.pageSettings.rowSize) -\n                (this.pageSettings.rowSize)) * this.rowValuesLength;\n            var exactStartPos = (this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength)) > this.rowCount ?\n                (this.rowCount - (this.pageSettings.rowSize * 3 * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.rowCurrentPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength);\n            this.endPos = this.endPos > this.rowCount ? this.rowCount : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.columnCurrentPage * this.pageSettings.columnSize) -\n                (this.pageSettings.columnSize)) * this.colValuesLength;\n            exactStartPos = (this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength)) >\n                this.columnCount ?\n                (this.columnCount - (this.pageSettings.columnSize * 3 * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.columnCurrentPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength);\n            this.endPos = this.endPos > this.columnCount ? this.columnCount : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n            if (this.isValueHasAdvancedAggregate) {\n                if (this.rMembers[this.rMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1].type === 'grand sum') {\n                    this.rMembers.push(this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1]);\n                    this.removeRowGrandTotal = true;\n                }\n                if (this.cMembers[this.cMembers.length - 1].type !== 'grand sum' &&\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1].type === 'grand sum') {\n                    this.cMembers.push(this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1]);\n                    this.removeColumnGrandTotal = true;\n                }\n            }\n            else {\n                this.rowGrandTotal = this.rowGrandTotal ? this.rowGrandTotal :\n                    this.headerCollection.rowHeaders[this.headerCollection.rowHeaders.length - 1];\n                this.columnGrandTotal = this.columnGrandTotal ? this.columnGrandTotal :\n                    this.headerCollection.columnHeaders[this.headerCollection.columnHeaders.length - 1];\n            }\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            this.memberCnt += axis === 'column' ? this.colValuesLength : this.rowValuesLength;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ? this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    /* tslint:disable:no-any */\n                    this.memberCnt -= !(this.showSubTotals && this.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ? this.colValuesLength : 0;\n                    /* tslint:enable:no-any */\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    /* tslint:disable:no-any */\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        /* tslint:disable:no-string-literal */\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        /* tslint:enable:no-string-literal */\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        set[len] = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            formattedText: 'Grand' + customText,\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        set[len].valueSort[set[len].formattedText] = 1;\n        set[len].valueSort.levelName = set[len].formattedText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            set[len].indexObject[filter[ln]] = filter[ln];\n        }\n        // if (axis === 'row') {\n        //     this.rowCount += this.rowValuesLength;\n        // } else {\n        //     this.columnCount += this.colValuesLength;\n        // }\n        return set;\n    };\n    /* tslint:enable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, tnum, data, vlt, rTotal, cTotal) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            tnum = data.length;\n            reformAxis[tnum] = rows[rln];\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            //let rplus: number = rln + 1;\n            //let lvl: number = rows[rln].level;\n            var isLeastNode = !reformAxis[tnum].members.length;\n            rows[rln].colIndex = 0;\n            rows[rln].rowIndex = tnum;\n            if (!data[tnum]) {\n                data[tnum] = [];\n                this.valueContent[actCnt] = {};\n                //data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            else {\n                // data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader)) {\n                var hpos = tnum;\n                var actpos = actCnt;\n                var rowIndex = tnum;\n                if (!(rows[rln].hasChild && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n                    !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals))) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        tnum++;\n                        actCnt++;\n                        var name_1 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                        var calObj = {\n                            axis: 'row',\n                            actualText: this.values[vln].name,\n                            formattedText: name_1,\n                            level: 0,\n                            valueSort: {},\n                            colIndex: 0,\n                            rowIndex: tnum,\n                            type: 'value'\n                        };\n                        if (!data[tnum]) {\n                            data[tnum] = [];\n                            this.valueContent[actCnt] = {};\n                            data[tnum][0] = this.valueContent[actCnt][0] = calObj;\n                        }\n                        var vData = data[tnum][0].valueSort;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData[data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1] = 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        vData.levelName = data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1;\n                        for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                            //for (let vln: number = 0; (!this.valueAxis && vln < vlt); vln++) {\n                            this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                            dln = data[tnum].length;\n                            data[hpos][dln - 1] = this.valueContent[actpos][dln - 1] = {\n                                axis: 'value', actualText: '', colSpan: 1,\n                                colIndex: dln, formattedText: '', hasChild: false\n                            };\n                            // }\n                        }\n                    }\n                    rowIndex = tnum;\n                }\n                else {\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        dln = data[tnum].length;\n                        data[hpos][dln] = this.valueContent[actpos][dln] = {\n                            axis: 'value', actualText: '', colSpan: 1,\n                            colIndex: dln, formattedText: '', hasChild: false\n                        };\n                    }\n                    rowIndex = tnum + vlt;\n                }\n                this.recursiveRowData(rows, reformAxis, columns, rowIndex, data, vlt, isLeastNode, rln, vlt, rTotal, cTotal);\n            }\n            else {\n                for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, rTotal, cTotal);\n            }\n        }\n        /* for (let rlt: number = rows.length, rln: number = 0; rln < rlt; rln++) {\n            if (!data[rln]) {\n                data[rln] = [];\n                data[rln][0] = rows[rln].name;\n            } else {\n                data[rln][0] = rows[rln].name;\n            }\n            for (let cln: number = 0, dln: number = 1, clt: number = columns.length; cln < clt; dln = ++cln) {\n                data[rln][dln] = this.getAggregateValue(rows[rln].index, columns[cln].index, 11);\n            }\n        } */\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split(this.valueSortSettings.headerDelimiter);\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : headers), vln + 1));\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if (rln.level === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _a = 0, _b = rln.members; _a < _b.length; _a++) {\n                                            var member = _b[_a];\n                                            aggregateHeaders.push(member);\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(rln);\n                                    }\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: headers,\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(data[rln][cln].actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                        this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                        for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                            var index = colIndex_1[_i];\n                            pivotIndex[rln + ',' + index] = [rln, index];\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n            this.updatePivotValues(true);\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable:all */\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_2 = headers.value;\n            var valueCount = (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    if (this.valueAxis === 0 || (this.valueAxis && data[rln + valueCount] &&\n                                        data[rln + valueCount][0].actualText === name_2)) {\n                                        selectedRowValues = data[rln + valueCount];\n                                    }\n                                    else {\n                                        selectedRowValues = [];\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_7 = data.length, i = 0; i < len_7; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                        axisObj[cln].axis === 'value' &&\n                                        this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (selectedColumnValues.length === 0 && rowindexCollection.length === 0) {\n                            for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                var isSelectedColumn = false;\n                                if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort.levelName.indexOf(uniqueName) === 0) {\n                                    activeValues = activeColumn[cln];\n                                    for (var lnt = data.length, j = 0; j < lnt; j++) {\n                                        var axisObj = data[j];\n                                        if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                            axisObj[cln].axis === 'value' &&\n                                            this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                            isSelectedColumn = true;\n                                            // selectedColumnValues[i] = axisObj[cln] as IAxisSet;\n                                            rowindexCollection.push(j);\n                                        }\n                                    }\n                                    if (isSelectedColumn) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _a = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _a < selectedHeaderCollection_1.length; _a++) {\n                                    var item = selectedHeaderCollection_1[_a];\n                                    for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _b = 0, colIndex_2 = colIndex; _b < colIndex_2.length; _b++) {\n                                                    var index = colIndex_2[_b];\n                                                    var currentSet = data[rln + valueCount][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                        indexCollection.push([rln + valueCount, index]);\n                                                        if (pivotIndex[rln + valueCount + ',' + index]) {\n                                                            delete pivotIndex[rln + valueCount + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _c = 0, colIndex_3 = colIndex; _c < colIndex_3.length; _c++) {\n                                                var index = colIndex_3[_c];\n                                                var currentSet = data[rlen + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([rlen + valueCount, index]);\n                                                    if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                        delete pivotIndex[rlen + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _d = 0, indexCollection_2 = indexCollection; _d < indexCollection_2.length; _d++) {\n                                var index = indexCollection_2[_d];\n                                var currentSet = data[index[0]][index[1]];\n                                // let cVal: number = currentSet.value - (selectedRowValues[index[1]] as IAxisSet).value;\n                                var cVal = currentSet.actualValue - selectedRowValues[index[1]].actualValue;\n                                cVal = isNaN(cVal) ? 0 : (currentSet.value === 0 && selectedRowValues[index[1]].value === 0) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                }\n                                else {\n                                    // cVal = ((selectedRowValues[index[1]] as IAxisSet).value === 0 ?\n                                    // 0 : (cVal / (selectedRowValues[index[1]] as IAxisSet).value));\n                                    cVal = (selectedRowValues[index[1]].actualValue === 0 ?\n                                        0 : (cVal / selectedRowValues[index[1]].actualValue));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _e = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _e < selectedHeaderCollection_2.length; _e++) {\n                                    var item = selectedHeaderCollection_2[_e];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _f = 0, rowindexCollection_1 = rowindexCollection; _f < rowindexCollection_1.length; _f++) {\n                                                var index = rowindexCollection_1[_f];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split(this.valueSortSettings.headerDelimiter);\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.split(this.valueSortSettings.headerDelimiter);\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _g = 0, rowindexCollection_2 = rowindexCollection; _g < rowindexCollection_2.length; _g++) {\n                                                var index = rowindexCollection_2[_g];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedColumn = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedColumn = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _h = 0, indexCollection_3 = indexCollection; _h < indexCollection_3.length; _h++) {\n                                var index = indexCollection_3[_h];\n                                var currentSet = data[index[0]][index[1]];\n                                var selectedColumnValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColumnValue = this.getAggregateValue(selectedRow.index, selectedColumn.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColumnValue = selectedColumnValues[index[0]].value;\n                                }\n                                var cVal = currentSet.value - selectedColumnValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _j = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _j < selectedHeaderCollection_3.length; _j++) {\n                                var item = selectedHeaderCollection_3[_j];\n                                for (var rlt = rowheads.length, i = 0; i < rlt; i++) {\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _k = 0, colIndex_4 = colIndex; _k < colIndex_4.length; _k++) {\n                                                var index = colIndex_4[_k];\n                                                var currentSet = data[i + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([i + valueCount, index]);\n                                                    if (pivotIndex[i + valueCount + ',' + index]) {\n                                                        delete pivotIndex[i + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _l = 0, indexCollection_4 = indexCollection; _l < indexCollection_4.length; _l++) {\n                                var i = indexCollection_4[_l];\n                                var currentSet = data[i[0]][i[1]];\n                                // let cVal: number = currentSet.value / (selectedRowValues[i[1]] as IAxisSet).value;\n                                var selectedRowValue = 0;\n                                if (selectedRowValues.length === 0 && activeValues) {\n                                    selectedRowValue = this.getAggregateValue(activeValues.index, colheads[i[1] - 1].indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedRowValue = selectedRowValues[i[1]].actualValue;\n                                }\n                                var cVal = currentSet.value / selectedRowValue;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _m = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _m < selectedHeaderCollection_4.length; _m++) {\n                                var item = selectedHeaderCollection_4[_m];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _o = 0, rowindexCollection_3 = rowindexCollection; _o < rowindexCollection_3.length; _o++) {\n                                            var index = rowindexCollection_3[_o];\n                                            var currentSet = data[index][j];\n                                            if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                isSelectedColumn = true;\n                                                indexCollection.push([index, j]);\n                                                if (pivotIndex[index + ',' + j]) {\n                                                    delete pivotIndex[index + ',' + j];\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            var selectedCol = void 0;\n                            if (selectedColumnValues.length === 0) {\n                                selectedCol = this.getSelectedColumn(headers.uniqueName, colheads);\n                            }\n                            for (var _p = 0, indexCollection_5 = indexCollection; _p < indexCollection_5.length; _p++) {\n                                var i = indexCollection_5[_p];\n                                var currentSet = data[i[0]][i[1]];\n                                var selectedColValue = 0;\n                                if (selectedColumnValues.length === 0) {\n                                    var selectedRow = this.getSelectedRow(currentSet.rowHeaders, rowheads);\n                                    selectedColValue = this.getAggregateValue(selectedRow.index, selectedCol.indexObject, this.fieldList[name_2].index, headers.type);\n                                }\n                                else {\n                                    selectedColValue = selectedColumnValues[i[0]].value;\n                                }\n                                var val = currentSet.value / selectedColValue;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _q = 0, colIndex_5 = colIndex; _q < colIndex_5.length; _q++) {\n                                var index = colIndex_5[_q];\n                                var cVal = 0;\n                                for (var _r = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _r < selectedHeaderCollection_5.length; _r++) {\n                                    var item = selectedHeaderCollection_5[_r];\n                                    for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen + valueCount][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rlen].level === item.level && currentSet.axis === 'value' &&\n                                                currentSet.actualText === name_2) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = (cVal === 0 && (currentSet.actualValue && currentSet.actualValue !== 0) ? '' :\n                                                        this.getFormattedValue(cVal, name_2).formattedText);\n                                                    if (!this.aggregatedValueMatrix[rlen + valueCount]) {\n                                                        this.aggregatedValueMatrix[rlen + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen + valueCount][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                    delete pivotIndex[rlen + valueCount + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                if (rowheads[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _s = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _s < selectedHeaderCollection_6.length; _s++) {\n                                        var item = selectedHeaderCollection_6[_s];\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln + valueCount][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln + valueCount]) {\n                                                        this.aggregatedValueMatrix[rln + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln + valueCount][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + valueCount + ',' + cln]) {\n                                                    delete pivotIndex[rln + valueCount + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    PivotEngine.prototype.getSelectedColumn = function (name, colheads) {\n        var set = { axis: 'column', index: [], indexObject: {} };\n        for (var _i = 0, colheads_1 = colheads; _i < colheads_1.length; _i++) {\n            var head = colheads_1[_i];\n            if (head && head.valueSort && head.valueSort.levelName.indexOf(name) === 0) {\n                set.index = set.index.concat(head.index).sort(function (a, b) { return a - b; });\n                set.indexObject = __assign({}, set.indexObject, head.indexObject);\n            }\n        }\n        return set;\n    };\n    PivotEngine.prototype.getSelectedRow = function (name, rowheads) {\n        for (var _i = 0, rowheads_1 = rowheads; _i < rowheads_1.length; _i++) {\n            var head = rowheads_1[_i];\n            if (head) {\n                if (head.valueSort && head.valueSort.levelName === name) {\n                    return head;\n                }\n                else if (name === '' && head.type === 'grand sum') {\n                    return head;\n                }\n            }\n        }\n        return null;\n    };\n    /* tslint:enable:all */\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum - vln].members, reformAxis, columns, tnum, data, vlt, rTotal, cTotal);\n        }\n        if (!this.pageSettings) {\n            reformAxis[tnum - vln].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.values[vln].name].index;\n        var aggregate = this.fieldList[this.values[vln].name].aggregateType;\n        var field = this.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        var actualValue = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]], [rows[rln], cTotal], [rTotal, columns[cln]], [rTotal, cTotal]];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_1 = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showRowSubTotals || !this.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_1) ? 0 : val_1));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] : [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val_2 = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                    actualValue = (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val_2) ? 0 : val_2));\n                }\n                break;\n            default:\n                var val = this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate);\n                value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals)) ? undefined : val;\n                actualValue = val;\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.values[vln].name,\n            row: rows[rln],\n            column: columns[cln],\n            value: value,\n            cellSets: this.getCellSet(this.rawIndexObject),\n            /* tslint:disable-next-line:max-line-length */\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            /* tslint:disable-next-line:max-line-length */\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate,\n            skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild ||\n            rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var isGrand = rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            (aggregate === 'Count' || aggregate === 'DistinctCount') ? value.toLocaleString() :\n                this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) &&\n            (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: 2 });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n        }\n        //dln = data[tnum].length;\n        /* tslint:disable-next-line:max-line-length */\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ? this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: isNullOrUndefined(value) ? 0 : value,\n            actualValue: isNullOrUndefined(actualValue) ? 0 : actualValue,\n            rowIndex: tnum, colIndex: dln, isSum: isSum, isGrandSum: isGrand\n        };\n        this.rawIndexObject = {};\n    };\n    /* tslint:disable:typedef no-any */\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.getHeaderData = function (axis, reformAxis, data, tnum, vcnt) {\n        var rlt = axis.length;\n        var colItmLn = this.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            if (axis[rln].members.length) {\n                this.getHeaderData(axis[rln].members, reformAxis, data, tnum, vcnt);\n            }\n            var isTotalHide = true;\n            if ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.showSubTotals || !this.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[reformAxis.length] = this.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = reformAxis.length - 1;\n            }\n            else {\n                tnum = reformAxis.length;\n                reformAxis[tnum] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            axis[rln].colIndex = (tnum * vcnt) + vcnt;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            var isSingleMeasure = (this.columns.length === 0 && this.values.length === 1) ? true : false;\n            if ((this.isMutiMeasures || this.alwaysShowValueHeader || isSingleMeasure) && !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_3 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'column',\n                        actualText: this.values[vln].name,\n                        formattedText: name_3,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln,\n                        rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.pageSettings) {\n                reformAxis[tnum].members = [];\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        var rlt = rowIndex.length;\n        //let clt: number = columnIndex.length;\n        var mirror = {};\n        var ri = 0;\n        var ci = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        if (type && type.toLowerCase() === 'count') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    cellValue += (isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value]) ?\n                        0 : (this.allowDataCompression ? this.valueMatrix[rowIndex[ri]][value] : 1));\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'distinctcount') {\n            var duplicateValues = [];\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var val = (this.data[rowIndex[ri]][this.fieldKeys[this.fields[value]]]);\n                    var currentVal = void 0;\n                    // let currentVal: number = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(val)) {\n                        currentVal = val.toString();\n                        if (duplicateValues.length === 0 || (duplicateValues.length > 0 && duplicateValues.indexOf(currentVal) === -1)) {\n                            cellValue += (this.allowDataCompression && typeof val === 'number') ? val : 1;\n                            duplicateValues.push(currentVal);\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'product') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                        cellValue *= currentVal;\n                    }\n                    else if (isInit) {\n                        cellValue = currentVal;\n                    }\n                    isInit = false;\n                }\n                ri++;\n            }\n        }\n        else if (type && (['populationstdev', 'samplestdev', 'populationvar', 'samplevar']).indexOf(type.toLowerCase()) !== -1) {\n            var i = 0;\n            var val = 0;\n            var indexVal = [];\n            var avgVal = 0;\n            var cVal = 0;\n            var avgDifferenceVal = 0;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        val += currentVal;\n                        indexVal.push(currentVal);\n                        i++;\n                    }\n                }\n                ri++;\n            }\n            if (i > 0) {\n                avgVal = val / i;\n                for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                    var index = indexVal_1[_i];\n                    avgDifferenceVal += Math.pow((index - avgVal), 2);\n                }\n                if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                    cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                }\n                else {\n                    cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                }\n                cellValue = (cVal === 0 ? NaN : cVal);\n            }\n            else {\n                cellValue = val;\n            }\n        }\n        else if (type && type.toLowerCase() === 'min') {\n            var isFirst = true;\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value])) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                    }\n                    else {\n                        if (isFirst) {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value];\n                            isFirst = false;\n                        }\n                        else {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value] < cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'max') {\n            var isMaxFirst = true;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isMaxFirst) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                        isMaxFirst = false;\n                    }\n                    else {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value] > cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'calculatedfield') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var calcField = this.calculatedFields[this.fields[value]];\n                    var actualFormula = calcField.formula;\n                    var aggregateField = {};\n                    if (this.calculatedFormulas[calcField.name]) {\n                        var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                        for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                            var aggregatedValue = calculatedFormulas[len];\n                            var value_1 = aggregateField[aggregatedValue.formula];\n                            if (value_1 === undefined) {\n                                var type_1 = aggregatedValue.type;\n                                value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1);\n                                aggregateField[aggregatedValue.formula] = value_1;\n                            }\n                            actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                        }\n                    }\n                    cellValue = this.evaluate(actualFormula);\n                    cellValue = (cellValue === Infinity || cellValue === -Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ? undefined : JSON.parse(String(cellValue)));\n                }\n                ri++;\n            }\n        }\n        else {\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                        cellValue = currentVal;\n                    }\n                    else {\n                        if (isNullOrUndefined(cellValue)) {\n                            cellValue = 0;\n                        }\n                        cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                    }\n                    if (!isNullOrUndefined(currentVal)) {\n                        avgCnt++;\n                    }\n                }\n                ri++;\n            }\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri] !== undefined) {\n                 if (mirror[rowIndex[ri]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                     sum += this.valueMatrix[rowIndex[ri]][value];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    ;\n    /* tslint:enable */\n    /** hidden */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                    formattedValue.actualText = value;\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        var pattern = formatSetting.format.match(this.customRegex);\n                        var flag = true;\n                        if (isNullOrUndefined(formatSetting.minimumFractionDigits)) {\n                            delete formatSetting.minimumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.maximumFractionDigits)) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                        if (isNullOrUndefined(formatSetting.minimumIntegerDigits)) {\n                            delete formatSetting.minimumIntegerDigits;\n                        }\n                        if (isNullOrUndefined(pattern)) {\n                            pattern = formatSetting.format.match(/^(('[^']+'|''|[^*@0])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@,.E])*)$/);\n                            delete formatSetting.useGrouping;\n                            flag = false;\n                        }\n                        var integerPart = pattern[6];\n                        if (flag) {\n                            formatSetting.useGrouping = integerPart.indexOf(',') !== -1;\n                        }\n                        var decimalPart = pattern[5];\n                        if (isBlazor() && decimalPart && decimalPart.indexOf('.') !== -1 && formatSetting.maximumFractionDigits) {\n                            delete formatSetting.maximumFractionDigits;\n                        }\n                    }\n                    formattedValue.formattedText =\n                        this.globalize.formatNumber(!isNaN(Number(value)) ? Number(value) : value, formatSetting);\n                    formattedValue.actualText = !isNaN(Number(value)) ? Number(value) : value;\n                    formattedValue.dateText = !isNaN(Number(value)) ? Number(value) : value;\n                }\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^\\(\\)]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var fieldDrop = 'fieldDrop';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var editCompleted = 'editCompleted';\n/** @hidden */\nexport var multiLevelLabelClick = 'multiLevelLabelClick';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/** @hidden */\nexport var calculatedFieldCreate = 'calculatedFieldCreate';\n/** @hidden */\nexport var memberEditorOpen = 'memberEditorOpen';\n/** @hidden */\nexport var fieldRemove = 'fieldRemove';\n/** @hidden */\nexport var numberFormatting = 'numberFormatting';\n/** @hidden */\nexport var aggregateMenuOpen = 'aggregateMenuOpen';\n/** @hidden */\nexport var fieldDragStart = 'fieldDragStart';\n/** @hidden */\nexport var chartPointClick = 'chartPointClick';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n","/**\n * CSS Constants\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-wrapper';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-wrapper';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var MEMBER_SORT_CLASS = 'e-member-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DRAG_DISABLE_CLASS = 'e-disable-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-wrapper';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-wrapper';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-wrapper-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-wrapper-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var FILTER_SORT_CLASS = 'e-filter-sort';\n/** @hidden */\nexport var SORT_ASCEND_ICON_CLASS = 'e-sort-ascend-icon';\n/** @hidden */\nexport var SORT_DESCEND_ICON_CLASS = 'e-sort-descend-icon';\n/** @hidden */\nexport var SORT_SELECTED_CLASS = 'e-active';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-wrapper';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var EDITOR_SEARCH__INPUT_CLASS = 'e-editor-search-input';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-wrapper';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var CALC_CUSTOM_FORMAT_INPUTDIV = 'e-pivot-calc-custom-format-div';\n/** @hidden */\nexport var OLAP_CALC_CUSTOM_FORMAT_INPUTDIV = 'e-olap-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-olap-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-wrapper';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-wrapper';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var OLAP_FORMAT_TITLE_CLASS = 'e-olap-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var MOVABLECONTENT_DIV = 'e-movablecontent';\n/** @hidden */\nexport var FROZENCONTENT_DIV = 'e-frozencontent';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-movableheader';\n/** @hidden */\nexport var FROZENHEADER_DIV = 'e-frozenheader';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_ACCUMULATION_COLUMN = 'e-group-chart-accumulation-column';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN_DIV = 'e-group-chart-columns-dropdown-div';\n/** @hidden */\nexport var GROUP_CHART_COLUMN_DROPDOWN = 'e-group-chart-columns-dropdown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var EMPTY_FORMAT = 'e-pivot-conditional-empty-format';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n/** @hidden */\nexport var PIVOTCHART_INNER = 'e-pivotchart-inner';\n/** @hidden */\nexport var PIVOTCHART_TYPE_DIALOG = 'e-pivotchart-type-dialog';\n/** @hidden */\nexport var FORMAT_FONT_COLOR_PICKER = 'e-format-font-color-picker';\n/** @hidden */\nexport var GROUP_PIVOT_ROW = 'e-group-pivot-rows';\n","import { createElement, remove, extend, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.menuInfo = [];\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        var _this = this;\n        var fieldName = args.target.parentElement.id;\n        this.buttonElement = args.target.parentElement;\n        var isStringField = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 1 : 0;\n        this.summaryTypes = this.getMenuItem(isStringField).slice();\n        var eventArgs = {\n            cancel: false, fieldName: fieldName, aggregateTypes: this.summaryTypes\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.summaryTypes = observedArgs.aggregateTypes;\n                _this.createContextMenu(isStringField);\n                _this.currentMenu = args.target;\n                var pos = _this.currentMenu.getBoundingClientRect();\n                if (_this.parent.enableRtl) {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left - 105);\n                }\n                else {\n                    _this.menuInfo[isStringField].open(pos.top + (window.scrollY || document.documentElement.scrollTop), pos.left);\n                }\n            }\n        });\n    };\n    AggregateMenu.prototype.createContextMenu = function (isStringField) {\n        var _this = this;\n        var menuItems = [];\n        menuItems[isStringField] = [];\n        if (this.menuInfo[isStringField] && !this.menuInfo[isStringField].isDestroyed) {\n            this.menuInfo[isStringField].destroy();\n        }\n        var checkDuplicates = [];\n        for (var i = 0; i < this.summaryTypes.length; i++) {\n            var key = this.summaryTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + 'StringMenu_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                    menuItems[isStringField].push({ text: this.parent.localeObj.getConstant(key), id: this.parent.element.id + '_' + key });\n                    checkDuplicates.push(key);\n                }\n            }\n        }\n        if (menuItems[isStringField].length >= 7) {\n            menuItems[isStringField].splice(7);\n            menuItems[isStringField].push({\n                text: this.parent.localeObj.getConstant('MoreOption'),\n                id: this.parent.element.id + '_' + 'MoreOption'\n            });\n        }\n        var menuOptions;\n        menuOptions = {\n            items: menuItems[isStringField],\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this, isStringField),\n            onClose: function (args) {\n                _this.parentElement.querySelector('#' + _this.buttonElement.id).focus();\n            },\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var contextMenu = document.getElementById(this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu'));\n        if (contextMenu !== null) {\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + (isStringField ? 'valueFieldStringContextMenu' : 'valueFieldContextMenu')\n            });\n        }\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo[isStringField] = new Menu(menuOptions);\n        this.menuInfo[isStringField].isStringTemplate = true;\n        this.menuInfo[isStringField].appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField) {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (isString, args) {\n        args.element.style.zIndex = (this.menuInfo[isString].element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /** @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement, type) {\n        var _this = this;\n        this.parentElement = parentElement;\n        var valueDialog = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.id }\n        });\n        this.parentElement.appendChild(valueDialog);\n        this.valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.valueDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            /* tslint:disable-next-line:max-line-length */\n            closeOnEscape: (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') ? false : true,\n            target: this.parentElement,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.valueDialog.isStringTemplate = true;\n        this.valueDialog.appendTo(valueDialog);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    /* tslint:disable:max-func-body-length */\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement, type) {\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = (type && type !== 'MoreOption') ? type : buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [];\n        var summaryItems = this.parent.aggregateTypes;\n        var checkDuplicates = [];\n        for (var i = 0; i < summaryItems.length; i++) {\n            if (this.parent.getAllSummaryType().indexOf(summaryItems[i]) > -1 && checkDuplicates.indexOf(summaryItems[i]) < 0) {\n                summaryDataSource.push({ value: summaryItems[i], text: this.parent.localeObj.getConstant(summaryItems[i]) });\n                checkDuplicates.push(summaryItems[i]);\n            }\n        }\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        /* tslint:disable-next-line:max-line-length */\n        baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n        fieldItemDataSource = Object.keys(this.parent.engineModule.fieldList[(baseField.toString() !== 'undefined' ?\n            baseField : fieldDataSource[0].value)].formattedMembers);\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-wrapper', });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-wrapper' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-wrapper' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-wrapper' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-wrapper' });\n        /* tslint:disable-next-line:max-line-length */\n        var texttitle = createElement('div', { className: 'e-field-name-title', innerHTML: this.parent.localeObj.getConstant('sourceName') + '&nbsp;' });\n        var textContent = createElement('div', { className: 'e-field-name-content', innerHTML: buttonElement.id.toString() });\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('sourceCaption')\n        });\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text', innerHTML: this.parent.localeObj.getConstant('summarizeValuesBy')\n        });\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text', innerHTML: this.parent.localeObj.getConstant('baseField')\n        });\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('baseItem')\n        });\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.dataBind();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                fieldItemDataSource = Object.keys(popupInstance.parent.engineModule.fieldList[args.value].formattedMembers);\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3.dataBind();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: [fieldItemDataSource[0]], enableRtl: this.parent.enableRtl,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            value: fieldCaption, width: '100%'\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var type = menu.item.id.split('_').pop();\n            if (type === 'MoreOption' || type === 'PercentageOfDifferenceFrom'\n                || type === 'PercentageOfParentTotal' || type === 'DifferenceFrom') {\n                this.createValueSettingsDialog(buttonElement, this.parentElement, type);\n            }\n            else {\n                var field = buttonElement.getAttribute('data-uid');\n                var valuefields = this.parent.dataSourceSettings.values;\n                var contentElement = buttonElement.querySelector('.e-content');\n                var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                    this.parent.engineModule.fieldList[field].caption;\n                contentElement.innerHTML = captionName;\n                contentElement.setAttribute('title', captionName);\n                buttonElement.setAttribute('data-type', type);\n                for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                        /* tslint:disable:align */\n                        var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                            valuefields[vCnt].properties : valuefields[vCnt], null, true);\n                        /* tslint:enable:align */\n                        dataSourceItem.type = type;\n                        this.parent.engineModule.fieldList[field].aggregateType = type;\n                        valuefields.splice(vCnt, 1, dataSourceItem);\n                        this.parent.lastAggregationInfo = dataSourceItem;\n                    }\n                }\n                this.updateDataSource();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                /* tslint:disable:align */\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                /* tslint:enable:align */\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var dialogElement = this.valueDialog.element;\n        var captionInstance = getInstance('#' + this.parentElement.id + 'type_input_option', MaskedTextBox);\n        var summaryInstance = getInstance('#' + this.parentElement.id + '_type_option', DropDownList);\n        var baseFieldInstance = getInstance('#' + this.parentElement.id + '_base_field_option', DropDownList);\n        var baseItemInstance = getInstance('#' + this.parentElement.id + '_base_item_option', DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement = this.parentElement.\n                querySelector('.' + cls.PIVOT_BUTTON_CLASS + '.' + fieldName.replace(/[^A-Z0-9]/ig, ''));\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.e-content');\n            var captionName = this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value;\n            contentElement.innerHTML = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        this.valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        this.parentElement.querySelector('#' + this.buttonElement.id).focus();\n        if (this.valueDialog && !this.valueDialog.isDestroyed) {\n            this.valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo) {\n            if (this.menuInfo[1] !== undefined && !this.menuInfo[1].isDestroyed) {\n                this.menuInfo[1].destroy();\n            }\n            if (this.menuInfo[0] !== undefined && !this.menuInfo[0].isDestroyed) {\n                this.menuInfo[0].destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement } from '@syncfusion/ej2-base';\nimport { isBlazor, addClass, removeClass, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    Render.prototype.render = function () {\n        var parent = this.parent;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.parent.gridHeaderCellInfo = [];\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.e-grid')) {\n            if (!engine.isEngineUpdated) {\n                engine.headerContent = this.frameDataSource('header');\n                engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.enableValueSorting) {\n                    engine.valueContent = this.frameDataSource('value');\n                }\n                engine.isEngineUpdated = false;\n            }\n            /* tslint:disable */\n            this.parent.grid.setProperties({\n                columns: this.frameStackedHeaders(), dataSource: (this.parent.dataType === 'olap' ? true :\n                    parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData ? engine.valueContent :\n                    this.frameDataSource('value')\n            }, true);\n            /* tslint:enable */\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            var e = this.parent.element.querySelector('.e-movablecontent');\n            e.querySelector('colGroup').innerHTML =\n                this.parent.grid.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.gridSettings.allowAutoResizing && this.parent.showGroupingBar && this.parent.groupingBarModule && this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.refreshUI();\n            }\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            this.parent.element.appendChild(createElement('div', { id: this.parent.element.id + '_grid' }));\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo('#' + this.parent.element.id + '_grid');\n        }\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.refreshHeader = function () {\n        if (this.parent.enableVirtualization) {\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            setStyleAttribute(mHdr.querySelector('.e-table'), {\n                transform: (mCont.querySelector('.e-table').style.transform).split(',')[0] + ',' + 0 + 'px)'\n            });\n            mHdr.scrollLeft = mCont.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            frozenColumns: 1,\n            frozenRows: 0,\n            enableHover: false,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? (this.gridSettings.allowAutoResizing ? this.parent.width : 400) : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            allowReordering: (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering),\n            allowSelection: this.gridSettings.allowSelection,\n            /* tslint:disable-next-line */\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            /* tslint:disable-next-line */\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined,\n            pdfExportComplete: this.pdfExportComplete.bind(this),\n            excelExportComplete: this.excelExportComplete.bind(this)\n        });\n        if (isBlazor()) {\n            var isJsComponent = 'isJsComponent';\n            /* tslint:disable-next-line */\n            this.parent.grid[isJsComponent] = true;\n        }\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n        this.parent.grid.on('export-DataBound', this.excelDataBound.bind(this));\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.headerRefreshed = function (args) {\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1) {\n            this.parent.lastGridSettings = undefined;\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n        }\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    /* tslint:disable */\n    Render.prototype.pdfExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n    };\n    Render.prototype.excelExportComplete = function (args) {\n        if (this.parent.lastColumn !== undefined && this.parent.lastColumn.width !== 'auto') {\n            this.parent.lastColumn.width = 'auto';\n            this.parent.lastColumn = undefined;\n        }\n    };\n    /* tslint:enable */\n    Render.prototype.dataBound = function (args) {\n        if (this.parent.cellTemplate && !isBlazor()) {\n            for (var _i = 0, _a = this.parent.gridHeaderCellInfo; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (this.parent.cellTemplate) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()(cell, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate', null, null, cell.targetCell);\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(cell.targetCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(cell.targetCell, element[0].outerHTML);\n                        }\n                    }\n                }\n            }\n            this.parent.gridHeaderCellInfo = [];\n        }\n        if (this.parent.element.querySelector('.e-firstcell')) {\n            if (this.parent.enableRtl) {\n                this.parent.element.querySelector('.e-firstcell').style.borderRight = 'none';\n            }\n            else {\n                this.parent.element.querySelector('.e-firstcell').style.borderLeft = 'none';\n            }\n        }\n        if (this.parent.grid && this.parent.grid.widthService) {\n            this.parent.grid.widthService.setWidthToTable();\n        }\n        /* tslint:disable-next-line */\n        if (this.parent.notEmpty) {\n            this.calculateGridHeight(true);\n        }\n        if (this.parent.currentView !== 'Chart') {\n            this.parent.grid.hideScroll();\n        }\n        this.parent.isScrolling = false;\n        this.setFocusOnLastCell();\n        if (!isNullOrUndefined(this.parent.renderReactTemplates)) {\n            this.parent.renderReactTemplates();\n        }\n        this.parent.notify(events.contentReady, {});\n    };\n    Render.prototype.setFocusOnLastCell = function () {\n        if (this.parent.keyboardModule && this.parent.keyboardModule.event &&\n            this.parent.keyboardModule.event.target.nodeName === 'TD') {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.setFocusedElement(this.parent.keyboardModule.event.target);\n            gridFocus.focus(this.parent.keyboardModule.event);\n            addClass([this.parent.keyboardModule.event.target], ['e-focused', 'e-focus']);\n            this.parent.keyboardModule.event.target.setAttribute('tabindex', '0');\n            this.parent.keyboardModule.event = undefined;\n        }\n    };\n    /* tslint:disable */\n    Render.prototype.contextMenuOpen = function (args) {\n        var _this = this;\n        var _loop_1 = function (item) {\n            var cellTarget = this_1.parent.lastCellClicked;\n            var elem = null;\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (cellTarget.classList.contains('e-stackedheadercelldiv') || cellTarget.classList.contains('e-cellvalue') ||\n                cellTarget.classList.contains('e-headercelldiv') || cellTarget.classList.contains('e-icons') || cellTarget.classList.contains('e-rhandler')) {\n                elem = cellTarget.parentElement;\n            }\n            else if (cellTarget.classList.contains('e-headercell') || cellTarget.classList.contains('e-rowcell') || cellTarget.classList.contains('e-columnsheader') ||\n                cellTarget.classList.contains('e-rowsheader') || cellTarget.classList.contains('e-valuescontent') || cellTarget.classList.contains('e-valuesheader')) {\n                elem = cellTarget;\n            }\n            else if (cellTarget.classList.contains('e-headertext')) {\n                elem = cellTarget.parentElement.parentElement;\n            }\n            if (!elem) {\n                args.cancel = true;\n                return { value: void 0 };\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this_1.parent.allowGrouping && this_1.parent.groupingModule && !this_1.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('aria-colindex'));\n            var pivotValue1 = this_1.parent.pivotValues[rowIndex][colIndex];\n            var select = item.id;\n            switch (select) {\n                case this_1.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this_1.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_collapse').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length === 2) {\n                        args.cancel = true;\n                    }\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_group')) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_custom_ungroup':\n                    if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup')) {\n                        addClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this_1.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this_1.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this_1.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('aria-colindex'))];\n                                var selectedCellsInfo = this_1.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n                                var selectedOptions = this_1.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _i = 0, _a = groupField.customGroups; _i < _a.length; _i++) {\n                                    var customGroup = _a[_i];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this_1.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (args.element.querySelectorAll('#' + this_1.parent.element.id + '_custom_ungroup') && isUngroupOption) {\n                            removeClass([args.element.querySelector('#' + this_1.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_drillthrough':\n                    if (!this_1.parent.allowDrillThrough) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === '') {\n                            if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough')) {\n                                args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_drillthrough').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortasc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_sortdesc':\n                    if (!this_1.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this_1.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_CalculatedField':\n                    if (!this_1.parent.allowCalculatedField) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_CalculatedField').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_pdf':\n                    if (!this_1.parent.allowPdfExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_pdf').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_excel':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_excel').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_csv':\n                    if (!this_1.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_csv').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_exporting':\n                    if ((!this_1.parent.allowExcelExport) && (!this_1.parent.allowPdfExport)) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_exporting').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this_1.parent.element.id + '_aggregate':\n                    if ((args.element.querySelector('#' + this_1.parent.element.id + '_aggregate')) &&\n                        (!args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.contains(cls.MENU_DISABLE))) {\n                        args.element.querySelector('#' + this_1.parent.element.id + '_aggregate').classList.add(cls.MENU_DISABLE);\n                    }\n                    if ((elem.classList.contains('e-valuesheader') || elem.classList.contains('e-valuescontent') ||\n                        (elem.classList.contains('e-stot') && elem.classList.contains('e-rowsheader'))) && this_1.parent.dataType !== 'olap') {\n                        var fieldType_1;\n                        if (!(elem.innerText === '')) {\n                            fieldType_1 = this_1.parent.engineModule.fieldList[pivotValue1.actualText.toString()].type;\n                        }\n                        var eventArgs = {\n                            cancel: false, fieldName: pivotValue1.actualText.toString(),\n                            aggregateTypes: this_1.getMenuItem(fieldType_1).slice()\n                        };\n                        this_1.parent.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n                            if (!observedArgs.cancel && !(elem.innerText === '')) {\n                                var menuItem = [];\n                                var checkDuplicates = [];\n                                for (var i = 0; i < observedArgs.aggregateTypes.length; i++) {\n                                    var key = observedArgs.aggregateTypes[i];\n                                    if (fieldType_1 !== 'number') {\n                                        if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                    else {\n                                        if ((_this.parent.getAllSummaryType().indexOf(key) > -1) && (checkDuplicates.indexOf(key) < 0)) {\n                                            menuItem.push({ text: _this.parent.localeObj.getConstant(key), id: _this.parent.element.id + '_Agg' + key });\n                                            checkDuplicates.push(key);\n                                        }\n                                    }\n                                }\n                                if (menuItem.length >= 7) {\n                                    menuItem.splice(7);\n                                    menuItem.push({\n                                        text: _this.parent.localeObj.getConstant('MoreOption'),\n                                        id: _this.parent.element.id + '_Agg' + 'MoreOption'\n                                    });\n                                }\n                                if (menuItem && menuItem.length >= 1) {\n                                    item.items = menuItem;\n                                    args.element.querySelector('#' + _this.parent.element.id + '_aggregate').classList.remove(cls.MENU_DISABLE);\n                                }\n                            }\n                        });\n                    }\n                    break;\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var state_1 = _loop_1(item);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.getMenuItem = function (isStringField) {\n        var menuItems = [];\n        for (var i = 0; i < this.parent.aggregateTypes.length; i++) {\n            var key = this.parent.aggregateTypes[i];\n            if (isStringField !== 'string') {\n                if ((this.parent.getAllSummaryType().indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n            else {\n                if ((['Count', 'DistinctCount'].indexOf(key) > -1) && (menuItems.indexOf(key) === -1)) {\n                    menuItems.push(key);\n                }\n            }\n        }\n        return menuItems;\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        var _this = this;\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var event = new MouseEvent('dblclick', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true\n        });\n        var exportArgs = {};\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv') || target.classList.contains('e-icons') || target.classList.contains('e-rhandler')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('aria-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        var aggregateType;\n        if (args.item.id.indexOf(this.parent.element.id + '_Agg') > -1) {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n            aggregateType = args.item.id.split('_Agg')[1];\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                exportArgs = {\n                    pdfDoc: undefined,\n                    isBlob: false,\n                    isMultipleExport: false,\n                    pdfExportProperties: { fileName: 'Export.pdf' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var pdfProperties = PivotUtil.formatPdfExportProperties(observedArgs.pdfExportProperties);\n                        _this.parent.pdfExport(pdfProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_excel':\n                exportArgs = {\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined,\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this.parent.excelExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_csv':\n                exportArgs = {\n                    isBlob: false,\n                    workbook: undefined,\n                    isMultipleExport: false,\n                    excelExportProperties: { fileName: 'Export.csv' },\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this.parent.csvExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case this.parent.element.id + '_drillthrough_menu':\n                ele.dispatchEvent(event);\n                break;\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n            case this.parent.element.id + '_AggDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfDifferenceFrom':\n            case this.parent.element.id + '_AggPercentageOfParentTotal':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element, aggregateType);\n                break;\n            case this.parent.element.id + '_Agg' + aggregateType:\n                this.updateAggregate(aggregateType);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateColumnTotalcell = function (columnIndex) {\n        var headerPosKeys = Object.keys(this.engine.headerContent);\n        var keysLength = headerPosKeys.length;\n        var sumLock = false;\n        var fieldName = \"\";\n        for (var pos = keysLength - 1; pos >= 0; pos--) {\n            var cell = this.engine.headerContent[headerPosKeys[pos]][columnIndex];\n            if (cell) {\n                sumLock = sumLock && fieldName !== '' ? fieldName === cell.valueSort.axis : false;\n                fieldName = cell.valueSort.axis ? cell.valueSort.axis.toString() : '';\n                if (cell.type === 'sum') {\n                    sumLock = true;\n                }\n                if (sumLock && cell.members && cell.members.length > 0) {\n                    return true;\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName == '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('aria-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    /* tslint:enable */\n    Render.prototype.updateAggregate = function (aggregate) {\n        if (this.parent.getAllSummaryType().indexOf(aggregate) > -1) {\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                    var dataSourceItem = valuefields[valueCnt];\n                    dataSourceItem.type = aggregate;\n                }\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering);\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        /* tslint:disable-next-line */\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        /* tslint:disable-next-line */\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                /* tslint:disable-next-line */\n                if (!isNullOrUndefined(this.parent.pivotColumns[colPos][key])) {\n                    /* tslint:disable-next-line */\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        removeClass(this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt) {\n        if (this.parent.enableValueSorting && this.parent.dataType === 'pivot') {\n            var vSort = this.parent.dataSourceSettings.valueSortSettings;\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (this.parent.engineModule.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (this.parent.engineModule.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && rCnt === len && this.parent.dataSourceSettings.valueAxis === 'column') {\n                if (tCell.querySelector('.e-sortfilterdiv')) {\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-descending' : 'e-ascending');\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending' : 'e-icon-ascending');\n                }\n                else {\n                    tCell.appendChild(createElement('div', {\n                        className: (vSort.sortOrder === 'Descending' ?\n                            'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                            'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                    }));\n                }\n                if (!isNullOrUndefined(cell.hasChild) && cell.type !== 'grand sum' && tCell.querySelector('.e-expand') &&\n                    (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'))) {\n                    var element = (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'));\n                    setStyleAttribute(element, { 'padding-top': '12px' });\n                }\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        /* tslint:disable-next-line */\n        var column = args.column.field === '0.formattedText' ? '0.formattedText' : args.column.customAttributes.cell.valueSort.levelName;\n        this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.e-frozenheader').querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.e-frozencontent').querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        /* tslint:disable-next-line */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        /* tslint:disable-next-line */\n        if (tCell && (this.parent.notEmpty) && this.engine.headerContent) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            tCell.setAttribute('index', (Number(tCell.getAttribute('index')) + this.engine.headerContent.length).toString());\n            var cell = args.data[0];\n            if (tCell.getAttribute('aria-colindex') === '0') {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var level = cell.level ? cell.level : (isValueCell ? (this.lastSpan + 1) : 0);\n                    do {\n                        if (level > 0) {\n                            tCell.appendChild(createElement('span', {\n                                className: level === 0 ? '' : cls.NEXTSPAN,\n                            }));\n                        }\n                        level--;\n                    } while (level > -1);\n                    level = cell.level ? cell.level : 0;\n                    this.lastSpan = !isValueCell ? level : this.lastSpan;\n                    if (!cell.hasChild && level > 0) {\n                        tCell.appendChild(createElement('span', {\n                            className: cls.LASTSPAN,\n                        }));\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        fieldName = level > -1 ? this.parent.dataSourceSettings.rows[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapRowCellBoundEvent(tCell, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        this.rowGrandPos = cell.rowIndex;\n                        tCell.classList.add('e-gtot');\n                        localizedText = this.parent.localeObj.getConstant('grandTotal');\n                    }\n                    else if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                        (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                        tCell.classList.add('e-gtot');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                tCell.classList.add(cls.ROWSHEADER);\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    tCell.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    /* tslint:disable-next-line */\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row'\n                        && this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            var style = (tCell.querySelector('.e-expand') || tCell.querySelector('.e-collapse')) ?\n                                'padding-top: 18px' : 'padding-top: 12px';\n                            tCell.appendChild(createElement('div', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                                styles: style\n                            }));\n                        }\n                    }\n                }\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('aria-colindex'))];\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                if (cell.isGrandSum || this.colGrandPos === Number(tCell.getAttribute('aria-colindex')) || this.rowGrandPos === Number(tCell.getAttribute('index'))) {\n                    tCell.classList.add('e-gtot');\n                }\n                else if (this.parent.dataType === 'olap' ? cell.isSum : this.validateColumnTotalcell(!isNullOrUndefined(cell.value) ? cell.colIndex : cell.colIndex - 1)) {\n                    tCell.classList.add('e-colstot');\n                }\n                if (cell.cssClass) {\n                    tCell.classList.add(cell.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering && !this.parent.showGroupingBar) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes.cell.colIndex.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                var index = tCell.getAttribute('index');\n                var colindex = tCell.getAttribute('aria-colindex');\n                var templateID = index + '_' + colindex;\n                /* tslint:disable-next-line */\n                if (!(window && isBlazor())) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()({ targetCell: tCell, cellInfo: cell }, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate', null, null, tCell);\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                else if (index && colindex) {\n                    this.parent.gridCellCollection[templateID] = tCell;\n                }\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    /* tslint:disable */\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var memberPosition = tupInfo.uNameCollection.indexOf(cell.actualText.toString());\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::[').map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                if (cell.memberType === 3 && rowMeasurePos) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = tupInfo.typeCollection[fPos] !== '2' ? (this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')] && this.engine.fieldList[tupInfo.members[fPos].getAttribute('Hierarchy')].isHierarchy && fPos < this.parent.dataSourceSettings.rows.length - 1 && !this.parent.dataSourceSettings.rows[fPos + 1].isNamedSet && this.parent.dataSourceSettings.rows[fPos + 1].name.indexOf('[Measures]') < 0 && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name] && this.engine.fieldList[this.parent.dataSourceSettings.rows[fPos + 1].name].hasAllMember) ? true : Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0 : false;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var levelName = cell.memberType === 3 ? (this.measurePos + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_1 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_1 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_2 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_2 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_2 + 1) ? (currPos_2 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                tCell.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN,\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        var grandTotal = (this.parent.olapEngineModule.tupRowInfo[cell.ordinal] ?\n            (this.parent.olapEngineModule.tupRowInfo[cell.ordinal].measurePosition === 0 ?\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 1 :\n                this.parent.olapEngineModule.tupRowInfo[cell.ordinal].allStartPos === 0) : false);\n        if (grandTotal) {\n            tCell.classList.add('e-gtot');\n        }\n        return tCell;\n    };\n    /* tslint:enable */\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var level = cell.level ? cell.level : 0;\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns &&\n                        this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = level > -1 && this.parent.dataSourceSettings.columns[level] ?\n                            this.parent.dataSourceSettings.columns[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                    if (this.validateColumnTotalcell(cell.colIndex)) {\n                        tCell.classList.add('e-colstot');\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                if (cell.type) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    if (cell.type === 'grand sum') {\n                        this.colGrandPos = cell.colIndex;\n                    }\n                    else {\n                        tCell.classList.add('e-colstot');\n                    }\n                    var localizedText = cell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    tCell.children[0].classList.add(cls.CELLVALUE);\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    tCell.insertBefore(div, tCell.children[0]);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex);\n                if (this.parent.cellTemplate) {\n                    var index = tCell.getAttribute('index');\n                    var colindex = tCell.getAttribute('aria-colindex');\n                    var templateID = index + '_' + colindex;\n                    /* tslint:disable-next-line */\n                    if (!(window && isBlazor())) {\n                        this.parent.gridHeaderCellInfo.push({ targetCell: tCell });\n                    }\n                    else if (index && colindex) {\n                        this.parent.gridCellCollection[templateID] = tCell;\n                    }\n                }\n                var field = void 0;\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        if (this.parent.dataType === 'olap') {\n                            var grandTotal = (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal] ?\n                                (this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].measurePosition === 0 ?\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 1 :\n                                    this.parent.olapEngineModule.tupColumnInfo[cell.ordinal].allStartPos === 0) : false);\n                            if (grandTotal) {\n                                tCell.classList.add('e-gtot');\n                            }\n                        }\n                        if (cell.valueSort.levelName === (this.parent.localeObj.getConstant('grandTotal') +\n                            (this.parent.dataSourceSettings.valueSortSettings.headerDelimiter) + (cell.formattedText))) {\n                            tCell.classList.add('e-gtot');\n                        }\n                        else {\n                            tCell.classList.add(cls.VALUESHEADER);\n                        }\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            tCell.setAttribute('colspan', cell.colSpan.toString());\n            tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('aria-colindex'))],\n            cancel: true,\n            nativeEvent: e\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < (pivotValues ? pivotValues.length : 0); rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? (pivotValues ? pivotValues.length : 0) : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    /* tslint:disable-next-line */\n    Render.prototype.frameEmptyData = function () {\n        /* tslint:disable-next-line */\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    Render.prototype.calculateColWidth = function (colCount) {\n        var offsetWidth = this.parent.element.offsetWidth ? this.parent.element.offsetWidth :\n            this.parent.element.getBoundingClientRect().width;\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * offsetWidth) : offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        colCount = colCount - 1;\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : Math.floor(colWidth);\n    };\n    Render.prototype.resizeColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        this.isOverflows = !((colCount * this.gridSettings.columnWidth) < parWidth);\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.gridSettings.columnWidth : Math.floor(colWidth);\n    };\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return (!this.isOverflows && !this.gridSettings.allowAutoResizing) ? this.parent.totColWidth : parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (isNaN(parHeight)) {\n            parHeight = parHeight > 300 ? parHeight : 300;\n        }\n        if (this.parent.currentView !== 'Chart') {\n            if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) ?\n                    this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS).offsetHeight : 0);\n                var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                gridHeight = parHeight - (gBarHeight + toolBarHeight) - 1;\n                if (elementCreated) {\n                    var tableHeight = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight;\n                    var contentHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                    var tableWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV + ' .' + cls.TABLE).offsetWidth;\n                    var contentWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetWidth;\n                    var horizontalOverflow = contentWidth < tableWidth;\n                    var verticalOverflow = contentHeight < tableHeight;\n                    var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                    if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                        !verticalOverflow && !commonOverflow) {\n                        this.parent.grid.height = 'auto';\n                    }\n                    else {\n                        this.parent.grid.height = gridHeight;\n                        this.parent.grid.dataBind();\n                    }\n                }\n                else {\n                    if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                        gridHeight = 'auto';\n                    }\n                }\n            }\n            else {\n                gridHeight = this.gridSettings.height;\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    Render.prototype.frameStackedHeaders = function () {\n        var singleValueFormat = this.parent.dataSourceSettings.values.length === 1 &&\n            !this.parent.dataSourceSettings.alwaysShowValueHeader ? this.formatList[this.parent.dataSourceSettings.values[0].name] : undefined;\n        var integrateModel = [];\n        if ((this.parent.dataType === 'olap' ? true : this.parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues ? this.engine.pivotValues[0].length : 0);\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                if (colField) {\n                    for (var cCnt = 0; cCnt < Object.keys(colField).length + (colField[0] ? 0 : 1); cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || headerCnt === 0) ?\n                                colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' ? 1 : colSpan;\n                        var rowSpan = (colField[cCnt] && colField[cCnt].rowSpan) ? colField[cCnt].rowSpan : 1;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            this.parent.localeObj.getConstant('grandTotal') : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': colField[cCnt] },\n                                /* tslint:disable-next-line */\n                                width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) : this.resColWidth,\n                                minWidth: 30,\n                                format: cCnt === 0 ? '' : (isNullOrUndefined(singleValueFormat) ? this.formatList[colField[cCnt].actualText] : singleValueFormat),\n                                allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true\n                            };\n                        }\n                        else if (headerSplit[cCnt]) {\n                            colSpan = (colField[cCnt] && colField[cCnt].type === 'grand sum' &&\n                                colField[cCnt].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!integrateModel[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(integrateModel[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        /* tslint:disable-next-line */\n                                        field: colField[cCnt] ? colField[cCnt].valueSort.levelName : '',\n                                        customAttributes: { 'cell': colField[cCnt] },\n                                        /* tslint:disable-next-line */\n                                        width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) :\n                                            this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true\n                                    };\n                                    innerModel = [integrateModel[splitPos[innerPos]]];\n                                }\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                integrateModel = columnModel.length > 0 ? columnModel : integrateModel;\n            } while (headerCnt > 0);\n            integrateModel[0] = {\n                field: (0 + '.formattedText'),\n                width: this.resColWidth,\n                minWidth: 30,\n                headerText: '',\n                allowReordering: false,\n                allowResizing: this.parent.gridSettings.allowResizing,\n                visible: true\n            };\n        }\n        else {\n            integrateModel = this.frameEmptyColumns();\n        }\n        if (integrateModel.length > 1) {\n            var lastColumn = integrateModel[integrateModel.length - 1];\n            lastColumn.minWidth = lastColumn.width;\n            lastColumn.width = 'auto';\n            if (lastColumn.columns && lastColumn.columns.length > 0) {\n                this.configLastColumnWidth(lastColumn.columns[lastColumn.columns.length - 1]);\n            }\n        }\n        this.parent.triggerColumnRenderEvent(integrateModel);\n        return integrateModel;\n    };\n    Render.prototype.configLastColumnWidth = function (column) {\n        column.minWidth = column.width;\n        column.width = 'auto';\n        if (column.columns && column.columns.length > 0) {\n            this.configLastColumnWidth(column.columns[column.columns.length - 1]);\n        }\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        /* tslint:disable-next-line */\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name]) {\n                    var fString = this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    format = fString.indexOf('#') > -1 ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    /* tslint:disable */\n    Render.prototype.excelColumnEvent = function (args) {\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        if (args.gridCell !== undefined && args.gridCell.column.width === 'auto') {\n            this.parent.lastColumn = args.gridCell.column;\n            args.gridCell.column.width = args.gridCell.column.minWidth;\n        }\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    /* tslint:enable */\n    Render.prototype.excelRowEvent = function (args) {\n        if (args.column.field === '0.formattedText') {\n            var isValueCell = args.data[0].type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                /* tslint:disable-next-line */\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            /* tslint:disable-next-line */\n            if (isNullOrUndefined(args.data[this.colPos].value) || isNullOrUndefined(args.data[this.colPos].formattedText)) {\n                args.value = '';\n            }\n            else {\n                /* tslint:disable-next-line */\n                args.value = args.data[this.colPos].value || args.data[this.colPos].formattedText;\n            }\n        }\n        args = this.exportContentEvent(args);\n        this.parent.trigger(events.excelQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var isValueCell = args.data[0].type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level !== -1 ?\n                    args.data[0].level : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.excelDataBound = function (args) {\n        var excelRows = args.excelRows;\n        var rowStartPos = Object.keys(this.engine.headerContent).length;\n        for (var i = 0; i < rowStartPos; i++) {\n            var cells = excelRows[i].cells;\n            var tmpCell = [];\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[j].rowSpan !== -1) {\n                    tmpCell.push(cells[j]);\n                }\n            }\n            excelRows[i].cells = tmpCell;\n        }\n    };\n    ;\n    Render.prototype.exportHeaderEvent = function (args) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            if (this.actualText !== cell.actualText && cell.colSpan > 1 && cell.level > -1) {\n                args.gridCell.colSpan = args.cell.colSpan = cell.colSpan > -1 ? cell.colSpan : 1;\n            }\n            rowSpan = cell.rowSpan > -1 ? cell.rowSpan : 1;\n            if (args.name === 'excelHeaderQueryCellInfo') {\n                if (cell.rowSpan > -1) {\n                    rowSpan = cell.rowSpan;\n                }\n                else if (!isNullOrUndefined(cell.type) && cell.level !== 0) {\n                    rowSpan = -1;\n                    args.cell.rowSpan = -1;\n                }\n            }\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > -1) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    /* tslint:enable:no-any */\n    Render.prototype.exportContentEvent = function (args) {\n        args.value = args.data[Number(args.column.field.split('.formattedText')[0])].type === 'grand sum' ?\n            this.parent.localeObj.getConstant('grandTotal') : args.value;\n        return args;\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","import { KeyboardEvents, closest, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            shiftE: 'shift+E',\n            delete: 'delete',\n            enter: 'enter',\n            escape: 'escape',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'shiftE':\n                this.processEdit(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'escape':\n                this.processClose(e);\n                break;\n            case 'upArrow':\n            case 'downArrow':\n                this.processFilterNodeSelection(e);\n                break;\n        }\n    };\n    CommonKeyboardInteraction.prototype.getButtonElement = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        for (var i = 0, len = allPivotButtons.length; i < len; i++) {\n            if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                return allPivotButtons[i];\n            }\n        }\n        return target;\n    };\n    CommonKeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (target.querySelector('.' + cls.AXISFIELD_ICON_CLASS) && closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            }\n            else if (target.querySelector('.' + cls.CALC_EDIT)) {\n                target.querySelector('.' + cls.CALC_EDIT).click();\n            }\n            else if (target.querySelector('.' + cls.SORT_CLASS) &&\n                !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n                target.querySelector('.' + cls.SORT_CLASS).click();\n                this.getButtonElement(target).focus();\n            }\n            else if (target.querySelector('.' + cls.FILTER_COMMON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n                target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.SORT_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            this.getButtonElement(target).focus();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processEdit = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.CALC_EDIT)) {\n            target.querySelector('.' + cls.CALC_EDIT).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.FILTER_COMMON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            if (this.parent && this.parent.control && this.parent.moduleName === 'pivotview' &&\n                this.parent.control.grid && this.parent.control.showGroupingBar &&\n                this.parent.control.groupingBarModule && closest(target, '.' + cls.GROUP_ROW_CLASS) &&\n                this.parent.filterDialog && this.parent.filterDialog.dialogPopUp &&\n                !this.parent.filterDialog.dialogPopUp.isDestroyed && this.parent.filterDialog.dialogPopUp.element) {\n                var dialogElement_1 = this.parent.filterDialog.dialogPopUp.element;\n                var isExcelFilter_1 = this.parent.filterDialog.allowExcelLikeFilter;\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(function () {\n                    if (dialogElement_1 && dialogElement_1.classList.contains('e-popup-open')) {\n                        if (isExcelFilter_1 && dialogElement_1.querySelector('.e-dlg-closeicon-btn')) {\n                            dialogElement_1.querySelector('.e-dlg-closeicon-btn').focus();\n                        }\n                        else if (dialogElement_1.querySelector('input')) {\n                            dialogElement_1.querySelector('input').focus();\n                        }\n                    }\n                });\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilterNodeSelection = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.SELECT_ALL_CLASS) && e.keyCode === 40) {\n            /* tslint:disable-next-line:max-line-length */\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree && memberEditorTree.querySelector('li')) {\n                var firstLi = memberEditorTree.querySelector('li');\n                if (memberEditorTree.querySelector('li#_active')) {\n                    removeClass([memberEditorTree.querySelector('li#_active')], ['e-hover', 'e-node-focus']);\n                    memberEditorTree.querySelector('li#_active').removeAttribute('id');\n                }\n                firstLi.setAttribute('id', '_active');\n                addClass([firstLi], ['e-hover', 'e-node-focus']);\n                memberEditorTree.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS) && e.keyCode === 38) {\n            var memberEditorTree = closest(target, '.' + cls.EDITOR_TREE_CONTAINER_CLASS);\n            if (memberEditorTree.querySelector('li#_active.e-hover.e-node-focus') && memberEditorTree.querySelector('li') &&\n                memberEditorTree.querySelector('li').classList.contains('e-prev-active-node') &&\n                memberEditorTree.querySelector('li') === memberEditorTree.querySelector('li#_active.e-hover.e-node-focus')) {\n                removeClass(memberEditorTree.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n                /* tslint:disable-next-line:max-line-length */\n                var allMemberEditorTree = closest(target, '.' + cls.EDITOR_TREE_WRAPPER_CLASS).querySelector('.' + cls.SELECT_ALL_CLASS);\n                if (allMemberEditorTree && allMemberEditorTree.querySelector('li')) {\n                    var firstLi = allMemberEditorTree.querySelector('li');\n                    firstLi.setAttribute('id', '_active');\n                    addClass([firstLi], ['e-hover', 'e-node-focus']);\n                    allMemberEditorTree.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && target.id === this.parent.parentID + '_inputbox') {\n            if (e.action === 'upArrow') {\n                target.parentElement.querySelector('.e-spin-up').click();\n            }\n            else if (e.action === 'downArrow') {\n                target.parentElement.querySelector('.e-spin-down').click();\n            }\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && target.querySelector('.' + cls.REMOVE_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processClose = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.e-popup.e-popup-open')) {\n            /* tslint:disable-next-line:max-line-length */\n            /* tslint:disable-next-line:no-any */\n            var dialogInstance = closest(target, '.e-popup.e-popup-open').ej2_instances[0];\n            if (dialogInstance && !dialogInstance.closeOnEscape) {\n                var button = dialogInstance.element.getAttribute('data-fieldName');\n                dialogInstance.hide();\n                if (this.parent.element) {\n                    var pivotButtons = [].slice.call(this.parent.element.querySelectorAll('.e-pivot-button'));\n                    for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                        var item = pivotButtons_1[_i];\n                        if (item.getAttribute('data-uid') === button) {\n                            item.focus();\n                            break;\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function EventBase(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.id;\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.id;\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            isDescending ? removeClass([target], cls.SORT_DESCEND_CLASS) : addClass([target], cls.SORT_DESCEND_CLASS);\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateFiltering\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                var members = PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember);\n                /* tslint:disable:typedef */\n                members =\n                    this.parent.engineModule.fieldList[fieldName].sort === 'Ascending' ?\n                        (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n                            ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        this.parent.engineModule.fieldList[fieldName].sort === 'Descending' ?\n                            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                                ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            members;\n                /* tslint:enable:typedef */\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                treeData =\n                    this.getTreeData(isInclude, members, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget = this.parent.control.filterTargetID;\n        if (isNullOrUndefined(popupTarget)) {\n            popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n                this.parent.element : document.getElementById(this.parent.parentID + '_Wrapper');\n        }\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     * @method isValidFilterItemsAvail\n     * @param  {string} fieldName - Gets filter members for the given field name.\n     * @return {boolean}\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            var engineModule = this.parent.engineModule;\n            var field = engineModule.fieldList[fieldName];\n            var members = (engineModule.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData, isHierarchy);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     * @method sortFilterData\n     * @param  {{ [key: string]: Object }[]} treeData - Gets filter members for the given field name.\n     * @return {{ [key: string]: Object }[]}\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            /* tslint:disable:typedef */\n            treeData = order === 'Ascending' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                    ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                    ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n            /* tslint:enable:typedef */\n        }\n        return treeData;\n    };\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData, isHierarchy);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        this.parent.isDateField = engineModule.formatFields[fieldName] &&\n            ((['date', 'dateTime', 'time']).indexOf(engineModule.formatFields[fieldName].type) > -1);\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = this.parent.isDateField ? member.formattedText : member.actualText.toString();\n            /* tslint:disable */\n            var obj = {\n                id: member.actualText.toString(),\n                actualText: member.actualText,\n                name: memberName,\n                isSelected: isInclude ? false : true\n            };\n            /* tslint:enable */\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[member.actualText] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount - 1, isSelected: obj.isSelected };\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * get the parent node of particular filter members.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData, isHierarchy) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node].parent;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @method onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} fieldCaption - Defines dropped position to the axis based on field position.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        var draggedClass;\n        var row = this.parent.dataSourceSettings.rows;\n        var column = this.parent.dataSourceSettings.columns;\n        var value = this.parent.dataSourceSettings.values;\n        var filter = this.parent.dataSourceSettings.filters;\n        var field = [row, column, value, filter];\n        for (var len = 0, lnt = field.length; len < lnt; len++) {\n            if (field[len]) {\n                for (var i = 0, n = field[len].length; i < n; i++) {\n                    if (field[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        field[len][i].name.toLowerCase() === '[measures]' && field[len][i].name.toLowerCase() === fieldName)) {\n                        draggedClass = len === 0 ? 'rows' : len === 1 ? 'columns' : len === 2 ? 'values' : 'filters';\n                    }\n                    if (!draggedClass) {\n                        draggedClass = 'fieldList';\n                    }\n                }\n            }\n        }\n        var eventdrop = {\n            fieldName: fieldName, dropField: PivotUtil.getFieldInfo(fieldName, this.control).fieldItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            dropAxis: droppedClass, dropPosition: droppedPosition, draggedAxis: draggedClass, cancel: false\n        };\n        var control = this.control.getModuleName() === 'pivotfieldlist' && this.control.isPopupView ?\n            this.control.pivotGridModule : this.control;\n        control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                droppedClass = observedArgs.dropAxis;\n                droppedPosition = observedArgs.dropPosition;\n                fieldName = observedArgs.dropField ? observedArgs.dropField.name : observedArgs.fieldName;\n                dataSourceItem = observedArgs.dropField;\n                if (_this.control && _this.btnElement && _this.btnElement.getAttribute('isvalue') === 'true') {\n                    switch (droppedClass) {\n                        case '':\n                            _this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            break;\n                        case 'rows':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'row' } }, true);\n                            break;\n                        case 'columns':\n                            _this.control.setProperties({ dataSourceSettings: { valueAxis: 'column' } }, true);\n                            break;\n                    }\n                }\n                else {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.parent.dataType === 'olap') {\n                    // dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n                    // dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n                    _this.removeFieldFromReport(fieldName.toString());\n                    dataSourceItem = _this.getNewField(fieldName.toString(), observedArgs.dropField);\n                    if (_this.parent.dataSourceSettings.values.length === 0) {\n                        _this.removeFieldFromReport('[measures]');\n                    }\n                    if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                        droppedClass = 'values';\n                    }\n                }\n                if (_this.control) {\n                    var eventArgs = {\n                        fieldName: fieldName, droppedField: dataSourceItem,\n                        dataSourceSettings: PivotUtil.getClonedDataSourceSettings(_this.parent.dataSourceSettings),\n                        droppedAxis: droppedClass, droppedPosition: droppedPosition\n                    };\n                    /* tslint:disable */\n                    var dataSourceUpdate_1 = _this;\n                    control.trigger(events.onFieldDropped, eventArgs, function (droppedArgs) {\n                        dataSourceItem = droppedArgs.droppedField;\n                        if (dataSourceItem) {\n                            droppedPosition = droppedArgs.droppedPosition;\n                            droppedClass = droppedArgs.droppedAxis;\n                            switch (droppedClass) {\n                                case 'filters':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.push(dataSourceItem) : _this.parent.dataSourceSettings.filters.push(dataSourceItem));\n                                    break;\n                                case 'rows':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.push(dataSourceItem) : _this.parent.dataSourceSettings.rows.push(dataSourceItem));\n                                    break;\n                                case 'columns':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.push(dataSourceItem) : _this.parent.dataSourceSettings.columns.push(dataSourceItem));\n                                    break;\n                                case 'values':\n                                    droppedPosition !== -1 ?\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem)) :\n                                        (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.push(dataSourceItem) : _this.parent.dataSourceSettings.values.push(dataSourceItem));\n                                    if (isBlazor()) {\n                                        if (dataSourceUpdate_1.parent.dataType === 'olap' && !dataSourceUpdate_1.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = dataSourceUpdate_1.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                dataSourceUpdate_1.parent.dataSourceSettings.rows : dataSourceUpdate_1.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    else {\n                                        if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail) {\n                                            var measureField = {\n                                                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n                                            };\n                                            var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                                _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                            fieldAxis.push(measureField);\n                                        }\n                                    }\n                                    break;\n                            }\n                            if (isBlazor()) {\n                                dataSourceUpdate_1.parent.control.pivotButtonModule.updateDataSource();\n                                dataSourceUpdate_1.parent.control.axisFieldModule.render();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @method removeFieldFromReport\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties : fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     * @param  {string} fieldName - Defines dropped field name to add dataSource.\n     * @method getNewField\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName, fieldItem) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                isNamedSet: fieldItem ? fieldItem.isNamedSet : field.isNamedSets,\n                isCalculatedField: fieldItem ? fieldItem.isCalculatedField : field.isCalculatedField,\n                type: (fieldItem ? (fieldItem.type === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : fieldItem.type) :\n                    (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType)),\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldItem ? fieldItem.name : fieldName,\n                caption: fieldItem ? fieldItem.caption : field.caption,\n                type: (fieldItem ? ((fieldItem.type === undefined || fieldItem.type === null) ?\n                    field.type === 'number' ? 'Sum' : 'Count' : fieldItem.type) :\n                    ((field.aggregateType === undefined || field.aggregateType === null) ?\n                        field.type === 'number' ? 'Sum' :\n                            'Count' : field.aggregateType)),\n                showNoDataItems: fieldItem ? fieldItem.showNoDataItems : field.showNoDataItems,\n                baseField: fieldItem ? fieldItem.baseField : field.baseField,\n                baseItem: fieldItem ? fieldItem.baseItem : field.baseItem,\n                allowDragAndDrop: fieldItem ? fieldItem.allowDragAndDrop : field.allowDragAndDrop,\n                showSubTotals: fieldItem ? fieldItem.showSubTotals : field.showSubTotals,\n                showFilterIcon: fieldItem ? fieldItem.showFilterIcon : field.showFilterIcon,\n                showSortIcon: fieldItem ? fieldItem.showSortIcon : field.showSortIcon,\n                showEditIcon: fieldItem ? fieldItem.showEditIcon : field.showEditIcon,\n                showRemoveIcon: fieldItem ? fieldItem.showRemoveIcon : field.showRemoveIcon,\n                showValueTypeIcon: fieldItem ? fieldItem.showValueTypeIcon : field.showValueTypeIcon\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createErrorDialog\n     * @return {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description, target) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var zIndex = target ? Number(target.style.zIndex) + 1 : (this.parent.moduleName === 'pivotfieldlist' &&\n            this.parent.renderMode === 'Popup' && this.parent.control ? this.parent.control.dialogRenderer.fieldListDialog.zIndex + 1 :\n            (this.parent.moduleName === 'pivotfieldlist' && this.parent.renderMode === 'Fixed' && this.parent.control ? 1000002 :\n                (this.parent.moduleName === 'pivotview' && this.parent.control ? 1000002 : 1000001)));\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: zIndex,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute, closest, EventHandler } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\nimport * as events from '../base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     * @method createFilterDialog\n     * @return {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var _this = this;\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption }\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            // content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            content: '',\n            isModal: true,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: this.parent.renderMode === 'Popup' ? false : true,\n            target: target,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        var filterArgs = {\n            cancel: false,\n            fieldName: fieldName,\n            fieldMembers: this.parent.dataSourceSettings.allowMemberFilter ? treeData : [],\n            filterSetting: this.filterObject\n        };\n        var control = this.parent.moduleName === 'pivotfieldlist' && this.parent.control.isPopupView ?\n            this.parent.control.pivotGridModule : this.parent.control;\n        control.trigger(events.memberEditorOpen, filterArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                treeData = observedArgs.fieldMembers;\n                if (_this.allowExcelLikeFilter) {\n                    _this.createTabMenu(treeData, fieldCaption, fieldName);\n                    addClass([_this.dialogPopUp.element], 'e-excel-filter');\n                    _this.updateCheckedState(fieldCaption);\n                }\n                else {\n                    _this.dialogPopUp.content = _this.createTreeView(treeData, fieldCaption, fieldName);\n                    _this.updateCheckedState(fieldCaption);\n                }\n                setStyleAttribute(_this.dialogPopUp.element, { 'visibility': 'visible' });\n                if (_this.allowExcelLikeFilter) {\n                    _this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n                }\n                _this.parent.control.pivotButtonModule.memberTreeView = _this.parent.filterDialog.memberTreeView;\n                /* tslint:disable-next-line:max-line-length */\n                _this.memberTreeView.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n                /* tslint:disable-next-line:max-line-length */\n                _this.allMemberSelect.nodeChecked = _this.parent.control.pivotButtonModule.nodeStateModified.bind(_this.parent.control.pivotButtonModule);\n            }\n            else {\n                _this.dialogPopUp.close();\n                _this.dialogPopUp = undefined;\n            }\n        });\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-wrapper-class', attrs: { 'type': 'button' }\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', {\n            attrs: { 'type': 'text', className: cls.EDITOR_SEARCH__INPUT_CLASS }\n        });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        this.createSortOptions(fieldName, searchWrapper, treeData);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            searchWrapper.appendChild(levelWrapper);\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '\"' + filterCaption + '\"',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv, fieldCaption);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState(fieldCaption);\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName };\n        var data = [{ id: 'all', name: this.parent.localeObj.getConstant('all'), isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        if (!isNullOrUndefined(this.parent.currentTreeItems)) {\n            for (var i = 0; i < this.parent.currentTreeItems.length; i++) {\n                if (this.parent.currentTreeItems[i].id.indexOf(\"\\n\") || this.parent.currentTreeItems[i].id.startsWith(\"\\n\")) {\n                    this.parent.currentTreeItems[i].id = this.parent.currentTreeItems[i].id.replace('\\n', ' ');\n                }\n            }\n        }\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            },\n            expandOn: 'None'\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        editorTreeWrapper.appendChild(labelWrapper);\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createSortOptions = function (fieldName, target, treeData) {\n        if (this.parent.dataType === 'pivot' && treeData && treeData.length > 0) {\n            var sortOrder = this.parent.engineModule.fieldList[fieldName].sort;\n            var sortWrapper = createElement('div', {\n                className: cls.FILTER_SORT_CLASS + ' e-btn-group' + (this.parent.enableRtl ? ' ' + cls.RTL : ''),\n                id: this.parent.element.id + '_Member_Sort'\n            });\n            this.parent.element.appendChild(sortWrapper);\n            var sortAscendElement = createElement('button', {\n                className: (sortOrder === 'Ascending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Ascend', attrs: { 'type': 'button' }\n            });\n            var sortDescendElement = createElement('button', {\n                className: (sortOrder === 'Descending' ? cls.SORT_SELECTED_CLASS + ' ' : '') + cls.MEMBER_SORT_CLASS,\n                id: this.parent.element.id + '_Sort_Descend', attrs: { 'type': 'button' }\n            });\n            var sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_ASCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortAscendElement);\n            sortBtnElement = new Button({\n                iconCss: cls.ICON + ' ' + cls.SORT_DESCEND_ICON_CLASS, enableRtl: this.parent.enableRtl\n            });\n            sortBtnElement.appendTo(sortDescendElement);\n            sortWrapper.appendChild(sortAscendElement);\n            sortWrapper.appendChild(sortDescendElement);\n            target.appendChild(sortWrapper);\n            this.unWireEvent(sortAscendElement, fieldName);\n            this.unWireEvent(sortDescendElement, fieldName);\n            this.wireEvent(sortAscendElement, fieldName);\n            this.wireEvent(sortDescendElement, fieldName);\n        }\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop',\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv, fieldCaption) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ? engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState(fieldCaption);\n        }, 500);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-any */\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        var target = args.event.target;\n        if (target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n        else if (args.event.keyCode === 38 && !isAllMember) {\n            removeClass(this.memberTreeView.element.querySelectorAll('li.e-prev-active-node'), 'e-prev-active-node');\n            addClass(checkedNode, 'e-prev-active-node');\n        }\n    };\n    /* tslint:enable:no-any */\n    FilterDialog.prototype.applySorting = function (fieldName, args) {\n        var target = closest(args.target, '.' + cls.MEMBER_SORT_CLASS);\n        if (target) {\n            var sortElements = [].slice.call(closest(target, '.' + cls.FILTER_SORT_CLASS).querySelectorAll('.' + cls.MEMBER_SORT_CLASS));\n            if (target.querySelector('.' + cls.SORT_ASCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Ascending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[1]], cls.SORT_SELECTED_CLASS);\n            }\n            else if (target.querySelector('.' + cls.SORT_DESCEND_ICON_CLASS) && !target.classList.contains(cls.SORT_SELECTED_CLASS)) {\n                this.updateFilterMembers('Descending', fieldName);\n                addClass([target], cls.SORT_SELECTED_CLASS);\n                removeClass([sortElements[0]], cls.SORT_SELECTED_CLASS);\n            }\n            else {\n                this.updateFilterMembers('None', fieldName);\n                removeClass(sortElements, cls.SORT_SELECTED_CLASS);\n            }\n        }\n    };\n    FilterDialog.prototype.updateFilterMembers = function (order, fieldName) {\n        var members = order === 'None' ?\n            PivotUtil.getClonedData(this.parent.engineModule.fieldList[fieldName].dateMember) : this.parent.currentTreeItems.slice();\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        var treeData = [];\n        /* tslint:disable:typedef */\n        members = order === 'Ascending' ? (members.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n            ((b.actualText > a.actualText) ? -1 : 0); })) : order === 'Descending' ?\n            (members.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                ((b.actualText < a.actualText) ? -1 : 0); })) : members;\n        /* tslint:enable:typedef */\n        for (var i = 0, lnt = members.length; i < lnt; i++) {\n            if (order === 'None') {\n                var memberName = (this.parent.isDateField ? members[i].formattedText : members[i].actualText).toString();\n                var obj = {\n                    id: members[i].actualText.toString(),\n                    actualText: members[i].actualText,\n                    name: memberName,\n                    isSelected: this.parent.currentTreeItemsPos[members[i].actualText].isSelected\n                };\n                this.parent.currentTreeItems.push(obj);\n                if (this.editorSearch.value !== '') {\n                    if (obj.name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(obj);\n                        treeData.push(obj);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(obj);\n                    treeData.push(obj);\n                }\n            }\n            else {\n                this.parent.currentTreeItems.push(members[i]);\n                if (this.editorSearch.value !== '') {\n                    if (members[i].name.toLowerCase().indexOf(this.editorSearch.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(members[i]);\n                        treeData.push(members[i]);\n                    }\n                }\n                else {\n                    this.parent.searchTreeItems.push(members[i]);\n                    treeData.push(members[i]);\n                }\n            }\n            this.parent.currentTreeItemsPos[members[i].actualText].index = i;\n        }\n        var dataCount = this.memberTreeView.fields.dataSource.length;\n        /* tslint:disable-next-line:max-line-length */\n        this.memberTreeView.fields = { dataSource: treeData.slice(0, dataCount), id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        this.memberTreeView.dataBind();\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = { index: memberCount, isSelected: obj.isSelected };\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            className: 'e-filter-tab-wrapper'\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    /* tslint:disable-next-line:max-line-length */\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject : undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ? measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id && field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter',\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS,\n            innerHTML: this.parent.localeObj.getConstant(type + 'TextContent')\n        });\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : ''),\n            innerHTML: this.parent.localeObj.getConstant('And')\n        });\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-wrapper' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE),\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-wrapper' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : ''),\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-wrapper' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_wrapper' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_wrapper' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS, width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                /* tslint:disable-next-line:no-any */\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                /* tslint:disable-next-line:no-any */\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    /* tslint:enable */\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var value1;\n        var value2;\n        /* tslint:disable:no-any */\n        if (type === 'date') {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n            value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        }\n        else {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = inputObj1.value;\n            value2 = inputObj2.value;\n        }\n        /* tslint:enable:no-any */\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function (fieldCaption) {\n        var filterDialog = this.dialogPopUp.element;\n        setStyleAndAttributes(filterDialog, { 'role': 'menu', 'aria-haspopup': 'true' });\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length -\n                nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        /* tslint:disable-next-line:max-line-length */\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, PivotUtil.cloneFilterSettings(this.parent.dataSourceSettings.filterSettings));\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    FilterDialog.prototype.wireEvent = function (element, fieldName) {\n        EventHandler.add(element, 'click', this.applySorting.bind(this, fieldName), this);\n    };\n    FilterDialog.prototype.unWireEvent = function (element, fieldName) {\n        EventHandler.remove(element, 'click', this.applySorting);\n    };\n    /**\n     * To close filter dialog.\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class\n     * @param  {CommonArgs} control?\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    /** Constructor for Common module */\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateCommonModule\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initialLoad, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialLoad, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showEditIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"dataType\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\n/**\n * Allows specific fields associated with field information that needs to be displayed in the field axes of pivot table. The following configurations which are applicable are as follows:\n * * `name`: Allows you to set the field name that needs to be displayed in row/column/value/filter axis of pivot table.\n * * `caption`: Allows you to set caption to the specific field. It will be used to display instead of its name in pivot table component's UI.\n * * `type`: Allows to display the values in the pivot table with appropriate aggregations such as sum, product, count, average, etc… **Note: It is applicable only for relational data source.**\n * * `axis`: Allows you to set the axis name to the specific field. This will help to display the field in specified axis such as row/column/value/filter axis of pivot table.\n * * `showNoDataItems`: Allows you to display all members items of a specific field to the pivot table,\n * even doesn't have any data in its row/column intersection in data source. **Note: It is applicable only for relational data source.**\n * * `baseField`: Allows you to set the selective field, which used to display the values with either\n *  DifferenceFrom or PercentageOfDifferenceFrom or PercentageOfParentTotal aggregate types. **Note: It is applicable only for relational data source.**\n * * `baseItem`: Allows you to set the selective item of a specific field, which used to display the values with either DifferenceFrom or PercentageOfDifferenceFrom aggregate types.\n * The selective item should be set the from field specified in the baseField property. **Note: It is applicable only for relational data source.**\n * * `showSubTotals`: Allows to show or hide sub-totals to a specific field in row/column axis of the pivot table.\n * * `isNamedSet`: Allows you to set whether the specified field is a named set or not. In general,\n * the named set is a set of dimension members or a set expression (MDX query) to be created as a dimension in the SSAS OLAP cube itself. **Note: It is applicable only for OLAP data source.**\n * * `isCalculatedField`: Allows to set whether the specified field is a calculated field or not.\n * In general, the calculated field is created from the bound data source or using simple formula with basic arithmetic operators in the pivot table. **Note: It is applicable only for OLAP data source.**\n * * `showFilterIcon`: Allows you to show or hide the filter icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This filter icon is used to filter the members of a specified field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This sort icon is used to order members of a specified field either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This remove icon is used to remove the specified field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon of a specific field that used to be displayed in the pivot button of the grouping bar and field list UI.\n * This value type icon helps to select the appropriate aggregation type to specified value field at runtime.\n * * `showEditIcon`: Allows you to show or hide the edit icon of a specific field that used to be displayed on the pivot button of the grouping bar and field list UI.\n * This edit icon is used to modify caption, formula, and format of a specified calculated field at runtime that to be displayed in the pivot table.\n * * `allowDragAndDrop`: Allows you to restrict the specific field's pivot button that is used to drag on runtime in the grouping bar and field list UI.\n * This will prevent you from modifying the current report.\n */\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Allows the style information to cusotmize the pivot table cell apprearance.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Allows to specify the custom group information of specific field to create custom groups.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Allows options to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Allows you to set the credential information to access the specified SSAS cube.\n * > It is applicable only for OLAP data source.\n */\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"userName\", void 0);\n    __decorate([\n        Property()\n    ], Authentication.prototype, \"password\", void 0);\n    return Authentication;\n}(ChildProperty));\nexport { Authentication };\n/**\n * Allows the following pivot report information such as rows, columns, values, filters, etc., that are used to render the pivot table and field list.\n * * `catalog`: Allows to set the database name of SSAS cube as string type that used to retrieve the data from the specified connection string. **Note: It is applicable only for OLAP data source.**\n * * `cube`: Allows you to set the SSAS cube name as string type that used to retrieve data for pivot table rendering. **Note: It is applicable only for OLAP data source.**\n * * `providerType`: Allows to set the provider type to identify the given connection is either Relational or SSAS to render the pivot table and field list.\n * * `url`: Allows to set the URL as string type, which helps to identify the service endpoint where the data are processed and retrieved to render the pivot table and field list. **Note: It is applicable only for OLAP data source.**\n * * `localeIdentifier`: Allows you to set the specific culture code as number type to render pivot table with desired localization.\n * By default, the pivot table displays with culture code **1033**, which indicates \"en-US\" locale. **Note: It is applicale only for OLAP data source.**\n * * `dataSource`: Allows you to set the data source as JSON collection to the pivot report either from local or from remote server to the render the pivot that and field list.\n * You can fetch JSON data from remote server by using DataManager. **Note: It is applicable only for relational data source.**\n * * `rows`: Allows specific fields associated with field information that needs to be displayed in row axis of pivot table.\n * * `columns`: Allows specific fields associated with field information that needs to be displayed in column axis of pivot table.\n * * `values`: Allows specific fields associated with field information that needs to be displayed as aggregated numeric values in pivot table.\n * * `filters`: Allows to filter the values in other axis based on the collection of filter fields in pivot table.\n * * `excludeFields`: Allows you to restrict the specific field(s) from displaying it in the field list UI.\n * You may also be unable to render the pivot table with this field(s) by doing so. **Note: It is applicable only for relational data source.**\n * * `expandAll`: Allows you to either expand or collapse all the headers that are displayed in the pivot table.\n * By default, all the headers are collapsed in the pivot table. **Note: It is applicable only for Relational data.**\n * * `valueAxis`: Allows you to set the value fields that to be plotted either in row or column axis in the pivot table.\n * * `filterSettings`: Allows specific fields associated with either selective or conditional-based filter members that used to be displayed in the pivot table.\n * * `sortSettings`: Allows specific fields associated with sort settings to order their members either in ascending or descending that used to be displayed in the pivot table.\n * By default, the data source containing fields are display with Ascending order alone. To use this option, it requires the `enableSorting` property to be **true**.\n * * `enableSorting`: Allows to perform sort operation to order members of a specific fields either in ascending or descending that used to be displayed in the pivot table.\n * * `formatSettings`: Allows specific fields used to display the values with specific format that used to be displayed in the pivot table.\n * For example, to display a specific field with currency formatted values in the pivot table, the set the `format` property to be **C**.\n * * `drilledMembers`: Allows specific fields used to display their the headers to be either expanded or collapsed in the pivot table.\n * * `valueSortSettings`: Allows to sort individual value field and its aggregated values either in row or column axis to ascending or descending order.\n * * `calculatedFieldSettings`: Allows to create new calculated fields from the bound data source or using simple formula with basic arithmetic operators in the pivot table.\n * * `allowMemberFilter`: Allows to perform filter operation based on the selective filter members of the specific fields used to be displayed in the pivot table.\n * * `allowLabelFilter`: Allows to perform filter operation based on the selective headers used to be displayed in the pivot table.\n * * `allowValueFilter`: Allows to perform filter operation based only on value fields and its resultant aggregated values over other fields defined in row and column axes that used to be displayed in the pivot table.\n * * `showSubTotals`: Allows to show or hide sub-totals in both rows and columns axis of the pivot table.\n * * `showRowSubTotals`: Allows to show or hide sub-totals in row axis of the pivot table.\n * * `showColumnSubTotals`: Allows to show or hide sub-totals in column axis of the pivot table.\n * * `showGrandTotals`: Allows to show or hide grand totals in both rows and columns axis of the pivot table.\n * * `showRowGrandTotals`: Allows to show or hide grand totals in row axis of the pivot table.\n * * `showColumnGrandTotals`: Allows to show or hide grand totals in column axis of the pivot table.\n * * `showHeaderWhenEmpty`: Allows the undefined headers to be displayed in the pivot table, when the specific field(s) are not defined in the raw data.\n * For example, if the raw data for the field ‘Country’ is defined as “United Kingdom” and “State” is not defined means, it will be shown as “United Kingdom >> Undefined” in the header section.\n * * `alwaysShowValueHeader`: Allows to show the value field header always in pivot table, even if it holds a single field in the value field axis.\n * * `conditionalFormatSettings`: Allows a collection of values fields to change the appearance of the pivot table value cells with different style properties such as background color, font color, font family, and font size based on specific conditions.\n * * `emptyCellsTextContent`: Allows to show custom string to the empty value cells that used to display in the pivot table. You can fill empty value cells with any value like “0”, ”-”, ”*”, “(blank)”, etc.\n * * `groupSettings`: Allows specific fields to group their data on the basis of their type.\n * For example, the date type fields can be formatted and displayed based on year, quarter, month, and more. Likewise, the number type fields can be grouped range-wise, such as 1-5, 6-10, etc.\n * You can perform custom group to the string type fields that used to displayed in the pivot table.\n * * `showAggregationOnValueField`: Allows the pivot button with specific value field caption along with the aggregation type, to be displayed in the grouping bar and field list UI.\n * For example, if the value field \"Sold Amount\" is aggregated with Sum, it will be displayed with caption \"Sum of Sold Amount\" in its pivot button.\n * * `authentication`: Allows you to set the credential information to access the specified SSAS cube. **Note: It is applicable only for OLAP data source**.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Local')\n    ], DataSourceSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"fieldMapping\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property('JSON')\n    ], DataSourceSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, Authentication)\n    ], DataSourceSettings.prototype, \"authentication\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowAutoResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ wrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Method to perform excel export.\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues]\n        };\n        var fileName;\n        var header;\n        var footer;\n        var dataCollections;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            fileName = observedArgs.fileName;\n            header = observedArgs.header;\n            footer = observedArgs.footer;\n            dataCollections = observedArgs.dataCollections;\n        });\n        /** Fill data and export */\n        /* tslint:disable-next-line:no-any */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var actualrCnt = 0;\n            var formatList = this.parent.renderModule.getFormatList();\n            var rows = [];\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var cellValue = pivotCell.axis === 'value' ? pivotCell.value : pivotCell.formattedText;\n                                if (pivotCell.type === 'grand sum') {\n                                    cellValue = this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan),\n                                    });\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            cells[cells.length - 1].value = '';\n                                        }\n                                        var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                            this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                            pivotCell.actualText;\n                                        cells[cells.length - 1].style = {\n                                            numberFormat: formatList[field], bold: false, wrapText: true\n                                        };\n                                        if (pivotCell.style) {\n                                            cells[cells.length - 1].style.backColor = pivotCell.style.backgroundColor;\n                                            cells[cells.length - 1].style.fontColor = pivotCell.style.color;\n                                            cells[cells.length - 1].style.fontName = pivotCell.style.fontFamily;\n                                            cells[cells.length - 1].style.fontSize = Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    else {\n                                        cells[cells.length - 1].style = {\n                                            bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0\n                                        };\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            cells[cells.length - 1].style.hAlign = 'Left';\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                cells[cells.length - 1].style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                cells[cells.length - 1].style.indent = pivotCell.level * 2;\n                                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    cells[cells.length - 1].style.borders = { color: '#000000', lineStyle: 'Thin' };\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            cells.push({\n                                index: cCnt + 1, value: '', colSpan: 1, rowSpan: 1,\n                            });\n                        }\n                    }\n                    rows.push({ index: actualrCnt, cells: cells });\n                }\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv', undefined, this.parent.currencyCode);\n        book.save(fileName + (type === 'Excel' ? '.xlsx' : '.csv'));\n    };\n    /**\n     * To destroy the excel export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    ExcelExport.prototype.destroy = function () {\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var header = eventParams.args.header;\n        var footer = eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    PDFExport.prototype.exportToPDF = function () {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        var _this = this;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.exportAllPages && this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        var argument;\n        this.parent.trigger(events.beforeExport, args, function (observedArgs) {\n            _this.gridStyle = observedArgs.style;\n            argument = observedArgs;\n        });\n        var document = new PdfDocument();\n        return { document: document, args: argument };\n    };\n    /**\n     * To destroy the pdf export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable-next-line:no-empty */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            shiftEnter: 'shift+enter',\n            ctrlEnter: 'ctrl+enter',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape',\n            ctrlShiftF: 'ctrl+shift+f'\n        };\n        this.parent = parent;\n        this.event = undefined;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'shiftTab':\n                this.processShiftTab(e);\n                break;\n            case 'enter':\n            case 'shiftEnter':\n            case 'ctrlEnter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlShiftF':\n                this.toggleFieldList(e);\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i + 1] ? allPivotButtons[i + 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.getPrevButton = function (target) {\n        var allPivotButtons = this.allpivotButtons(target);\n        removeClass(allPivotButtons, 'e-btn-focused');\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    return (allPivotButtons[i - 1] ? allPivotButtons[i - 1] : target);\n                }\n            }\n        }\n        return target;\n    };\n    KeyboardInteraction.prototype.allpivotButtons = function (target) {\n        var buttons;\n        var columnFilterValueGroup = closest(target, '.' + cls.GRID_GROUPING_BAR_CLASS);\n        var rowGroup = closest(target, '.' + cls.GROUP_PIVOT_ROW);\n        var chartGroup = closest(target, '.' + cls.CHART_GROUPING_BAR_CLASS);\n        var tableAxis = target.classList.contains(cls.ROWSHEADER);\n        var chartAxis;\n        var rowAxis;\n        var columnFilterValueAxis;\n        if (columnFilterValueGroup !== null) {\n            rowAxis = columnFilterValueGroup.classList.contains(cls.GRID_GROUPING_BAR_CLASS);\n        }\n        else if (rowGroup !== null) {\n            columnFilterValueAxis = rowGroup.classList.contains(cls.GROUP_PIVOT_ROW);\n        }\n        else if (chartGroup !== null) {\n            chartAxis = chartGroup.classList.contains(cls.CHART_GROUPING_BAR_CLASS);\n        }\n        if (rowAxis || columnFilterValueAxis || tableAxis) {\n            /* tslint:disable */\n            var groupingbarButton = [].slice.call(this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var headerButton = [].slice.call(this.parent.element.querySelector('.' + cls.GROUP_PIVOT_ROW).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            buttons = groupingbarButton.concat(headerButton);\n        }\n        else if (chartAxis) {\n            buttons = [].slice.call(this.parent.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS).querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        }\n        /* tslint:enable */\n        return buttons;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n                var nextButton = this.getNextButton(target);\n                if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    if (this.parent.element.querySelector('.e-focused')) {\n                        this.parent.element.querySelector('.e-focused').setAttribute('tabindex', '-1');\n                        removeClass(this.parent.element.querySelectorAll('.e-focus'), 'e-focus');\n                        removeClass(this.parent.element.querySelectorAll('.e-focused'), 'e-focused');\n                        gridFocus.setFocusedElement(this.parent.element.querySelector('.e-headercell'));\n                        this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '0');\n                    }\n                    else {\n                        gridFocus.currentInfo.skipAction = true;\n                    }\n                    addClass([nextButton], 'e-btn-focused');\n                    nextButton.focus();\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList &&\n            target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList &&\n            target && closest(target, '.' + cls.PIVOT_VIEW_CLASS) && !closest(target, '.e-popup.e-popup-open')) {\n            if (this.parent.grid) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) && this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processShiftTab = function (e) {\n        var target = e.target;\n        if (target && (closest(target, '.' + cls.PIVOT_BUTTON_CLASS) || target.classList.contains('e-group-row'))) {\n            if (this.parent.grid) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                if (target.classList.contains('e-group-row') && target.querySelector('.e-btn-focused')) {\n                    target = target.querySelector('.e-btn-focused');\n                }\n                else if (target.classList.contains('e-group-row')) {\n                    target = this.parent.element.querySelector('.e-btn-focused') ? this.parent.element.querySelector('.e-btn-focused') :\n                        this.parent.element.querySelector('.' + cls.GRID_GROUPING_BAR_CLASS);\n                    var allPivotButtons = this.allpivotButtons(target);\n                    if (allPivotButtons.length > 0 && allPivotButtons[allPivotButtons.length - 1]) {\n                        gridFocus.currentInfo.skipAction = true;\n                        allPivotButtons[allPivotButtons.length - 1].focus();\n                        removeClass(allPivotButtons, 'e-btn-focused');\n                        addClass([allPivotButtons[allPivotButtons.length - 1]], 'e-btn-focused');\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                var prevButton = this.getPrevButton(target);\n                if (prevButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                    gridFocus.currentInfo.skipAction = true;\n                    prevButton.focus();\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n        else if (target && this.parent.grid && (target.classList.contains('e-movablefirst') ||\n            (target.classList.contains('e-rowsheader') && closest(target, 'tr').getAttribute('data-uid') ===\n                this.parent.grid.element.querySelector('.e-frozencontent tr').getAttribute('data-uid')))) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (target.classList.contains('e-movablefirst')) {\n                target = (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) ?\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS + ' .e-btn-focused')) :\n                    (this.parent.element.querySelector('.' + cls.GROUP_ROW_CLASS));\n                var element = gridFocus.getFocusedElement();\n                removeClass([element], ['e-focused', 'e-focus']);\n            }\n            var allPivotButtons_1 = this.allpivotButtons(target);\n            if (allPivotButtons_1.length > 0) {\n                gridFocus.currentInfo.skipAction = true;\n                setTimeout(function () {\n                    allPivotButtons_1[allPivotButtons_1.length - 1].focus();\n                });\n                removeClass(allPivotButtons_1, 'e-btn-focused');\n                addClass([allPivotButtons_1[allPivotButtons_1.length - 1]], 'e-btn-focused');\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target && closest(target, '.' + cls.GRID_TOOLBAR) &&\n            this.parent.toolbar && this.parent.toolbarModule) {\n            clearTimeout(this.timeOutObj);\n            this.timeOutObj = setTimeout(function () {\n                removeClass(closest(target, '.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n                if (document.activeElement && document.activeElement.classList.contains('e-menu-item')) {\n                    addClass([document.activeElement], 'e-focused');\n                }\n            });\n        }\n        else if (target.classList.contains('e-numerictextbox')) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            gridFocus.focus();\n            var element = gridFocus.getFocusedElement();\n            removeClass([element], ['e-focused', 'e-focus']);\n            element.setAttribute('tabindex', '0');\n            e.preventDefault();\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            if (e.keyCode === 13 && !e.shiftKey && !e.ctrlKey) {\n                if (target.querySelector('.' + cls.ICON)) {\n                    this.event = e;\n                    target.querySelector('.' + cls.ICON).click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n                else if (target.classList.contains('e-valuescontent')) {\n                    target.dispatchEvent(new MouseEvent('dblclick', {\n                        'view': window,\n                        'bubbles': true,\n                        'cancelable': true\n                    }));\n                    if (target.querySelector('.e-numerictextbox')) {\n                        target.click();\n                    }\n                }\n                else if (target.classList.contains('e-numerictextbox')) {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    removeClass([element], ['e-focused', 'e-focus']);\n                }\n            }\n            else if (e.keyCode === 13 && e.shiftKey && !e.ctrlKey) {\n                if (this.parent.enableValueSorting) {\n                    this.event = e;\n                    target.click();\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n            else if (e.keyCode === 13 && !e.shiftKey && e.ctrlKey) {\n                if (this.parent.hyperlinkSettings && target.querySelector('a')) {\n                    target.querySelector('a').click();\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        /* tslint:disable */\n        removeClass(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR), [cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n        this.parent.renderModule.selected();\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        var target = e.target;\n        if (this.parent.grid && this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row' &&\n            !target.classList.contains('e-numerictextbox')) {\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('aria-colIndex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            /* tslint:disable */\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('aria-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n        }\n        else if (target && (e.keyCode === 37 || e.keyCode === 38) &&\n            this.parent && this.parent.showGroupingBar && this.parent.groupingBarModule && !target.classList.contains('e-numerictextbox')) {\n            if (this.parent.grid && this.parent.element.querySelector('.e-frozenheader') && this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus').length > 0) {\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focus'), 'e-focus');\n                removeClass(this.parent.element.querySelector('.e-frozenheader').querySelectorAll('.e-focused'), 'e-focused');\n                this.parent.element.querySelector('.e-headercell').setAttribute('tabindex', '-1');\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.setFocusedElement(target);\n                addClass([target], ['e-focused', 'e-focus']);\n                target.setAttribute('tabindex', '0');\n                target.focus();\n                e.preventDefault();\n                return;\n            }\n        }\n        else if (target.classList.contains('e-numerictextbox') && e.action === 'rightArrow' || e.action === 'leftArrow') {\n            target.click();\n        }\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[aria-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    KeyboardInteraction.prototype.toggleFieldList = function (e) {\n        var target = e.target;\n        if (this.parent && !this.parent.isDestroyed && this.parent.showFieldList &&\n            this.parent.pivotFieldListModule && !this.parent.pivotFieldListModule.isDestroyed &&\n            this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n            if (!this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN)) {\n                this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                e.preventDefault();\n                return;\n            }\n            else if (this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).classList.contains(cls.ICON_HIDDEN) &&\n                this.parent.pivotFieldListModule.dialogRenderer && this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog &&\n                !this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.hide();\n            }\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS,\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n            if (document.querySelector('#' + this.parent.element.id + '_PivotContextMenu')) {\n                remove(document.querySelector('#' + this.parent.element.id + '_PivotContextMenu'));\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, isBlazor, } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.parent = parent;\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        if (this.parent.displayOption.view !== 'Chart') {\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var fCont = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            EventHandler.clearEvents(mCont);\n            EventHandler.clearEvents(fCont);\n            if (this.engineModule) {\n                EventHandler.add(mCont, 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont, fCont), this);\n                EventHandler.add(mCont, 'scroll wheel touchmove pointermove keyup keydown', this.onVerticalScroll(fCont, mCont), this);\n                EventHandler.add(mCont, 'mouseup touchend', this.common(mHdr, mCont, fCont), this);\n                EventHandler.add(fCont, 'wheel', this.onWheelScroll(mCont, fCont), this);\n                EventHandler.add(fCont, 'touchstart pointerdown', this.setPageXY(), this);\n                EventHandler.add(fCont, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n                EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n                EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n            }\n            this.parent.grid.isPreventScrollEvent = true;\n        }\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            fCont.scrollTop = top;\n            element.scrollTop = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = element.scrollTop + (_this.pageXY.y - pageXY.y);\n            var left = element.scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.parent.element.querySelector('.' + cls.HEADERCONTENT).contains(e.target)) {\n                if (_this.frozenPreviousValues.left === left || left < 0) {\n                    return;\n                }\n                mHdr.scrollLeft = left;\n                element.scrollLeft = left;\n                _this.pageXY.x = pageXY.x;\n                _this.frozenPreviousValues.left = left;\n            }\n            else {\n                if (_this.frozenPreviousValues.top === top || top < 0) {\n                    return;\n                }\n                fCont.scrollTop = top;\n                element.scrollTop = top;\n                _this.pageXY.y = pageXY.y;\n                _this.frozenPreviousValues.top = top;\n            }\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (mHdr, mCont, top, left, e) {\n        var _this = this;\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            engine.pageSettings = this.parent.pageSettings;\n        }\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var rowValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_1 = (this.parent.pageSettings.rowSize * rowValues_1 * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize_1);\n                if ((this.parent.scrollPosObject.vertical === section ||\n                    engine.pageSettings.rowSize >= engine.rowCount)) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                this.parent.scrollPosObject.vertical = section;\n                engine.pageSettings.rowCurrentPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var pivot_1 = this.parent;\n                        var sfBlazor = 'sfBlazor';\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.pivotValues = engine.pivotValues;\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                            var exactPage = Math.ceil(rowStartPos_1 / (pivot_1.pageSettings.rowSize * rowValues_1));\n                            var pos = exactSize_1 * exactPage -\n                                (engine.rowFirstLvl * rowValues_1 * pivot_1.gridSettings.rowHeight);\n                            pivot_1.scrollPosObject.verticalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        this.parent.engineModule.generateGridData(this.parent.dataSourceSettings, this.parent.engineModule.headerCollection);\n                        rowStartPos_1 = this.parent.engineModule.rowStartPos;\n                    }\n                }\n                else {\n                    this.parent.olapEngineModule.scrollPage('scroll');\n                    rowStartPos_1 = this.parent.olapEngineModule.pageRowStartPos;\n                }\n                if (!(isBlazor() && this.parent.dataType === 'pivot')) {\n                    this.parent.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowSize * rowValues_1));\n                    var pos = exactSize_1 * exactPage -\n                        (engine.rowFirstLvl * rowValues_1 * this.parent.gridSettings.rowHeight);\n                    this.parent.scrollPosObject.verticalSection = pos;\n                }\n            }\n            else {\n                var colValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_2 = (this.parent.pageSettings.columnSize *\n                    colValues_1 * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(left / exactSize_2);\n                if (this.parent.scrollPosObject.horizontal === section) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                var pivot = this.parent;\n                pivot.scrollPosObject.horizontal = section;\n                engine.pageSettings.columnCurrentPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                if (pivot.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var pivot_2 = this.parent;\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[sfBlazor].\n                            copyWithoutCircularReferences([pivot_2.dataSourceSettings], pivot_2.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            colStartPos_1 = pivot_2.engineModule.colStartPos;\n                            pivot_2.pivotValues = engine.pivotValues;\n                            var exactPage = Math.ceil(colStartPos_1 / (pivot_2.pageSettings.columnSize * colValues_1));\n                            var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                                colValues_1 * pivot_2.gridSettings.columnWidth);\n                            pivot_2.scrollPosObject.horizontalSection = pos;\n                        });\n                    }\n                    else if (this.parent.dataSourceSettings.mode === 'Server') {\n                        this.parent.getEngine('onScroll', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, pivot.engineModule.headerCollection);\n                        colStartPos_1 = pivot.engineModule.colStartPos;\n                    }\n                }\n                else {\n                    pivot.olapEngineModule.scrollPage('scroll');\n                    colStartPos_1 = pivot.olapEngineModule.pageColStartPos;\n                }\n                if (!(isBlazor() && pivot.dataType === 'pivot')) {\n                    pivot.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(colStartPos_1 / (pivot.pageSettings.columnSize * colValues_1));\n                    var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                        colValues_1 * pivot.gridSettings.columnWidth);\n                    pivot.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n        };\n    };\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var left = mCont.scrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? mCont.scrollLeft : left;\n                    _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, left, e);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                fCont.scrollTop = mCont.scrollTop;\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'horizondal';\n            var horiOffset = -((left - _this.parent.scrollPosObject.horizontalSection - mCont.scrollLeft));\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',').length > 1 ?\n                mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() : \"0px)\";\n            if (mCont.scrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + mHdr.offsetWidth) -\n                (_this.parent.scrollPosObject.horizontalSection + mCont.querySelector('.e-table').offsetWidth));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - mCont.scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount\n                    - _this.parent.grid.columns[0].width);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = mCont.scrollLeft;\n        };\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (fCont, mCont) {\n        var _this = this;\n        var timeOutObj;\n        return function (e) {\n            var top = mCont.scrollTop * _this.parent.verticalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove' || e.type === 'keyup' || e.type === 'keydown') {\n                clearTimeout(timeOutObj);\n                timeOutObj = setTimeout(function () {\n                    _this.update(null, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n                }, 300);\n            }\n            /* tslint:enable */\n            if (_this.previousValues.top === top) {\n                return;\n            }\n            _this.parent.scrollDirection = _this.direction = 'vertical';\n            var vertiOffset = -((top - _this.parent.scrollPosObject.verticalSection - mCont.scrollTop));\n            var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n            if (mCont.scrollTop < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                -(_this.parent.scrollPosObject.verticalSection - top) : ((top + fCont.clientHeight) -\n                (_this.parent.scrollPosObject.verticalSection + fCont.querySelector('.e-table').offsetHeight));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.verticalSection > top ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (top > fCont.clientHeight) {\n                    if (_this.parent.scrollPosObject.top < 1) {\n                        _this.parent.scrollPosObject.top = fCont.clientHeight;\n                    }\n                    _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                    excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                        (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.verticalSection;\n                }\n                var movableTable = _this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                vertiOffset = -((top - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.scrollTop));\n                var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                    - movableTable.clientHeight);\n                if (vHeight > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                    vHeight = _this.parent.scrollerBrowserLimit;\n                }\n                if (vertiOffset > vHeight && vertiOffset > top) {\n                    vertiOffset = top;\n                    excessMove = 0;\n                }\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n                _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n            }\n            _this.previousValues.top = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = '';\n            fCont.scrollTop = mCont.scrollTop;\n            mCont.scrollTop = fCont.scrollTop;\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.clonedData = [];\n        this.isUpdated = false;\n        this.gridIndexObjects = {};\n        this.gridData = [];\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    DrillThroughDialog.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        this.gridData = eventArgs.rawData;\n        for (var i = 0; i < eventArgs.rawData.length; i++) {\n            this.clonedData.push(this.frameHeaderWithKeys(eventArgs.rawData[i]));\n        }\n        var actualText = eventArgs.currentCell.actualText.toString();\n        if (this.engine.fieldList[actualText].aggregateType !== 'Count' && this.parent.editSettings.allowInlineEditing &&\n            this.parent.editSettings.allowEditing && eventArgs.rawData.length === 1 &&\n            this.engine.fieldList[actualText].aggregateType !== 'DistinctCount' && typeof (eventArgs.rawData[0][actualText]) !== 'string') {\n            this.editCell(eventArgs);\n        }\n        else {\n            this.removeDrillThroughDialog();\n            var drillThroughDialog = createElement('div', {\n                id: this.parent.element.id + '_drillthrough',\n                className: cls.DRILLTHROUGH_DIALOG\n            });\n            this.parent.element.appendChild(drillThroughDialog);\n            this.dialogPopUp = new Dialog({\n                animationSettings: { effect: 'Fade' },\n                allowDragging: false,\n                header: this.parent.localeObj.getConstant('details'),\n                content: this.createDrillThroughGrid(eventArgs),\n                beforeOpen: function () {\n                    /* tslint:disable:align */\n                    _this.drillThroughGrid.setProperties({\n                        dataSource: _this.parent.editSettings.allowEditing ?\n                            _this.dataWithPrimarykey(eventArgs) : _this.gridData,\n                        height: !_this.parent.editSettings.allowEditing ? 300 : 220,\n                        rowHeight: _this.parent.gridSettings.rowHeight\n                    }, false);\n                },\n                beforeClose: function () {\n                    if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                        if (_this.parent.dataSourceSettings.type === 'CSV') {\n                            _this.updateData(_this.drillThroughGrid.dataSource);\n                        }\n                        var gridIndexObjectsValue = Object.keys(_this.gridIndexObjects);\n                        var previousPosition = [];\n                        for (var _i = 0, gridIndexObjectsValue_1 = gridIndexObjectsValue; _i < gridIndexObjectsValue_1.length; _i++) {\n                            var value = gridIndexObjectsValue_1[_i];\n                            previousPosition.push(_this.gridIndexObjects[value]);\n                        }\n                        var count = Object.keys(_this.gridIndexObjects).length;\n                        var addItems = [];\n                        var prevItems = [];\n                        var index = 0;\n                        /* tslint:disable:no-string-literal */\n                        for (var _a = 0, _b = _this.drillThroughGrid.dataSource; _a < _b.length; _a++) {\n                            var item = _b[_a];\n                            if (isNullOrUndefined(item['__index']) || item['__index'] === '') {\n                                for (var _c = 0, _d = _this.engine.fields; _c < _d.length; _c++) {\n                                    var field = _d[_c];\n                                    if (isNullOrUndefined(item[field])) {\n                                        delete item[field];\n                                    }\n                                }\n                                delete item['__index'];\n                                addItems.push(item);\n                            }\n                            else if (count > 0) {\n                                if (isBlazor() && _this.parent.editSettings.allowCommandColumns) {\n                                    _this.parent.engineModule.data[Number(item['__index'])] = item;\n                                }\n                                delete _this.gridIndexObjects[item['__index'].toString()];\n                                prevItems.push(item);\n                                count--;\n                            }\n                            if (_this.parent.dataSourceSettings.mode === 'Server') {\n                                if (item['__index']) {\n                                    delete item['__index'];\n                                }\n                                if (_this.gridData[index]['__index']) {\n                                    delete _this.gridData[index]['__index'];\n                                }\n                            }\n                            index++;\n                        }\n                        count = 0;\n                        if (isBlazor() && _this.parent.enableVirtualization) {\n                            var currModule_1 = _this;\n                            /* tslint:disable:no-any */\n                            currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'updateRawData', {\n                                'AddItem': addItems, 'RemoveItem': currModule_1.gridIndexObjects, 'ModifiedItem': currModule_1.gridData\n                            }).then(function (data) {\n                                currModule_1.parent.updateBlazorData(data, currModule_1.parent);\n                                currModule_1.parent.allowServerDataBinding = false;\n                                currModule_1.parent.setProperties({ pivotValues: currModule_1.parent.engineModule.pivotValues }, true);\n                                delete currModule_1.parent.bulkChanges.pivotValues;\n                                currModule_1.parent.allowServerDataBinding = true;\n                                currModule_1.isUpdated = false;\n                                currModule_1.gridIndexObjects = {};\n                            });\n                            /* tslint:enable:no-any */\n                        }\n                        else if (_this.parent.dataSourceSettings.mode === 'Server') {\n                            var gridIndex = [];\n                            var keys = Object.keys(_this.gridIndexObjects);\n                            for (var len = 0; len < keys.length; len++) {\n                                delete _this.parent.drillThroughValue.indexObject[_this.gridIndexObjects[keys[len]]];\n                                gridIndex.push({ Key: keys[len], Value: _this.gridIndexObjects[keys[len]] });\n                            }\n                            var indexObject = [];\n                            keys = Object.keys(_this.parent.drillThroughValue.indexObject);\n                            for (var len = 0; len < keys.length; len++) {\n                                indexObject.push({ Key: keys[len], Value: _this.parent.drillThroughValue.indexObject[keys[len]] });\n                            }\n                            _this.parent.getEngine('updateRawData', null, null, null, null, null, null, null, { 'addedData': addItems, 'removedData': gridIndex, 'updatedData': prevItems, indexObject: indexObject });\n                        }\n                        else {\n                            var items = [];\n                            var data = (_this.parent.allowDataCompression && _this.parent.enableVirtualization) ?\n                                _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                            for (var _e = 0, _f = data; _e < _f.length; _e++) {\n                                var item = _f[_e];\n                                delete item['__index'];\n                                if (_this.gridIndexObjects[count.toString()] === undefined) {\n                                    items.push(item);\n                                }\n                                count++;\n                            }\n                            /* tslint:enable:no-string-literal */\n                            items = items.concat(addItems);\n                            var eventArgs_1 = {\n                                currentData: _this.drillThroughGrid.dataSource,\n                                previousData: _this.clonedData,\n                                previousPosition: previousPosition,\n                                cancel: false\n                            };\n                            _this.parent.trigger(events.editCompleted, eventArgs_1);\n                            if (!eventArgs_1.cancel) {\n                                _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                                _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                                _this.parent.pivotValues = _this.engine.pivotValues;\n                            }\n                        }\n                    }\n                    if (!(isBlazor() && _this.parent.enableVirtualization)) {\n                        _this.isUpdated = false;\n                        _this.gridIndexObjects = {};\n                    }\n                },\n                isModal: true,\n                visible: true,\n                showCloseIcon: true,\n                locale: this.parent.locale,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.isAdaptive ? '100%' : '60%',\n                position: { X: 'center', Y: 'center' },\n                closeOnEscape: true,\n                target: document.body,\n                close: this.removeDrillThroughDialog.bind(this)\n            });\n            this.dialogPopUp.isStringTemplate = true;\n            this.dialogPopUp.appendTo(drillThroughDialog);\n            // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('details');\n            setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n        }\n    };\n    DrillThroughDialog.prototype.editCell = function (eventArgs) {\n        var _this = this;\n        var gridResize = this.parent.gridSettings.allowResizing;\n        var actualText = eventArgs.currentCell.actualText.toString();\n        var indexObject = Number(Object.keys(eventArgs.currentCell.indexObject));\n        eventArgs.currentTarget.firstElementChild.style.display = 'none';\n        var cellValue = Number(eventArgs.rawData[0][actualText]);\n        var previousData = this.frameHeaderWithKeys(eventArgs.rawData[eventArgs.rawData.length - 1]);\n        var currentData = eventArgs.rawData[eventArgs.rawData.length - 1];\n        if (eventArgs.currentCell.actualText in previousData) {\n            currentData[eventArgs.currentCell.actualText] = eventArgs.currentCell.actualValue;\n        }\n        this.numericTextBox = new NumericTextBox({\n            value: cellValue,\n            enableRtl: this.parent.enableRtl,\n            enabled: true,\n            format: '####.##',\n            locale: this.parent.locale,\n            change: function () {\n                var textBoxValue = _this.numericTextBox.value;\n                var indexValue = eventArgs.currentCell.indexObject[indexObject];\n                eventArgs.rawData[0][actualText] = textBoxValue;\n                _this.parent.engineModule.data[indexValue] = eventArgs.rawData[0];\n            },\n            blur: function () {\n                var eventArgs = {\n                    currentData: currentData,\n                    previousData: previousData,\n                    previousPosition: currentData.index,\n                    cancel: false\n                };\n                _this.parent.trigger(events.editCompleted, eventArgs);\n                if (!eventArgs.cancel) {\n                    _this.parent.setProperties({ dataSourceSettings: { dataSource: _this.parent.engineModule.data } }, true);\n                    _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                    _this.parent.pivotValues = _this.engine.pivotValues;\n                    _this.parent.gridSettings.allowResizing = gridResize;\n                }\n            },\n        });\n        var textBoxElement = createElement('input', {\n            id: this.parent.element.id + '_inputbox',\n        });\n        eventArgs.currentTarget.appendChild(textBoxElement);\n        this.numericTextBox.appendTo(textBoxElement);\n        eventArgs.currentCell.value = this.numericTextBox.value;\n        this.numericTextBox.focusIn();\n        this.parent.gridSettings.allowResizing = false;\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThroughDialog.prototype.updateData = function (dataSource) {\n        var dataPos = 0;\n        var data = (this.parent.allowDataCompression && this.parent.enableVirtualization) ?\n            this.parent.engineModule.actualData : this.parent.engineModule.data;\n        while (dataPos < dataSource.length) {\n            var fields = Object.keys(dataSource[dataPos]);\n            var keyPos = 0;\n            var framedSet = [];\n            while (keyPos < fields.length) {\n                if (!isNullOrUndefined(this.parent.engineModule.fieldKeys[fields[keyPos]])) {\n                    framedSet[this.parent.engineModule.fieldKeys[fields[keyPos]]] = dataSource[dataPos][fields[keyPos]];\n                }\n                keyPos++;\n            }\n            data[dataSource[dataPos]['__index']] = framedSet;\n            dataPos++;\n        }\n        if (this.parent.allowDataCompression && this.parent.enableVirtualization) {\n            this.parent.engineModule.actualData = data;\n        }\n        else {\n            this.parent.engineModule.data = data;\n        }\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs) {\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> :<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            enableHover: false,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: !this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing\n        });\n        if (isBlazor()) {\n            /* tslint:disable-next-line */\n            this.drillThroughGrid['isJsComponent'] = true;\n        }\n        if (this.parent.dataType === 'olap') {\n            this.formatData();\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: isBlazor() ? undefined : this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            this.drillThroughGrid.editSettings = this.parent.editSettings;\n            if (this.parent.editSettings.allowCommandColumns) {\n                this.drillThroughGrid.editSettings.mode = 'Normal';\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                Grid.Inject(CommandColumn);\n                this.drillThroughGrid.columns.push({\n                    headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                    commands: [\n                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n                        { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n                        { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n                    ]\n                });\n            }\n            else {\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n            }\n            /* tslint:disable:align */\n            this.drillThroughGrid.columns.push({\n                field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false\n            });\n            /* tslint:disable-next-line:no-any */\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n            /* tslint:enable:align */\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function (rawData) {\n        var keys = this.parent.dataType === 'olap' ? rawData[0] ? Object.keys(rawData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    type: 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date') {\n                        editType = 'datepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    columns.push({\n                        field: key,\n                        headerText: this.engine.fieldList[key].caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        type: 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.formatData = function () {\n        var index = 0;\n        while (index < this.gridData.length) {\n            var data = this.gridData[index];\n            var keys = Object.keys(this.gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            this.gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = this.gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            /* tslint:disable-next-line:no-string-literal */\n            item['__index'] = indexString[count];\n            this.gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                this.executeDrillThrough(this.parent.pivotValues[rowIndex][colIndex], rowIndex, colIndex, ele);\n            }\n        }\n    };\n    /** @hidden */\n    DrillThrough.prototype.executeDrillThrough = function (pivotValue, rowIndex, colIndex, element) {\n        this.parent.drillThroughElement = element;\n        this.parent.drillThroughValue = pivotValue;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName || pivotValue.actualText].caption;\n                aggType = engine.fieldList[measureName || pivotValue.actualText].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this;\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* tslint:disable:no-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n                        /* tslint:enable:no-any */\n                    });\n                }\n                else if (this.parent.dataSourceSettings.mode === 'Server') {\n                    this.parent.getEngine('fetchRawData', null, null, null, null, null, null, { rowIndex: rowIndex, columnIndex: colIndex });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization) && this.parent.dataSourceSettings.mode !== 'Server') {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, element);\n            }\n        }\n    };\n    /* tslint:disable:typedef no-any */\n    DrillThrough.prototype.frameData = function (eventArgs) {\n        var keyPos = 0;\n        var dataPos = 0;\n        var data = [];\n        while (dataPos < eventArgs.rawData.length) {\n            var framedHeader = {};\n            while (keyPos < eventArgs.gridColumns.length) {\n                framedHeader[eventArgs.gridColumns[keyPos].field] = this.parent.dataSourceSettings.mode === 'Server' ?\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) !== -1 ? this.parent.engineModule.fields.indexOf(eventArgs.gridColumns[keyPos].field) : 0] :\n                    eventArgs.rawData[dataPos][this.parent.engineModule.fieldKeys[eventArgs.gridColumns[keyPos].field]];\n                keyPos++;\n            }\n            data.push(framedHeader);\n            dataPos++;\n            keyPos = 0;\n        }\n        eventArgs.rawData = data;\n        return eventArgs;\n    };\n    /** @hidden */\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, element) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: element,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns(rawData),\n            cancel: false\n        };\n        if (this.parent.dataSourceSettings.type === 'CSV') {\n            eventArgs = this.frameData(eventArgs);\n        }\n        var drillThrough = this;\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            if (!eventArgs.cancel) {\n                drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n            }\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries, Selection, StripLine, DataLabel } from '@syncfusion/ej2-charts';\nimport { AccumulationChart, PieSeries, FunnelSeries, PyramidSeries } from '@syncfusion/ej2-charts';\nimport { SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries } from '@syncfusion/ej2-charts';\nimport { MultiColoredAreaSeries, SplineSeries, StepLineSeries, AccumulationLegend, AccumulationTooltip } from '@syncfusion/ej2-charts';\nimport { StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries } from '@syncfusion/ej2-charts';\nimport { RadarSeries } from '@syncfusion/ej2-charts';\nimport { ScrollBar, Zoom, PolarSeries } from '@syncfusion/ej2-charts';\nimport { ParetoSeries, Export, Crosshair, MultiLevelLabel } from '@syncfusion/ej2-charts';\nimport { BubbleSeries } from '@syncfusion/ej2-charts';\nimport { AccumulationDataLabel } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\nvar PivotChart = /** @class */ (function () {\n    function PivotChart() {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.fieldPosition = [];\n        this.measurePos = -1;\n        this.measuresNames = {};\n        this.accumulationType = ['Pie', 'Pyramid', 'Doughnut', 'Funnel'];\n        /* tslint:enable:no-empty */\n    }\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotchart';\n    };\n    /* tslint:disable */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : parent.dataSourceSettings.values.length > 0;\n        if (isDataAvail) {\n            if (!this.parent.chart && (this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart'))) {\n                remove(this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n            }\n            if (this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n            }\n        }\n        else if (this.parent.chart) {\n            if (this.parent.element.querySelector('.e-chart')) {\n                this.parent.chart.series = [];\n                this.parent.chart.rows = [];\n                this.parent.chart.primaryXAxis.title = '';\n                this.parent.chart.primaryYAxis.title = '';\n                this.parent.chart.primaryXAxis.multiLevelLabels = [];\n                this.parent.chart.primaryYAxis.multiLevelLabels = [];\n                if (this.parent.chart.axes.length > 0) {\n                    this.parent.chart.axes[0].title = '';\n                }\n                this.parent.chart.primaryXAxis.zoomFactor = 1;\n            }\n            else if (this.parent.element.querySelector('.e-accumulationchart')) {\n                this.parent.chart.series[0].dataSource = [{}];\n                this.parent.chart.series[0].dataLabel = {};\n            }\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            if (!this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                if (this.parent.displayOption.view === 'Both') {\n                    this.parent.displayOption.primary === 'Chart' ?\n                        (this.parent.element.insertBefore((createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                        (this.parent.element.appendChild(createElement('div', {\n                            className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                        })));\n                }\n                else {\n                    this.parent.element.appendChild(createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }));\n                }\n                var width = this.parent.width.toString();\n                if (this.parent.showToolbar && this.parent.grid) {\n                    width = this.parent.getGridWidthAsNumber().toString();\n                }\n                var height = this.getChartHeight();\n                var tmpChart = void 0;\n                if (this.chartSettings && this.chartSettings.chartSeries && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1) {\n                    tmpChart = new AccumulationChart({ width: width, height: height });\n                }\n                else {\n                    tmpChart = new Chart({ width: width, height: height });\n                }\n                tmpChart.appendTo('#' + this.parent.element.id + '_chart');\n                if (this.parent.showToolbar) {\n                    if (this.parent.displayOption.view === 'Both' && this.parent.currentView === 'Chart') {\n                        this.parent.grid.element.style.display = 'none';\n                    }\n                    if (this.parent.currentView !== 'Chart') {\n                        this.parent.element.querySelector('#' + this.parent.element.id + '_chart').style.display = 'none';\n                    }\n                }\n            }\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        this.accEmptyPoint = false;\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = (chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        var drillDimension = '';\n        var isDrill = false;\n        if (this.parent.dataType === 'olap') {\n            levelPos = this.groupHierarchyWithLevels(pivotValues);\n            lastHierarchy = this.fieldPosition[this.fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (this.fieldPosition.length - 1) && this.fieldPosition.length > 1) ?\n                this.fieldPosition[this.fieldPosition.length - 2] : lastHierarchy;\n            drillDimension = lastDimension;\n        }\n        for (var _b = 0, rKeys_1 = rKeys; _b < rKeys_1.length; _b++) {\n            var rKey = rKeys_1[_b];\n            var rowIndex = Number(rKey);\n            if (!isNullOrUndefined(pivotValues[rowIndex])) {\n                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                    (this.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                    var firstRowCell = pivotValues[rowIndex][0];\n                    var tupInfo = this.parent.dataType === 'olap' ?\n                        this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                    var fieldPos = -1;\n                    var currrentLevel = firstRowCell.level;\n                    if (this.parent.dataType === 'olap') {\n                        isDrill = firstRowCell.hierarchy === '[Measures]' ? isDrill : this.isAttributeDrill(firstRowCell.hierarchy, tupInfo.drillInfo);\n                        drillDimension = drillDimension === lastDimension ? lastDimension : (firstRowCell.hierarchy === '[Measures]' || firstRowCell.isNamedSet || (this.engineModule.fieldList[firstRowCell.hierarchy] && !this.engineModule.fieldList[firstRowCell.hierarchy].hasAllMember)) ? lastDimension : drillDimension;\n                        fieldPos = tupInfo.drillInfo.length - 1;\n                        if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                            tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                            firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                            integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                            levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                            integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                                (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                    (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                    (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ?\n                                        (levelPos[firstRowCell.hierarchy].start) :\n                                        levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                            levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                            currrentLevel = integratedLevel;\n                            indexCount += (prevCell && drillDimension === prevCell.hierarchy && !(prevCell.isDrilled && prevCell.hasChild)) ? 1 : 0;\n                            drillDimension = isDrill ? firstRowCell.hierarchy : lastDimension;\n                            prevLevel = integratedLevel;\n                            prevCell = firstRowCell;\n                        }\n                    }\n                    else if (firstRowCell.type !== 'value') {\n                        if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                            indexCount++;\n                        }\n                        prevLevel = currrentLevel;\n                    }\n                    this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                    var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                        (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                    var text = firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                    var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                        ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                    var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort.levelName.toString();\n                    var cellInfo = {\n                        name: name_1,\n                        text: caption,\n                        hasChild: firstRowCell.hasChild,\n                        isDrilled: firstRowCell.isDrilled,\n                        levelName: levelName,\n                        level: currrentLevel,\n                        fieldName: firstRowCell.valueSort.axis ? firstRowCell.valueSort.axis.toString() : '',\n                        rowIndex: rowIndex,\n                        colIndex: 0,\n                        cell: firstRowCell\n                    };\n                    if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                        if (this.headerColl[indexCount]) {\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                        else {\n                            this.headerColl[indexCount] = {};\n                            this.headerColl[indexCount][currrentLevel] = cellInfo;\n                        }\n                    }\n                    var rows = pivotValues[rowIndex];\n                    var cKeys = Object.keys(rows);\n                    var prevMemberCell = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                    }\n                    else {\n                        memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                    }\n                    for (var _c = 0, cKeys_1 = cKeys; _c < cKeys_1.length; _c++) {\n                        var cKey = cKeys_1[_c];\n                        var cellIndex = Number(cKey);\n                        var cell = pivotValues[rowIndex][cellIndex];\n                        var measureAllow = cell.rowHeaders === '' ? this.dataSourceSettings.rows.length === 0 : true;\n                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                            tupInfo.measureName : cell.actualText;\n                        if (!cell.isGrandSum && !totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                            actualText !== '' && ((chartSettings.enableMultiAxis && this.accumulationType.indexOf(chartSettings.chartSeries.type) < 0) ? true : actualText === this.currentMeasure)) {\n                            if (isNullOrUndefined(firstRowCell.members)) {\n                                firstRowCell.members = [];\n                            }\n                            if (this.parent.dataType === 'olap' ? ((lastHierarchy === firstRowCell.hierarchy || isDrill) ?\n                                ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                    (fieldPos === this.measurePos ? (prevMemberCell.isDrilled && prevMemberCell.hasChild) : true) : (firstRowCell.isDrilled && firstRowCell.hasChild)) : true)\n                                : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                    prevMemberCell.members.length > 0 : firstRowCell.members.length > 0) || !measureAllow)) {\n                                break;\n                            }\n                            var colHeaders = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                            var rowHeaders = this.parent.dataType === 'olap' ? cell.rowHeaders.toString().split(/~~|::/).join(' - ')\n                                : cell.rowHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                            var columnSeries = colHeaders + ' | ' + actualText;\n                            var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                                !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                                Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) : Number(cell.value) : Number(cell.value));\n                            if (yValue === 0) {\n                                this.accEmptyPoint = true;\n                            }\n                            if (this.columnGroupObject[columnSeries]) {\n                                this.columnGroupObject[columnSeries].push({\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue,\n                                    rIndex: rowIndex,\n                                    cIndex: cellIndex\n                                });\n                            }\n                            else {\n                                this.columnGroupObject[columnSeries] = [{\n                                        x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                        y: yValue,\n                                        rIndex: rowIndex,\n                                        cIndex: cellIndex\n                                    }];\n                            }\n                        }\n                        prevMemberCell = memberCell;\n                    }\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     * @returns void\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n        var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n            this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n        var chartType = this.chartSettings.chartSeries ? this.chartSettings.chartSeries.type : undefined;\n        if (this.accumulationType.indexOf(chartType) > -1) {\n            this.currentColumn = (columnKeys.indexOf(columnHeader + ' | ' + this.currentMeasure) > -1 && columnHeader !== undefined) ? columnHeader + ' | ' + this.currentMeasure : columnKeys[0];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n            if ((isNullOrUndefined(currentSeries.palettes) || currentSeries.palettes.length == 0) && !isNullOrUndefined(this.persistSettings.palettes) && this.persistSettings.palettes.length > 0) {\n                currentSeries.palettes = this.persistSettings.palettes;\n            }\n            currentSeries.dataSource = this.columnGroupObject[this.currentColumn];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            if (isBlazor()) {\n                if (isNullOrUndefined(this.persistSettings.chartSeries.dataLabel.visible)) {\n                    this.persistSettings.chartSeries.dataLabel.visible = true;\n                    this.persistSettings.chartSeries.dataLabel.position = \"Outside\";\n                }\n            }\n            if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.dataLabel) {\n                currentSeries.dataLabel = this.persistSettings.chartSeries.dataLabel;\n                currentSeries.dataLabel.name = 'x';\n            }\n            else {\n                currentSeries.dataLabel = { visible: true, position: \"Outside\", name: 'x' };\n                this.parent.setProperties({ chartSettings: { chartSeries: { dataLabel: { visible: true, position: \"Outside\" } } } }, true);\n            }\n            if (this.accEmptyPoint && currentSeries.emptyPointSettings) {\n                currentSeries.emptyPointSettings.mode = 'Zero';\n            }\n            else if (this.accEmptyPoint) {\n                currentSeries.emptyPointSettings = { mode: 'Zero' };\n            }\n            currentSeries.name = this.currentColumn;\n            if (chartType === 'Doughnut') {\n                currentSeries.type = 'Pie';\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '40%';\n            }\n            else if (chartType === 'Pie') {\n                currentSeries.innerRadius = this.chartSettings.chartSeries.innerRadius ? this.chartSettings.chartSeries.innerRadius : '0';\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        else {\n            for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n                var key = columnKeys_1[_i];\n                var currentSeries = {};\n                currentSeries = this.persistSettings.chartSeries ? this.frameChartSeries(this.persistSettings.chartSeries) : currentSeries;\n                if (!isNullOrUndefined(currentSeries.palettes) && currentSeries.palettes.length > 0 && (isNullOrUndefined(this.persistSettings.palettes) || this.persistSettings.palettes.length == 0)) {\n                    this.chartSettings.palettes = currentSeries.palettes;\n                }\n                currentSeries.dataSource = this.columnGroupObject[key];\n                currentSeries.xName = 'x';\n                currentSeries.yName = 'y';\n                currentSeries.name = this.chartSettings.enableMultiAxis ? key : key.split(' | ')[0];\n                if (['Radar', 'Polar'].indexOf(chartType) < 0) {\n                    var measure = key.split(' | ')[1];\n                    currentSeries.yAxisName = this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n                }\n                if (this.persistSettings.chartSeries && this.persistSettings.chartSeries.emptyPointSettings) {\n                    currentSeries.emptyPointSettings = this.persistSettings.chartSeries.emptyPointSettings;\n                }\n                this.chartSeries = this.chartSeries.concat(currentSeries);\n            }\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.frameChartSeries = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            if ((this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) > -1 && ['fill', 'dashArray', 'width', 'segmentAxis',\n                'drawType', 'isClosed', 'segments', 'stackingGroup', 'marker', 'errorBar', 'trendlines', 'minRadius',\n                'splineType', 'maxRadius', 'cardinalSplineTension', 'columnWidth', 'columnSpacing', 'cornerRadius'].indexOf(keys[keyPos]) > -1) ||\n                (this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 && ['endAngle', 'explode', 'explodeAll', 'explodeIndex',\n                    'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'neckHeight', 'neckWidth', 'pyramidMode', 'startAngle',\n                    'dataLabel', 'innerRadius'].indexOf(keys[keyPos]) > -1)) {\n                keyPos++;\n                continue;\n            }\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        this.parent.showWaitingPopup();\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ?\n                (this.parent.element.insertBefore((!this.element ?\n                    (createElement('div', {\n                        className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                    }))\n                    : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!this.chartElement && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).innerHTML = '';\n            this.chartElement = this.parent.element.querySelector('.' + cls.PIVOTCHART).appendChild(createElement('div', {\n                className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n            }));\n        }\n        if (this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER)) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART_INNER).innerHTML = '';\n        }\n        if (this.parent.showGroupingBar) {\n            this.element.style.minWidth = '400px !important';\n        }\n        else {\n            this.element.style.minWidth = '310px !important';\n        }\n        var width = this.parent.width.toString();\n        if (this.parent.showToolbar && this.parent.grid) {\n            width = this.parent.getGridWidthAsNumber().toString();\n        }\n        var height = this.getChartHeight();\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.accumulationType.indexOf(type) < 0) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.height =\n                (height === 'auto' ? this.getChartAutoHeight() : height) + 'px';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.width = width + 'px';\n            if (this.parent.chartSettings.chartSeries.type !== 'Polar' && this.parent.chartSettings.chartSeries.type !== 'Radar') {\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n                this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n            }\n        }\n        if (this.parent.chart && ((this.parent.chart.getModuleName() === 'accumulationchart' &&\n            this.accumulationType.indexOf(type) < 0) || (this.parent.chart.getModuleName() === 'chart' &&\n            this.accumulationType.indexOf(type) > -1))) {\n            this.parent.chart.destroy();\n            if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n            }\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart') || this.parent.element.querySelector('.e-accumulationchart')) ||\n            (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange)) {\n            if (this.parent.toolbarModule && this.parent.toolbarModule.isMultiAxisChange && this.parent.chart) {\n                if (!this.parent.chart.isDestroyed) {\n                    this.parent.chart.destroy();\n                }\n                this.parent.chart = undefined;\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').innerHTML = '';\n                this.parent.element.querySelector('#' + this.parent.element.id + '_chart').appendChild(createElement('div', {\n                    className: cls.PIVOTCHART_INNER, id: this.parent.element.id + '_chartInner',\n                }));\n                this.parent.toolbarModule.isMultiAxisChange = false;\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair, Selection, StripLine, DataLabel);\n            AccumulationChart.Inject(PieSeries, FunnelSeries, PyramidSeries, AccumulationDataLabel, AccumulationLegend, AccumulationTooltip, Export);\n            if (this.accumulationType.indexOf(type) > -1) {\n                this.parent.chart = new AccumulationChart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    width: width,\n                    height: height.toString(),\n                    title: this.chartSettings.title,\n                    enableSmartLabels: this.chartSettings.enableSmartLabels,\n                    center: this.chartSettings.pieCenter,\n                    enableBorderOnMouseMove: this.chartSettings.enableBorderOnMouseMove,\n                    highLightMode: this.chartSettings.highlightMode,\n                    highlightPattern: this.chartSettings.highlightPattern,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    theme: this.chartSettings.theme,\n                    selectionMode: this.chartSettings.accumulationSelectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    locale: this.parent.locale,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this)\n                });\n            }\n            else {\n                this.parent.chart = new Chart({\n                    series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                    legendSettings: currentLegendSettings,\n                    tooltip: currentTooltipSettings,\n                    zoomSettings: currentZoomSettings,\n                    axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                    rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                    columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                        (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                            this.chartSettings.enableMultiAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                    primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                    primaryXAxis: currentXAxis,\n                    width: width,\n                    height: (this.parent.chartSettings.chartSeries.type !== 'Polar' &&\n                        this.parent.chartSettings.chartSeries.type !== 'Radar' && this.parent.chartSettings.enableScrollOnMultiAxis &&\n                        this.parent.chartSettings.enableMultiAxis && this.parent.dataSourceSettings.values.length > 0) ?\n                        Number(height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ? isNaN(Number(height)) ?\n                            height.toString() : (Number(height) - 5).toString() :\n                            (!isNaN(Number(height)) || this.parent.dataSourceSettings.values.length > 1) ?\n                                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                                height.toString() : height.toString(),\n                    title: this.chartSettings.title,\n                    titleStyle: this.chartSettings.titleStyle,\n                    subTitle: this.chartSettings.subTitle,\n                    subTitleStyle: this.chartSettings.subTitleStyle,\n                    margin: this.chartSettings.margin,\n                    border: this.chartSettings.border,\n                    background: this.chartSettings.background,\n                    chartArea: this.chartSettings.chartArea,\n                    palettes: this.chartSettings.palettes,\n                    theme: this.chartSettings.theme,\n                    crosshair: this.chartSettings.crosshair,\n                    selectionMode: this.chartSettings.selectionMode,\n                    isMultiSelect: this.chartSettings.isMultiSelect,\n                    enableExport: this.chartSettings.enableExport,\n                    selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                    isTransposed: this.chartSettings.isTransposed,\n                    enableAnimation: this.chartSettings.enableAnimation,\n                    useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                    description: this.chartSettings.description,\n                    tabIndex: this.chartSettings.tabIndex,\n                    locale: this.parent.locale,\n                    enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                    beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                    animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                    legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                    textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                    pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                    seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                    chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                    chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                    pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                    pointClick: this.pointClick.bind(this),\n                    chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                    chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                    chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                    dragComplete: this.chartSettings.dragComplete ? this.chartSettings.dragComplete.bind(this) : undefined,\n                    zoomComplete: this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete.bind(this) : undefined,\n                    scrollStart: this.chartSettings.scrollStart ? this.chartSettings.scrollStart.bind(this) : undefined,\n                    scrollEnd: this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd.bind(this) : undefined,\n                    scrollChanged: this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged.bind(this) : undefined,\n                    tooltipRender: this.tooltipRender.bind(this),\n                    loaded: this.loaded.bind(this),\n                    load: this.load.bind(this),\n                    resized: this.resized.bind(this),\n                    axisLabelRender: this.axisLabelRender.bind(this),\n                    multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n                });\n            }\n            this.parent.chart.isStringTemplate = true;\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else if ((this.accumulationType.indexOf(type) < 0) && this.parent.chart.getModuleName() === 'chart') {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.primaryXAxis = currentXAxis;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultiAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n        }\n        if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chartInner');\n        }\n        else {\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chart');\n        }\n    };\n    PivotChart.prototype.pointClick = function (args) {\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.seriesIndex].dataSource;\n        if ((['Pie', 'Funnel', 'Doughnut', 'Pyramid', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) || !this.parent.chartSettings.showMultiLevelLabels) {\n            this.pivotIndex = {\n                rIndex: dataSource ? dataSource[args.pointIndex].rIndex : undefined,\n                cIndex: dataSource ? dataSource[args.pointIndex].cIndex : undefined,\n            };\n            this.creatMenu();\n            var pos = this.parent.element.getBoundingClientRect();\n            var y = (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 0) +\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 0) +\n                (window.scrollY || document.documentElement.scrollTop) + pos.top;\n            this.accumulationMenu.open(y + args.y, args.x + pos.left + (window.scrollX || document.documentElement.scrollLeft));\n        }\n        else if ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing) && this.parent.drillThroughModule) {\n            var rIndex = dataSource[args.pointIndex].rIndex;\n            var cIndex = dataSource[args.pointIndex].cIndex;\n            this.parent.drillThroughModule.executeDrillThrough(this.parent.pivotValues[rIndex][cIndex], rIndex, cIndex);\n        }\n        this.parent.trigger(events.chartPointClick, args);\n    };\n    /* tslint:enable */\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultiAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                    this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ?\n                    this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n                currentYAxis.plotOffsetTop = currentYAxis.plotOffsetTop ? currentYAxis.plotOffsetTop :\n                    this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                        this.chartSettings.chartSeries.type === 'StackingBar100' ? 50 : 30;\n                currentYAxis.rowIndex = valCnt;\n                currentYAxis.columnIndex = valCnt;\n                if (!resFormat) {\n                    currentYAxis.name = this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                rows.push({ height: divider });\n                columns.push({ width: divider });\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var lengthofFormat = void 0;\n            if (formatSetting) {\n                lengthofFormat = formatSetting.format.length;\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (((formatSetting.format.toLowerCase().match(/n[0-10]|p[0-10]|c[0-10]/) === null) || lengthofFormat > 3) ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    /** @hidden */\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = void 0;\n            if (!isNullOrUndefined(rows)) {\n                cKeys = Object.keys(rows);\n                for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                    var cellIndex = cKeys_2[_a];\n                    var cell = rows[Number(cellIndex)];\n                    if (!isNullOrUndefined(cell)) {\n                        if (cell.axis !== 'column') {\n                            return colIndexColl;\n                        }\n                        else if ((cell.type === 'sum' || (this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum'))\n                            && cell.rowSpan !== -1) {\n                            colIndexColl[cell.colIndex] = cell.colIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues) {\n        var _a, _b;\n        this.fieldPosition = [];\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            this.fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        this.fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < this.fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[this.fieldPosition[pos]] = {\n                    start: (lastEnd + 1),\n                    end: (lastEnd + Object.keys(group[this.fieldPosition[pos]]).length)\n                };\n                lastEnd = levelPos[this.fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    /* tslint:disable */\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1,\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'),\n                            customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    /* tslint:enable */\n    PivotChart.prototype.getZoomFactor = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (tooltip.enable && tooltip.template) {\n            this.templateFn = this.parent.templateParser(tooltip.template);\n        }\n        if (this.parent.tooltipTemplate) {\n            tooltip.template = tooltip.template ? tooltip.template : this.parent.tooltipTemplate;\n        }\n        if (isBlazor()) {\n            this.parent.allowServerDataBinding = false;\n            this.parent.setProperties({ chartSettings: { tooltip: { header: tooltip.header ? tooltip.header : '' } } }, true);\n            this.parent.allowServerDataBinding = true;\n        }\n        else {\n            tooltip.header = tooltip.header ? tooltip.header : '';\n        }\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    /* tslint:disable:no-any */\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        if (this.chartSettings.legendSettings) {\n            var keyPos = 0;\n            var keys = Object.keys(this.chartSettings.legendSettings);\n            while (keyPos < keys.length) {\n                legendSettings[keys[keyPos]] = this.chartSettings.legendSettings[keys[keyPos]];\n                keyPos++;\n            }\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) > -1 && legendSettings.visible === undefined) {\n            legendSettings.visible = false;\n        }\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    /* tslint:enable:no-any */\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) { return args.caption || args.name; }).join(' / ');\n        currentXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true :\n            zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n            ((this.chartSettings.enableMultiAxis && this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) ?\n                args.series.name ? args.series.name.split(' | ')[1] : args.data.seriesName ?\n                    args.data.seriesName.split(' | ')[1] : this.currentMeasure : this.measuresNames[this.currentMeasure] ?\n                this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        /* tslint:disable:no-any */\n        var dataSource = args.series.dataSource ? args.series.dataSource : this.parent.chart.series[args.data.seriesIndex].dataSource;\n        var rowIndex = dataSource ? dataSource[args.data.pointIndex].rIndex : undefined;\n        var colIndex = dataSource ? dataSource[args.data.pointIndex].cIndex : undefined;\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure] ? this.measuresNames[measure] : measure];\n        var aggregateType = this.parent.dataType === 'olap' ? '' : this.parent.localeObj.getConstant(measureField.aggregateType);\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : aggregateType + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ') + measureField.caption;\n        var formattedText = this.accumulationType.indexOf(this.parent.chartSettings.chartSeries.type) < 0 ?\n            args.text.split('<b>')[1].split('</b>')[0] : this.engineModule.pivotValues[rowIndex][colIndex].formattedText;\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var formattedValue = ((formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText) :\n            this.parent.engineModule.getFormattedValue(args.point.y, measureField.id).formattedText :\n            formattedText);\n        var columnText = (args.series.name ? args.series.name.split(' | ')[0] : args.data.seriesName.split(' | ')[0]);\n        var rowText = args.point.x;\n        if (this.parent.tooltipTemplate && this.parent.getTooltipTemplate() !== undefined || this.chartSettings.tooltip.template) {\n            var rowFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'row') : '';\n            var columnFields = dataSource ? this.parent.getHeaderField(rowIndex, colIndex, 'Column') : '';\n            var templateVariable = {\n                rowHeaders: rowText,\n                columnHeaders: columnText,\n                aggregateType: aggregateType,\n                value: formattedValue,\n                valueField: measureField.caption,\n                rowFields: rowFields,\n                columnFields: columnFields\n            };\n            var template = void 0;\n            if (this.parent.chartSettings && this.parent.chartSettings.tooltip &&\n                this.parent.chartSettings.tooltip.enable && this.parent.chartSettings.tooltip.template) {\n                template = this.tooltipTemplateFn()(templateVariable, this, 'tooltipTemplate', this.element.id + '1tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                /* tslint:enable:no-any */\n                template = this.parent.getTooltipTemplate()(templateVariable, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            args.template = template;\n        }\n        else {\n            args.text = measureAggregatedName + ': ' + formattedValue +\n                (this.dataSourceSettings.columns.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + columnText)) +\n                (this.dataSourceSettings.rows.length === 0 ? '' :\n                    (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + rowText));\n            this.parent.trigger(events.chartTooltipRender, args);\n        }\n    };\n    PivotChart.prototype.tooltipTemplateFn = function () {\n        return this.templateFn;\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName))) {\n                this.parent.element.querySelector('#' + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) >= 0)\n            && this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'visible';\n        }\n        else if (this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis) {\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflow = 'auto';\n            this.parent.element.querySelector('.' + cls.PIVOTCHART).style.overflowX = 'hidden';\n        }\n        this.parent.chart.height = ['Pie', 'Funnel', 'Pyramid', 'Doughnut', 'Radar', 'Polar'].indexOf(this.parent.chartSettings.chartSeries.type) < 0 &&\n            this.parent.chartSettings.enableScrollOnMultiAxis && this.parent.chartSettings.enableMultiAxis &&\n            this.parent.dataSourceSettings.values.length > 0 ? Number(this.parent.chart.height) > (this.parent.dataSourceSettings.values.length * 235) + 100 ?\n            isNaN(Number(this.getChartHeight())) ? this.getChartHeight().toString() : (Number(this.getChartHeight()) - 5).toString() :\n            (!isNaN(Number(this.getChartHeight())) || this.parent.dataSourceSettings.values.length > 1) ?\n                ((this.parent.dataSourceSettings.values.length * 235) + 100).toString() :\n                this.getChartHeight().toString() : this.getChartHeight().toString();\n        this.updateView();\n        this.parent.notify(events.contentReady, {});\n        this.parent.trigger(events.chartLoaded, args);\n        if ((this.parent.dataSourceSettings.mode === 'Server' && this.parent.isServerWaitingPopup) || this.parent.dataSourceSettings.mode === 'Local') {\n            this.parent.hideWaitingPopup();\n        }\n    };\n    /** @hidden */\n    PivotChart.prototype.updateView = function () {\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                }\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n                if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                    this.parent.element.querySelector('.e-pivot-grouping-bar') &&\n                    this.parent.element.querySelector('.e-chart-grouping-bar')) {\n                    this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    this.parent.element.querySelector('.e-chart-grouping-bar').style.display = '';\n                }\n                if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                    this.parent.element.querySelector('.e-pivotchart').style.display = '';\n                }\n            }\n        }\n    };\n    PivotChart.prototype.creatMenu = function () {\n        if (this.accumulationMenu && !this.accumulationMenu.isDestroyed) {\n            this.accumulationMenu.destroy();\n        }\n        var items = ((this.parent.allowDrillThrough || this.parent.editSettings.allowEditing)\n            && this.parent.drillThroughModule) ? ['expand', 'collapse', 'drillThrough', 'exit'] :\n            ['expand', 'collapse', 'exit'];\n        var option = [];\n        for (var i = 0; i < items.length; i++) {\n            option.push({\n                id: this.parent.element.id + '_DrillMenuChart_' + items[i],\n                text: this.parent.localeObj.getConstant(items[i]),\n                items: [],\n            });\n        }\n        var getString = this.getMenuItems();\n        var expand = [];\n        var collapse = [];\n        for (var i = 0; i < getString.length; i++) {\n            if (getString[i].type === 'expand') {\n                expand.push({ id: this.element.id + 'drillExpand_' + getString[i].key, text: getString[i].value });\n            }\n            else {\n                collapse.push({ id: this.element.id + 'drillCollapse_' + getString[i].key, text: getString[i].value });\n            }\n        }\n        if (expand.length > 0) {\n            option[0].items = expand;\n        }\n        if (collapse.length > 0) {\n            option[1].items = collapse;\n        }\n        var menuOptions = {\n            cssClass: this.parent.element.id + '_accumulationChart',\n            items: option,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.drillMenuOpen.bind(this),\n            select: this.drillMenuSelect.bind(this),\n        };\n        this.accumulationMenu = new ContextMenu(menuOptions);\n        var contextMenu;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart')) {\n            contextMenu = this.parent.element.querySelector('#' + this.parent.element.id + '_accumulationChart');\n            contextMenu.innerHTML = '';\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parent.element.id + '_accumulationChart'\n            });\n            this.parent.element.appendChild(contextMenu);\n        }\n        this.accumulationMenu.isStringTemplate = true;\n        this.accumulationMenu.appendTo(contextMenu);\n    };\n    PivotChart.prototype.drillMenuOpen = function (args) {\n        if (args.items[0] && args.items[0].text === this.parent.localeObj.getConstant('expand') &&\n            args.items[0].items && args.items[0].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('expand')], false);\n        }\n        if (args.items[1] && args.items[1].text === this.parent.localeObj.getConstant('collapse') &&\n            args.items[1].items && args.items[1].items.length === 0) {\n            this.accumulationMenu.enableItems([this.parent.localeObj.getConstant('collapse')], false);\n        }\n    };\n    PivotChart.prototype.getMenuItems = function () {\n        var rowIndex = this.pivotIndex.rIndex;\n        var menuItem = [];\n        var pivotValues = this.engineModule.pivotValues;\n        var levelCol = [];\n        var pivotValue = pivotValues[rowIndex][this.pivotIndex.cIndex];\n        // let hierarchy: string = pivotValues[rowIndex][0].hierarchy;\n        var level = (!pivotValues[rowIndex][0].isNamedSet && pivotValues[rowIndex][0].hasChild) ?\n            pivotValues[rowIndex][0].level : undefined;\n        var levels = this.parent.dataType === 'olap' ? pivotValue.rowHeaders.toString().split(/~~|::/)\n            : pivotValue.rowHeaders.toString().split(this.engineModule.valueSortSettings.headerDelimiter);\n        while (pivotValues[rowIndex][0]) {\n            pivotValue = pivotValues[rowIndex][0];\n            if ((levels.length !== 0) && (levels.indexOf(pivotValue.formattedText.toString()) === (levels.length - 1))) {\n                if (pivotValue.hasChild && !pivotValue.isNamedSet && levelCol.indexOf(pivotValue.level) < 0 &&\n                    (level ? level >= pivotValue.level : (level === 0 ? (pivotValue.level === 0) : true))) {\n                    if (!(pivotValue.isDrilled && pivotValue.hasChild)) {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'expand',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    else {\n                        menuItem.push({\n                            key: rowIndex,\n                            type: 'collapse',\n                            value: pivotValue.formattedText\n                        });\n                    }\n                    levelCol.push(pivotValue.level);\n                    level = level ? (level - 1) : (pivotValue.level - 1);\n                }\n                var index = levels.indexOf(pivotValue.formattedText.toString());\n                levels.splice(index, 1);\n            }\n            if (pivotValue.level === 0 && pivotValue.hasChild && !pivotValue.isNamedSet) {\n                level = undefined;\n                levelCol = [];\n            }\n            rowIndex--;\n        }\n        return menuItem;\n    };\n    PivotChart.prototype.drillMenuSelect = function (args) {\n        var pivotValues = (this.parent.dataType === 'olap' ?\n            this.parent.olapEngineModule.pivotValues : this.parent.engineModule.pivotValues);\n        var option = (args.element.id).split('_DrillMenuChart_')[1];\n        if (args.element.id.indexOf(this.element.id + 'drill') === 0) {\n            var type = args.element.id.split(this.element.id + 'drill')[1].indexOf('Expand') >= 0 ? 'drillExpand' : 'drillCollapse';\n            var rowIndex = Number(args.element.id.split(this.element.id + type + '_')[1]);\n            var pivotValue = pivotValues[rowIndex][0];\n            var name_2 = this.parent.dataType === 'olap' ? pivotValue.formattedText :\n                (pivotValue.actualText ? pivotValue.actualText.toString() : pivotValue.formattedText.toString());\n            var text = pivotValue.formattedText ? pivotValue.formattedText.toString() : name_2;\n            var caption = (pivotValue.hasChild && !pivotValue.isNamedSet) ?\n                ((pivotValue.isDrilled ? ' - ' : ' + ') + text) : text;\n            var tupInfo = this.parent.dataType === 'olap' ?\n                this.engineModule.tupRowInfo[pivotValue.ordinal] : undefined;\n            var levelName = tupInfo ? tupInfo.uNameCollection : pivotValue.valueSort.levelName.toString();\n            var customAttributes = {\n                fieldName: pivotValue.valueSort.axis,\n                level: pivotValue.level,\n                hasChild: pivotValue.hasChild,\n                levelName: levelName,\n                name: name_2,\n                text: caption,\n                rowIndex: rowIndex,\n                colIndex: 0,\n                isDrilled: pivotValue.isDrilled,\n                cell: pivotValue\n            };\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, customAttributes);\n            }\n            else {\n                this.onDrill({ customAttributes: customAttributes });\n            }\n        }\n        else if (option === 'drillThrough') {\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.drillThroughModule.executeDrillThrough(pivotValues[this.pivotIndex.rIndex][this.pivotIndex.cIndex], this.pivotIndex.rIndex, this.pivotIndex.rIndex);\n        }\n        else if (option === 'exit') {\n            this.accumulationMenu.close();\n        }\n    };\n    PivotChart.prototype.getChartHeight = function () {\n        var height = isNullOrUndefined(this.parent.getHeightAsNumber()) ? 'auto' :\n            this.parent.getHeightAsNumber().toString();\n        if (!isNullOrUndefined(this.parent.getHeightAsNumber())) {\n            if (this.parent.showToolbar && this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                    (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                        this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if (this.parent.showToolbar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                    this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42)).toString();\n            }\n            else if (this.parent.showGroupingBar) {\n                height = (this.parent.getHeightAsNumber() - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76)).toString();\n            }\n            else if ((this.parent.chart && parseInt(this.parent.chart.height, 10) < 200) || this.parent.getHeightAsNumber() < 200) {\n                height = '200';\n            }\n        }\n        else {\n            height = 'auto';\n        }\n        return height;\n    };\n    PivotChart.prototype.getChartAutoHeight = function () {\n        var height = this.parent.element.offsetHeight;\n        if (this.parent.showToolbar && this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42) -\n                (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                    this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        else if (this.parent.showToolbar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-pivot-toolbar') ?\n                this.parent.element.querySelector('.e-pivot-toolbar').clientHeight : 42);\n        }\n        else if (this.parent.showGroupingBar) {\n            height = this.parent.element.offsetHeight - (this.parent.element.querySelector('.e-chart-grouping-bar') ?\n                this.parent.element.querySelector('.e-chart-grouping-bar').clientHeight : 76);\n        }\n        return height;\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels) {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        var eventArgs = {\n            axis: args.axis,\n            text: args.text,\n            cell: !isNullOrUndefined(args.customAttributes) ? args.customAttributes.cell : undefined,\n            cancel: false\n        };\n        this.parent.trigger(events.multiLevelLabelClick, eventArgs);\n        /* tslint:disable-next-line:no-any */\n        if (!eventArgs.cancel && args.customAttributes && args.customAttributes.hasChild && !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    /** @hidden */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        /* tslint:enable:no-any */\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({\n                dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] }\n            }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        var drillArgs = {\n            drillInfo: drilledItem,\n            pivotview: isBlazor() ? undefined : pivot.parent\n        };\n        pivot.parent.trigger(events.drill, drillArgs);\n        if (pivot.parent.enableVirtualization) {\n            if (isBlazor()) {\n                /* tslint:disable */\n                var sfBlazor = 'sfBlazor';\n                var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem], drilledItem);\n                var args_1 = window[sfBlazor].copyWithoutCircularReferences([drillArgs], drillArgs);\n                pivot.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                    pivot.parent.updateBlazorData(data, pivot.parent);\n                    pivot.parent.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                    pivot.parent.allowServerDataBinding = false;\n                    pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    delete pivot.parent.bulkChanges.pivotValues;\n                    pivot.parent.allowServerDataBinding = true;\n                    pivot.parent.renderPivotGrid();\n                });\n                /* tslint:enable */\n            }\n            else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n                pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n            }\n            else {\n                pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n                pivot.engineModule.onDrill(drilledItem);\n            }\n        }\n        else if (pivot.parent.dataSourceSettings.mode === 'Server') {\n            pivot.parent.getEngine('onDrill', drilledItem, null, null, null, null, null);\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings);\n        }\n        pivot.parent.allowServerDataBinding = false;\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        /* tslint:disable-next-line:no-any */\n        delete pivot.parent.bulkChanges.pivotValues;\n        pivot.parent.allowServerDataBinding = true;\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.isAttributeDrill = function (hierarchy, drillInfo) {\n        var isDrill = false;\n        for (var i = 0; i < this.dataSourceSettings.drilledMembers.length; i++) {\n            if (this.dataSourceSettings.drilledMembers[i].name === hierarchy) {\n                for (var j = 0; j < this.dataSourceSettings.drilledMembers[i].items.length; j++) {\n                    var drillItems = this.dataSourceSettings.drilledMembers[i].items[j].split(this.dataSourceSettings.drilledMembers[i].delimiter);\n                    var levelName = '';\n                    for (var k = 0; k < drillItems.length; k++) {\n                        if (drillInfo[k] && drillInfo[k].uName) {\n                            levelName = levelName + (levelName === '' ? '' : this.dataSourceSettings.drilledMembers[i].delimiter) + (drillInfo[k].uName.indexOf('[Measures]') > -1 ? '[Measures]' : drillInfo[k].uName);\n                        }\n                    }\n                    if (levelName === this.dataSourceSettings.drilledMembers[i].items[j]) {\n                        isDrill = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (isBlazor()) {\n            args.chart = this.parent.chart;\n        }\n        if (this.accumulationType.indexOf(this.chartSettings.chartSeries.type) < 0) {\n            args.chart.primaryXAxis.zoomFactor = this.getZoomFactor();\n            if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n                args.chart.primaryXAxis.zoomFactor = 1;\n            }\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /**\n     * To destroy the chart module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.chart && !this.parent.chart.isDestroyed) {\n            if (this.accumulationMenu && this.accumulationMenu.isDestroyed) {\n                this.accumulationMenu.destroy();\n            }\n            this.parent.chart.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","/**\n * Specifies Chart Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '14px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.chartSubTitleFont = {\n        size: '11px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.crosshairLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.tooltipLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stripLineLabelFont = {\n        size: '12px',\n        fontWeight: 'Regular',\n        color: '#353535',\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.stockEventFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from '../../common/base/themes';\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Allow options to customize the border of the chart such as color and border size in the pivot chart.\n * For example, to display the chart border color as red, set the properties `color` to either **\"red\"**\n * or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Allows to configure the position of the marker such as top and left in the chart.\n */\nvar Offset = /** @class */ (function (_super) {\n    __extends(Offset, _super);\n    function Offset() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Offset.prototype, \"y\", void 0);\n    return Offset;\n}(ChildProperty));\nexport { Offset };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * @public\n */\nvar Indexes = /** @class */ (function (_super) {\n    __extends(Indexes, _super);\n    function Indexes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], Indexes.prototype, \"point\", void 0);\n    return Indexes;\n}(ChildProperty));\nexport { Indexes };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar ChartArea = /** @class */ (function (_super) {\n    __extends(ChartArea, _super);\n    function ChartArea() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Border)\n    ], ChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], ChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartArea.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartArea.prototype, \"backgroundImage\", void 0);\n    return ChartArea;\n}(ChildProperty));\nexport { ChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar CrosshairSettings = /** @class */ (function (_super) {\n    __extends(CrosshairSettings, _super);\n    function CrosshairSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], CrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], CrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], CrosshairSettings.prototype, \"lineType\", void 0);\n    return CrosshairSettings;\n}(ChildProperty));\nexport { CrosshairSettings };\n/**\n * Allows to configure the data label with different settings such as name, fill color, opacity, rotation angle, border, marging, etc in the chart.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartConnectorStyle = /** @class */ (function (_super) {\n    __extends(PivotChartConnectorStyle, _super);\n    function PivotChartConnectorStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Line')\n    ], PivotChartConnectorStyle.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartConnectorStyle.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartConnectorStyle.prototype, \"length\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartConnectorStyle.prototype, \"dashArray\", void 0);\n    return PivotChartConnectorStyle;\n}(ChildProperty));\nexport { PivotChartConnectorStyle };\n/**\n * Allow options to customize the pie, funnel, doughnut and pyramid chart data label connector.\n */\nvar PivotChartDataLabel = /** @class */ (function (_super) {\n    __extends(PivotChartDataLabel, _super);\n    function PivotChartDataLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartDataLabel.prototype, \"visible\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartDataLabel.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartDataLabel.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartDataLabel.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotChartDataLabel.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartDataLabel.prototype, \"ry\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartDataLabel.prototype, \"template\", void 0);\n    __decorate([\n        Complex({}, PivotChartConnectorStyle)\n    ], PivotChartDataLabel.prototype, \"connectorStyle\", void 0);\n    return PivotChartDataLabel;\n}(ChildProperty));\nexport { PivotChartDataLabel };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Allows to configure the error bar cap settings such as cap width, length, color, opacity.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\n/**\n * Allows options for customize the error bar chart with diffent settings such as type, direction, mode, color, width, etc.\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Allows to configure the trendlines of the chart such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar EmptyPointSettings = /** @class */ (function (_super) {\n    __extends(EmptyPointSettings, _super);\n    function EmptyPointSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], EmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], EmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], EmptyPointSettings.prototype, \"mode\", void 0);\n    return EmptyPointSettings;\n}(ChildProperty));\nexport { EmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar CornerRadius = /** @class */ (function (_super) {\n    __extends(CornerRadius, _super);\n    function CornerRadius() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], CornerRadius.prototype, \"bottomRight\", void 0);\n    return CornerRadius;\n}(ChildProperty));\nexport { CornerRadius };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar CrosshairTooltip = /** @class */ (function (_super) {\n    __extends(CrosshairTooltip, _super);\n    function CrosshairTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\n    return CrosshairTooltip;\n}(ChildProperty));\nexport { CrosshairTooltip };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar StripLineSettings = /** @class */ (function (_super) {\n    __extends(StripLineSettings, _super);\n    function StripLineSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], StripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], StripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], StripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], StripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], StripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], StripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], StripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], StripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], StripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], StripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], StripLineSettings.prototype, \"opacity\", void 0);\n    return StripLineSettings;\n}(ChildProperty));\nexport { StripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar LabelBorder = /** @class */ (function (_super) {\n    __extends(LabelBorder, _super);\n    function LabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], LabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], LabelBorder.prototype, \"type\", void 0);\n    return LabelBorder;\n}(ChildProperty));\nexport { LabelBorder };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar MajorGridLines = /** @class */ (function (_super) {\n    __extends(MajorGridLines, _super);\n    function MajorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorGridLines.prototype, \"color\", void 0);\n    return MajorGridLines;\n}(ChildProperty));\nexport { MajorGridLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar MinorGridLines = /** @class */ (function (_super) {\n    __extends(MinorGridLines, _super);\n    function MinorGridLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorGridLines.prototype, \"color\", void 0);\n    return MinorGridLines;\n}(ChildProperty));\nexport { MinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar AxisLine = /** @class */ (function (_super) {\n    __extends(AxisLine, _super);\n    function AxisLine() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], AxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], AxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], AxisLine.prototype, \"color\", void 0);\n    return AxisLine;\n}(ChildProperty));\nexport { AxisLine };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar MajorTickLines = /** @class */ (function (_super) {\n    __extends(MajorTickLines, _super);\n    function MajorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], MajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MajorTickLines.prototype, \"color\", void 0);\n    return MajorTickLines;\n}(ChildProperty));\nexport { MajorTickLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar MinorTickLines = /** @class */ (function (_super) {\n    __extends(MinorTickLines, _super);\n    function MinorTickLines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0.7)\n    ], MinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], MinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], MinorTickLines.prototype, \"color\", void 0);\n    return MinorTickLines;\n}(ChildProperty));\nexport { MinorTickLines };\n/**\n * Allows to configure the position of the legend such as top and left in the chart.\n */\nvar ChartLocation = /** @class */ (function (_super) {\n    __extends(ChartLocation, _super);\n    function ChartLocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], ChartLocation.prototype, \"y\", void 0);\n    return ChartLocation;\n}(ChildProperty));\nexport { ChartLocation };\n/**\n * Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\n/**\n * Allows to configure the animation behavior for chart series such as animation duration and delay.\n */\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\n/**\n * Allows to customize specific region for line type series with a variety of means such as value, color, pattern of dashes.\n */\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\n/**\n *  Allows to configure the marker of the series such as shape, width, height, border, position, fill color, opacity, data label etc in the chart\n */\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\n/**\n * Allows options for customize the error bar chart series with diffent settings such as type, direction, mode, color, width, etc.\n */\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\n/**\n * Allows to configure the trendlines of the chart series such as name, period, type, tooltip, marker, animation, color, legend shape, etc.\n */\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\n/**\n * Allows to configure the empty points with a variety of means such as fill color, border and mode in the chart.\n */\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\n/**\n * Allows to customize the rounded corners of the column series in the chart.\n */\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n * Allows to customize the apprearance of the text in the chart such as font style, font size, font weight, font color, font family, text alignment, opacity, text overflow.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\n/**\n * Allows to configure the crosshair tooltip with text style and fill color in the chart.\n */\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\n/**\n * Allows to configure the major tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\n/**\n * Allows to configure the major grid lines such as line width, color and dashArray in the `axis`.\n */\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\n/**\n * Allows to configure the minor tick lines such as width, height and color in the chart.\n */\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\n/**\n * Allows to configure the minor grid lines such as line width, dashArray and color in the `axis`.\n */\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\n/**\n * Allows to configure the axis line such as line width, dashArray and color in a chart.\n */\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\n/**\n * Allows to congifure the strip line properties such as line position, size, color, size type, border, text and opacity in the chart.\n */\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\n/**\n * Allows to customize the label border with a variety of means such as label color, width and labe type in the chart.\n */\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n * Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\n/**\n * Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n */\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\n/**\n * Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n */\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\n/**\n * Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n */\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\n/**\n * Allow options to customize the left, right, top and bottom margins of the pivot chart.\n */\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n * Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSeries.prototype, \"explodeAll\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"explodeIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property('30%')\n    ], PivotSeries.prototype, \"explodeOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"gapRatio\", void 0);\n    __decorate([\n        Property('Value')\n    ], PivotSeries.prototype, \"groupMode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"groupTo\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckHeight\", void 0);\n    __decorate([\n        Property('20%')\n    ], PivotSeries.prototype, \"neckWidth\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotSeries.prototype, \"pyramidMode\", void 0);\n    __decorate([\n        Property([])\n    ], PivotSeries.prototype, \"palettes\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"startAngle\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Complex(null, PivotChartDataLabel)\n    ], PivotSeries.prototype, \"dataLabel\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Allow options to customize the axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(Theme.axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('None')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(Theme.tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Allow options to customize the center of the pivot pie series chart.\n */\nvar PivotPieChartCenter = /** @class */ (function (_super) {\n    __extends(PivotPieChartCenter, _super);\n    function PivotPieChartCenter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"x\", void 0);\n    __decorate([\n        Property('50%')\n    ], PivotPieChartCenter.prototype, \"y\", void 0);\n    return PivotPieChartCenter;\n}(ChildProperty));\nexport { PivotPieChartCenter };\n/**\n * Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n * Allows a set of options to customize a pivot chart with a variety of settings, such as chart series, chart area, axis labels, legends, border, crosshairs, theme, title, tooltip, zooming, etc.\n * The following options are available to customize the pivot chart.\n * * `background`: Allows you to change the background color of the chart series in the pivot chart.\n * For example, to display the chart series with background color as red, set the property `background` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"**.\n * * `border`: Allow options to customize the border of the chart series such as color and border size in the pivot chart.\n * For example, to display the chart series border color as red, set the properties `color` to either **\"red\"** or **\"#FF0000\"** or **\"rgba(255,0,0,1.0)\"** and `width` to **0.5**.\n * * `chartArea`: Allow options to customize the chart area with a variety of settings such as background color, border, opacity and background image in the pivot chart.\n * For example, to change the of the pivot chart's background, set the property `opacity` to **0.5**.\n * * `chartSeries`: Allow options to customize the chart series with different settings such as fill color, animation of the series,\n * series width, border, visibility of the series, opacity, chart series types, marker, tooltip, trendlines, etc., in the pivot chart.\n * For example, to display the line type pivot chart, set the property `type` to **Line**.\n * * `crosshair`: Allow options to customize the crosshair line with different settings such as color and width of the line,\n * line types that are shown horizontally and vertically to indicate the value of the axis at the mouse hover or touch position in the pivot chart.\n * * `description`: Allows you to add a description of the pivot chart.\n * * `enableAnimation`: Allows you to enable/disable the tooltip animation while performing the mouse move from one point to another in the pivot chart.\n * * `enableExport`: Allows the pivot chart to be exported to either **PDF** or **PNG** or **JPEG** or **SVG** filter formats.\n * * `enableMultiAxis`: Allows you to draw the pivot chart with multiple value fields as separate chart area.\n * * `enableSideBySidePlacement`: Allows you to draw points of the column type pivot chart series as side by side.\n * * `isMultiSelect`: Allows you to perform multiple selection in the pivot chart. To enable this option, it requires the property `selectionMode` to be **Point** or **Series** or **Cluster**.\n * * `isTransposed`: Allows you to render the pivot chart in a transposed manner or not.\n * * `legendSettings`: Allow options for customizing legends with different properties such as legend visibility,\n * height, width, position, legend padding, alignment, textStyle, border, margin, background, opacity, description, tabIndex in the pivot chart.\n * * `margin`: Allow options to customize the left, right, top and bottom margins of the pivot chart.\n * * `palettes`: Allows you to draw the chart series points with custom color in the pivot chart.\n * * `primaryXAxis`: Allow options to customize the horzontal(row) axis with different properties such as labelIntersectAction, labelStyle, title,\n * description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `primaryYAxis`: Allow options to customize the vertical(value) axis with different properties such as labelIntersectAction, labelStyle,\n * title, description, crosshairTooltip, labelFormat, titleStyle, plotOffset, edgeLabelPlacement, labelPlacement, tickPosition, opposedPosition, minor and\n * major grid lines, minor and major tick lines, border, etc. in the pivot chart.\n * * `selectedDataIndexes`: Allows you to highlight a specific point of the series while rendering the pivot chart.\n * For example, to highlight first point in the first series, set the properties series to 0 and points to 1. To use this option, it requires the property `selectionMode` to be **Point** or **Series**.\n * * `selectionMode`: Allow options for customizing the selection mode to be done either by a specific series or point or cluster or by dragging it to the pivot chart.\n * For example, to highlight a specific point in a specific series of the pivot chart, set the property `selectionMode` to **Point**.\n * * `showMultiLevelLabels`: Allows you to display the multi-level label feature in the pivot chart. This multi-level labels used to perform drill operation in the pivot chart.\n * * `subTitle`: Allows you to add the subtitle to the pivot chart.\n * * `subTitleStyle`: Allow options to customize the subtitle in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tabIndex`: Allows you to highlight specific legends by clicking the mouse or by interacting with the keyboard in the pivot chart.\n * * `theme`: Allows you to draw a pivot chart with either material, fabric, bootstrap, highcontrast light, material dark, fabric dark, highcontrast, bootstrap dark, bootstrap4 theme.\n * * `title`: Allows you to add title to the pivot chart.\n * * `titleStyle`: Allow options to customize the title in the pivot chart with different properties such as fontStyle, font size, fontWeight, font color, testAlignment, fontFamily, opacity, textOverflow.\n * * `tooltip`: Allow options to customize the tooltip of the pivot chart with different properties such as visibility of the tooltip, enableMarker, fill color, opacity, header for tooltip,\n * format, textStyle, template, border, enableAnimation.\n * * `useGroupingSeparator`: Allows the group separator to be shown to the values in the pivot chart.\n * * `value`: Allows you to draw a pivot chart with a specific value field during initial loading.\n * * `zoomSettings`: Allow options to customize the pivot chart zooming with different properties such as enablePinchZooming, enableSelectionZooming,\n * enableDeferredZooming, enableMouseWheelZooming, zoom modes, toolbarItems, enableScrollbar and enablePan.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"columnHeader\", void 0);\n    __decorate([\n        Property('-')\n    ], ChartSettings.prototype, \"columnDelimiter\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultiAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableScrollOnMultiAxis\", void 0);\n    __decorate([\n        Complex(Theme.chartTitleFont, Font)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.chartSubTitleFont, Font)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex(null, PivotPieChartCenter)\n    ], ChartSettings.prototype, \"pieCenter\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"accumulationSelectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSmartLabels\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableBorderOnMouseMove\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    /* tslint:disable:no-any */\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        /* tslint:enable:no-any */\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        /* tslint:disable-next-line:max-line-length */\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        /* tslint:disable-next-line:max-line-length */\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        /* tslint:disable */\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n        /* tslint:enable */\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        /* tslint:disable */\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n        /* tslint:enable */\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            // if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n            //     query = query + ' * ' + measureQuery;\n            // }\n            /* tslint:disable:max-line-length */\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            var drillQuery = this.getAttributeDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + (this.drilledMembers.length > 0 ? '})' : '') + (!this.isPaging ? ((drillQuery !== '' ? '-' : '') + drillQuery) : '') + ')';\n        }\n        // else if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n        //     query = 'NON EMPTY (' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE({' : '') + measureQuery;\n        //     query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n        //         (this.drilledMembers.length > 0 ? '})' : '') + ') ' + this.cellSetInfo + ' ON ' + axis.toUpperCase();\n        // }\n        /* tslint:enable:max-line-length */\n        return query;\n    };\n    MDXQuery.getAttributeDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        var measurePos = axis === this.valueAxis ? this.getMeasurePos(axis) : 0;\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var result = this.getDrillLevel(dimensions, drillInfo_1);\n                    var fieldPosition = this.getDimensionPos(axis, field.name);\n                    var index = dimensions.length - (measurePos > fieldPosition ? 1 : 0);\n                    var isExist = this.isPaging ? this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), field.delimiter, drillInfo_1, axis) : false;\n                    while (result.level > 0 && result.isDrill && (fieldPosition + 1) !== measurePos && !isExist) {\n                        var levelQuery = [];\n                        var i = 0;\n                        /* tslint:disable:max-line-length */\n                        while (i < dimensions.length) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]') {\n                                if (measureQuery !== '') {\n                                    levelQuery.push('({{' + drillInfo_1[i] + '}})');\n                                }\n                            }\n                            else if (drillInfo_1[i] && (drillInfo_1[i].indexOf(dimensions[i].name) !== -1 ||\n                                (dimensions[i].isNamedSet && this.fieldList[dimensions[i].name] && drillInfo_1[i].indexOf(this.fieldList[dimensions[i].name].pid.split('Sets_')[1]) !== -1))) {\n                                levelQuery.push(this.getHierarchyQuery(drillInfo_1[i], false, false, false, result.level, true));\n                            }\n                            else if (!drillInfo_1[i] && dimensions[i]) {\n                                levelQuery.push(this.getHierarchyQuery(dimensions[i].name, ((this.isPaging && result.level === 2) || (!this.isPaging && index > i) ? true : false), dimensions[i].isNamedSet, dimensions[i].isCalculatedField, result.level, false));\n                            }\n                            else {\n                                levelQuery = [];\n                                break;\n                            }\n                            i++;\n                        }\n                        if (levelQuery.length > 0) {\n                            drillQuery.push('(' + levelQuery.join('*') + ')');\n                        }\n                        result.level--;\n                        index--;\n                    }\n                    if (drillQuery.length > 0) {\n                        query = query + (query !== '' ? '-' : '') + drillQuery.join(this.isPaging ? '+' : '-');\n                    }\n                }\n            }\n        }\n        return query;\n    };\n    MDXQuery.getDimensionPos = function (axis, field) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name === field) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getMeasurePos = function (axis) {\n        var position = 0;\n        var dimensions = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < dimensions.length; i++) {\n            if (dimensions[i].name.indexOf('[Measures]') === 0) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    MDXQuery.getDrillLevel = function (dimensions, drillInfo) {\n        var level = dimensions.length;\n        var isDrill = false;\n        var i = 0;\n        while (i < dimensions.length) {\n            if (drillInfo[i] && drillInfo[i].indexOf(dimensions[i].name) !== -1) {\n                level -= 1;\n                if (dimensions[i + 1] && !(dimensions[i + 1].isNamedSet || dimensions[i + 1].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i + 1].name] && !this.fieldList[dimensions[i + 1].name].hasAllMember))) {\n                    isDrill = true;\n                }\n            }\n            else if (dimensions[i].isNamedSet || dimensions[i].name.indexOf('[Measures]') === 0 || (this.fieldList[dimensions[i].name] && !this.fieldList[dimensions[i].name].hasAllMember)) {\n                level -= 1;\n            }\n            i++;\n        }\n        return { level: this.isPaging ? 2 : level, isDrill: isDrill };\n    };\n    MDXQuery.getHierarchyQuery = function (name, isChildren, isNamedSet, isCalculatedField, level, isDrill) {\n        name = isCalculatedField ? this.fieldList[name].tag : name;\n        return ((this.fieldList[name] && !this.fieldList[name].hasAllMember && !isNamedSet && !isCalculatedField) ? '((' + name + ').levels(0).AllMembers)' : (isNamedSet || isCalculatedField) ? ('({' + name + '})') : this.isPaging ? ('({' + name) + (isChildren ? '.CHILDREN})' : (!isDrill && level === 1) ? '.[All]})' : '})') : ('({DrilldownLevel({' + name + (isChildren ? '.CHILDREN' : '') + '},,,INCLUDE_CALC_MEMBERS' + ')})'));\n    };\n    MDXQuery.isAttributeMemberExist = function (hierarchy, item, delimiter, drillInfo, axis) {\n        item.splice(drillInfo.length - 1, 1);\n        var isAvailable = false;\n        if (item.join(delimiter) !== '' && !(this.isPaging && item.length === 1 && item.join(delimiter) === '[Measures]') && this.engine.fieldList[hierarchy] && this.engine.fieldList[hierarchy].hasAllMember) {\n            var hierarchyPosition = this.getDimensionPos(axis, hierarchy);\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (hierarchy !== this.drilledMembers[i].name) {\n                    var isHierarchy = this.engine.fieldList[this.drilledMembers[i].name] ? this.engine.fieldList[this.drilledMembers[i].name].isHierarchy : false;\n                    if (isHierarchy) {\n                        var fieldPosition = this.getDimensionPos(axis, this.drilledMembers[i].name);\n                        for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                            var result = this.getDrillLevel(axis === 'rows' ? this.rows : this.columns, this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter ? this.drilledMembers[i].delimiter : '~~'));\n                            if ((this.isPaging ? (fieldPosition < hierarchyPosition && result.isDrill) : true) && (this.drilledMembers[i].items[j].indexOf(item.join(delimiter)) === 0 || item.join(delimiter).indexOf(this.drilledMembers[i].items[j]) === 0)) {\n                                isAvailable = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isAvailable;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_2 = drilledMembers; _i < drilledMembers_2.length; _i++) {\n            var field = drilledMembers_2[_i];\n            var isHierarchy = this.engine.fieldList[field.name] ? this.engine.fieldList[field.name].isHierarchy : false;\n            if (!isHierarchy) {\n                for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                    var item = _b[_a];\n                    var drillQuery = [];\n                    var rawQuery = [];\n                    var i = 0;\n                    var drillInfo_2 = item.split(field.delimiter ? field.delimiter : '~~');\n                    var isExist = this.isAttributeMemberExist(field.name, item.split(field.delimiter ? field.delimiter : '~~'), (field.delimiter ? field.delimiter : '~~'), drillInfo_2, axis);\n                    /* tslint:disable:max-line-length */\n                    while (i < dimensions.length && !isExist) {\n                        if (drillInfo_2[i] && drillInfo_2[i].indexOf(dimensions[i].name) !== -1) {\n                            if (drillInfo_2[drillInfo_2.length - 1].indexOf(dimensions[i].name) !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '.CHILDREN})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_2[i] + '.CHILDREN)');\n                                    rawQuery.push('(' + drillInfo_2[i] + ')');\n                                }\n                            }\n                            else {\n                                if (drillInfo_2[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + measureQuery + ')');\n                                        rawQuery.push('(' + measureQuery + ')');\n                                    }\n                                }\n                                else if (drillInfo_2[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('({' + drillInfo_2[i] + '})');\n                                        rawQuery.push('({' + drillInfo_2[i] + '})');\n                                    }\n                                }\n                                else {\n                                    if (isOnDemandDrill) {\n                                        onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_2[i] + '})';\n                                    }\n                                    else {\n                                        drillQuery.push('(' + drillInfo_2[i] + ')');\n                                        rawQuery.push('(' + drillInfo_2[i] + ')');\n                                    }\n                                }\n                            }\n                        }\n                        else if (!drillInfo_2[i] && dimensions[i]) {\n                            if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                    rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                }\n                            }\n                        }\n                        else {\n                            drillQuery = [];\n                            break;\n                        }\n                        i++;\n                    }\n                    if (drillQuery.length > 0 && drillQuery.length < drillInfo_2.length) {\n                        drillQuery = [];\n                        rawQuery = [];\n                    }\n                    // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                    query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                    /* tslint:enable:max-line-length */\n                    if (rawQuery.length > 0) {\n                        rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                    }\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    /* tslint:disable */\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = query === '' ? '' : '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    /* tslint:enable */\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* tslint:disable:no-any */\n                    var filter = filters[field.name];\n                    /* tslint:enable:no-any */\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (!isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length === 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    /* tslint:disable:max-line-length */\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n            ')) on ' + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    /* tslint:enable:max-line-length */\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                /* tslint:disable-next-line:max-line-length */\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n        this.isColDrill = false;\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties) {\n        this.isEmptyData = false;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.enableValueSorting = false;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        /* tslint:disable:no-any */\n        this.locale = this.globalize.getCulture();\n        /* tslint:enable:no-any */\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.isPaging = this.pageSettings ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && this.savedFieldListData)) {\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function (direction, newPage, prevPage) {\n        MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.pivotValues = [];\n            this.valueContent = [];\n            this.headerContent = [];\n            this.colDepth = 0;\n            this.tupColumnInfo = [];\n            this.tupRowInfo = [];\n            this.colMeasures = {};\n            this.colMeasurePos = undefined;\n            this.rowMeasurePos = undefined;\n            this.rowStartPos = -1;\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var measureInfo = this.getMeasureInfo();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (customArgs.action === 'down') {\n            this.updateTupCollection(customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging) {\n                this.performColumnSorting();\n            }\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging) {\n                this.performRowSorting();\n            }\n        }\n        this.frameValues(valCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        var lastMesPos = 0;\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            var drillInfo = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            var drillEndPos = this.tupRowInfo[tupPos].drillEndPos;\n            var levelColl = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var attrDrill = this.checkAttributeDrill(this.tupRowInfo[tupPos].drillInfo, 'rows');\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (attrDrill || allStartPos > drillStartPos) : true) : true;\n                /* tslint:disable-next-line:max-line-length */\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) || this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ? (attrDrill || allStartPos > withoutAllEndPos) : true;\n                if (members.length === allCount + (measure ? 1 : 0) && measure) {\n                    var levelName = 'Grand Total.' + members[measurePos].querySelector('Caption').textContent;\n                    gTotals.push({\n                        axis: 'row',\n                        actualText: this.getUniqueName(members[measurePos].querySelector('UName').textContent),\n                        colIndex: 0,\n                        formattedText: (typeColl[measurePos] === '3' &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)] &&\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption) ?\n                            this.dataFields[this.getUniqueName(members[measurePos].querySelector('UName').textContent)].caption :\n                            members[measurePos].querySelector('Caption').textContent,\n                        hasChild: false,\n                        level: -1,\n                        rowIndex: position,\n                        index: [],\n                        ordinal: tupPos,\n                        colSpan: 1,\n                        rowSpan: 1,\n                        memberType: Number(typeColl[measurePos]),\n                        isDrilled: false,\n                        parentUniqueName: members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                            members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: members[measurePos].querySelector('LName').textContent,\n                        hierarchy: members[measurePos].getAttribute('Hierarchy'),\n                        valueSort: { levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy') }\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total.' + members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? (prevParent.isDrilled && !this.fieldList[prevParent.hierarchy].isHierarchy) : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            /* tslint:disable-next-line:no-string-literal */\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            var uniqueName = this.getUniqueName(member.querySelector('UName').textContent);\n                            var depth = this.getDepth(this.tupRowInfo[tupPos], uniqueName, Number(typeColl[memPos]));\n                            if (!(this.isPaging && pivotValues[lastMesPos][0] && this.fieldList[pivotValues[lastMesPos][0].hierarchy] && this.fieldList[pivotValues[lastMesPos][0].hierarchy].isHierarchy &&\n                                pivotValues[lastMesPos][0].hasChild && !pivotValues[lastMesPos][0].isDrilled && !this.rows[memPos].isNamedSet && (this.rows[memPos].name.indexOf('[Measures]') === 0 || (this.fieldList[member.getAttribute('Hierarchy')] && (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy || this.fieldList[member.getAttribute('Hierarchy')].hasAllMember))) &&\n                                pivotValues[lastMesPos][0].depth < depth)) {\n                                pivotValues[position] = [{\n                                        axis: 'row',\n                                        actualText: uniqueName,\n                                        colIndex: 0,\n                                        formattedText: (typeColl[memPos] === '3' && this.dataFields[uniqueName] &&\n                                            this.dataFields[uniqueName].caption) ? this.dataFields[uniqueName].caption :\n                                            member.querySelector('Caption').textContent,\n                                        hasChild: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.rows.length - 1 && !this.rows[memPos + 1].isNamedSet && this.rows[memPos + 1].name.indexOf('[Measures]') < 0 && this.fieldList[this.rows[memPos + 1].name] && this.fieldList[this.rows[memPos + 1].name].hasAllMember) ? true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                        level: lvl,\n                                        depth: depth,\n                                        rowIndex: position,\n                                        index: [],\n                                        ordinal: tupPos,\n                                        type: 'header',\n                                        colSpan: 1,\n                                        rowSpan: 1,\n                                        memberType: Number(typeColl[memPos]),\n                                        isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupRowInfo[tupPos].drillInfo, 'rows')) ? true : this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                            member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                        levelUniqueName: member.querySelector('LName').textContent,\n                                        hierarchy: member.getAttribute('Hierarchy'),\n                                        isNamedSet: isNamedSet,\n                                        valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                    }];\n                                prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                                if (!prevParent) {\n                                    rowMembers.push(member.querySelector('Caption').textContent);\n                                }\n                                var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos]);\n                                pivotValues[position][0].valueSort.levelName = levelName;\n                                pivotValues[position][0].valueSort[levelName] = 1;\n                                valueContent[position - this.rowStartPos] = {};\n                                valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                                if (measure && measurePos > memPos) {\n                                    prevUNArray[measurePos] = '';\n                                }\n                                for (var pos = memPos + 1; pos < members.length; pos++) {\n                                    prevUNArray[pos] = '';\n                                }\n                                prevUNArray[memPos] = member.querySelector('UName').textContent;\n                                lastMesPos = Number(typeColl[memPos]) !== 3 ? position : lastMesPos;\n                                position++;\n                                lastMemPos = memPos;\n                            }\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] === undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n    };\n    OlapEngine.prototype.getDepth = function (tupInfo, uniqueName, memberType) {\n        var memberPosition = tupInfo.uNameCollection.indexOf(uniqueName);\n        var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n            (memberType === 3 ? '' : uniqueName);\n        var fieldSep = cropUName.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        if (memberType === 3 && this.rowMeasurePos === fieldSep.length) {\n            fieldSep.push(uniqueName);\n        }\n        var nxtIndextCount = -1;\n        for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n            var fieldMembers = fieldSep[fPos];\n            var membersCount = fieldMembers.split('~~').length;\n            nxtIndextCount += membersCount;\n        }\n        return nxtIndextCount;\n    };\n    OlapEngine.prototype.checkAttributeDrill = function (drillInfo, axis) {\n        var isDrill = false;\n        for (var i = 0; i < drillInfo.length; i++) {\n            isDrill = this.isAttributeDrill(drillInfo[i].hierarchy, drillInfo, axis);\n            if (isDrill) {\n                break;\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            /* tslint:disable:no-any */\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.startsWith('[Measures]') ? '3' : '1';\n            }\n            var memberType = memberUName.startsWith('[Measures]') ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            /* tslint:enable:no-any */\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            /* tslint:disable-next-line:max-line-length */\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                if (!this.isPaging) {\n                    allCount++;\n                }\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = { UName: (_a = {}, _a[memberlevel] = memberUName, _a), Caption: (_b = {}, _b[memberlevel] = memberCaption, _b) };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                /* tslint:disable:no-any */\n                var uNames = Object.values(this.headerGrouping[memPos].UName).join('~~');\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = Object.values(this.headerGrouping[memPos].Caption).join('~~');\n                /* tslint:enable:no-any */\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/~~|::\\[/).map(function (item) {\n                    return item[0] === '[' ? item : ('[' + item);\n                });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple) {\n        var captionColection = tuple.captionCollection;\n        if (tuple.measure) {\n            var measureName = tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~,::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join('.');\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionColection = captionCollectionArray.join('.');\n        }\n        return captionColection;\n    };\n    /** hidden */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            /* tslint:disable-next-line:max-line-length */\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] = this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        var _this_1 = this;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        /* tslint:disable */\n        var _this = this;\n        /* tslint:enable */\n        tupPos = 0;\n        var position = 1;\n        var lastAllStartPos;\n        var lastSavedInfo = {};\n        var drillLastAllStartPos;\n        var lastAllCount;\n        var drillLastAllCount;\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        var _loop_1 = function () {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this_1.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this_1.tupColumnInfo[tupPos].allStartPos;\n            var measure = this_1.tupColumnInfo[tupPos].measure;\n            var typeColl = this_1.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this_1.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this_1.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this_1.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this_1.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this_1.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this_1.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            var depth = 0;\n            /* tslint:disable-next-line:max-line-length */\n            maxLevel.map(function (item, pos) { depth = depth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) : (item === 0 ? ((_this_1.isPaging && typeColl[pos] === '2') ? 0 : 1) : item)); });\n            this_1.colDepth = this_1.colDepth > depth ? this_1.colDepth : depth;\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            if (isStartCol) {\n                if (allCount === 0) {\n                    var levelComp = [-1, -1, -1];\n                    if (this_1.tupColumnInfo[tupPos - 1] && this_1.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this_1.levelCompare(levelColl, this_1.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this_1.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this_1.tupColumnInfo[tupPos].drillStartPos < 0) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this_1.setParentCollection(members);\n                        this_1.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this_1.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        if (!this_1.isColDrill) {\n                            position++;\n                        }\n                        else {\n                            this_1.isColDrill = false;\n                        }\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this_1.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this_1.totalCollection[this_1.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this_1.tupColumnInfo[tupPos];\n                }\n            }\n            var attrDrill = this_1.checkAttributeDrill(this_1.tupColumnInfo[tupPos].drillInfo, 'columns');\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && (attrDrill || withoutAllEndPos < allStartPos)) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    /* tslint:disable-next-line:max-line-length */\n                    var endAllow = drillEndPos !== drillStartPos ? (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    /* tslint:disable-next-line:max-line-length */\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ? (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this_1.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this_1.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this_1.totalCollection[this_1.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, allStartPos: allStartPos, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        };\n        var this_1 = this;\n        while (tupPos < tuples.length) {\n            _loop_1();\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/~~|::\\[/).map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        /* tslint:disable-next-line:max-line-length */\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                /* tslint:disable-next-line:max-line-length */\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ? this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                    maxLevel[memberPos] :\n                    (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled && this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false :\n                        this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    if (memberType !== '2') {\n                        colMembers[member.querySelector('UName').textContent] = member.querySelector('Caption').textContent;\n                    }\n                    /* tslint:disable */\n                    var levelName = Object.values(colMembers).join('.');\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    var uName = this.getUniqueName(member.querySelector('UName').textContent);\n                    var depth = this.getDepth(this.tupColumnInfo[tupPos], uName, Number(memberType));\n                    if (!(this.isPaging && this.pivotValues[spanMemPos - 1] && this.pivotValues[spanMemPos - 1][position] && this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy] && this.fieldList[this.pivotValues[spanMemPos - 1][position].hierarchy].isHierarchy &&\n                        this.pivotValues[spanMemPos - 1][position].hasChild && !this.pivotValues[spanMemPos - 1][position].isDrilled && !this.columns[memPos].isNamedSet && this.fieldList[member.getAttribute('Hierarchy')] && (this.fieldList[member.getAttribute('Hierarchy')].isHierarchy || this.fieldList[member.getAttribute('Hierarchy')].hasAllMember) &&\n                        this.pivotValues[spanMemPos - 1][position].depth < depth)) {\n                        this.pivotValues[spanMemPos][position] = {\n                            axis: 'column',\n                            actualText: uName,\n                            colIndex: position,\n                            formattedText: (memberType === '3' && this.dataFields[uName] &&\n                                this.dataFields[uName].caption) ? this.dataFields[uName].caption :\n                                member.querySelector('Caption').textContent,\n                            hasChild: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && memPos < this.columns.length - 1 && !this.columns[memPos + 1].isNamedSet && this.columns[memPos + 1].name.indexOf('[Measures]') < 0 && this.fieldList[this.columns[memPos + 1].name] && this.fieldList[this.columns[memPos + 1].name].hasAllMember) ? true : Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                            level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) - ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                            rowIndex: spanMemPos,\n                            ordinal: tupPos,\n                            memberType: Number(memberType),\n                            depth: depth,\n                            isDrilled: (this.fieldList[member.getAttribute('Hierarchy')] && this.fieldList[member.getAttribute('Hierarchy')].isHierarchy && !this.isAttributeDrill(member.getAttribute('Hierarchy'), this.tupColumnInfo[tupPos].drillInfo, 'columns')) ? true : (isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled),\n                            parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                            levelUniqueName: member.querySelector('LName').textContent,\n                            hierarchy: member.getAttribute('Hierarchy'),\n                            isNamedSet: isNamedSet,\n                            valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                            /* tslint:enable */\n                        };\n                        if (!this.headerContent[spanMemPos]) {\n                            this.headerContent[spanMemPos] = {};\n                        }\n                        this.headerContent[spanMemPos][position] = this.pivotValues[spanMemPos][position];\n                        spanMemPos++;\n                    }\n                    else {\n                        this.isColDrill = true;\n                        break;\n                    }\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 && this.getMeasurePosition(this.tupColumnInfo[tupPos].uNameCollection, this.tupColumnInfo[tupPos].measurePosition) !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n            }\n        }\n    };\n    OlapEngine.prototype.isAttributeDrill = function (hierarchy, drillInfo, axis) {\n        var isDrill = false;\n        var isAdjacent = this.isAdjacentToMeasure(hierarchy, axis);\n        if (!isAdjacent) {\n            for (var i = 0; i < this.drilledMembers.length; i++) {\n                if (this.drilledMembers[i].name === hierarchy) {\n                    for (var j = 0; j < this.drilledMembers[i].items.length; j++) {\n                        var drillItems = this.drilledMembers[i].items[j].split(this.drilledMembers[i].delimiter);\n                        var levelName = '';\n                        for (var k = 0; k < drillItems.length; k++) {\n                            if (drillInfo[k] && drillInfo[k].uName) {\n                                levelName = levelName + (levelName === '' ? '' : this.drilledMembers[i].delimiter) + drillInfo[k].uName;\n                            }\n                        }\n                        if (levelName === this.drilledMembers[i].items[j]) {\n                            isDrill = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return isDrill;\n    };\n    OlapEngine.prototype.isAdjacentToMeasure = function (hierarchy, axis) {\n        var isAdjacent = false;\n        var fields = axis === 'rows' ? this.rows : this.columns;\n        for (var i = 0; i < fields.length; i++) {\n            if (fields[i].name === hierarchy && fields[i + 1] && (fields[i + 1].name === '[Measures]' || fields[i + 1].isNamedSet || (this.fieldList[fields[i + 1].name] && !this.fieldList[fields[i + 1].name].hasAllMember))) {\n                isAdjacent = true;\n                break;\n            }\n        }\n        return isAdjacent;\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.performRowSorting = function () {\n        var _a;\n        if (this.enableSort && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? (currentTuple.measurePosition === 0 && currentCell.memberType === 3 ?\n                    currentTuple.measureName : currentTuple.uNameCollection) : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/~~|::\\[/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            /* tslint:disable:typedef */\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            /* tslint:enable:typedef */\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]]);\n                }\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = (tupInfo.measurePosition === 0 && axisSets[aPos].memberType === 3) ?\n                                tupInfo.measureName : tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                    var isLastMeasure = uName.lastIndexOf('::[') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::[').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                /* tslint:disable:no-string-literal */\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                /* tslint:enable:no-string-literal */\n                var currPos = gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[newPos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    OlapEngine.prototype.performColumnSorting = function () {\n        if (this.enableSort) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var key = void 0;\n                    var keys = void 0;\n                    var arrange = {};\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    for (k = k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType != 2 && header[k].hierarchy\n                                != '[Measures]' && header[k].level != -1) {\n                                if (isNullOrUndefined(arrange[header[k].formattedText]) || isNullOrUndefined(this.pivotValues[j - 1])) {\n                                    arrange[header[k].formattedText] = arrange[header[k].formattedText] ? arrange[header[k].formattedText] : [];\n                                    arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                }\n                                else if (arrange[header[k].formattedText] && this.pivotValues[j - 1]) {\n                                    var prevRowCell = this.pivotValues[j - 1][header[k].colIndex];\n                                    var prevColIndex = Object.values(arrange[header[k].formattedText])[0].colIndex;\n                                    var prevColRowCell = this.pivotValues[j - 1][prevColIndex];\n                                    if (prevRowCell.formattedText !== prevColRowCell.formattedText) {\n                                        var key_1 = Object.keys(arrange);\n                                        key_1 = this.sortColumnHeaders(key_1, this.sortObject[header[k - 1].levelUniqueName] ||\n                                            this.sortObject[header[k].hierarchy]);\n                                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                        for (var keyPos = 0; keyPos < key_1.length; keyPos++) {\n                                            var length_1 = Object.keys(arrange[key_1[keyPos]]).length;\n                                            for (var cellPos = 0; cellPos < length_1; cellPos++) {\n                                                value = temporary[index].length === 0 ? 1 : 0;\n                                                temporary[index][temporary[index].length + value] =\n                                                    arrange[key_1[keyPos]][Number(Object.keys(arrange[key_1[keyPos]])[cellPos])];\n                                            }\n                                        }\n                                        arrange = {};\n                                        arrange[header[k].formattedText] = [];\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                    else {\n                                        arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                                    }\n                                }\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                                key = Object.keys(arrange);\n                                key = this.sortColumnHeaders(key, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy]);\n                                isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                for (var l = 0; l < key.length; l++) {\n                                    var length_2 = Object.keys(arrange[key[l]]).length;\n                                    for (var q = 0; q < length_2; q++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[key[l]][Number(Object.keys(arrange[key[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy != '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                            }\n                            if (header[k].level != -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy != '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length === 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value] =\n                                            arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value] = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length === 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        keys = Object.keys(arrange);\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        key = this.sortColumnHeaders(keys, order);\n                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length === 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] =\n                                    arrange[key[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    != pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] = pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::[').length <= this.getMeasurePosition(uniqueName, currentTuple.measurePosition);\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.getMeasurePosition = function (uniqueName, measurePosition) {\n        var position = measurePosition;\n        var collection = uniqueName.split('::[');\n        for (var i = 0; i < collection.length; i++) {\n            if (collection[i] && collection[i].indexOf('Measures') > -1) {\n                position = i;\n                break;\n            }\n        }\n        return position;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers) {\n        if (headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var order = (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]);\n            if (order === 'Ascending' || order === undefined) {\n                headers === headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                    ((b.formattedText > a.formattedText) ? -1 : 0); });\n            }\n            else if (order === 'Descending') {\n                headers === headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                    ((b.formattedText < a.formattedText) ? -1 : 0); });\n            }\n            else {\n                headers;\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (keys, order) {\n        if (order === 'Ascending' || order === undefined) {\n            keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n        }\n        else if (order === 'Descending') {\n            keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n        }\n        return keys;\n    };\n    /* tslint:enable */\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (this.getMeasurePosition(uniqueNameColl, tuple.measurePosition) >= (uniqueNameColl.split('::[').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::[') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::[');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                /* tslint:disable-next-line:max-line-length */\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ? this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (tupColInfo.measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        currCell.type = 'sum';\n                        /* tslint:disable-next-line:max-line-length */\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort.levelName = currCell.valueSort.levelName;\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        var levelName = 'Grand Total';\n                        if (nextRowCell && colMeasureCount > 0) {\n                            levelName = nextRowCell.memberType === 3 ? ('Grand Total.' + nextRowCell.formattedText) :\n                                nextRowCell.valueSort.levelName;\n                        }\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        currCell.valueSort.levelName = levelName;\n                        currCell.valueSort[levelName.toString()] = 1;\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort.levelName = currCell.valueSort.levelName;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 && nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] && this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true)) ? 1 : (spanCollection[rowPos + 1][colPos] + 1);\n                            /* tslint:disable-next-line:max-line-length */\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true) && nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && ((this.fieldList[currCell.hierarchy] && this.fieldList[currCell.hierarchy].isHierarchy) ? currCell.hasChild : true) && currCell.level === -1 && nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        /* tslint:disable-next-line:max-line-length */\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !(nextRowCell.isDrilled && ((this.fieldList[nextRowCell.hierarchy] && this.fieldList[nextRowCell.hierarchy].isHierarchy) ? nextRowCell.hasChild : true))) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ? spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ? spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.frameValues = function (tuples, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        var valCollection = {};\n        for (var colPos = 0; colPos < tuples.length; colPos++) {\n            valCollection[Number(tuples[colPos].getAttribute('CellOrdinal'))] = tuples[colPos];\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                if (this.pivotValues[this.colDepth - 1][colPos]) {\n                    var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                    var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                    var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                        ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                            this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                            columns[0].actualText);\n                    if (columns[0].type === 'header') {\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: this.getUniqueName(measure),\n                            formattedText: '',\n                            value: 0,\n                            colIndex: colPos,\n                            rowIndex: rowPos\n                        };\n                    }\n                    else {\n                        var valElement = void 0;\n                        var formattedText = void 0;\n                        var value = '0';\n                        var measureName = this.getUniqueName(measure);\n                        var showTotals = true;\n                        if (this.tupRowInfo[rowOrdinal]) {\n                            showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                        }\n                        else {\n                            showTotals = this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals;\n                        }\n                        valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                        formattedText = !showTotals ? '' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                                valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                        value = !showTotals ? '0' :\n                            ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                                valElement.querySelector('Value').textContent : null);\n                        formattedText = showTotals && !isNullOrUndefined(value) ?\n                            this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) :\n                            formattedText;\n                        var isSum = (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                            this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                            (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                                this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                        /* tslint:disable */\n                        var isGrand = (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].measurePosition === 0 ? this.tupRowInfo[rowOrdinal].allStartPos === 1 : this.tupRowInfo[rowOrdinal].allStartPos === 0) : false) ||\n                            (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].measurePosition === 0 ? this.tupColumnInfo[colOrdinal].allStartPos === 1 : this.tupColumnInfo[colOrdinal].allStartPos === 0) : false);\n                        /* tslint:enable */\n                        columns[colPos] = {\n                            axis: 'value',\n                            actualText: measureName,\n                            formattedText: formattedText,\n                            colOrdinal: colOrdinal,\n                            rowOrdinal: rowOrdinal,\n                            columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                            rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                            value: !isNullOrUndefined(value) ? Number(value) : null,\n                            colIndex: colPos,\n                            rowIndex: rowPos,\n                            isSum: isSum,\n                            isGrandSum: isGrand\n                        };\n                    }\n                    this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n                }\n            }\n        }\n    };\n    /** hidden */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                if ((formatObj.format) && !(this.formatRegex.test(formatObj.format))) {\n                    var pattern = formatObj.format.match(this.customRegex);\n                    var integerPart = pattern[6];\n                    formatObj.useGrouping = integerPart.indexOf(',') !== -1;\n                }\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 1) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = vTuples.length; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    vOrdinalIndex[vOrdinalIndex.length] = Number(vTuples[j].getAttribute('CellOrdinal'));\n                }\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[index] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[orderedVTuples.length] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            /* tslint:disable-next-line:max-line-length */\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) || tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::[').map(function (item) {\n            return item[0] === '[' ? item : ('[' + item);\n        });\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if (memberArray[memPos]) {\n                if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                    var splitLevels = memberArray[memPos].split('~~');\n                    var drillLevel = splitLevels.indexOf(memberName);\n                    var cropLevels = [];\n                    for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                        cropLevels.push(splitLevels[lPos]);\n                    }\n                    joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n                }\n                else {\n                    joinArray[joinArray.length] = memberArray[memPos];\n                }\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::[')[fieldPos];\n                    drillField = drillField[0] === '[' ? drillField : ('[' + drillField);\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            });\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                if (field) {\n                    var members = field.split('~~');\n                    set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n                }\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n        this.getAxisFields();\n        this.frameSortObject();\n        this.updateFieldlist();\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ? this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldList[fieldName].allowDragAndDrop = true;\n                this.savedFieldList[fieldName].showFilterIcon = true;\n                this.savedFieldList[fieldName].showSortIcon = true;\n                this.savedFieldList[fieldName].showEditIcon = true;\n                this.savedFieldList[fieldName].showRemoveIcon = true;\n                this.savedFieldList[fieldName].showValueTypeIcon = true;\n                this.savedFieldListData[i].sort = sortOrder;\n                this.savedFieldListData[i].allowDragAndDrop = true;\n                this.savedFieldListData[i].showFilterIcon = true;\n                this.savedFieldListData[i].showSortIcon = true;\n                this.savedFieldListData[i].showEditIcon = true;\n                this.savedFieldListData[i].showRemoveIcon = true;\n                this.savedFieldListData[i].showValueTypeIcon = true;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            /* tslint:disable:max-line-length */\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] && this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldList[fieldName].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldList[fieldName].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldList[fieldName].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldList[fieldName].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldList[fieldName].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldList[fieldName].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n                this.savedFieldListData[i].isSelected = true;\n                this.savedFieldListData[i].allowDragAndDrop = (this.dataFields[fieldName] ? this.dataFields[fieldName].allowDragAndDrop : true);\n                this.savedFieldListData[i].showFilterIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showFilterIcon : true);\n                this.savedFieldListData[i].showSortIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showSortIcon : true);\n                this.savedFieldListData[i].showEditIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showEditIcon : true);\n                this.savedFieldListData[i].showRemoveIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showRemoveIcon : true);\n                this.savedFieldListData[i].showValueTypeIcon = (this.dataFields[fieldName] ? this.dataFields[fieldName].showValueTypeIcon : true);\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] && this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            /* tslint:enable:max-line-length */\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if (!isAvail || (fieldName.toLowerCase() === '[calculated members].[_0]' &&\n                    this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES'\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><Header/><Body><Discover xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    /* tslint:enable:max-line-length */\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = {\n                name: '[Measures]', caption: 'Measures', showRemoveIcon: true, allowDragAndDrop: true\n            };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName]) {\n        //     return this.dataFields[fieldName].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this), \n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::[').map(function (item) {\n                return item[0] === '[' ? item : ('[' + item);\n            }) : [];\n        var filters;\n        var filteritems = [];\n        var filterQuery = '';\n        for (var i = 0; i < this.filters.length; i++) {\n            filters = this.filterMembers[this.filters[i].name];\n            if (filters) {\n                for (var j = 0; j < filters.length; j++) {\n                    filterQuery = filterQuery + filters[j];\n                    filterQuery = j < filters.length - 1 ? filterQuery + ',' : filterQuery + '';\n                }\n                filteritems[i] = filterQuery;\n                filterQuery = '';\n            }\n        }\n        for (var i = 0; i < filteritems.length; i++) {\n            filterQuery = filterQuery === '' ? '{' + filteritems[i] + '}' : (filterQuery + ',' + '{' + filteritems[i] + '}');\n        }\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from ' +\n            (filterQuery === '' ? '[' + this.dataSourceSettings.cube + ']' : '(SELECT (' + filterQuery + ') ON COLUMNS FROM [' +\n                this.dataSourceSettings.cube + '])');\n        drillQuery = drillQuery.replace(/&/g, '&amp;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    /* tslint:disable:max-line-length */\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/\\&/g, '&amp;');\n        if (!isAllFilterData) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n    };\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/\\&/g, '&amp;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchSearchMembers' });\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var nodeAttr = { 'data-fieldName': fieldName };\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    var nodeSelect = (customArgs.loadLevelMembers ? this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            hierarchyElements.push({\n                pid: field.querySelector('DIMENSION_UNIQUE_NAME').textContent,\n                id: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS'\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        allowDragAndDrop: (this.dataFields[field.name] ? this.dataFields[field.name].allowDragAndDrop : true),\n                        showFilterIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showFilterIcon : true),\n                        showSortIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showSortIcon : true),\n                        showEditIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showEditIcon : true),\n                        showRemoveIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showRemoveIcon : true),\n                        showValueTypeIcon: (this.dataFields[field.name] ? this.dataFields[field.name].showValueTypeIcon : true),\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName)\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: (this.isMondrian ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS'\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_4 = fields; _a < fields_4.length; _a++) {\n            var field = fields_4[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    /* tslint:disable-next-line:max-line-length */\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                /* tslint:disable-next-line:max-line-length */\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false,\n                allowDragAndDrop: (this.dataFields[id] ? this.dataFields[id].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[id] ? this.dataFields[id].showFilterIcon : true),\n                showSortIcon: (this.dataFields[id] ? this.dataFields[id].showSortIcon : true),\n                showEditIcon: (this.dataFields[id] ? this.dataFields[id].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[id] ? this.dataFields[id].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[id] ? this.dataFields[id].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[\\[\\]\\&']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0 && (dimensionName !== hierarchyName || this.isMondrian)) {\n                var parentID = dimensionName + (this.isMondrian ? '~#^Dim' : '');\n                if (hierarchyFolderName !== '') {\n                    var folderName = dimensionName + (this.isMondrian ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                    var curParentElement = [];\n                    for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                        var item = dimensionElements_2[_c];\n                        if (item.tag === folderName && item.pid === parentID) {\n                            curParentElement.push(item);\n                        }\n                    }\n                    if (curParentElement.length === 0) {\n                        var fieldObj_1 = {\n                            hasChildren: true,\n                            isSelected: false,\n                            pid: dimensionName + (this.isMondrian ? '~#^Dim' : ''),\n                            id: folderName,\n                            name: hierarchyFolderName,\n                            spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                            tag: folderName,\n                            caption: hierarchyFolderName,\n                            // aggregateType: this.getAggregateType(hierarchyFolderName),\n                            type: 'string'\n                        };\n                        dimensionElements.push(fieldObj_1);\n                    }\n                    parentID = folderName;\n                }\n                var fieldObj = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                    // hasChildren: true,\n                    isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                    pid: parentID,\n                    id: hierarchyName,\n                    name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                    hasAllMember: isAllMemberAvail,\n                    allMember: allMember,\n                    tag: hierarchyName,\n                    caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    // aggregateType: this.getAggregateType(hierarchyName),\n                    type: 'string',\n                    filter: [],\n                    dateMember: [],\n                    sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                    actualFilter: [],\n                    filterMembers: [],\n                    childMembers: [],\n                    searchMembers: [],\n                    members: {},\n                    currrentMembers: {},\n                    levels: [],\n                    levelCount: 1,\n                    /* tslint:disable-next-line:max-line-length */\n                    isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                    isExcelFilter: false,\n                    allowDragAndDrop: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].allowDragAndDrop : true),\n                    showFilterIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showFilterIcon : true),\n                    showSortIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showSortIcon : true),\n                    showEditIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showEditIcon : true),\n                    showRemoveIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showRemoveIcon : true),\n                    showValueTypeIcon: (this.dataFields[hierarchyName] ? this.dataFields[hierarchyName].showValueTypeIcon : true)\n                };\n                dimensionElements.push(fieldObj);\n                this.fieldList[hierarchyName] = fieldObj;\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS'\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_6 = fields; _i < fields_6.length; _i++) {\n            var field = fields_6[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES'\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS'\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_7 = fields; _a < fields_7.length; _a++) {\n            var field = fields_7[_a];\n            /* tslint:disable-next-line:max-line-length */\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString,\n                allowDragAndDrop: (this.dataFields[measureName] ? this.dataFields[measureName].allowDragAndDrop : true),\n                showFilterIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showFilterIcon : true),\n                showSortIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showSortIcon : true),\n                showEditIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showEditIcon : true),\n                showRemoveIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showRemoveIcon : true),\n                showValueTypeIcon: (this.dataFields[measureName] ? this.dataFields[measureName].showValueTypeIcon : true)\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc, request, customArgs) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            beforeSend: this.beforeSend.bind(this),\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                return e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.beforeSend = function (args) {\n        if (this.dataSourceSettings.authentication.userName && this.dataSourceSettings.authentication.password) {\n            /* tslint:disable */\n            args.httpRequest.setRequestHeader(\"Authorization\", \"Basic \" + btoa(this.dataSourceSettings.authentication.userName + \":\" +\n                this.dataSourceSettings.authentication.password));\n            /* tslint:enable */\n        }\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        /* tslint:disable:max-line-length */\n        if (this.isMondrian) {\n            sourceInfo = '';\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" SOAP-ENV:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><SOAP-ENV:Body><Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            xmlMsg = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> <Header></Header> <Body> <Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        /* tslint:enable:max-line-length */\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: !isNullOrUndefined(locale) ? locale.toString() : '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue, closest } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { Common } from '../../common/actions/common';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/* tslint:disable */\n/**\n * Allows a set of options for customizing the grouping bar UI with a variety of settings such as UI visibility to a specific view port,\n * customizing the pivot button features such as filtering, sorting, changing aggregate types, removing any fields.\n * The options available to customize the grouping bar UI are:\n * * `showFilterIcon`: Allows you to show or hide the filter icon that used to be displayed on the pivot button of the grouping bar UI.\n * This filter icon is used to filter the members of a particular field at runtime in the pivot table.\n * * `showSortIcon`: Allows you to show or hide the sort icon that used to be displayed in the pivot button of the grouping bar UI.\n * This sort icon is used to order members of a particular fields either in ascending or descending at runtime.\n * * `showRemoveIcon`: Allows you to show or hide the remove icon that used to be displayed in the pivot button of the grouping bar UI.\n * This remove icon is used to remove any field during runtime.\n * * `showValueTypeIcon`: Allows you to show or hide the value type icon that used to be displayed in the pivot button of the grouping bar UI.\n * This value type icon helps to select the appropriate aggregation type to value fields at runtime.\n * * `displayMode`: Allow options to show the grouping bar UI to specific view port such as either pivot table or pivot chart or both table and chart.\n * For example, to show the grouping bar UI to pivot table on its own, set the property `displayMode` to **Table**.\n * * `allowDragAndDrop`: Allows you to restrict the pivot buttons that were used to drag on runtime in the grouping bar UI. This will prevent you from modifying the current report.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Allow options for performing CRUD operations, such as add, edit, delete, and update the raw items of any cell from the pivot table.\n * The raw items can be viewed in a data grid that used to be displayed as a dialog by double-clicking the appropriate value cell in the pivot table.\n * CRUD operations can be performed in this data grid either by double-clicking the cells or using toolbar options.\n * The options available are as follows:\n * * `allowAdding`: Allows you to add a new record to the data grid used to update the appropriate cells in the pivot table.\n * * `allowEditing`: Allows you to edit the existing record in the data grid that used to update the appropriate cells in the pivot table.\n * * `allowDeleting`: Allows you to delete the existing record from the data grid that used to  update the appropriate cells in the pivot table.\n * * `allowCommandColumns`: Allows an additional column appended in the data grid layout holds the command buttons to perform the CRUD operations to edit,\n * delete, and update the raw items to the data grid that used to update the appropriate cells in the pivot table.\n * * `mode`: Allow options for performing CRUD operations with different modes in the data grid that used to update the appropriate cells in the pivot table.\n * The available modes are normal, batch and dialog. **Normal** mode is enabled for CRUD operations in the data grid by default.\n * * `allowEditOnDblClick`: Allows you to restrict CRUD operations by double-clicking the appropriate value cell in the pivot table.\n * * `showConfirmDialog`: Allows you to show the confirmation dialog to save and discard CRUD operations performed in the data grid that used to update the appropriate cells in the pivot table.\n * * `showDeleteConfirmDialog`: Allows you to show the confirmation dialog to delete any records from the data grid.\n *\n * > This feature is applicable only for the relational data source.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowInlineEditing\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Allow options for setting the visibility of hyperlink based on specific condition. The options available here are as follows:\n * * `measure`: Allows you to specify the value field caption to get visibility of hyperlink option for specific measure.\n * * `condition`: Allows you to choose the operator type such as equals, greater than, less than, etc.\n * * `value1`: Allows you to set the start value.\n * * `value2`: Allows you to set the end value. This option will be used by default when the operator **Between** and **NotBetween** is chosen to apply.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * Allow a set of options to display a hyperlink to link data for individual cells that are shown in the pivot table.\n * These options allow you to enable a separate hyperlink for row headers, column headers, value cells, and summary cells in the `hyperlinkSettings` class.\n * The options available are:\n * * `showHyperlink`: Allows you to set the visibility of hyperlink in all cells.\n * * `showRowHeaderHyperlink`: Allows you to set the visibility of hyperlink in row headers.\n * * `showColumnHeaderHyperlink`: Allows you to set the visibility of hyperlink in column headers.\n * * `showValueCellHyperlink`: Allows you to set the visibility of hyperlink in value cells.\n * * `showSummaryCellHyperlink`: Allows you to set the visibility of hyperlink in summary cells.\n * * `headerText`: Allows you to set the visibility of hyperlink based on header text.\n * * `conditionalSettings`: Allows you to set the visibility of hyperlink based on specific condition.\n * * `cssClass`: Allows you to add CSS class name to the hyperlink options.\n *\n * > By default, the hyperlink options are disabled for all cells in the pivot table.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * Allow options to configure the view port as either pivot table or pivot chart or both table and chart. The options available are:\n * * `view`: Allows you to choose the view port as either pivot table or pivot chart or both table and chart.\n * * `primary`: Allows you to set the primary view to be either pivot table or pivot chart. To use this option, it requires the property `view` to be **Both**.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/* tslint:enable */\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options?\n     * @param  {string|HTMLElement} element?\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 8000000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.cellSelectionPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.remoteData = [];\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        /** @hidden */\n        _this_1.isInitialRendering = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.request = new XMLHttpRequest();\n        /** @hidden */\n        _this_1.isServerWaitingPopup = false;\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({ args: [this], member: 'groupingbar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalformatting' });\n        }\n        if (this.allowNumberFormatting) {\n            modules.push({ args: [this], member: 'numberformatting' });\n        }\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        if (this.showToolbar && (this.toolbar.length > 0 || this.toolbarTemplate)) {\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            modules.push({ args: [this], member: 'fieldlist' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.isAdaptive = Browser.isDevice;\n        if (Browser.isIE || Browser.info.name === 'edge') {\n            this.scrollerBrowserLimit = 1500000;\n        }\n        else if (Browser.info.name === 'chrome') {\n            this.scrollerBrowserLimit = 15000000;\n        }\n        this.isTouchMode = closest(this.element, 'e-bigger') ? true : false;\n        this.initProperties();\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.commonModule = new Common(this);\n        }\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            /* tslint:enable */\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'Apply',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            summarizeValuesBy: 'Summarize values by',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure you want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            pie: 'Pie',\n            funnel: 'Funnel',\n            doughnut: 'Doughnut',\n            pyramid: 'Pyramid',\n            stackingcolumn: 'Stacked Column',\n            stackingarea: 'Stacked Area',\n            stackingbar: 'Stacked Bar',\n            stepline: 'Step Line',\n            steparea: 'Step Area',\n            splinearea: 'Spline Area',\n            spline: 'Spline',\n            stackingcolumn100: '100% Stacked Column',\n            stackingbar100: '100% Stacked Bar',\n            stackingarea100: '100% Stacked Area',\n            bubble: 'Bubble',\n            pareto: 'Pareto',\n            radar: 'Radar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Do you want to save the changes to this report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Sample Report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups',\n            multipleAxes: 'Multiple Axes',\n            showLegend: 'Show Legend',\n            exit: 'Exit',\n            chartTypeSettings: 'Chart Type Settings',\n            ChartType: 'Chart Type',\n            yes: 'Yes',\n            no: 'No',\n            numberFormatMenu: 'Number Formatting...',\n            conditionalFormatingMenu: 'Conditional Formatting...',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            replaceConfirmBefore: 'A report named ',\n            replaceConfirmAfter: ' already exists. Do you want to replace it?',\n            invalidJSON: 'Invalid JSON data',\n            invalidCSV: 'Invalid CSV data'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            if (this.tooltipTemplate) {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    cssClass: 'e-pivottooltiptemplate',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen,\n                });\n            }\n            else {\n                this.tooltip = new Tooltip({\n                    target: 'td.e-valuescontent',\n                    showTipPointer: false,\n                    position: 'BottomRight',\n                    mouseTrail: true,\n                    enableRtl: this.enableRtl,\n                    beforeRender: this.setToolTip.bind(this),\n                    beforeOpen: this.onBeforeTooltipOpen\n                });\n            }\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1 && this.dataType === 'pivot') {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum') }\n                            ];\n                            var aggregateGroup = this.buildDefaultItems('Aggregate');\n                            aggregateGroup.items = aggregateItems;\n                            aggItems.push(aggregateGroup);\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                groupItems.push(this.buildDefaultItems('Group'));\n                groupItems.push(this.buildDefaultItems('Ungroup'));\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot.e-rowsheader',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.isScrolling = false;\n        this.allowServerDataBinding = false;\n        this.setProperties({ pivotValues: [] }, true);\n        /* tslint:disable-next-line:no-any */\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.multiLevelLabelClick = this.chartSettings.multiLevelLabelClick ? this.chartSettings.multiLevelLabelClick : undefined;\n        this.chartPointClick = this.chartSettings.pointClick ? this.chartSettings.pointClick : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            if (this.isTouchMode) {\n                this.setProperties({ gridSettings: { rowHeight: 36 } }, true);\n            }\n            else {\n                this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 36 : 30 } }, true);\n            }\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        this.loadData();\n    };\n    PivotView.prototype.loadData = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.initialLoad();\n                if (this.displayOption.view !== 'Chart') {\n                    this.renderEmptyGrid();\n                }\n                this.showWaitingPopup();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            this.isServerWaitingPopup = true;\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    if (this.showGroupingBar) {\n                        this.pivotButtonModule.updateFilterEvents();\n                    }\n                    else {\n                        this.pivotFieldListModule.pivotButtonModule.updateFilterEvents();\n                    }\n                }\n                else if (this.currentAction === 'fetchRawData') {\n                    var valueCaption = this.engineModule.fieldList[this.drillThroughValue.actualText.toString()] ?\n                        this.engineModule.fieldList[this.drillThroughValue.actualText.toString()].caption : this.drillThroughValue.actualText.toString();\n                    var aggType = this.engineModule.fieldList[this.drillThroughValue.actualText] ? this.engineModule.fieldList[this.drillThroughValue.actualText].aggregateType : '';\n                    var rawData = JSON.parse(engine.rawData);\n                    var parsedObj = JSON.parse(engine.indexObject);\n                    var indexObject = {};\n                    for (var len = 0; len < parsedObj.length; len++) {\n                        indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                    }\n                    this.drillThroughValue.indexObject = indexObject;\n                    this.drillThroughModule.triggerDialog(valueCaption, aggType, rawData, this.drillThroughValue, this.drillThroughElement);\n                }\n                else {\n                    var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    if (this.engineModule.fieldList) {\n                        var keys = Object.keys(this.engineModule.fieldList);\n                        for (var i = 0; i < keys.length; i++) {\n                            if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                            }\n                        }\n                    }\n                    this.engineModule.fieldList = fList;\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pageSettings;\n                    if (this.dataSourceSettings.groupSettings.length > 0) {\n                        PivotUtil.updateReport(this, JSON.parse(engine.dataSourceSettings));\n                    }\n                    var valueSort = JSON.parse(engine.dataSourceSettings).ValueSortSettings;\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers' && this.currentAction !== 'fetchRawData') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotFieldListModule && this.pivotFieldListModule.calculatedFieldModule && this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotFieldListModule.calculatedFieldModule.endDialog();\n                    this.pivotFieldListModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n            if (this.currentAction === 'onScroll') {\n                if (this.scrollDirection === 'vertical') {\n                    var rowValues = this.dataSourceSettings.valueAxis === 'row' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.rowSize * rowValues * this.gridSettings.rowHeight);\n                    var exactPage = Math.ceil(this.engineModule.rowStartPos / (this.pageSettings.rowSize * rowValues));\n                    var pos = exactSize * exactPage - (this.engineModule.rowFirstLvl * rowValues * this.gridSettings.rowHeight);\n                    this.scrollPosObject.verticalSection = pos;\n                }\n                else if (this.scrollDirection === 'horizondal') {\n                    var colValues = this.dataSourceSettings.valueAxis === 'column' ? this.dataSourceSettings.values.length : 1;\n                    var exactSize = (this.pageSettings.columnSize * colValues * this.gridSettings.columnWidth);\n                    var exactPage = Math.ceil(this.engineModule.colStartPos / (this.pageSettings.columnSize * colValues));\n                    var pos = exactSize * exactPage - (this.engineModule.colFirstLvl * colValues * this.gridSettings.columnWidth);\n                    this.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        this.isServerWaitingPopup = false;\n        var customProperties = {\n            pageSettings: this.pageSettings,\n            enableValueSorting: this.enableValueSorting,\n            enableDrillThrough: (this.allowDrillThrough || this.editSettings.allowEditing),\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotView.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotView.prototype.initialLoad = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        this.tooltipTemplateFn = this.templateParser(this.tooltipTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            /* tslint:disable-next-line:max-line-length */\n            dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n                PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            }\n            else {\n                _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            }\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            if (_this_1.dataSourceSettings.mode !== 'Server') {\n                _this_1.notify(events.initialLoad, {});\n            }\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string}\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* tslint:disable */\n        this.chartSettings['tooltipRender'] = undefined;\n        /* tslint:enable */\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* tslint:disable */\n        if (isBlazor()) {\n            pivotData = typeof persistData === \"string\" ? JSON.parse(persistData) : persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.allowServerDataBinding = false;\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        delete this.bulkChanges.pivotValues;\n        this.allowServerDataBinding = true;\n        /* tslint:enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        if (newProp.dataSourceSettings.dataSource.length === 0) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                            this.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.pivotValues = [];\n                        }\n                        this.engineModule.fieldList = null;\n                        this.showWaitingPopup();\n                        clearTimeout(this.timeOutObj);\n                        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n                    }\n                    else {\n                        if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.axisFieldModule.render();\n                            }\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                this.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                this.pivotFieldListModule.axisFieldModule.render();\n                                if (this.pivotFieldListModule.treeViewModule.fieldTable && !this.isAdaptive) {\n                                    this.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        else {\n                            this.remoteData = [];\n                            if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '' &&\n                                ('type' in newProp.dataSourceSettings || 'url' in newProp.dataSourceSettings)) {\n                                this.engineModule.fieldList = null;\n                                this.loadData();\n                            }\n                            else {\n                                if (newProp.dataSourceSettings && 'dataSource' in newProp.dataSourceSettings) {\n                                    this.engineModule.fieldList = null;\n                                }\n                                this.notify(events.initialLoad, {});\n                            }\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    else if (this.showToolbar && !isNullOrUndefined(newProp.displayOption) && newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                    }\n                    var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(engine.fieldList) || !isNullOrUndefined(engine.pivotValues)) {\n                        this.notify(events.dataReady, {});\n                    }\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        /* tslint:disable-next-line:max-line-length */\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    if (this.showGroupingBar &&\n                        this.groupingBarModule &&\n                        (Object.keys(newProp.chartSettings).indexOf('enableMultiAxis') !== -1 ||\n                            (newProp.chartSettings.chartSeries && Object.keys(newProp.chartSettings.chartSeries).indexOf('type') !== -1))) {\n                        this.groupingBarModule.renderLayout();\n                    }\n                    if (isNullOrUndefined(this.chartModule) && this.displayOption.view !== 'Table') {\n                        this.chartModule = new PivotChart();\n                    }\n                    var engineModule = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n                    if (!isNullOrUndefined(this.chartModule) && !isNullOrUndefined(engineModule.pivotValues)) {\n                        this.chartModule.loadChart(this, this.chartSettings);\n                    }\n                    if (!isNullOrUndefined(engineModule.pivotValues) && !isNullOrUndefined(engineModule.fieldList)) {\n                        this.notify(events.uiUpdate, this);\n                    }\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.dataSourceSettings.groupSettings && this.dataSourceSettings.groupSettings.length > 0 && this.clonedDataSet && !isBlazor()) {\n                        var dataSet = PivotUtil.getClonedData(this.clonedDataSet);\n                        this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                    if (isBlazor()) {\n                        this.refresh();\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    if (isNullOrUndefined(newProp.showFieldList))\n                        this.renderPivotGrid();\n                    break;\n                case 'showFieldList':\n                    this.initialLoad();\n                    break;\n                case 'groupingBarSettings':\n                    this.axisFieldModule.render();\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n                case 'chartTypes':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.createChartMenu();\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.showGroupingBar) {\n                        if (this.axisFieldModule) {\n                            this.axisFieldModule.render();\n                        }\n                    }\n                    if (this.showFieldList && this.pivotFieldListModule && this.pivotFieldListModule.axisFieldModule) {\n                        this.pivotFieldListModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotFieldListModule.axisFieldModule.render();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Method to parse the template string.\n     */\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Method to get the cell template.\n     */\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        this.clearTemplate();\n        if (this.currentView === 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart) {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar || this.allowNumberFormatting || this.allowCalculatedField ||\n            this.toolbar || this.allowGrouping || this.gridSettings.contextMenuItems) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.allowDrillThrough || this.editSettings.allowEditing) {\n            this.drillThroughModule = new DrillThrough(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                    if (this.chartSettings.enableMultiAxis && this.chartSettings.enableScrollOnMultiAxis) {\n                        this.element.querySelector('.e-pivotchart').style.display = '';\n                    }\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && this.element.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                this.element.querySelector('#' + this.element.id + '_PivotFieldList').style.display = 'none';\n            }\n            if (this.toolbar && this.toolbar.indexOf('FieldList') !== -1 &&\n                this.showToolbar && this.element.querySelector('.e-toggle-field-list')) {\n                this.element.querySelector('.e-toggle-field-list').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            if (!this.isInitialRendering) {\n                this.isModified = false;\n                this.isInitialRendering = !this.isInitialRendering;\n            }\n            this.toolbarModule.action = '';\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element && !this.spinnerTemplate && this.currentView === 'Table') {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        var _this_1 = this;\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                /* tslint:disable-next-line:no-any */\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var sfBlazor = 'sfBlazor';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        /* tslint:disable-next-line */\n                        var sortArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var aggregateArgs = window[sfBlazor].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var dataSourceSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var filterArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* tslint:enable */\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* tslint:disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* tslint:enable */\n                }\n                else {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot.bulkChanges.pivotValues;\n                    pivot.allowServerDataBinding = true;\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType\n                    };\n                    /* tslint:enable:align */\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* tslint:disable */\n                        var sfBlazor = 'sfBlazor';\n                        var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.allowServerDataBinding = false;\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            delete pivot.bulkChanges.pivotValues;\n                            pivot.allowServerDataBinding = true;\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot.dataSourceSettings.mode === 'Server') {\n                        if (isSorted)\n                            pivot.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                        else if (isAggChange)\n                            pivot.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                        else if (isCalcChange)\n                            pivot.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                        else if (isFiltered)\n                            pivot.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                        else\n                            pivot.getEngine('onDrop', null, null, null, null, null, null);\n                        pivot.lastSortInfo = {};\n                        pivot.lastAggregationInfo = {};\n                        pivot.lastCalcFieldInfo = {};\n                        pivot.lastFilterInfo = {};\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.allowServerDataBinding = false;\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot.bulkChanges.pivotValues;\n                        pivot.allowServerDataBinding = true;\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('Excel');\n        }\n        else {\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('CSV');\n        }\n        else {\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization) {\n            this.pdfExportModule.exportToPDF();\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param type - Defines the export type.\n     * @param fileName - Defines file name of export document.\n     * @param orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param width - Defines width of the export document.\n     * @param height - Defines height of the export document.\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var _this_1 = this;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var clonedDrillMembers_1 = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                var drillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n                for (var fCnt = 0; fCnt < drillMembers.length; fCnt++) {\n                    var field = drillMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                this.setProperties({ dataSourceSettings: { drilledMembers: drillMembers } }, true);\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1,\n                cancel: false\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    if (pivot_1.enableVirtualization) {\n                        if (isBlazor()) {\n                            /* tslint:disable */\n                            var sfBlazor = 'sfBlazor';\n                            var dataSourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                            var drillItem = window[sfBlazor].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                            var args = window[sfBlazor].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                            pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                                pivot_1.updateBlazorData(data, pivot_1);\n                                pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                                pivot_1.allowServerDataBinding = false;\n                                pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                                delete pivot_1.bulkChanges.pivotValues;\n                                pivot_1.allowServerDataBinding = true;\n                                pivot_1.renderPivotGrid();\n                            });\n                            /* tslint:enable */\n                        }\n                        else if (_this_1.dataSourceSettings.mode === 'Server') {\n                            _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                        }\n                        else {\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.engineModule.onDrill(drilledItem_1);\n                        }\n                    }\n                    else if (_this_1.dataSourceSettings.mode === 'Server') {\n                        _this_1.getEngine('onDrill', drilledItem_1, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                    }\n                    if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                        pivot_1.allowServerDataBinding = false;\n                        pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                        /* tslint:disable-next-line:no-any */\n                        delete pivot_1.bulkChanges.pivotValues;\n                        pivot_1.allowServerDataBinding = true;\n                        pivot_1.renderPivotGrid();\n                    }\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers_1 } }, true);\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var _this_1 = this;\n        var pivot = this;\n        var clonedDrillMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: '~~',\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        this.showWaitingPopup();\n        var drillArgs = {\n            drillInfo: drillInfo,\n            pivotview: isBlazor() ? undefined : pivot,\n            cancel: false\n        };\n        var isAttributeHierarchy = this.olapEngineModule.fieldList[drillInfo.fieldName] && this.olapEngineModule.fieldList[drillInfo.fieldName].isHierarchy;\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        var clonedMembers = PivotUtil.cloneDrillMemberSettings(this.dataSourceSettings.drilledMembers);\n        if (drillInfo && drillInfo.action === 'down') {\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, (this.olapEngineModule.fieldList[currentCell.hierarchy] && !this.olapEngineModule.fieldList[currentCell.hierarchy].hasAllMember) ? currentCell.valueSort.levelName.split(this.dataSourceSettings.valueSortSettings.headerDelimiter).length - 1 : fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillMembers = clonedMembers[i];\n                    var memberItem = drillSet;\n                    if (drillMembers.delimiter) {\n                        memberItem = memberItem.replace(/~~/g, drillMembers.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillMembers.items.length; itemPos++) {\n                        if (drillMembers.items[itemPos].indexOf(memberItem) !== 0) {\n                            items[items.length] = drillMembers.items[itemPos];\n                        }\n                    }\n                    drillMembers.items = items;\n                }\n            }\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _a = 0, clonedMembers_1 = clonedMembers; _a < clonedMembers_1.length; _a++) {\n                var field = clonedMembers_1[_a];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n                if (isAttributeHierarchy) {\n                    var i = 0;\n                    while (i < drillItem[0].items.length) {\n                        if (drillItem[0].items[i] === member) {\n                            drillItem[0].items.splice(i, 1);\n                        }\n                        else {\n                            ++i;\n                        }\n                    }\n                }\n            }\n            else if (!isAttributeHierarchy) {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!clonedMembers) {\n                    clonedMembers = [drilledMember];\n                }\n                else {\n                    clonedMembers.push(drilledMember);\n                }\n            }\n            drillArgs.drillInfo.memberName = member;\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            var fields = tupInfo.drillInfo.map(function (item) { return item.uName; });\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var drillSet = drillSets[key];\n                var drillItemCollection = [];\n                for (var i = 0, cnt = clonedMembers.length; i < cnt; i++) {\n                    var drillItem = clonedMembers[i];\n                    var member_1 = drillSet;\n                    if (drillItem.name === drillInfo.fieldName) {\n                        drillItemCollection.push(drillItem);\n                    }\n                    if (drillItem.delimiter) {\n                        member_1 = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    if (!isAttributeHierarchy) {\n                        var items = [];\n                        for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                            if (drillItem.items[itemPos].indexOf(member_1) !== 0) {\n                                items[items.length] = drillItem.items[itemPos];\n                            }\n                        }\n                        drillItem.items = items;\n                    }\n                }\n                if (isAttributeHierarchy) {\n                    if (drillItemCollection.length > 0) {\n                        if (drillItemCollection[0].delimiter) {\n                            member = member.replace(/~~/g, drillItemCollection[0].delimiter);\n                        }\n                        var index = PivotUtil.inArray(member, drillItemCollection[0].items);\n                        if (index === -1) {\n                            drillItemCollection[0].items.push(member);\n                        }\n                    }\n                    else {\n                        var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                        if (!clonedMembers) {\n                            clonedMembers = [drilledMember];\n                        }\n                        else {\n                            clonedMembers.push(drilledMember);\n                        }\n                    }\n                }\n            }\n            var drilledMembers_1 = [];\n            for (var _c = 0, clonedMembers_2 = clonedMembers; _c < clonedMembers_2.length; _c++) {\n                var fields_1 = clonedMembers_2[_c];\n                if (fields_1.items.length > 0) {\n                    drilledMembers_1.push(fields_1);\n                }\n            }\n            this.setProperties({ dataSourceSettings: { drilledMembers: clonedMembers } }, true);\n            pivot.trigger(events.drill, drillArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers_1 } }, true);\n                    _this_1.olapEngineModule.updateDrilledInfo(_this_1.dataSourceSettings);\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.renderPivotGrid();\n                }\n                else {\n                    _this_1.hideWaitingPopup();\n                    _this_1.setProperties({ dataSourceSettings: { drilledMembers: clonedDrillMembers } }, true);\n                }\n            });\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.onContentReady = function () {\n        if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n            PivotUtil.updateDataSourceSettings(this, this.savedDataSourceSettings);\n            this.savedDataSourceSettings = undefined;\n        }\n        if (this.currentView !== 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            if ((this.dataSourceSettings.mode === 'Server' && this.isServerWaitingPopup) || this.dataSourceSettings.mode === 'Local') {\n                this.hideWaitingPopup();\n            }\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n            this.notEmpty = true;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = (this.gridSettings.columnWidth * engine.columnCount\n                    - this.grid.columns[0].width);\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                var verOffset = (mCnt.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.scrollTop)) + 'px)';\n                var horiOffset = (mCnt.scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((mCnt.scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - mCnt.scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    /* tslint:disable-next-line */\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    templateObject.rowHeaders = pivotCell.rowHeaders;\n                    templateObject.columnHeaders = pivotCell.columnHeaders;\n                    templateObject.rowIndex = pivotCell.rowIndex;\n                    templateObject.columnIndex = pivotCell.colIndex;\n                    templateObject.isGrandTotal = pivotCell.isGrandSum;\n                    templateObject.isTotal = pivotCell.isSum;\n                    templateObject.rowSpan = pivotCell.rowSpan;\n                    templateObject.columnSpan = pivotCell.colSpan;\n                    templateObject.isDrilled = pivotCell.isDrilled;\n                    templateObject.hasChild = pivotCell.hasChild;\n                    templateObject.valueSortInfo = pivotCell.valueSort;\n                    /* tslint:disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = (this.pivotValues && this.pivotValues[rowIndex] && this.pivotValues[rowIndex][colIndex]) ?\n            this.pivotValues[rowIndex][colIndex] : undefined;\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = (this.olapEngineModule.dataFields[cell.actualText] &&\n                    this.olapEngineModule.dataFields[cell.actualText].caption) ?\n                    this.olapEngineModule.dataFields[cell.actualText].caption : field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            var rowHeaders = this.getRowText(rowIndex, 0);\n            var columnHeaders = this.getColText(0, colIndex, rowIndex);\n            var value = ((cell.formattedText === '0' || cell.formattedText === '') ? this.localeObj.getConstant('noValue') :\n                cell.formattedText);\n            if (this.tooltipTemplate && this.getTooltipTemplate() !== undefined) {\n                var rowFields = this.getHeaderField(rowIndex, colIndex, 'row');\n                var columnFields = this.getHeaderField(rowIndex, colIndex, 'column');\n                var templateObject = {\n                    rowHeaders: rowHeaders,\n                    columnHeaders: columnHeaders,\n                    aggregateType: aggregateType,\n                    valueField: caption,\n                    value: value,\n                    rowFields: rowFields,\n                    columnFields: columnFields,\n                };\n                /* tslint:disable-next-line:max-line-length */\n                this.tooltip.content = this.getTooltipTemplate()(templateObject, this, 'tooltipTemplate', this.element.id + 'tooltipTemplate')[0].outerHTML;\n            }\n            else {\n                this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                    this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                    rowHeaders + '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' + this.localeObj.getConstant('column') +\n                    ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + columnHeaders + '</p></br>' +\n                    (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' + (this.dataType === 'olap' ? '' :\n                        (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                        caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' + value + '</p></div>') : '');\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getTooltipTemplate = function () {\n        return this.tooltipTemplateFn;\n    };\n    /** @hidden */\n    PivotView.prototype.getHeaderField = function (rowIndex, colIndex, axis) {\n        var fields = '';\n        var len;\n        var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n        var delimiter = engineModule.valueSortSettings.headerDelimiter;\n        if (axis === 'row') {\n            len = this.pivotValues[rowIndex][0].valueSort.levelName.toString().split(delimiter).length;\n            for (var i = 0; i < len && engineModule.rows.length > 0 && engineModule.rows[i]; i++) {\n                fields += (i ? ' - ' : '') + ((engineModule.rows[i].caption) ? engineModule.rows[i].caption : engineModule.rows[i].name);\n            }\n        }\n        else {\n            /* tslint:disable:max-line-length */\n            if (engineModule.columns.length > 0) {\n                var pos = engineModule.values.length === 0 ? 0 : Number(Object.keys(engineModule.headerContent)[Object.keys(engineModule.headerContent).length - 1]);\n                len = this.pivotValues[pos][colIndex].valueSort.levelName.toString().split(delimiter).length;\n                len = engineModule.values.length > 1 ? len - 1 : len;\n            }\n            for (var j = 0; j < len && engineModule.columns.length > 0 && engineModule.columns[j]; j++) {\n                fields += (j ? ' - ' : '') + ((engineModule.columns[j].caption) ? engineModule.columns[j].caption : engineModule.columns[j].name);\n            }\n            /* tslint:enable:max-line-length */\n        }\n        return fields;\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                /* tslint:disable */\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                /* tslint:enable */\n                this.showWaitingPopup();\n                var pivot_2 = this;\n                //setTimeout(() => {\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.allowServerDataBinding = false;\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            delete pivot_2.bulkChanges.pivotValues;\n                            pivot_2.allowServerDataBinding = true;\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                        pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else if (pivot_2.dataSourceSettings.mode === 'Server') {\n                    pivot_2.getEngine('onValueSort', null, null, null, null, null, null);\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.allowServerDataBinding = false;\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_2.bulkChanges.pivotValues;\n                    pivot_2.allowServerDataBinding = true;\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* tslint:disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* tslint:enable */\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (!isNullOrUndefined(this.totColWidth) && this.totColWidth > 0) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* tslint:disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* tslint:enable */\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (firstColWidth !== this.pivotColumns[0].width) {\n            this.firstColWidth = this.pivotColumns[0].width;\n            this.renderModule.resColWidth = parseInt(this.firstColWidth.toString());\n            // TODO: To be considered on compact layout implementation\n            // let colWidth: number = this.renderModule.calculateColWidth(this.pivotColumns ? this.pivotColumns.length : 0);\n            // for (let i: number = 1; i < this.pivotColumns.length; i++) {\n            //     this.pivotColumns[i].width = colWidth;\n            // }\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < 300) {\n            height = 300;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        var offsetWidth = this.element.offsetWidth ? this.element.offsetWidth :\n            this.element.getBoundingClientRect().width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        /* tslint:disable */\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        /* tslint:enable */\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    /* tslint:disable-next-line */\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart && ((this.showToolbar && this.currentView === 'Chart') || !this.showToolbar)) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    (this.displayOption.view === 'Both' && this.grid) ? this.getGridWidthAsNumber().toString() : this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* tslint:disable */\n        if (ele && !isNullOrUndefined(this.pivotValues) && this.pivotValues.length > 0) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !ele.classList.contains(cls.COLUMNSHEADER)) {\n                        _this_1.rowDeselect(ele, e, rowIndex_1, _this_1.gridSettings.selectionSettings.mode, observedArgs);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.mode !== 'Column' && !observedArgs.cancel) {\n                        if (_this_1.gridSettings.selectionSettings.type === \"Multiple\" ? (!e.ctrlKey && !e.shiftKey) : true && _this_1.selectedRowIndex !== rowIndex_1) {\n                            _this_1.selectedRowIndex = rowIndex_1;\n                            _this_1.grid.selectionModule.selectRow(rowIndex_1 - _this_1.renderModule.rowStartPos);\n                        }\n                        else {\n                            _this_1.selectedRowIndex = undefined;\n                        }\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1],\n                        nativeEvent: e\n                    });\n                }\n                _this_1.getSelectedCellsPos();\n            });\n        }\n    };\n    PivotView.prototype.rowDeselect = function (ele, e, rowIndex, mode, observedArgs) {\n        if (!e.shiftKey && !e.ctrlKey && this.gridSettings.selectionSettings.mode !== 'Both' || this.gridSettings.selectionSettings.type === 'Single') {\n            if (!ele.classList.contains(cls.CELL_SELECTED_BGCOLOR) && !ele.classList.contains(cls.SELECTED_BGCOLOR) && !ele.classList.contains(cls.CELL_ACTIVE_BGCOLOR)) {\n                if (!observedArgs.cancel) {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n            else {\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n                removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n                if (!observedArgs.cancel) {\n                    if ((mode === 'Cell')) {\n                        addClass([ele], [cls.CELL_SELECTED_BGCOLOR]);\n                    }\n                    else if (mode === 'Row' || this.gridSettings.selectionSettings.type === 'Single') {\n                        var query = '[index=\"' + rowIndex + '\"]';\n                        addClass(this.element.querySelectorAll(query), [cls.SELECTED_BGCOLOR, cls.CELL_ACTIVE_BGCOLOR]);\n                        if (mode !== 'Row') {\n                            ele.classList.add(cls.CELL_SELECTED_BGCOLOR);\n                        }\n                    }\n                }\n                else {\n                    this.setSavedSelectedCells();\n                }\n            }\n        }\n        else if (((e.shiftKey || e.ctrlKey) || this.gridSettings.selectionSettings.mode == 'Both') && (observedArgs.cancel)) {\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR), cls.SELECTED_BGCOLOR);\n            removeClass(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR), cls.CELL_ACTIVE_BGCOLOR);\n            this.setSavedSelectedCells();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    removeClass(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n                else {\n                    removeClass(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR), [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR + ', .' + cls.CELL_SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n                        var ele_1 = _a[_i];\n                        // if (Number((ele as HTMLElement).getAttribute('index')) !== rowIndex) {\n                        removeClass([ele_1], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR, cls.CELL_SELECTED_BGCOLOR]);\n                        // }\n                    }\n                }\n                else {\n                    removeClass(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR), cls.CELL_SELECTED_BGCOLOR);\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && this.selectedRowIndex !== rowIndex) {\n            this.selectedRowIndex = rowIndex;\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n        else {\n            this.selectedRowIndex = undefined;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns = [];\n            var actColPos = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns.push(cCnt.toString());\n            }\n            if (!isCtrl || type === 'Single') {\n                for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)); _i < _a.length; _i++) {\n                    var ele = _a[_i];\n                    removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                    if (activeColumns.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos[colIndex] = colIndex;\n                }\n                activeColumns = Object.keys(actColPos).length > 0 ? Object.keys(actColPos).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns;\n            }\n            else {\n                isToggle = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n                    var ele = _c[_b];\n                    rowSelectedList.push(ele.getAttribute('index'));\n                }\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                for (var _d = 0, _e = [].slice.call(this.element.querySelectorAll(queryStringArray.toString())); _d < _e.length; _d++) {\n                    var ele = _e[_d];\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected && isCtrl && (rowSelectedList.indexOf(ele.getAttribute('index')) === -1)) {\n                            removeClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                        else {\n                            addClass([ele], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n                        }\n                    }\n                }\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        control.cellSelectionPos = [];\n        for (var _i = 0, _a = [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)); _i < _a.length; _i++) {\n            var ele = _a[_i];\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n        for (var _b = 0, _c = [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)); _b < _c.length; _b++) {\n            var ele = _c[_b];\n            control.cellSelectionPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        }\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        for (var _i = 0, _a = [].slice.call(this.savedSelectedCellsPos); _i < _a.length; _i++) {\n            var item = _a[_i];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_ACTIVE_BGCOLOR, cls.SELECTED_BGCOLOR]);\n        }\n        for (var _b = 0, _c = [].slice.call(this.cellSelectionPos); _b < _c.length; _b++) {\n            var item = _c[_b];\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            addClass([control.element.querySelector(query)], [cls.CELL_SELECTED_BGCOLOR]);\n        }\n    };\n    /* tslint:enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.notEmpty = false;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            /* tslint:disable */\n            this.notEmpty = true;\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            /* tslint:enable */\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            /* tslint:disable:no-empty */\n            this.grid.showSpinner = function () { };\n            this.grid.hideSpinner = function () { };\n            /* tslint:enable:no-empty */\n            this.element.appendChild(createElement('div', { id: this.element.id + '_grid' }));\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo('#' + this.element.id + '_grid');\n            /* tslint:disable-next-line:no-any */\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n                _this_1.grid.element.querySelector('.e-movablecontent').style.overflowY = 'auto';\n            });\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    if (isBlazor()) {\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                        _this_1.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                    }\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var sfBlazor = 'sfBlazor';\n                    var customArgs = window[sfBlazor].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[sfBlazor].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        if (data === 0) {\n                            _this_1.pivotCommon.errorDialog.createErrorDialog(_this_1.localeObj.getConstant('error'), (pivot_3.dataSourceSettings.type === 'CSV' ?\n                                _this_1.localeObj.getConstant('invalidCSV') : _this_1.localeObj.getConstant('invalidJSON')));\n                            return;\n                        }\n                        else {\n                            pivot_3.updateBlazorData(data, pivot_3);\n                            PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                            pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                        }\n                    });\n                }\n                else {\n                    if (_this_1.dataSourceSettings.mode !== 'Server') {\n                        _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    }\n                    _this_1.allowServerDataBinding = false;\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete _this_1.bulkChanges.pivotValues;\n                    _this_1.allowServerDataBinding = true;\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.allowServerDataBinding = false;\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                /* tslint:disable-next-line:no-any */\n                delete _this_1.bulkChanges.pivotValues;\n                _this_1.allowServerDataBinding = true;\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.notEmpty = true;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.allowServerDataBinding = false;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                    /* tslint:disable-next-line:no-any */\n                    delete pivot_4.bulkChanges.pivotValues;\n                    pivot_4.allowServerDataBinding = true;\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = PivotUtil.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = PivotUtil.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /* tslint:enable */\n    PivotView.prototype.generateData = function () {\n        if (this.displayOption.view !== 'Chart') {\n            this.renderEmptyGrid();\n        }\n        this.showWaitingPopup();\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.refreshData.bind(this), 100);\n    };\n    /** @hidden */\n    PivotView.prototype.refreshData = function () {\n        var pivot = this;\n        if (isBlazor()) {\n            if (pivot.dataType === 'olap') {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    pivot.allowServerDataBinding = false;\n                    pivot.setProperties({\n                        dataSourceSettings: {\n                            dataSource: undefined\n                        }\n                    }, true);\n                    pivot.allowServerDataBinding = true;\n                }\n            }\n        }\n        if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n            if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                if (isBlazor() && pivot.enableVirtualization) {\n                    if (!pivot.element.querySelector('.e-spinner-pane')) {\n                        this.showWaitingPopup();\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    if (pivot.dataType === 'pivot' && pivot.remoteData.length > 0) {\n                        if (!this.element.querySelector('.e-spinner-pane')) {\n                            this.showWaitingPopup();\n                        }\n                        this.engineModule.data = pivot.remoteData;\n                        this.initEngine();\n                    }\n                    else {\n                        setTimeout(pivot.getData.bind(pivot), 100);\n                    }\n                }\n            }\n            else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                (pivot.dataSourceSettings.dataSource && pivot.dataSourceSettings.dataSource.length > 0 || this.engineModule.data.length > 0)) {\n                if (pivot.dataType === 'pivot') {\n                    this.hideWaitingPopup();\n                    pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                }\n                pivot.initEngine();\n            }\n            else {\n                if (this.dataSourceSettings.mode === 'Server') {\n                    this.getEngine(\"onRefresh\");\n                }\n                this.hideWaitingPopup();\n            }\n        }\n        else if (isBlazor() && pivot.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        //setTimeout(() => {\n        pivot.engineModule.data = e.result;\n        if (!isNullOrUndefined(pivot.engineModule.data) && pivot.engineModule.data.length > 0) {\n            pivot.initEngine();\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n        //});\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (!isNullOrUndefined(pivotValues[i]) && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                var headerDelimiter = this.dataSourceSettings.valueSortSettings.headerDelimiter ? this.dataSourceSettings.valueSortSettings.headerDelimiter : '.';\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            // (pivotValues[i][j] as IAxisSet).enableHyperlink = false;\n                            var label = this.hyperlinkSettings.headerText;\n                            var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                i : (this.dataType === 'pivot' ?\n                                this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                            var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                            if ((pivotValues[colIndex[label.split(headerDelimiter).length - 1]] &&\n                                pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j] &&\n                                pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j].\n                                    valueSort && pivotValues[colIndex[label.split(headerDelimiter).length - 1]][j].\n                                valueSort[label])) {\n                                for (var _i = 0, colIndex_2 = colIndex; _i < colIndex_2.length; _i++) {\n                                    var index = colIndex_2[_i];\n                                    if (pivotValues[index][j] &&\n                                        pivotValues[index][j].axis === 'column' &&\n                                        (pivotValues[index][j].valueSort.levelName.indexOf(label) > -1)) {\n                                        pivotValues[index][j].enableHyperlink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            if (isBlazor()) {\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            }\n            else {\n                this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n                this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n            }\n        }\n        /* tslint:disable-next-line:max-line-length */\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            if (!isBlazor()) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            }\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        /* tslint:disable-next-line:max-line-length */\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n                var fieldName = fields_2[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        /* tslint:disable-next-line:max-line-length */\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n            /* tslint:disable */\n            if (isBlazor()) {\n                this.engineModule.data = data;\n                this.allowServerDataBinding = false;\n                this.setProperties({\n                    dataSourceSettings: {\n                        rows: axisFields[0], columns: axisFields[1], values: axisFields[2], filters: axisFields[3],\n                        filterSettings: fieldSettings[0], sortSettings: fieldSettings[1], formatSettings: fieldSettings[2],\n                        drilledMembers: fieldSettings[3], groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : []\n                    }\n                }, true);\n                this.allowServerDataBinding = true;\n            }\n        }\n    };\n    PivotView.prototype.removeButtonFocus = function (e) {\n        if (document.querySelectorAll('.e-btn-focused')) {\n            removeClass(document.querySelectorAll('.e-btn-focused'), 'e-btn-focused');\n        }\n    };\n    /* tslint:enable */\n    /* tslint:enable:max-func-body-length */\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        EventHandler.add(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus, this);\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        EventHandler.remove(document, this.isAdaptive ? 'touchend' : 'click', this.removeButtonFocus);\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns void\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.isAdaptive && this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.chart) {\n            this.chart.destroy();\n            if (this.chart.isDestroyed && this.element.querySelector('#' + this.element.id + '_chart')) {\n                remove(this.element.querySelector('#' + this.element.id + '_chart'));\n            }\n        }\n        if (this.grid) {\n            this.grid.destroy();\n            if (this.grid.isDestroyed && this.element.querySelector('#' + this.element.id + '_grid')) {\n                remove(this.element.querySelector('#' + this.element.id + '_grid'));\n            }\n        }\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            if (this.element.querySelector('.e-spinner-pane')) {\n                remove(this.element.querySelector('.e-spinner-pane'));\n            }\n            if (this.showFieldList && document.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                remove(document.querySelector('#' + this.element.id + '_PivotFieldList'));\n            }\n        }\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n    };\n    /**\n     * Method to open the number formatting dialog to set the format dynamically.\n     * @returns void\n     */\n    PivotView.prototype.showNumberFormattingDialog = function () {\n        if (this.allowNumberFormatting) {\n            this.numberFormattingModule.showNumberFormattingDialog();\n        }\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"exportAllPages\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotView.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Property(['Column', 'Bar', 'Line', 'Area', 'Scatter', 'Polar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea', 'SplineArea', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto', 'Radar', 'Pie', 'Doughnut', 'Funnel', 'Pyramid'])\n    ], PivotView.prototype, \"chartTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"multiLevelLabelClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartPointClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"editCompleted\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"numberFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldRemove\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     * @returns void\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Wrapper',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('staticFieldList')\n            });\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons();\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: true,\n                enableRtl: this.parent.enableRtl,\n                change: this.onCheckChange.bind(this)\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo('#' + this.parent.element.id + 'DeferUpdateCheckBox');\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.renderMode === 'Popup' ?\n                    (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                isPrimary: true\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton1');\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.renderMode === 'Popup' ?\n                (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton2');\n        this.deferUpdateCancelButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.cancelButtonClick.bind(this) :\n            this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1', attrs: { 'type': 'button' }\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2', attrs: { 'type': 'button' }\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        this.parent.allowDeferLayoutUpdate = !this.parent.allowDeferLayoutUpdate;\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n            this.deferUpdateCancelButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        this.cancelButtonClick();\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.pivotChange = false;\n        }\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        //setTimeout(() => {\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = extend({}, parent.dataSourceSettings, null, true);\n        parent.clonedFieldList = extend({}, parent.pivotFieldList, null, true);\n        //});\n    };\n    DialogRenderer.prototype.cancelButtonClick = function () {\n        /* tslint:disable:align */\n        if (isBlazor() && !this.parent.isPopupView) {\n            /* tslint:disable-next-line:max-line-length */\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.parent.clonedDataSource.properties));\n        }\n        else {\n            this.parent.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n        }\n        /* tslint:enable:align */\n        if (this.parent.dataType === 'olap') {\n            this.parent.olapEngineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                var name_1 = _a[_i];\n                var item = this.parent.clonedFieldList[name_1];\n                this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n            }\n        }\n        else {\n            this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n        }\n        this.parent.updateDataSource(false, true);\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList')\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                close: this.removeFieldListIcon.bind(this),\n                open: this.dialogOpen.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_dialog-content'), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: false,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons();\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_title'), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    DialogRenderer.prototype.dialogOpen = function () {\n        this.adaptiveElement.refresh();\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            selected: this.tabSelect.bind(this)\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('button', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'type': 'button',\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE,\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS,\n            innerHTML: this.parent.localeObj.getConstant('addPrompt')\n        });\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function (event) {\n        if (!this.parent.isAdaptive) {\n            if (this.parent.dialogRenderer.fieldListDialog) {\n                this.parent.dialogRenderer.fieldListDialog.hide();\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            }\n        }\n        this.parent.notify(events.initCalculatedField, {});\n    };\n    DialogRenderer.prototype.showFieldListDialog = function (event) {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    DialogRenderer.prototype.onShowFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            if (this.parent.isAdaptive) {\n                this.parent.axisFieldModule.render();\n            }\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        this.parent.dialogRenderer.fieldListDialog.show();\n        this.parent.dialogRenderer.fieldListDialog.element.style.top =\n            parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n    };\n    DialogRenderer.prototype.onCloseFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.dataSourceSettings =\n                extend({}, this.parent.clonedDataSource.properties, null, true);\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            /* tslint:disable:align */\n            this.parent.pivotGridModule.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n            /* tslint:enable:align */\n            if (Object.keys(this.parent.clonedFieldList).length > 0) {\n                this.parent.dataType === 'olap' ? this.parent.olapEngineModule.fieldList =\n                    extend({}, this.parent.clonedFieldList, null, true) :\n                    this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            }\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n            this.parent.pivotGridModule.notify(events.contentReady, this);\n        }\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (this.parent.isAdaptive && this.parent.allowCalculatedField && this.parent.calculatedFieldModule) {\n            if (this.adaptiveElement && this.adaptiveElement.selectedItem === 4) {\n                if (this.adaptiveElement.element.querySelector('#' + this.parent.element.id + 'droppable')) {\n                    /* tslint:disable */\n                    this.parent.calculatedFieldModule\n                        .updateAdaptiveCalculatedField(false);\n                    /* tslint:enable */\n                }\n                else {\n                    this.parent.notify(events.initCalculatedField, { edit: false });\n                }\n            }\n        }\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     * @returns void\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('allFields')\n            });\n            var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_CLASS + '-outer-div' });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: 'e-field-header-wrapper' });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS,\n                    innerHTML: this.parent.localeObj.getConstant('centerHeader')\n                });\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = { 'None': 'sortNone', 'Ascend': 'sortAscending', 'Descend': 'sortDescending' };\n        var keys = Object.keys(options);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var option = keys_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option,\n                    'title': this.parent.localeObj.getConstant(options[option])\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS,\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            enableRtl: this.parent.enableRtl,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            allowDrag = true;\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            /* tslint:disable */\n            var field = PivotUtil.getFieldInfo(args.nodeData.id, this.parent);\n            /* tslint:enable */\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: (field.fieldItem ? field.fieldItem.allowDragAndDrop ?\n                        this.parent.localeObj.getConstant('drag') : '' : this.parent.localeObj.getConstant('drag')),\n                    'aria-disabled': 'false'\n                },\n                className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' +\n                    (field.fieldItem ? field.fieldItem.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : '')\n            });\n            if (args.node.querySelector('.e-checkbox-wrapper') &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.e-checkbox-wrapper'));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.e-checkbox-wrapper').style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: false,\n            target: this.parentElement.parentElement,\n            close: this.dialogClose.bind(this)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.dialogClose = function () {\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            autoCheck: false,\n            loadOnDemand: this.parent.dataType === 'olap' ? false : true,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            nodeChecked: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n            nodeSelected: function (args) {\n                removeClass([args.node], 'e-active');\n                args.cancel = true;\n            }\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        /* tslint:disable-next-line:max-line-length */\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        var _this = this;\n        if (args.event.target.classList.contains(cls.DRAG_CLASS) &&\n            !args.event.target.classList.contains(cls.DRAG_DISABLE_CLASS)) {\n            var fieldInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n            var dragEventArgs = {\n                fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n                dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n            };\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.parent.isDragging = true;\n                    addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n                    var data = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        data = _this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    else {\n                        data = _this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n                    }\n                    var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                    if (data && data.aggregateType === 'CalculatedField') {\n                        for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                            var axisContent = axis_1[_i];\n                            addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                        }\n                    }\n                    var dragItem = args.clonedNode;\n                    if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                        _this.parent.renderMode) === 'Popup') {\n                        dragItem.style.zIndex = (_this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                    }\n                }\n                else {\n                    _this.parent.isDragging = false;\n                    args.cancel = true;\n                }\n            });\n        }\n        else {\n            this.parent.isDragging = false;\n            args.cancel = true;\n        }\n    };\n    // private getFieldDragArgs(args: DragAndDropEventArgs): FieldDragStartEventArgs {\n    //     let fieldInfo: FieldItemInfo = PivotUtil.getFieldInfo(args.draggedNode.getAttribute('data-uid'), this.parent);\n    //     let dragEventArgs: any = {\n    //         fieldName: fieldInfo.fieldName, fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis,\n    //         dataSourceSettings: this.parent.dataSourceSettings, cancel: false\n    //     }\n    //     let treeModule: TreeViewRenderer = this;\n    //     if (isBlazor()) {\n    //         dragEventArgs = this.getFieldDragEventArgs(dragEventArgs);\n    //         dragEventArgs.then((e: any) => {\n    //             return e;\n    //         });\n    //     }\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs);\n    //     return dragEventArgs;\n    // }\n    // private getFieldDragEventArgs(dragEventArgs: FieldDragStartEventArgs): FieldDragStartEventArgs | Deferred {\n    //     let callbackPromise: Deferred = new Deferred();\n    //     let control: PivotView | PivotFieldList = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n    //     control.trigger(events.fieldDragStart, dragEventArgs, (observedArgs: FieldDragStartEventArgs) => {\n    //         callbackPromise.resolve(observedArgs);\n    //     });\n    //     return callbackPromise;\n    // }\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.allowDeferLayoutUpdate) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].id === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args) {\n        var _this = this;\n        var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n        if (!isNullOrUndefined(node)) {\n            var li_1 = closest(node, 'li');\n            var id_1 = li_1.getAttribute('data-uid');\n            if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n                this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            }\n            var list = this.parent.pivotFieldList;\n            var selectedNode_1 = list[id_1];\n            var fieldInfo_1 = PivotUtil.getFieldInfo(id_1, this.parent);\n            var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n            if (args.action === 'check') {\n                var eventdrop = {\n                    fieldName: id_1, dropField: fieldInfo_1.fieldItem,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    dropAxis: (selectedNode_1.type === 'number' || (selectedNode_1.type === 'CalculatedField' &&\n                        selectedNode_1.formula && selectedNode_1.formula.indexOf('Measure') > -1 &&\n                        this.parent.dataType === 'olap')) ? 'values' : 'rows',\n                    dropPosition: fieldInfo_1.position, draggedAxis: 'fieldlist', cancel: false\n                };\n                control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        var addNode = _this.parent.pivotCommon.dataSourceUpdate.getNewField(id_1, fieldInfo_1.fieldItem);\n                        _this.updateReportSettings(addNode, observedArgs);\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n            else {\n                var removeFieldArgs = {\n                    cancel: false, fieldName: id_1,\n                    dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                    fieldItem: fieldInfo_1.fieldItem, axis: fieldInfo_1.axis\n                };\n                control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                        _this.updateSelectedNodes(li_1, args.action);\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id_1);\n                        if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                            _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                        }\n                        _this.updateNodeStateChange(id_1, args, selectedNode_1);\n                    }\n                    else {\n                        _this.updateCheckState(selectedNode_1);\n                    }\n                });\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateReportSettings = function (newField, dropArgs) {\n        var dropPosition = dropArgs.dropPosition;\n        var dropClass = dropArgs.dropAxis;\n        switch (dropClass) {\n            case 'filters':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.filters.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.filters.push(newField);\n                break;\n            case 'rows':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.rows.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.rows.push(newField);\n                break;\n            case 'columns':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.columns.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.columns.push(newField);\n                break;\n            case 'values':\n                dropPosition !== -1 ?\n                    this.parent.dataSourceSettings.values.splice(dropPosition, 0, newField) :\n                    this.parent.dataSourceSettings.values.push(newField);\n                if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                    !(this.parent.olapEngineModule).isMeasureAvail) {\n                    var measureField = {\n                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined,\n                    };\n                    var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                        this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                    fieldAxis.push(measureField);\n                }\n                break;\n        }\n    };\n    TreeViewRenderer.prototype.updateCheckState = function (selectedNode) {\n        var chkState = this.fieldTable.element.querySelectorAll('.e-checkbox-wrapper');\n        var innerText = this.fieldTable.element.querySelectorAll('.e-list-text');\n        var checkClass = this.fieldTable.element.querySelectorAll('.e-frame');\n        for (var i = 0; i < chkState.length; i++) {\n            if (selectedNode.caption === innerText[i].textContent) {\n                if (chkState[i].getAttribute('aria-checked') === 'false') {\n                    chkState[i].setAttribute('aria-checked', 'false');\n                    checkClass[i].classList.add(cls.NODE_CHECK_CLASS);\n                }\n                else {\n                    chkState[i].setAttribute('aria-checked', 'true');\n                    checkClass[i].classList.remove(cls.NODE_CHECK_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateNodeStateChange = function (id, args, selectedNode) {\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            selectedNode.isSelected = args.action === 'check';\n            if (this.parent.dataType === 'olap') {\n                this.parent.olapEngineModule.updateFieldlistData(id, args.action === 'check');\n            }\n            this.updateDataSource();\n        }\n        var parent = this.parent;\n        setTimeout(function () {\n            parent.axisFieldModule.render();\n        });\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args) {\n        var _this = this;\n        var fieldList = this.parent.pivotFieldList;\n        var selectedNode = fieldList[args.data[0].id.toString()];\n        var fieldInfo = PivotUtil.getFieldInfo(selectedNode.id.toString(), this.parent);\n        var control = this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        if (args.action === 'check') {\n            var eventdrop = {\n                fieldName: fieldInfo.fieldName, dropField: fieldInfo.fieldItem,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                dropAxis: 'rows', draggedAxis: 'fieldlist', cancel: false\n            };\n            control.trigger(events.fieldDrop, eventdrop, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.selectedNodes.push(selectedNode.id.toString());\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n        else {\n            var removeFieldArgs = {\n                cancel: false, fieldName: fieldInfo.fieldName,\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n                fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n            };\n            control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    var count = _this.selectedNodes.length;\n                    while (count--) {\n                        if (_this.selectedNodes[count] === selectedNode.id.toString()) {\n                            _this.selectedNodes.splice(count, 1);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.updateCheckState(selectedNode);\n                }\n            });\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = this.parent.pivotFieldList ? Object.keys(this.parent.pivotFieldList) : [];\n            var fieldList = {};\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var key = keys_2[_i];\n                var member = this.parent.pivotFieldList[key];\n                fieldList[key] = { id: member.id, caption: member.caption, isSelected: member.isSelected };\n            }\n            if (this.parent.isAdaptive) {\n                /* tslint:disable-next-line:max-line-length */\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns, this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    fieldList[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    fieldList[item.name].isSelected = true;\n                }\n            }\n            var list = fieldList;\n            for (var _b = 0, keys_3 = keys; _b < keys_3.length; _b++) {\n                var member = keys_3[_b];\n                var obj = list[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData ? this.parent.olapEngineModule.fieldListData : [];\n        if (this.parent.isAdaptive) {\n            /* tslint:disable-next-line:max-line-length */\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                /* tslint:disable */\n                var framedSet = void 0;\n                /* tslint:enable */\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        if (target.className.indexOf('e-selected') === -1) {\n            switch (option) {\n                case 'None':\n                    this.fieldListSort = 'None';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Ascend':\n                    this.fieldListSort = 'Ascend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Descend':\n                    this.fieldListSort = 'Descend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    break;\n            }\n            this.refreshTreeView();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (this.parent.dataType === 'olap') {\n            var measure = void 0;\n            var calcMember = void 0;\n            if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                calcMember = treeData[0];\n                measure = treeData[1];\n                treeData.splice(0, 2);\n            }\n            else {\n                measure = treeData[0];\n                treeData.splice(0, 1);\n            }\n            /* tslint:disable:typedef */\n            treeData = sortOrder === 'Ascend' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 : ((b.caption > a.caption) ? -1 : 0); })) :\n                sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 : ((b.caption < a.caption) ? -1 : 0); })) :\n                    treeData;\n            /* tslint:enable:typedef */\n            if (calcMember) {\n                treeData.splice(0, 0, calcMember, measure);\n            }\n            else {\n                treeData.splice(0, 0, measure);\n            }\n        }\n        else {\n            this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function (e) {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     * @return {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, Droppable, EventHandler, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     * @returns void\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-wrapper'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                attrs: { title: this.parent.localeObj.getConstant(fieldLabels[len]) },\n                innerHTML: this.parent.localeObj.getConstant(fieldLabels[len])\n            });\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS,\n                innerHTML: localePrompt\n            });\n            var droppable = new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-wrapper'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (e.type === 'mouseleave') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend, detach, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n        this.isDestroyed = false;\n    }\n    /* tslint:disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var _this = this;\n        var _a;\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            if (isNullOrUndefined(PivotUtil.getFieldByName(this.parent.localeObj.getConstant('values'), field))) {\n                field.push({\n                    name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                    axis: args.axis, showRemoveIcon: true, allowDragAndDrop: true\n                });\n            }\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _b = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _b.length; _i++) {\n                    var element = _b[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        this.parent.localeObj.getConstant('filterAxisPrompt') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _c = 0, _d = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _c < _d.length; _c++) {\n                        var element = _d[_c];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE) && !element.classList.contains(cls.GROUP_CHART_COLUMN)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name,\n                                    'tabindex': (this.parent.getModuleName() === 'pivotview' && this.parent.grid && axis === 'rows' && !element.classList.contains(cls.GROUP_CHART_ROW)) ? '-1' : '0',\n                                    'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(field[i], buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                        this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                        this.parent.pivotGridModule !== undefined &&\n                                        this.parent.pivotGridModule.enableVirtualization)))) {\n                                    this.createSortOption(buttonElement, field[i].name, field[i]);\n                                }\n                                if (axis !== 'values' && valuePos !== i) {\n                                    this.createFilterOption(buttonElement, field[i].name, axis, field[i]);\n                                }\n                                if (axis === 'values') {\n                                    this.getTypeStatus(field, i, buttonElement);\n                                }\n                            }\n                            if ((field[i].isCalculatedField || field[i].type === 'CalculatedField')) {\n                                var calcElement = createElement('span', {\n                                    attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('editCalculatedField') },\n                                    className: cls.ICON + ' ' + cls.CALC_EDIT\n                                });\n                                if (this.parent.allowCalculatedField && this.parent.calculatedFieldModule && field[i].showEditIcon) {\n                                    removeClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([calcElement], cls.ICON_DISABLE);\n                                }\n                                buttonElement.appendChild(calcElement);\n                            }\n                            var removeElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('remove') },\n                                className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                            });\n                            if (this.parent.getModuleName() === 'pivotview') {\n                                if ((this.parent.groupingBarSettings.showRemoveIcon && field[i].showRemoveIcon)) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            else {\n                                if (field[i].showRemoveIcon) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            buttonElement.appendChild(removeElement);\n                            buttonWrapper.appendChild(dropIndicatorElement);\n                            buttonWrapper.appendChild(buttonElement);\n                            buttonWrapper.appendChild(dropLastIndicatorElement);\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(field[i], this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultiAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    value: !parent_1.chartSettings.enableMultiAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _e = 0, _f = this.parentElement.querySelectorAll('.e-group-' + axis); _e < _f.length; _e++) {\n                        var element = _f[_e];\n                        _loop_1(element);\n                    }\n                }\n                else if (axis === 'columns') {\n                    var availColindex = undefined;\n                    for (var _g = 0, _h = this.parentElement.querySelectorAll('.e-group-' + axis); _g < _h.length; _g++) {\n                        var element = _h[_g];\n                        if (element.classList.contains(cls.GROUP_CHART_COLUMN) && this.parent.chartModule) {\n                            var currentMeasure = this.parent.chartModule.currentMeasure;\n                            var delimiter = this.parent.chartSettings.columnDelimiter ? this.parent.chartSettings.columnDelimiter : '-';\n                            var columnHeader = (this.parent.chartSettings.columnHeader && this.parent.chartSettings.columnHeader !== '') ?\n                                this.parent.chartSettings.columnHeader.split(delimiter).join(' - ') : '';\n                            var engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n                            var pivotValues = engineModule.pivotValues;\n                            var totColIndex = this.parent.chartModule.getColumnTotalIndex(pivotValues);\n                            var rKeys = Object.keys(pivotValues);\n                            var columnData = [];\n                            var firstValueRow = false;\n                            for (var _j = 0, rKeys_1 = rKeys; _j < rKeys_1.length; _j++) {\n                                var rKey = rKeys_1[_j];\n                                if (firstValueRow) {\n                                    break;\n                                }\n                                var rowIndex = Number(rKey);\n                                if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                                    (this.parent.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                                    var firstRowCell = pivotValues[rowIndex][0];\n                                    var tupInfo = this.parent.dataType === 'olap' ?\n                                        engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                                    var rows = pivotValues[rowIndex];\n                                    var cKeys = Object.keys(rows);\n                                    for (var _k = 0, cKeys_1 = cKeys; _k < cKeys_1.length; _k++) {\n                                        var cKey = cKeys_1[_k];\n                                        var cellIndex = Number(cKey);\n                                        var cell = pivotValues[rowIndex][cellIndex];\n                                        var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                                            tupInfo.measureName : cell.actualText;\n                                        if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                                            actualText !== '' && actualText === currentMeasure) {\n                                            firstValueRow = true;\n                                            var columnSeries = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                                                : cell.columnHeaders.toString().split(this.parent.dataSourceSettings.valueSortSettings.headerDelimiter).join(' - ');\n                                            columnData.push({ value: columnSeries, text: columnSeries, title: (_a = {}, _a['title'] = columnSeries, _a) });\n                                            if (columnSeries === columnHeader) {\n                                                availColindex = columnData.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.columnFieldDropDownList && element.querySelector('.' + cls.GROUP_CHART_COLUMN_DROPDOWN_DIV)) {\n                                this.columnFieldDropDownList.dataSource = columnData;\n                                if (availColindex !== undefined) {\n                                    this.columnFieldDropDownList.value = columnData[availColindex - 1].value;\n                                }\n                                else {\n                                    this.columnFieldDropDownList.value = columnData[0].value;\n                                }\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_COLUMN_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this.columnFieldDropDownList = new DropDownList({\n                                    dataSource: columnData,\n                                    enableRtl: this.parent.enableRtl,\n                                    value: availColindex ? columnData[availColindex - 1].value : (columnData[0] ? columnData[0].value : ''),\n                                    width: '200',\n                                    fields: { value: 'value', text: 'text', htmlAttributes: 'title' },\n                                    cssClass: cls.GROUP_CHART_COLUMN_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            var delimiter_1 = _this.parent.chartSettings.columnDelimiter ? _this.parent.chartSettings.columnDelimiter : '-';\n                                            _this.parent.chartSettings.columnHeader = args.value.split(' - ').join(delimiter_1);\n                                        }\n                                    }\n                                });\n                                this.columnFieldDropDownList.isStringTemplate = true;\n                                this.columnFieldDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === 'filters') {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if ((aggregation !== 'DistinctCount') && (engineModule.fieldList[field[i].name].type !== 'number' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else {\n                aggregation = aggregation === undefined ? 'Sum' :\n                    engineModule.fieldList[field[i].name].aggregateType;\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' ?\n                    this.parent.groupingBarSettings.allowDragAndDrop && field[i].allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    /* tslint:enable */\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' && this.validateDropdown(fieldListItem.type)) {\n            this.createSummaryType(buttonElement, field[i].name, field[i]);\n        }\n    };\n    PivotButton.prototype.validateDropdown = function (type) {\n        var aggregateType = this.parent.aggregateTypes;\n        if (type !== 'number') {\n            return (aggregateType.indexOf('Count') > -1 || aggregateType.indexOf('DistinctCount') > -1);\n        }\n        else {\n            for (var i = 0; i < aggregateType.length; i++) {\n                if (this.parent.getAllSummaryType().indexOf(aggregateType[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName, field) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('format') },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon && field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.openCalculatedFieldDialog = function (args) {\n        var fieldName = args.target.parentElement.id;\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.isAdaptive && (this.parent.showFieldList &&\n                this.parent.pivotFieldListModule &&\n                !this.parent.pivotFieldListModule.isDestroyed)) {\n                this.parent.pivotFieldListModule.element\n                    .querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).click();\n                this.parent.pivotFieldListModule.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.pivotFieldListModule.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n            }\n            else {\n                if (!this.parent.isAdaptive) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n            }\n        }\n        else if (this.parent.getModuleName() === 'pivotfieldlist') {\n            if (this.parent.isAdaptive) {\n                this.parent.dialogRenderer.adaptiveElement.select(4);\n                /* tslint:disable-next-line:no-any */\n                this.parent.calculatedFieldModule\n                    .updateAdaptiveCalculatedField(true, fieldName);\n                this.parent.calculatedFieldModule.buttonCall = true;\n            }\n            else {\n                if (this.parent.dialogRenderer.fieldListDialog) {\n                    this.parent.dialogRenderer.fieldListDialog.hide();\n                    addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                }\n                this.parent.notify(events.initCalculatedField, { edit: true, fieldName: fieldName });\n                if (this.parent.calculatedFieldModule) {\n                    this.parent.calculatedFieldModule.buttonCall = true;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.createDraggable = function (field, target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' ?\n                !(this.parent.groupingBarSettings.allowDragAndDrop && field.allowDragAndDrop) ?\n                    '.' + cls.PIVOT_BUTTON_CLASS : '' : !field.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (field, pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('drag'),\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS + ' ' + (field.allowDragAndDrop ? '' : cls.DRAG_DISABLE_CLASS)\n        });\n        dragWrapper.appendChild(dragElement);\n        pivotButton.appendChild(dragWrapper);\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName, field) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('sort') },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            if (this.parent.getModuleName() === 'pivotview') {\n                if (field.showSortIcon && this.parent.groupingBarSettings.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n            else {\n                if (field.showSortIcon) {\n                    removeClass([spanElement], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([spanElement], cls.ICON_DISABLE);\n                }\n            }\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis, field) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('filter'),\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter) &&\n                this.parent.groupingBarSettings.showFilterIcon && field.showFilterIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        else {\n            if (field.showFilterIcon && (((this.parent.dataSourceSettings.allowLabelFilter ||\n                this.parent.dataSourceSettings.allowValueFilter) && axis !== 'filters') ||\n                this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === 'include') {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === 'exclude') {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        var _this = this;\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        var fieldInfo = PivotUtil.getFieldInfo(element.getAttribute('data-uid'), this.parent);\n        var dragEventArgs = {\n            fieldName: fieldInfo.fieldName,\n            fieldItem: fieldInfo.fieldItem,\n            axis: fieldInfo.axis,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldDragStart, dragEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.isDragging = true;\n                var engineModule = void 0;\n                if (_this.parent.dataType === 'olap') {\n                    engineModule = _this.parent.olapEngineModule;\n                }\n                else {\n                    engineModule = _this.parent.engineModule;\n                }\n                var data = engineModule.fieldList[element.getAttribute('data-uid')];\n                var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n                addClass([element], cls.SELECTED_NODE_CLASS);\n                if (dragItem && (_this.parent.getModuleName() === 'pivotfieldlist' &&\n                    _this.parent.renderMode) === 'Popup') {\n                    var fieldListPopup = _this.parent;\n                    dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n                }\n                if (data && data.aggregateType === 'CalculatedField') {\n                    for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                        var axisContent = axis_1[_i];\n                        addClass([_this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                    }\n                }\n                if (isBlazor()) {\n                    e.bindEvents(e.dragElement);\n                }\n            }\n            else {\n                _this.parent.isDragging = false;\n                _this.draggable.intDestroy(e.event);\n                detach(dragItem);\n            }\n        });\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20, } });\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        /* tslint:disable-next-line:max-line-length */\n        if (args.target.classList && (args.target.classList.contains(cls.GROUP_CHART_VALUE) || args.target.classList.contains(cls.GROUP_CHART_VALUE_DROPDOWN))) {\n            args.target = this.parent.element.querySelector('.' + cls.GROUP_CHART_ROW);\n        }\n        if (args.target.classList && args.element && (args.target.classList.contains(cls.GROUP_CHART_COLUMN) || args.target.classList.contains(cls.GROUP_CHART_COLUMN_DROPDOWN))) {\n            args.cancel = true;\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element) || args.cancel) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            var thisObj = this;\n            //setTimeout(() => {\n            thisObj.parent.axisFieldModule.render();\n            //});\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        var buttonElement = closest(args.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        var fieldInfo = PivotUtil.getFieldInfo((buttonElement ? buttonElement.id : ''), this.parent);\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS)) &&\n            !(args.target.classList.contains(cls.DRAG_CLASS)) &&\n            (buttonElement && fieldInfo.fieldItem && (fieldInfo.fieldItem.showSortIcon ||\n                isNullOrUndefined(fieldInfo.fieldItem.showSortIcon)))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            /* tslint:disable-next-line:max-line-length */\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n                    this.updateDataSource(true);\n                }\n                var thisObj = this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n        }\n    };\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        pivotObj.showWaitingPopup();\n        pivotObj.mouseEventArgs = args;\n        pivotObj.filterTargetID = this.parent.pivotCommon.moduleName !== 'pivotfieldlist' ?\n            this.parent.element : document.getElementById(this.parent.pivotCommon.parentID + '_Wrapper');\n        var fieldName = args.target.parentElement.id;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType === 'pivot') {\n            var $this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                $this_1.parent.engineModule.fieldList[fieldName].dateMember = dateMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].formattedMembers = formattedMembers;\n                $this_1.parent.engineModule.fieldList[fieldName].members = members;\n                $this_1.updateFilterEvents();\n            });\n        }\n        else if (pivotObj.dataSourceSettings.mode === 'Server') {\n            if (this.parent.engineModule.fieldList[fieldName].members && Object.keys(this.parent.engineModule.fieldList[fieldName].members).length > 0) {\n                this.updateFilterEvents();\n            }\n            else {\n                pivotObj.getEngine('fetchFieldMembers', null, null, null, null, null, fieldName);\n            }\n        }\n        else {\n            this.updateFilterEvents();\n        }\n        /* tslint:enable */\n    };\n    /** @hidden */\n    PivotButton.prototype.updateFilterEvents = function () {\n        /* tslint:disable */\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        this.parent.pivotCommon.eventBase.updateFiltering(pivotObj.mouseEventArgs);\n        var target = pivotObj.mouseEventArgs.target;\n        this.fieldName = target.parentElement.id;\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close = this.removeFilterDialog.bind(this);\n            // this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n            // this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n            // this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n            this.bindDialogEvents();\n        }\n        pivotObj.hideWaitingPopup();\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                /* tslint:disable:max-line-length */\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n                /* tslint:enable:max-line-length */\n            },\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var _this = this;\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' && !isBlazor() ? new Date(operand1) : operand1,\n            value2: filterType === 'date' && !isBlazor() ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = dialogElement.querySelector('#' + this.parent.element.id + '_' + inputElementString);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filterEventArgs = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings)\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                filterItem = observedArgs.filterSettings;\n                if (filterObject) {\n                    // this.removeDataSourceSettings(fieldName);\n                    filterObject = filterObject.properties ?\n                        filterObject.properties : filterObject;\n                    filterObject.type = filterItem.type;\n                    filterObject.measure = filterItem.measure;\n                    filterObject.condition = filterItem.condition;\n                    filterObject.value1 = filterItem.value1;\n                    filterObject.value2 = filterItem.value2;\n                    if (_this.parent.dataType === 'olap') {\n                        filterObject.selectedField = filterItem.selectedField;\n                    }\n                }\n                else {\n                    _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n                }\n            }\n            if (type !== 'Value') {\n                _this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, true);\n                _this.updateDataSource(true);\n            }\n        });\n    };\n    PivotButton.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n            setTimeout(this.setFocus.bind(this));\n        }\n        if (document.getElementById(this.parentElement.id + '_EditorTreeView')) {\n            remove(document.getElementById(this.parentElement.id + '_EditorTreeView'));\n        }\n    };\n    PivotButton.prototype.setFocus = function () {\n        if (this.parentElement) {\n            var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var _this = this;\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldInfo = PivotUtil.getFieldInfo(fieldName, this.parent);\n        var removeFieldArgs = {\n            cancel: false, fieldName: fieldName,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            fieldItem: fieldInfo.fieldItem, axis: fieldInfo.axis\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.fieldRemove, removeFieldArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (target.parentElement.getAttribute('isvalue') === 'true') {\n                    _this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    if (_this.parent.dataType === 'olap') {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                else {\n                    _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n                    if (_this.parent.dataType === 'olap' && _this.parent.dataSourceSettings.values.length === 0) {\n                        _this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n                    }\n                }\n                if (_this.parent.getModuleName() === 'pivotfieldlist') {\n                    _this.parent.axisFieldModule.render();\n                }\n                _this.updateDataSource();\n            }\n        });\n    };\n    /** @hidden */\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-uid') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].index;\n            if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                this.parent.pivotCommon.currentTreeItems[pos].isSelected = args.action === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')].isSelected = args.action === 'check';\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        /* tslint:disable:no-any */\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.id] = item.id;\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.id] !== undefined) {\n                item.isSelected = state === 'check';\n                this.parent.pivotCommon.currentTreeItemsPos[item.id].isSelected = state === 'check';\n            }\n        }\n        /* tslint:enable:no-any */\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var _this = this;\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.id);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterEventArgs = {\n            filterSettings: filterItem,\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.memberFiltering, filterEventArgs, function (observedArgs) {\n            filterItem = observedArgs.filterSettings;\n            if (!observedArgs.cancel) {\n                var filterObject = PivotUtil.getFilterItemByName(fieldName, _this.parent.dataSourceSettings.filterSettings);\n                if (filterObject) {\n                    for (var i = 0; i < _this.parent.dataSourceSettings.filterSettings.length; i++) {\n                        if (_this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                            _this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                _this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            _this.dialogPopUp.close();\n            if (!observedArgs.cancel) {\n                _this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n                if (!isNodeUnChecked) {\n                    _this.removeDataSourceSettings(fieldName);\n                }\n                _this.parent.lastFilterInfo = filterItem;\n                _this.updateDataSource(true);\n                var thisObj = _this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n            var pivotButtons = [].slice.call(_this.parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_2 = pivotButtons; _i < pivotButtons_2.length; _i++) {\n                var item = pivotButtons_2[_i];\n                if (item.getAttribute('data-uid') === fieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        });\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_3 = pivotButtons; _i < pivotButtons_3.length; _i++) {\n            var item = pivotButtons_3[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.add(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog, this);\n        }\n        EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        if (element.querySelector('.' + cls.CALC_EDIT) !== null) {\n            EventHandler.remove(element.querySelector('.' + cls.CALC_EDIT), 'click', this.openCalculatedFieldDialog);\n        }\n        EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        if (this.menuOption) {\n            this.menuOption.destroy();\n        }\n        this.removeEventListener();\n        this.isDestroyed = true;\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        /* tslint:disable */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        /* tslint:enable */\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        if (isNullOrUndefined(this.parent.dataSourceSettings.dataSource) && isNullOrUndefined(this.parent.dataSourceSettings.url)) {\n            this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, true);\n        }\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (fields[len]) {\n                var args = {\n                    field: fields[len],\n                    axis: axis[len].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex, getInstance } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { DataSourceSettings } from '../../pivotview/model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /* tslint:enable */\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotFieldListModel} options?\n     * @param  {string|HTMLButtonElement} element?\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.pivotChange = false;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this.isPopupView = false;\n        /** @hidden */\n        _this.enableValueSorting = false;\n        _this.request = new XMLHttpRequest();\n        _this.remoteData = [];\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        return modules;\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getAllSummaryType = function () {\n        return ['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index',\n            'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal',\n            'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal',\n            'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            clearCalculatedField: 'Clear edited field info',\n            editCalculatedField: 'Edit calculated field',\n            sortAscending: 'Sort ascending order',\n            sortDescending: 'Sort descending order',\n            sortNone: 'Sort data order',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            /* tslint:enable */\n            apply: 'Apply',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption',\n            summarizeValuesBy: 'Summarize values by',\n            baseField: 'Base field',\n            baseItem: 'Base item',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            numberFormatString: 'Example: C, P, 0000 %, ###0.##0#, etc.',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group',\n            removeCalculatedField: 'Are you sure you want to delete this calculated field?',\n            yes: 'Yes',\n            no: 'No',\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.captionData = [];\n        this.wireEvent();\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n        var localeObj = this.pivotGridModule ? this.pivotGridModule.localeObj :\n            (this.staticPivotGridModule ? this.staticPivotGridModule.localeObj : this.localeObj);\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: localeObj\n            };\n        }\n        return customProperties;\n    };\n    /* tslint:disable */\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        if (this.dataType === 'pivot' && this.dataSourceSettings.url && this.dataSourceSettings.url !== '') {\n            if (this.dataSourceSettings.mode === 'Server') {\n                this.guid = PivotUtil.generateUUID();\n                this.getEngine('initialRender', null, null, null, null, null, null);\n            }\n            else {\n                this.request.open(\"GET\", this.dataSourceSettings.url, true);\n                this.request.withCredentials = false;\n                this.request.onreadystatechange = this.onReadyStateChange.bind(this);\n                this.request.setRequestHeader(\"Content-type\", \"text/plain\");\n                this.request.send(null);\n            }\n        }\n        else {\n            this.initialLoad();\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotFieldList.prototype.getEngine = function (action, drillItem, sortItem, aggField, cField, filterItem, memberName, rawDataArgs, editArgs) {\n        this.currentAction = action;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var customProperties = {\n            pageSettings: this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined,\n            enableValueSorting: this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined,\n            enableDrillThrough: this.pivotGridModule ?\n                (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true,\n            locale: JSON.stringify(PivotUtil.getLocalizedObject(this))\n        };\n        var params = {\n            dataSourceSettings: JSON.parse(this.getPersistData()).dataSourceSettings,\n            action: action,\n            customProperties: customProperties,\n            drillItem: drillItem,\n            sortItem: sortItem,\n            aggregatedItem: aggField,\n            calculatedItem: cField,\n            filterItem: filterItem,\n            memberName: memberName,\n            fetchRawDataArgs: rawDataArgs,\n            editArgs: editArgs,\n            hash: this.guid\n        };\n        this.request.open(\"POST\", this.dataSourceSettings.url, true);\n        this.request.withCredentials = false;\n        this.request.onreadystatechange = this.onSuccess.bind(this);\n        this.request.setRequestHeader(\"Content-type\", \"application/json\");\n        this.request.send(JSON.stringify(params));\n    };\n    PivotFieldList.prototype.onSuccess = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            try {\n                var engine = JSON.parse(this.request.responseText);\n                if (this.currentAction === 'fetchFieldMembers') {\n                    var currentMembers = JSON.parse(engine.members);\n                    var dateMembers = [];\n                    var formattedMembers = {};\n                    var members = {};\n                    for (var i = 0; i < currentMembers.length; i++) {\n                        dateMembers.push({ formattedText: currentMembers[i].FormattedText, actualText: currentMembers[i].ActualText });\n                        formattedMembers[currentMembers[i].FormattedText] = {};\n                        members[currentMembers[i].ActualText] = {};\n                    }\n                    this.engineModule.fieldList[engine.memberName].dateMember = dateMembers;\n                    this.engineModule.fieldList[engine.memberName].formattedMembers = formattedMembers;\n                    this.engineModule.fieldList[engine.memberName].members = members;\n                    this.pivotButtonModule.updateFilterEvents();\n                }\n                else {\n                    var fList = PivotUtil.formatFieldList(JSON.parse(engine.fieldList));\n                    if (this.engineModule.fieldList) {\n                        var keys = Object.keys(this.engineModule.fieldList);\n                        for (var i = 0; i < keys.length; i++) {\n                            if (this.engineModule.fieldList[keys[i]] && fList[keys[i]]) {\n                                fList[keys[i]].dateMember = this.engineModule.fieldList[keys[i]].dateMember;\n                                fList[keys[i]].formattedMembers = this.engineModule.fieldList[keys[i]].formattedMembers;\n                                fList[keys[i]].members = this.engineModule.fieldList[keys[i]].members;\n                            }\n                        }\n                    }\n                    this.engineModule.fieldList = fList;\n                    this.engineModule.fields = JSON.parse(engine.fields);\n                    this.engineModule.rowCount = JSON.parse(engine.pivotCount).RowCount;\n                    this.engineModule.columnCount = JSON.parse(engine.pivotCount).ColumnCount;\n                    this.engineModule.rowStartPos = JSON.parse(engine.pivotCount).RowStartPosition;\n                    this.engineModule.colStartPos = JSON.parse(engine.pivotCount).ColumnStartPosition;\n                    this.engineModule.rowFirstLvl = JSON.parse(engine.pivotCount).RowFirstLevel;\n                    this.engineModule.colFirstLvl = JSON.parse(engine.pivotCount).ColumnFirstLevel;\n                    var rowPos = void 0;\n                    var pivotValues = PivotUtil.formatPivotValues(JSON.parse(engine.pivotValue));\n                    for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n                        if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                            rowPos = rCnt;\n                            break;\n                        }\n                    }\n                    this.engineModule.headerContent = PivotUtil.frameContent(pivotValues, 'header', rowPos, this);\n                    this.engineModule.pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n                    var valueSort = JSON.parse(engine.valueSortSettings);\n                    this.engineModule.valueSortSettings = {\n                        headerText: valueSort.HeaderText,\n                        headerDelimiter: valueSort.HeaderDelimiter,\n                        sortOrder: valueSort.SortOrder,\n                        columnIndex: valueSort.ColumnIndex\n                    };\n                    this.engineModule.pivotValues = pivotValues;\n                }\n            }\n            catch (error) {\n                this.engineModule.pivotValues = [];\n            }\n            if (this.currentAction !== 'fetchFieldMembers') {\n                this.initEngine();\n                if (this.calculatedFieldModule && this.calculatedFieldModule.isRequireUpdate) {\n                    this.calculatedFieldModule.endDialog();\n                    this.calculatedFieldModule.isRequireUpdate = false;\n                }\n                if (this.pivotGridModule && this.pivotGridModule.calculatedFieldModule && this.pivotGridModule.calculatedFieldModule.isRequireUpdate) {\n                    this.pivotGridModule.calculatedFieldModule.endDialog();\n                    this.pivotGridModule.calculatedFieldModule.isRequireUpdate = false;\n                }\n            }\n        }\n    };\n    PivotFieldList.prototype.onReadyStateChange = function () {\n        if (this.request.readyState === XMLHttpRequest.DONE) {\n            var dataSource = [];\n            if (this.dataSourceSettings.type === 'CSV') {\n                var jsonObject = this.request.responseText.split(/\\r?\\n|\\r/);\n                for (var i = 0; i < jsonObject.length; i++) {\n                    if (!isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {\n                        dataSource.push(jsonObject[i].split(','));\n                    }\n                }\n            }\n            else {\n                try {\n                    dataSource = JSON.parse(this.request.responseText);\n                }\n                catch (error) {\n                    dataSource = [];\n                }\n            }\n            if (isBlazor() && dataSource.length > 0) {\n                this.remoteData = dataSource;\n            }\n            else if (dataSource.length > 0) {\n                this.setProperties({ dataSourceSettings: { dataSource: dataSource } }, true);\n            }\n            this.initialLoad();\n        }\n    };\n    PivotFieldList.prototype.initialLoad = function () {\n        var _this = this;\n        /* tslint:disable-next-line:max-line-length */\n        this.trigger(events.load, { dataSourceSettings: isBlazor() ? PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings) : this.dataSourceSettings }, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this.dataSourceSettings.dataSource;\n            }\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass);\n            }\n            _this.notify(events.initialLoad, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Binding events to the Pivot Field List element.\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    if (isBlazor()) {\n                        break;\n                    }\n                    else {\n                        _super.prototype.refresh.call(this);\n                    }\n                    break;\n                case 'dataSourceSettings':\n                    if (!isNullOrUndefined(newProp.dataSourceSettings.dataSource)) {\n                        if (newProp.dataSourceSettings.dataSource.length === 0 && !isNullOrUndefined(this.staticPivotGridModule)) {\n                            this.savedDataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.staticPivotGridModule.dataSourceSettings);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { rows: [] } }, true);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { columns: [] } }, true);\n                            this.staticPivotGridModule.setProperties({ dataSourceSettings: { values: [] } }, true);\n                            this.engineModule.fieldList = {};\n                            this.staticPivotGridModule.pivotValues = [];\n                        }\n                        this.initEngine();\n                        if (!isNullOrUndefined(this.savedDataSourceSettings)) {\n                            PivotUtil.updateDataSourceSettings(this.staticPivotGridModule, this.savedDataSourceSettings);\n                            this.savedDataSourceSettings = undefined;\n                        }\n                    }\n                    if (PivotUtil.isButtonIconRefesh(prop, oldProp, newProp)) {\n                        if (this.isPopupView && this.pivotGridModule &&\n                            this.pivotGridModule.showGroupingBar && this.pivotGridModule.groupingBarModule) {\n                            var filters = PivotUtil.cloneFieldSettings(this.dataSourceSettings.filters);\n                            var values = PivotUtil.cloneFieldSettings(this.dataSourceSettings.values);\n                            var rows = PivotUtil.cloneFieldSettings(this.dataSourceSettings.rows);\n                            var columns = PivotUtil.cloneFieldSettings(this.dataSourceSettings.columns);\n                            /* tslint:disable-next-line:max-line-length */\n                            this.pivotGridModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                            this.pivotGridModule.axisFieldModule.render();\n                        }\n                        else if (!this.isPopupView && this.staticPivotGridModule && !this.staticPivotGridModule.isDestroyed) {\n                            var pivot = this.staticPivotGridModule;\n                            if (pivot.showGroupingBar && pivot.groupingBarModule) {\n                                pivot.axisFieldModule.render();\n                            }\n                            if (pivot.showFieldList && pivot.pivotFieldListModule) {\n                                var rows = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.rows);\n                                var columns = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.columns);\n                                var values = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.values);\n                                var filters = PivotUtil.cloneFieldSettings(pivot.dataSourceSettings.filters);\n                                /* tslint:disable-next-line:max-line-length */\n                                pivot.pivotFieldListModule.setProperties({ dataSourceSettings: { rows: rows, columns: columns, values: values, filters: filters } }, true);\n                                pivot.pivotFieldListModule.axisFieldModule.render();\n                                if (pivot.pivotFieldListModule.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                                    pivot.pivotFieldListModule.notify(events.treeViewUpdate, {});\n                                }\n                            }\n                        }\n                        this.axisFieldModule.render();\n                        if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                            this.notify(events.treeViewUpdate, {});\n                        }\n                    }\n                    break;\n                case 'aggregateTypes':\n                    if (this.axisFieldModule) {\n                        this.axisFieldModule.render();\n                    }\n                    if (this.pivotGridModule && this.pivotGridModule.axisFieldModule) {\n                        this.pivotGridModule.setProperties({ aggregateTypes: newProp.aggregateTypes }, true);\n                        this.pivotGridModule.axisFieldModule.render();\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        if (this.dataType === 'pivot') {\n            var data = !isNullOrUndefined(this.dataSourceSettings.dataSource) ? this.dataSourceSettings.dataSource[0] :\n                !isNullOrUndefined(this.engineModule.data) ? this.engineModule.data[0] : undefined;\n            if (data && this.pivotCommon) {\n                var isArray = Object.prototype.toString.call(data) == '[object Array]';\n                if (isArray && this.dataSourceSettings.type === 'JSON') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidJSON'));\n                    return;\n                }\n                else if (!isArray && this.dataSourceSettings.type === 'CSV') {\n                    this.pivotCommon.errorDialog.createErrorDialog(this.localeObj.getConstant('error'), this.localeObj.getConstant('invalidCSV'));\n                    return;\n                }\n            }\n        }\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = void 0;\n                    if (isBlazor()) {\n                        pivotDataSet = _this.engineModule.data;\n                    }\n                    else {\n                        pivotDataSet = _this.dataSourceSettings.dataSource;\n                    }\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : PivotUtil.getClonedData(pivotDataSet));\n                    if (isBlazor()) {\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                    }\n                    else {\n                        _this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                        _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                        _this.setProperties({ dataSourceSettings: { dataSource: pivotDataSet } }, true);\n                    }\n                }\n                var customProperties = _this.frameCustomProperties();\n                customProperties.enableValueSorting = _this.staticPivotGridModule ?\n                    _this.staticPivotGridModule.enableValueSorting : _this.enableValueSorting;\n                if (_this.dataSourceSettings.mode !== 'Server') {\n                    _this.engineModule.renderEngine(_this.dataSourceSettings, customProperties, _this.getValueCellInfo.bind(_this));\n                }\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                _this.olapEngineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(_this.olapEngineModule.fieldListData, _this.olapEngineModule.fieldList));\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                this.dataSourceSettings.dataSource.length > 0) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                if (this.dataType === 'pivot' && this.remoteData.length > 0) {\n                    this.engineModule.data = this.remoteData;\n                    this.initEngine();\n                }\n                else {\n                    setTimeout(this.getData.bind(this), 100);\n                }\n            }\n        }\n        else if (isBlazor() && this.dataType === 'pivot' &&\n            this.engineModule.data && this.engineModule.data.length > 0) {\n            this.initEngine();\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Wrapper'));\n        }\n        this.renderModule.render();\n        this.fieldListSpinnerElement = this.renderMode === 'Popup' ?\n            this.dialogRenderer.fieldListDialog.element : this.element.querySelector('.e-pivotfieldlist-wrapper');\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.fieldListSpinnerElement, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement }, this.createElement);\n        }\n        var args;\n        args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: document.getElementById(this.element.id + '_Wrapper'),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        this.getFields(dataSourceSettings);\n        if (this.captionData.length > 0) {\n            var lnt = this.captionData.length;\n            var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            while (lnt--) {\n                if (this.captionData[lnt]) {\n                    for (var _i = 0, _a = this.captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        /* tslint:disable-next-line:max-line-length */\n        this.captionData = [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values, dataSourceSettings.filters];\n    };\n    /* tslint:disable */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        var _this = this;\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && pivot.pivotGridModule.enableVirtualization ?\n            pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        control.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    if (!isSorted) {\n                        customProperties.enableValueSorting = pivot.staticPivotGridModule ?\n                            pivot.staticPivotGridModule.enableValueSorting : pivot.enableValueSorting;\n                    }\n                    else {\n                        pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                        customProperties.enableValueSorting = false;\n                    }\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                        var interopArguments = {};\n                        if (isSorted) {\n                            pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            if ((isBlazor())) {\n                                interopArguments = { 'key': 'onSort', 'arg': pivot.lastSortInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onSort(pivot.lastSortInfo);\n                            }\n                            pivot.lastSortInfo = {};\n                        }\n                        if (isFiltered) {\n                            if (isBlazor()) {\n                                var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                                interopArguments = {\n                                    'key': 'onFilter',\n                                    'arg': { 'lastFilterInfo': pivot.lastFilterInfo, 'filterSettings': dataArgs }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (isBlazor()) {\n                                interopArguments = { 'key': 'onAggregation', 'arg': pivot.lastAggregationInfo };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (isBlazor()) {\n                                interopArguments = {\n                                    'key': 'onCalcOperation',\n                                    'arg': {\n                                        lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                        values: pivot.dataSourceSettings.values,\n                                        calculatedFieldSettings: pivot.dataSourceSettings.calculatedFieldSettings\n                                    }\n                                };\n                            }\n                            else if (control.dataSourceSettings.mode === 'Server') {\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        if (isBlazor()) {\n                            var args_1 = window['sfBlazor'].copyWithoutCircularReferences([interopArguments['arg']], interopArguments['arg']);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", interopArguments['key'], args_1).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                    if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                                        pivot.calculatedFieldModule.endDialog();\n                                        pivot.calculatedFieldModule.isRequireUpdate = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        if (isBlazor() && pageSettings) {\n                            var dataArgs = window['sfBlazor'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'renderEngine', { 'dataSourceSettings': dataArgs, 'customProperties': customProperties }).then(function (data) {\n                                if (data === 0) {\n                                    _this.pivotCommon.errorDialog.createErrorDialog(_this.localeObj.getConstant('error'), (pivot.dataSourceSettings.type === 'CSV' ?\n                                        _this.localeObj.getConstant('invalidCSV') : _this.localeObj.getConstant('invalidJSON')));\n                                    return;\n                                }\n                                else {\n                                    pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                                    pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                }\n                            });\n                        }\n                        else if (pivot.dataSourceSettings.mode === 'Server') {\n                            if (isSorted)\n                                control.getEngine('onSort', null, pivot.lastSortInfo, null, null, null, null);\n                            else if (isAggChange)\n                                control.getEngine('onAggregation', null, null, pivot.lastAggregationInfo, null, null, null);\n                            else if (isCalcChange)\n                                control.getEngine('onCalcOperation', null, null, null, pivot.lastCalcFieldInfo, null, null);\n                            else if (isFiltered)\n                                control.getEngine('onFilter', null, null, null, null, pivot.lastFilterInfo, null);\n                            else\n                                control.getEngine('onDrop', null, null, null, null, null, null);\n                            pivot.lastSortInfo = {};\n                            pivot.lastAggregationInfo = {};\n                            pivot.lastCalcFieldInfo = {};\n                            pivot.lastFilterInfo = {};\n                        }\n                        else {\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        }\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed);\n                }\n                if (!(isBlazor() && pageSettings)) {\n                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                }\n            }\n            else {\n                pivot.axisFieldModule.render();\n                pivot.isRequiredUpdate = false;\n            }\n            if (!(isBlazor() && pageSettings)) {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n        });\n        //});\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var control = pivot.isPopupView ? pivot.pivotGridModule : pivot;\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            var dataSource = pivot.dataSourceSettings.dataSource;\n            if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                observedArgs.dataSourceSettings.dataSource = dataSource;\n            }\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = isBlazor() ? pivot.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = isBlazor() ? pivot.engineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = extend({}, pivot.dataSourceSettings, null, true);\n                    pivot.clonedFieldList = extend({}, pivot.pivotFieldList, null, true);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (pivot.renderMode === 'Popup' && pivot.allowDeferLayoutUpdate) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                /* tslint:disable:align */\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n                /* tslint:enable:align */\n            }\n            if (pivot.renderMode === 'Popup' && pivot.pivotGridModule &&\n                pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n    };\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n        }\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     * @method updateControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            if (isBlazor() && !this.isPopupView) {\n                PivotUtil.updateDataSourceSettings(this, PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings));\n            }\n            else {\n                this.setProperties({ dataSourceSettings: control.dataSourceSettings }, true);\n            }\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.renderMode === 'Popup') {\n                this.pivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (this.renderMode === 'Fixed' && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n                this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n            }\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     * @method refreshTargetControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            control.clonedDataSet = this.clonedDataSet;\n            if (isBlazor()) {\n                PivotUtil.updateDataSourceSettings(control, PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings));\n            }\n            else {\n                control.setProperties({ dataSourceSettings: this.dataSourceSettings }, true);\n            }\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            if (!this.pivotChange) {\n                control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            }\n            var eventArgs = {\n                dataSourceSettings: PivotUtil.getClonedDataSourceSettings(control.dataSourceSettings),\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (!this.isPopupView) {\n                this.staticPivotGridModule = control;\n            }\n            if (control.enableVirtualization && isBlazor()) {\n                control.renderPivotGrid();\n            }\n            else {\n                control.dataBind();\n            }\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var control = this.isPopupView ? this.pivotGridModule : this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        control.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n            }\n        });\n    };\n    /**\n     * Destroys the Field Table component.\n     * @method destroy\n     * @return {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.allowDeferLayoutUpdate && this.dialogRenderer &&\n            this.dialogRenderer.deferUpdateCheckBox && !this.dialogRenderer.deferUpdateCheckBox.isDestroyed) {\n            this.dialogRenderer.deferUpdateCheckBox.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        if (this.renderMode === 'Popup') {\n            if (this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.dialogRenderer.fieldListDialog.destroy();\n            }\n            if (document.getElementById(this.element.id + '_Wrapper')) {\n                remove(document.getElementById(this.element.id + '_Wrapper'));\n            }\n        }\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(['Sum', 'Count', 'DistinctCount', 'Product', 'Min', 'Max', 'Avg', 'Index', 'PopulationVar', 'SampleVar', 'PopulationStDev', 'SampleStDev', 'RunningTotals', 'PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentRowTotal', 'DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'])\n    ], PivotFieldList.prototype, \"aggregateTypes\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberEditorOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"calculatedFieldCreate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"fieldRemove\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, isBlazor } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /** Constructor for calculatedfield module */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.inputObj = null;\n        this.treeObj = null;\n        this.droppable = null;\n        this.menuObj = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.formatText = null;\n        this.formatType = null;\n        this.fieldType = null;\n        this.parentHierarchy = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n        this.confirmPopUp = null;\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedfield';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-hover.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                case 'shiftE':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node);\n                    }\n                    break;\n                case 'delete':\n                    if (node.tagName === 'LI' && !node.querySelector('.e-list-icon.e-format') && !node.querySelector('.e-list-icon').classList.contains('.e-icons') && (node.querySelector('.' + cls.GRID_REMOVE) &&\n                        node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon'))) {\n                        this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n                    }\n                    break;\n                case 'enter':\n                    var field = node.getAttribute('data-field');\n                    var type = node.getAttribute('data-type');\n                    var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n                    if (this.parent.dataType === 'pivot') {\n                        if (dropField.value === '') {\n                            if (type === CALC) {\n                                dropField.value = node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                        else if (dropField.value !== '') {\n                            if (type === CALC) {\n                                dropField.value = dropField.value + node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                    }\n                    else {\n                        if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                            this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                            field = this.parent.olapEngineModule.fieldList[field].tag;\n                        }\n                        if (dropField.value === '') {\n                            dropField.value = field;\n                        }\n                        else if (dropField.value !== '') {\n                            dropField.value = dropField.value + field;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {NodeClickEventArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = closest(e.event.target, 'li');\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED) ||\n            e.event.target.classList.contains(cls.GRID_REMOVE)) {\n            if (!this.parent.isAdaptive) {\n                this.displayMenu(node, e.node, e.event.target);\n            }\n            else if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n                if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDIT) && e.event.target.classList.contains(cls.CALC_EDIT)) {\n                    this.isEdit = true;\n                    this.currentFieldName = node.getAttribute('data-field');\n                    this.fieldText = node.getAttribute('data-caption');\n                    this.formulaText = node.getAttribute('data-formula');\n                    this.formatType = node.getAttribute('data-formatString');\n                    this.formatText = this.formatType === 'Custom' ? node.getAttribute('data-customString') : null;\n                    this.fieldType = node.getAttribute('data-membertype');\n                    this.parentHierarchy = this.fieldType === 'Dimension' ? node.getAttribute('data-hierarchy') : null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.e-list-edit-icon').classList.contains(cls.CALC_EDITED) && e.event.target.classList.contains(cls.CALC_EDITED)) {\n                    this.isEdit = false;\n                    this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                    this.parentHierarchy = this.fieldType = this.formatType = null;\n                    addClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDIT);\n                    removeClass([node.querySelector('.e-list-edit-icon')], cls.CALC_EDITED);\n                }\n                else if (node.tagName === 'LI' && node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-icons') && e.event.target.classList.contains(cls.GRID_REMOVE)) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, e.node);\n                }\n            }\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Trigger while click treeview icon.\n     * @param  {AccordionClickArgs} e\n     * @returns void\n     */\n    CalculatedField.prototype.accordionClickHandler = function (e) {\n        if (e.item && e.item.iconCss.indexOf('e-list-icon') !== -1 &&\n            closest(e.originalEvent.target, '.e-acrdn-header-icon')) {\n            var node = closest(e.originalEvent.target, '.e-acrdn-header').querySelector('.' + cls.CALCCHECK);\n            var fieldName = node.getAttribute('data-field');\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            var optionElement = closest(e.originalEvent.target, '.e-acrdn-header-icon');\n            if (optionElement.querySelector('.' + cls.CALC_EDIT) && e.originalEvent.target.classList.contains(cls.CALC_EDIT)) {\n                this.isEdit = true;\n                this.currentFieldName = this.fieldText = fieldName;\n                this.formulaText = this.parent.engineModule.fieldList[fieldName].formula;\n                this.formatText = formatObj ? formatObj.format : '';\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n            }\n            else if (optionElement.querySelector('.' + cls.CALC_EDITED) &&\n                e.originalEvent.target.classList.contains(cls.CALC_EDITED)) {\n                this.isEdit = false;\n                this.fieldText = this.formatText = this.formulaText = this.currentFieldName = null;\n                addClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([optionElement.querySelector('.e-list-icon')], cls.CALC_EDITED);\n            }\n            else if (optionElement.querySelector('.' + cls.GRID_REMOVE) &&\n                e.originalEvent.target.classList.contains(cls.GRID_REMOVE)) {\n                this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), {}, true, node);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionCreated = function () {\n        var allElement = this.accordion.element.querySelectorAll('.e-acrdn-item');\n        for (var i = 0; i < allElement.length; i++) {\n            if (allElement[i].querySelector('.' + cls.CALC_EDIT) || allElement[i].querySelector('.' + cls.CALC_EDITED)) {\n                var element = createElement('span', {\n                    className: 'e-list-icon ' + cls.GRID_REMOVE + ' e-icons',\n                });\n                append([element], allElement[i].querySelector('.e-acrdn-header-icon'));\n            }\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     * @param  {HTMLElement} node\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.displayMenu = function (node, treeNode, target) {\n        var edit = target ? target.classList.contains(cls.CALC_EDIT) : true;\n        var edited = target ? target.classList.contains(cls.CALC_EDITED) : true;\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'pivot' && node.querySelector('.e-list-icon.e-format') &&\n            node.querySelector('.e-list-icon.e-format').classList.contains(cls.ICON) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.GRID_REMOVE) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n            if (this.menuObj && !this.menuObj.isDestroyed) {\n                this.menuObj.destroy();\n            }\n            this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n            this.openContextMenu(node);\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDIT) &&\n            node.querySelector('.' + cls.CALC_EDIT).classList.contains('e-list-icon') && edit ||\n            (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active') && ((target && !target.classList.contains(cls.GRID_REMOVE)) || !target)))) {\n            this.isEdit = true;\n            var fieldName = node.getAttribute('data-field');\n            var caption = node.getAttribute('data-caption');\n            this.currentFieldName = fieldName;\n            this.inputObj.value = caption;\n            this.inputObj.dataBind();\n            var formatString = node.getAttribute('data-formatString');\n            var dialogElement = this.dialog.element;\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            if (this.parent.dataType === 'olap') {\n                var memberType = node.getAttribute('data-membertype');\n                var parentHierarchy = node.getAttribute('data-hierarchy');\n                var expression = node.getAttribute('data-formula');\n                var customString = node.getAttribute('data-customString');\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('caption');\n                document.querySelector('#' + this.parentID + 'droppable').value = expression;\n                memberTypeDrop.readonly = true;\n                memberTypeDrop.value = memberType;\n                memberTypeDrop.dataBind();\n                if (memberType === 'Dimension') {\n                    hierarchyDrop.value = parentHierarchy;\n                }\n                if (formatString !== '') {\n                    formatDrop.value = formatString;\n                    formatDrop.dataBind();\n                }\n                customFormat.value = customString;\n            }\n            else {\n                customFormat.value = formatString;\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clearCalculatedField'));\n                document.querySelector('#' + this.parentID + 'droppable').value = node.getAttribute('data-uid');\n            }\n            customFormat.dataBind();\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.CALC_EDITED) &&\n            node.querySelector('.' + cls.CALC_EDITED).classList.contains('e-list-icon') && edited ||\n            (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.inputObj.dataBind();\n            var dialogElement = this.dialog.element;\n            /* tslint:disable:max-line-length */\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            customFormat.value = '';\n            customFormat.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                /* tslint:enable:max-line-length */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('fieldTitle');\n                hierarchyDrop.index = 0;\n                hierarchyDrop.dataBind();\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n            }\n            else {\n                addClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDIT);\n                removeClass(this.treeObj.element.querySelectorAll('.' + cls.CALC_EDITED), cls.CALC_EDITED);\n                node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n            }\n            document.querySelector('#' + this.parentID + 'droppable').value = '';\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.' + cls.GRID_REMOVE) &&\n            node.querySelector('.' + cls.GRID_REMOVE).classList.contains('e-list-icon')) && !edit && !edited) {\n            var dropField = document.querySelector('#' + this.parentID + 'droppable');\n            var field = {\n                name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n                caption: this.inputObj.value,\n                formula: dropField.value\n            };\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeCalculatedField'), field, true, treeNode);\n        }\n    };\n    CalculatedField.prototype.removeCalcField = function (node) {\n        var dataSourceSettings = this.parent.dataSourceSettings;\n        var fieldName = node.getAttribute('data-field');\n        var calcfields = dataSourceSettings.calculatedFieldSettings;\n        var engineModule;\n        if (this.parent.dataType === 'pivot') {\n            if (!this.parent.isAdaptive) {\n                this.treeObj.removeNodes([node]);\n            }\n            else {\n                var index = parseInt(node.getAttribute('id').split(this.parentID + '_')[1], 10);\n                if (typeof index === 'number') {\n                    this.accordion.removeItem(index);\n                }\n            }\n        }\n        for (var i = 0; i < calcfields.length; i++) {\n            if (calcfields[i] && calcfields[i].name === fieldName) {\n                calcfields.splice(i, 1);\n                break;\n            }\n        }\n        /* tslint:disable:max-line-length */\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n            var fields_1 = engineModule.fieldListData ? engineModule.fieldListData : [];\n            /* tslint:disable:no-any */\n            for (var _i = 0, _a = Object.keys(fields_1); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (fields_1[item].name === fieldName) {\n                    var index = parseInt(item, 10);\n                    if (typeof (index) === 'number') {\n                        fields_1.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            /* tslint:enable:no-any */\n            var parentID = this.treeObj.getNode(node).parentID;\n            this.treeObj.removeNodes([node]);\n            if (calcfields.length <= 0) {\n                this.treeObj.removeNodes([parentID]);\n            }\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fields) {\n            for (var i = 0; i < engineModule.fields.length; i++) {\n                if (engineModule.fields[i] === fieldName) {\n                    engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (engineModule.savedFieldList && engineModule.savedFieldList[fieldName]) {\n            delete engineModule.savedFieldList[fieldName];\n        }\n        if (engineModule.fieldList && engineModule.fieldList[fieldName]) {\n            delete engineModule.fieldList[fieldName];\n        }\n        var formatFields = dataSourceSettings.formatSettings;\n        for (var i = 0; i < formatFields.length; i++) {\n            if (formatFields[i] && formatFields[i].name === fieldName) {\n                formatFields.splice(i, 1);\n                break;\n            }\n        }\n        var fields = [dataSourceSettings.values, dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.filters];\n        for (var i = 0, n = fields.length; i < n; i++) {\n            for (var j = 0, length_1 = fields[i].length; j < length_1; j++) {\n                if (fields[i][j].name === fieldName) {\n                    fields[i].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        /* tslint:enable:max-line-length */\n        if (this.isEdit && this.currentFieldName === fieldName) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n        }\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() !== 'pivotfieldlist') {\n            this.parent.updateDataSource();\n        }\n        this.removeErrorDialog();\n    };\n    /**\n     * To set position for context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.openContextMenu = function (node) {\n        var _this = this;\n        var fieldName = node.getAttribute('data-field');\n        var type = this.parent.engineModule.fieldList[fieldName].type !== 'number' ? 'string' : 'number';\n        var validSummaryTypes = (type === 'string' ? this.getValidSummaryType().slice(0, 2) : this.getValidSummaryType());\n        var eventArgs = {\n            cancel: false, fieldName: fieldName,\n            aggregateTypes: this.getMenuItems(type).slice()\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' && this.parent.isPopupView ?\n            this.parent.pivotGridModule : this.parent;\n        control.trigger(events.aggregateMenuOpen, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var duplicateTypes = [];\n                var items = [];\n                for (var _i = 0, _a = observedArgs.aggregateTypes; _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (validSummaryTypes.indexOf(option) > -1 && duplicateTypes.indexOf(option) === -1) {\n                        duplicateTypes.push(option);\n                        items.push({\n                            id: _this.parent.element.id + 'Calc_' + option,\n                            text: _this.parent.localeObj.getConstant(option)\n                        });\n                    }\n                }\n                _this.createMenu(items, node);\n                var pos = node.getBoundingClientRect();\n                var offset = window.scrollY || document.documentElement.scrollTop;\n                if (_this.parent.enableRtl) {\n                    _this.menuObj.open(pos.top + offset, pos.left - 100);\n                }\n                else {\n                    _this.menuObj.open(pos.top + offset, pos.left + 150);\n                }\n            }\n        });\n    };\n    /**\n     * Triggers while select menu.\n     * @param  {MenuEventArgs} menu\n     * @returns void\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split('_').pop());\n            this.curMenu.textContent = field + ' (' + menu.element.textContent + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '-1');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.createMenu = function (menuItems, node) {\n        var _this = this;\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu',\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            // beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this),\n            onClose: function () {\n                _this.treeObj.element.focus();\n                addClass([node], ['e-hover', 'e-node-focus']);\n            }\n        };\n        var contextMenu;\n        if (document.querySelector('#' + this.parentID + 'CalcContextmenu')) {\n            contextMenu = document.querySelector('#' + this.parentID + 'CalcContextmenu');\n        }\n        else {\n            contextMenu = createElement('ul', {\n                id: this.parentID + 'CalcContextmenu'\n            });\n        }\n        this.dialog.element.appendChild(contextMenu);\n        this.menuObj = new Menu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(contextMenu);\n    };\n    /**\n     * Triggers while click OK button.\n     * @returns void\n     */\n    /* tslint:disable:max-func-body-length */\n    CalculatedField.prototype.applyFormula = function () {\n        var _this = this;\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        var eventArgs = {\n            fieldName: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            calculatedField: this.getCalculatedFieldInfo(),\n            calculatedFieldSettings: PivotUtil.cloneCalculatedFieldSettings(this.parent.dataSourceSettings.calculatedFieldSettings),\n            cancel: false\n        };\n        var control = this.parent.getModuleName() === 'pivotfieldlist' &&\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.isPopupView ? this.parent.pivotGridModule : this.parent;\n        control.trigger(events.calculatedFieldCreate, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var calcInfo = observedArgs.calculatedField;\n                if (!_this.isEdit) {\n                    if (currentObj.parent.dataType === 'olap') {\n                        var field = calcInfo.name;\n                        if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                            currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                            isExist = true;\n                        }\n                    }\n                    else {\n                        for (var _i = 0, _a = Object.keys(currentObj.parent.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            if (calcInfo.name && calcInfo.name === key &&\n                                currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                                isExist = true;\n                            }\n                        }\n                    }\n                }\n                if (isExist) {\n                    currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n                    return;\n                }\n                _this.existingReport = extend({}, _this.parent.dataSourceSettings, null, true);\n                var report = _this.parent.dataSourceSettings;\n                if (!isNullOrUndefined(calcInfo.name) && calcInfo.name !== '' &&\n                    !isNullOrUndefined(calcInfo.caption) && calcInfo.caption !== '' && calcInfo.formula && calcInfo.formula !== '') {\n                    var field = void 0;\n                    if (_this.parent.dataType === 'olap') {\n                        field = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula,\n                            formatString: calcInfo.formatString\n                        };\n                        if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                            field.hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                        }\n                        _this.isFieldExist = false;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name) {\n                                    _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                    return;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                                if (report.calculatedFieldSettings[i].name === field.name && _this.isEdit) {\n                                    report.calculatedFieldSettings[i].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                                    _this.parent.olapEngineModule.fieldList[field.name].caption = calcInfo.caption;\n                                    report.calculatedFieldSettings[i].formatString = field.formatString;\n                                    report.calculatedFieldSettings[i].formula = field.formula;\n                                    field = report.calculatedFieldSettings[i];\n                                    _this.isFieldExist = true;\n                                    break;\n                                }\n                            }\n                            var axisFields = [report.rows, report.columns, report.values, report.filters];\n                            var isFieldExist = false;\n                            for (var _b = 0, axisFields_1 = axisFields; _b < axisFields_1.length; _b++) {\n                                var fields = axisFields_1[_b];\n                                for (var _c = 0, fields_2 = fields; _c < fields_2.length; _c++) {\n                                    var item = fields_2[_c];\n                                    if (item.isCalculatedField && field.name !== null &&\n                                        item.name === field.name && _this.isEdit) {\n                                        item.caption = calcInfo.caption;\n                                        _this.isFieldExist = true;\n                                        isFieldExist = true;\n                                        break;\n                                    }\n                                }\n                                if (isFieldExist) {\n                                    break;\n                                }\n                            }\n                        }\n                        if (!_this.isFieldExist) {\n                            report.calculatedFieldSettings.push(field);\n                        }\n                        _this.parent.lastCalcFieldInfo = field;\n                    }\n                    else {\n                        field = {\n                            name: calcInfo.name,\n                            caption: calcInfo.caption,\n                            type: 'CalculatedField'\n                        };\n                        var cField = {\n                            name: calcInfo.name,\n                            formula: calcInfo.formula\n                        };\n                        if (!isNullOrUndefined(calcInfo.formatString)) {\n                            cField.formatString = calcInfo.formatString;\n                        }\n                        _this.isFieldExist = true;\n                        if (!_this.isEdit) {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            _this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'), calcInfo);\n                                            return;\n                                        }\n                                    }\n                                    _this.isFieldExist = false;\n                                }\n                            }\n                        }\n                        else {\n                            for (var i = 0; i < report.values.length; i++) {\n                                if (report.values[i].type === CALC && field.name !== null &&\n                                    report.values[i].name === field.name && _this.isEdit) {\n                                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                        if (report.calculatedFieldSettings[j].name === field.name) {\n                                            report.values[i].caption = calcInfo.caption;\n                                            _this.currentFormula = report.calculatedFieldSettings[j].formula;\n                                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                                            _this.parent.engineModule.fieldList[field.name].caption = calcInfo.caption;\n                                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                                            _this.isFieldExist = false;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (_this.isFieldExist) {\n                            report.values.push(field);\n                            report.calculatedFieldSettings.push(cField);\n                            _this.updateFormatSettings(report, field.name, calcInfo.formatString);\n                        }\n                        _this.parent.lastCalcFieldInfo = cField;\n                    }\n                    _this.addFormula(report, field.name);\n                }\n                else {\n                    if (isNullOrUndefined(calcInfo.name) || calcInfo.name === '' ||\n                        isNullOrUndefined(calcInfo.caption) || calcInfo.caption === '') {\n                        _this.inputObj.value = '';\n                        addClass([document.getElementById(_this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                        document.getElementById(_this.parentID + 'ddlelement').focus();\n                    }\n                    else {\n                        _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormula'));\n                    }\n                }\n            }\n            else {\n                _this.endDialog();\n                _this.parent.lastCalcFieldInfo = {};\n                _this.isFormula = false;\n            }\n        });\n    };\n    /* tslint:disable:max-line-length */\n    CalculatedField.prototype.getCalculatedFieldInfo = function () {\n        var field;\n        var dropField = document.querySelector('#' + this.parentID + 'droppable');\n        var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.adaptiveElement.element : this.dialog.element;\n        var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n        field = {\n            name: this.isEdit ? this.currentFieldName : this.inputObj.value,\n            caption: this.inputObj.value,\n            formula: dropField.value\n        };\n        if (this.parent.dataType === 'olap') {\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            field.formatString = (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value);\n            if (memberTypeDrop.value === 'Dimension') {\n                field.hierarchyUniqueName = hierarchyDrop.value;\n            }\n        }\n        else {\n            field.formatString = customFormat.value;\n        }\n        return field;\n    };\n    /* tslint:enable:max-line-length */\n    CalculatedField.prototype.updateFormatSettings = function (report, fieldName, formatString) {\n        var newFormat = { name: fieldName, format: formatString, useGrouping: true };\n        var isFormatExist = false;\n        for (var i = 0; i < report.formatSettings.length; i++) {\n            if (report.formatSettings[i].name === fieldName) {\n                if (formatString === 'undefined' || formatString === undefined || formatString === '') {\n                    report.formatSettings.splice(i, 1);\n                    isFormatExist = true;\n                    break;\n                }\n                else {\n                    var formatObj = report.formatSettings[i].properties ?\n                        report.formatSettings[i].properties : report.formatSettings[i];\n                    formatObj.format = formatString;\n                    report.formatSettings.splice(i, 1, formatObj);\n                    isFormatExist = true;\n                    break;\n                }\n            }\n        }\n        if (!isFormatExist && formatString !== '') {\n            report.formatSettings.push(newFormat);\n        }\n    };\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        if (isBlazor() || this.parent.dataSourceSettings.mode === 'Server') {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(report));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: report }, true);\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            this.parent.updateDataSource(false);\n            var pivot = this.parent.getModuleName() === 'pivotfieldlist' ?\n                this.parent.pivotGridModule : this.parent;\n            if (!(isBlazor() && pivot && pivot.enableVirtualization) && (pivot && pivot.dataSourceSettings.mode !== 'Server')) {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n            if (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode === 'Fixed' && this.parent.allowDeferLayoutUpdate) {\n                this.parent.pivotChange = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        if (this.dialog) {\n            this.dialog.close();\n        }\n        else {\n            this.inputObj.value = '';\n            this.currentFieldName = this.formatText = this.fieldText = this.formatType = null;\n            this.formulaText = this.fieldType = this.parentHierarchy = null;\n            /* tslint:disable:max-line-length */\n            var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.parentElement : this.dialog.element;\n            this.parent.dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable').value = '';\n            this.parent.dialogRenderer.parentElement.querySelector('#' + this.parentID + 'Custom_Format_Element').value = '';\n            if (this.parent.dataType === 'olap') {\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n                hierarchyDrop.index = 0;\n                hierarchyDrop.enabled = false;\n                hierarchyDrop.dataBind();\n                customFormat.enabled = false;\n                customFormat.dataBind();\n            }\n            /* tslint:enable:max-line-length */\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        if (isBlazor()) {\n            PivotUtil.updateDataSourceSettings(this.parent, PivotUtil.getClonedDataSourceSettings(this.existingReport));\n        }\n        else {\n            this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        }\n        if (this.isEdit) {\n            var calcFields = this.parent.dataSourceSettings.calculatedFieldSettings;\n            for (var i = 0; calcFields && i < calcFields.length; i++) {\n                if (calcFields[i].name === this.field) {\n                    calcFields[i].formula = this.currentFormula;\n                    break;\n                }\n            }\n        }\n        else if (this.parent.engineModule.fields) {\n            for (var i = 0; i < this.parent.engineModule.fields.length; i++) {\n                if (this.parent.engineModule.fields[i] === this.field) {\n                    this.parent.engineModule.fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     * @param  {PivotGrid|PivotFieldList} parent\n     * @returns Object\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            fields = PivotUtil.getClonedData(parent.olapEngineModule.fieldListData ? parent.olapEngineModule.fieldListData : []);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-calcMemberGroupCDB') > -1)) {\n                    item.expanded = this.isEdit;\n                }\n            }\n        }\n        else {\n            for (var _b = 0, _c = (parent.engineModule.fieldList ? Object.keys(parent.engineModule.fieldList) : []); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var type = null;\n                var typeVal = null;\n                if ((parent.engineModule.fieldList[key].type !== 'number' || parent.engineModule.fieldList[key].type === 'include' ||\n                    parent.engineModule.fieldList[key].type === 'exclude') &&\n                    (parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                    typeVal = COUNT;\n                }\n                else {\n                    typeVal = parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                        (parent.engineModule.fieldList[key].aggregateType) : SUM;\n                }\n                type = this.parent.localeObj.getConstant(typeVal);\n                fields.push({\n                    index: parent.engineModule.fieldList[key].index,\n                    name: parent.engineModule.fieldList[key].caption + ' (' + type + ')',\n                    type: typeVal,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: parent.engineModule.fieldList[key].formula,\n                    field: key,\n                    caption: parent.engineModule.fieldList[key].caption ? parent.engineModule.fieldList[key].caption : key\n                });\n            }\n        }\n        return fields;\n    };\n    /**\n     * Triggers before menu opens.\n     * @param  {BeforeOpenCloseMenuEventArgs} args\n     * @returns void\n     */\n    /**\n     * Trigger while drop node in formula field.\n     * @param  {DragAndDropEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     * @returns void\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (document.querySelector('#' + this.parentID + 'calculateddialog') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'calculateddialog'));\n            while (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n                remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n            }\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        }));\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn',\n                    content: this.parent.localeObj.getConstant('clear'),\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        this.dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (_this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement')) {\n                    _this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement').focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: false,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'calculateddialog');\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        this.dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function (args) {\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('createCalculatedField');\n        this.dialog.element.querySelector('.e-dlg-header').\n            setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function (args) {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.treeObj.destroy();\n        this.dialog.destroy();\n        this.newFields = null;\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n        }\n        remove(document.getElementById(this.parentID + 'calculateddialog'));\n        if (!isNullOrUndefined(document.querySelector('.' + this.parentID + 'calculatedmenu'))) {\n            remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n        }\n        var timeOut = ((this.parent.getModuleName() === 'pivotview') ||\n            ((this.parent.getModuleName() === 'pivotfieldlist') &&\n                this.parent.renderMode === 'Fixed')) ? 0 : 500;\n        if (this.buttonCall) {\n            this.buttonCall = false;\n            setTimeout(this.setFocus.bind(this), timeOut);\n        }\n    };\n    CalculatedField.prototype.setFocus = function () {\n        var parentElement;\n        if (this.parent.getModuleName() === 'pivotview' && this.parent.element) {\n            parentElement = this.parent.element;\n        }\n        else if (document.getElementById(this.parent.element.id + '_Wrapper')) {\n            parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        }\n        if (parentElement) {\n            var pivotButtons = [].slice.call(parentElement.querySelectorAll('.e-pivot-button'));\n            for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n                var item = pivotButtons_1[_i];\n                if (item.getAttribute('data-uid') === this.currentFieldName) {\n                    item.focus();\n                    break;\n                }\n            }\n        }\n    };\n    /* tslint:disable:max-line-length */\n    /**\n     * To render dialog elements.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var olapCalcDiv = createElement('div', { id: this.parentID + 'Olap_Calc_Div', className: 'e-olap-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn', innerHTML: this.parent.localeObj.getConstant('add'),\n                className: cls.CALCADDBTN, attrs: { 'type': 'button' }\n            });\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn', innerHTML: this.parent.localeObj.getConstant('cancel'),\n                className: cls.CALCCANCELBTN, attrs: { 'type': 'button' }\n            });\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle',\n                    innerHTML: this.parent.localeObj.getConstant('fieldTitle')\n                });\n                olapCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'outerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(inputDiv) : outerDiv.appendChild(inputDiv));\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                        this.parent.localeObj.getConstant('formulaField'))\n                });\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-wrapper' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        width: 220\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            treeOuterDiv.appendChild(createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW }));\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapFieldTreeDiv.appendChild(wrapDiv) : outerDiv.appendChild(wrapDiv));\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                        this.parent.localeObj.getConstant('formula'))\n                });\n                (this.parent.dataType === 'olap' ? olapCalcDiv.appendChild(formulaTitle) : outerDiv.appendChild(formulaTitle));\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA,\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(dropDiv) : outerDiv.appendChild(dropDiv));\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn', innerHTML: this.parent.localeObj.getConstant('apply'),\n                    className: cls.CALCOKBTN, attrs: { 'type': 'button' }\n                });\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('memberType')\n                    });\n                    olapCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(memberTypeDrop) : olapCalcDiv.appendChild(memberTypeDrop));\n                if (!this.parent.isAdaptive) {\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('selectedHierarchy')\n                    });\n                    olapCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', { id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(hierarchyDrop) : olapCalcDiv.appendChild(hierarchyDrop));\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    olapCalcDiv.appendChild(formatTitle);\n                }\n                var formatDrop = createElement('div', { id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(formatDrop) : olapCalcDiv.appendChild(formatDrop));\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.OLAP_CALC_CUSTOM_FORMAT_INPUTDIV });\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                olapCalcDiv.appendChild(customFormatDiv);\n                (this.parent.isAdaptive ? outerDiv.appendChild(customFormatDiv) : olapCalcDiv.appendChild(customFormatDiv));\n                if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                    var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                    outerDiv.appendChild(okBtn);\n                }\n                else {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                    outerDiv.appendChild(olapCalcDiv);\n                }\n            }\n            else {\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.CALC_CUSTOM_FORMAT_INPUTDIV });\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    customFormatDiv.appendChild(formatTitle);\n                }\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                (this.parent.isAdaptive ? outerDiv.insertBefore(customFormatDiv, outerDiv.querySelector('#' + this.parentID + 'buttonDiv')) : outerDiv.appendChild(customFormatDiv));\n            }\n        }\n        return outerDiv;\n    };\n    /**\n     * To create calculated field adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function (isEdit) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement;\n        if (isEdit) {\n            if (dialogElement.element.querySelector('#' + this.parentID + 'droppable')) {\n                this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value;\n                this.fieldText = this.inputObj.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n                var memberTypeDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                this.fieldType = memberTypeDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n                var hierarchyDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                this.parentHierarchy = this.fieldType === 'Dimension' ? hierarchyDrop.value : null;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n                var formatDrop = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                this.formatType = formatDrop.value;\n            }\n            if (dialogElement.element.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n                var customFormat = getInstance(dialogElement.element.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                this.formatText = this.parent.dataType === 'olap' ? this.formatType === 'Custom' ? customFormat.value : null : customFormat.value;\n            }\n        }\n        else {\n            this.currentFieldName = this.formulaText = this.fieldText = this.formatText = null;\n            this.fieldType = this.formatType = this.parentHierarchy = null;\n        }\n        this.renderMobileLayout(dialogElement);\n    };\n    /**\n     * To update calculated field info in adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.updateAdaptiveCalculatedField = function (isEdit, fieldName) {\n        var dialogElement = this.parent.dialogRenderer.adaptiveElement.element;\n        this.isEdit = isEdit;\n        var calcInfo = (isEdit ? (this.parent.dataType === 'pivot' ?\n            this.parent.engineModule.fieldList[fieldName] : this.parent.olapEngineModule.fieldList[fieldName]) :\n            {\n                id: null, caption: null, formula: null, fieldType: 'Measure',\n                formatString: (this.parent.dataType === 'pivot' ? null : 'Standard'), parentHierarchy: null\n            });\n        this.currentFieldName = calcInfo.id;\n        if (dialogElement.querySelector('#' + this.parentID + 'droppable')) {\n            this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value = calcInfo.formula;\n            this.fieldText = this.inputObj.value = calcInfo.caption;\n            this.inputObj.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_MEMBER_TYPE_DIV)) {\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            this.fieldType = memberTypeDrop.value = calcInfo.fieldType;\n            memberTypeDrop.readonly = isEdit ? true : false;\n            memberTypeDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_HIERARCHY_LIST_DIV)) {\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            if (this.fieldType === 'Dimension') {\n                this.parentHierarchy = hierarchyDrop.value = calcInfo.parentHierarchy;\n            }\n            else {\n                this.parentHierarchy = null;\n                hierarchyDrop.index = 0;\n            }\n            hierarchyDrop.dataBind();\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_TYPE_DIV)) {\n            var formatStringData = ['Standard', 'Currency', 'Percent'];\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            this.formatType = formatDrop.value = (formatStringData.indexOf(calcInfo.formatString) > -1 ? calcInfo.formatString : 'Custom');\n        }\n        if (dialogElement.querySelector('.' + cls.CALC_FORMAT_INPUT)) {\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n            if (this.parent.dataType === 'pivot') {\n                this.formatText = customFormat.value = formatObj ? formatObj.format : null;\n            }\n            else {\n                this.formatText = customFormat.value = (this.formatType === 'Custom' ? calcInfo.formatString : null);\n            }\n            customFormat.dataBind();\n        }\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createOlapDropElements = function () {\n        var _this = this;\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : this.dialog.element);\n        var mData = [];\n        var fData = [];\n        var fieldData = [];\n        var memberTypeData = ['Measure', 'Dimension'];\n        var formatStringData = ['Standard', 'Currency', 'Percent', 'Custom'];\n        for (var _i = 0, memberTypeData_1 = memberTypeData; _i < memberTypeData_1.length; _i++) {\n            var type = memberTypeData_1[_i];\n            mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n        }\n        for (var _a = 0, formatStringData_1 = formatStringData; _a < formatStringData_1.length; _a++) {\n            var format = formatStringData_1[_a];\n            fData.push({ value: format, text: this.parent.localeObj.getConstant(format) });\n        }\n        var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        for (var _b = 0, _c = fields; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (item.spriteCssClass &&\n                (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                    item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                fieldData.push({ value: item.id, text: item.caption });\n            }\n        }\n        var memberTypeObj = new DropDownList({\n            dataSource: mData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.fieldType !== null ? this.fieldType : mData[0].value,\n            readonly: this.isEdit,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                hierarchyListObj.enabled = args.value === 'Dimension' ? true : false;\n                _this.fieldType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                hierarchyListObj.dataBind();\n            }\n        });\n        memberTypeObj.isStringTemplate = true;\n        memberTypeObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'));\n        var hierarchyListObj = new DropDownList({\n            dataSource: fieldData, enableRtl: this.parent.enableRtl,\n            allowFiltering: true,\n            enabled: memberTypeObj.value === 'Dimension' ? true : false,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n            fields: { value: 'value', text: 'text' },\n            value: this.parentHierarchy !== null && memberTypeObj.value === 'Dimension' ?\n                this.parentHierarchy : fieldData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                _this.parentHierarchy = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        hierarchyListObj.isStringTemplate = true;\n        hierarchyListObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'));\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.formatType !== null ? this.formatType : fData[0].value,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                _this.formatType = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Format_Div'));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            value: this.formatText !== null && formatStringObj.value === 'Custom' ? this.formatText : null,\n            enabled: formatStringObj.value === 'Custom' ? true : false,\n            change: function (args) {\n                _this.formatText = args.value;\n                _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n            }\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                /* tslint:disable-next-line:max-line-length */\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None'\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                keyPress: function (args) {\n                    if (args.event.keyCode === 39) {\n                        args.cancel = true;\n                    }\n                },\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parentID + 'tree');\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-dimensionCDB-icon,.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            dragItem.style.zIndex = (this.dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     * @param  {DrawNodeEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatStringData = ['Standard', 'Currency', 'Percent'];\n                var formatString = void 0;\n                formatString = (field.formatString ? formatStringData.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : '');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customString', (formatString === 'Custom' ? field.formatString : ''));\n                var removeElement = createElement('span', {\n                    className: cls.GRID_REMOVE + ' e-icons e-list-icon'\n                });\n                liTextElement.classList.add('e-calcfieldmember');\n                if (this.parent.isAdaptive) {\n                    var editElement = createElement('span', {\n                        className: 'e-list-edit-icon' + (this.isEdit && this.currentFieldName === field.id ?\n                            ' e-edited ' : ' e-edit ') + cls.ICON\n                    });\n                    var editWrapper = createElement('div', { className: 'e-list-header-icon' });\n                    editWrapper.appendChild(editElement);\n                    editWrapper.appendChild(removeElement);\n                    liTextElement.appendChild(editWrapper);\n                }\n                else {\n                    liTextElement.appendChild(removeElement);\n                }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var formatObj = PivotUtil.getFieldByName(field, this.parent.dataSourceSettings.formatSettings);\n            args.node.setAttribute('data-formatString', formatObj ? formatObj.format : '');\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            var spaceElement = createElement('div', {\n                className: ' e-iconspace'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            /* tslint:disable-next-line:max-line-length */\n            append([spaceElement, args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.getMenuItems(this.parent.engineModule.fieldList[field].type).length <= 0) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('remove'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.GRID_REMOVE);\n                addClass([args.node.querySelector('.' + 'e-iconspace')], [cls.CALC_EDIT, cls.ICON, 'e-list-icon']);\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('aria-disabled', 'false');\n                args.node.querySelector('.' + cls.CALC_EDIT).setAttribute('tabindex', '-1');\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n                removeClass([args.node.querySelector('.e-iconspace')], 'e-iconspace');\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     * @param  {string} key\n     * @returns HTMLElement\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n        var type = this.getMenuItems(this.parent.engineModule.fieldList[key].type);\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + key + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key, 'data-value': type[i] },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    CalculatedField.prototype.getMenuItems = function (fieldType, summaryType) {\n        var menuItems = !isNullOrUndefined(summaryType) ? summaryType : this.parent.aggregateTypes;\n        var type = [];\n        var menuTypes = this.getValidSummaryType();\n        for (var i = 0; i < menuItems.length; i++) {\n            if ((menuTypes.indexOf(menuItems[i]) > -1) && (type.indexOf(menuItems[i]) < 0)) {\n                if (((menuItems[i] === COUNT || menuItems[i] === DISTINCTCOUNT) && fieldType !== 'number')\n                    || (fieldType === 'number')) {\n                    type.push(menuItems[i]);\n                }\n            }\n        }\n        return type;\n    };\n    CalculatedField.prototype.getValidSummaryType = function () {\n        return [COUNT, DISTINCTCOUNT, SUM, AVG,\n            MIN, MAX, PRODUCT, STDEV, STDEVP,\n            VAR, VARP];\n    };\n    /**\n     * To get Accordion Data.\n     * @param  {PivotView | PivotFieldList} parent\n     * @returns AccordionItemModel\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var data = [];\n        var keys = Object.keys(parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            data.push({\n                header: '<input id=' + this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=' + this.parent.engineModule.fieldList[key].caption + ' data-type=' +\n                    this.parent.engineModule.fieldList[key].type + '/>',\n                content: (this.parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    (this.getMenuItems(this.parent.engineModule.fieldList[key].type).length < 1)) ? '' :\n                    this.createTypeContainer(key).outerHTML,\n                iconCss: this.parent.engineModule.fieldList[key].aggregateType === CALC ? 'e-list-icon' + ' ' +\n                    (this.isEdit && this.currentFieldName === key ? 'e-edited' : 'e-edit') : ''\n            });\n        }\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     * @param  {Tab} tabObj\n     * @returns void\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        var _this = this;\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        if (this.parent.dataType === 'olap' && this.parent.isAdaptive && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null) {\n            this.createOlapDropElements();\n        }\n        var cancelBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo('#' + this.parentID + 'cancelBtn');\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({ cssClass: cls.FLAT + ' ' + cls.OUTLINE_CLASS, isPrimary: true });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo('#' + this.parentID + 'okBtn');\n            this.inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName'),\n                change: function (args) {\n                    _this.fieldText = args.value;\n                    _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                }\n            });\n            this.inputObj.isStringTemplate = true;\n            this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n            if (this.parent.dataType === 'pivot') {\n                var formatInputObj = new MaskedTextBox({\n                    placeholder: this.parent.localeObj.getConstant('numberFormatString'),\n                    change: function (args) {\n                        _this.formatText = args.value;\n                        _this.formulaText = document.querySelector('#' + _this.parentID + 'droppable').value;\n                    }\n                });\n                formatInputObj.isStringTemplate = true;\n                formatInputObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n                if (this.formatText !== null && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT) !== null) {\n                    this.parent.\n                        /* tslint:disable-next-line:max-line-length */\n                        dialogRenderer.parentElement.querySelector('.' + cls.CALC_FORMAT_INPUT).value = this.formatText;\n                    formatInputObj.value = this.formatText;\n                }\n            }\n            if (this.formulaText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable') !== null) {\n                var drop = this.parent.\n                    dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable');\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                this.inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo('#' + this.parentID + 'addBtn');\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    /* tslint:disable-next-line:max-line-length */\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    nodeClicked: this.fieldClickHandler.bind(this),\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this),\n                    nodeSelected: function (args) {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo('#' + this.parentID + 'accordDiv');\n            }\n            else {\n                this.accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    expanding: this.accordionExpand.bind(this),\n                    clicked: this.accordionClickHandler.bind(this),\n                    created: this.accordionCreated.bind(this)\n                });\n                this.accordion.isStringTemplate = true;\n                this.accordion.appendTo('#' + this.parentID + 'accordDiv');\n                this.updateType();\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            var keys = Object.keys(this.parent.engineModule.fieldList);\n            for (var index = 0, i = keys.length; index < i; index++) {\n                var key = keys[index];\n                var type = this.parent.engineModule.fieldList[key].type !== 'number' ? [COUNT, DISTINCTCOUNT] :\n                    [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton = void 0;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i_1 = 0; i_1 < type.length; i_1++) {\n                        radiobutton = new RadioButton({\n                            label: this.parent.localeObj.getConstant(type[i_1]),\n                            name: AGRTYPE + key,\n                            checked: args.element.querySelector('[data-type').getAttribute('data-type') === type[i_1],\n                            change: this.onChange.bind(this),\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo('#' + this.parentID + 'radio' + key + type[i_1]);\n                    }\n                }\n            }\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.parentElement.querySelector('.e-label')\n            .innerText;\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', args.event.target.getAttribute('data-value'));\n    };\n    CalculatedField.prototype.updateType = function () {\n        var keys = Object.keys(this.parent.engineModule.fieldList);\n        for (var index = 0, i = keys.length; index < i; index++) {\n            var key = keys[index];\n            var type = null;\n            if ((this.parent.engineModule.fieldList[key].type !== 'number' ||\n                this.parent.engineModule.fieldList[key].type === 'include' ||\n                this.parent.engineModule.fieldList[key].type === 'exclude') &&\n                (this.parent.engineModule.fieldList[key].aggregateType !== 'DistinctCount')) {\n                type = COUNT;\n            }\n            else {\n                type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                    this.parent.engineModule.fieldList[key].aggregateType : SUM;\n            }\n            var checkbox = new CheckBox({\n                label: this.parent.engineModule.fieldList[key].caption + ' (' + this.parent.localeObj.getConstant(type) + ')'\n            });\n            checkbox.isStringTemplate = true;\n            checkbox.appendTo('#' + this.parentID + '_' + index);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-field', key);\n            document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-type', type);\n        }\n    };\n    /**\n     * Trigger while click cancel button.\n     * @returns void\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     * @returns void\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function (args) {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout(args && args.edit !== undefined ? args.edit : true);\n            this.isEdit = (args && args.edit !== undefined ? args.edit : this.isEdit);\n        }\n        else if (!this.parent.isAdaptive) {\n            this.isEdit = (args && args.edit !== undefined ? args.edit : false);\n            this.renderDialogLayout();\n            if (args && args.edit) {\n                var target = this.treeObj.element.querySelector('li[data-field=\"' + args.fieldName + '\"]');\n                if (target) {\n                    addClass([target], ['e-active', 'e-node-focus']);\n                    target.setAttribute('aria-selected', 'true');\n                    target.id = this.treeObj.element.id + '_active';\n                    if (this.parent.dataType === 'pivot') {\n                        /* tslint:disable-next-line */\n                        var e = { event: { target: target.querySelector('.e-list-icon.e-edit.e-icons') } };\n                        this.fieldClickHandler(e);\n                    }\n                    else {\n                        this.displayMenu(target);\n                    }\n                }\n            }\n            this.dialog.element.style.top = parseInt(this.dialog.element.style.top, 10) < 0 ? '0px' : this.dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        this.dialog.content = this.renderDialogElements();\n        this.dialog.refresh();\n        this.inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName')\n        });\n        this.inputObj.isStringTemplate = true;\n        this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n        if (this.parent.dataType === 'pivot') {\n            var customerFormatObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('numberFormatString')\n            });\n            customerFormatObj.isStringTemplate = true;\n            customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n        }\n        if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        this.createTreeView();\n        this.droppable = new Droppable(this.dialog.element.querySelector('#' + this.parentID + 'droppable'));\n        this.keyboardEvents = new KeyboardEvents(this.parent.calculatedFieldModule.dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter', shiftE: 'shift+E', delete: 'delete' },\n            eventName: 'keydown'\n        });\n    };\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createConfirmDialog\n     * @return {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createConfirmDialog = function (title, description, calcInfo, isRemove, node) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        /* tslint:disable:max-line-length */\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: isRemove ? this.removeCalcField.bind(this, node) : this.replaceFormula.bind(this, calcInfo),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + ' ' + cls.FLAT_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('yes') : this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.removeErrorDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS,\n                        content: isRemove ? this.parent.localeObj.getConstant('no') : this.parent.localeObj.getConstant('cancel'), isPrimary: true\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this),\n        });\n        /* tslint:enable:max-line-length */\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        // this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    CalculatedField.prototype.replaceFormula = function (calcInfo) {\n        var report = this.parent.dataSourceSettings;\n        if (this.parent.dataType === 'olap') {\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                    if (!isNullOrUndefined(calcInfo.hierarchyUniqueName)) {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = calcInfo.hierarchyUniqueName;\n                    }\n                    report.calculatedFieldSettings[j].formatString = calcInfo.formatString;\n                    report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === calcInfo.name) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === calcInfo.name) {\n                            report.calculatedFieldSettings[j].formula = calcInfo.formula;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                            this.updateFormatSettings(report, calcInfo.name, calcInfo.formatString);\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, calcInfo.name);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        if (document.getElementById(this.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parentID + '_ErrorDialog').parentElement);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /** Constructor for Field List module */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldlist';\n    };\n    FieldList.prototype.initiateModule = function () {\n        this.element = createElement('div', {\n            id: this.parent.element.id + '_PivotFieldList',\n            styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                ';display:none'\n        });\n        var containerWrapper = createElement('div', {\n            id: this.parent.element.id + 'containerwrapper'\n        });\n        this.parent.element.parentElement.appendChild(containerWrapper);\n        containerWrapper.appendChild(this.element);\n        containerWrapper.appendChild(this.parent.element);\n        this.parent.pivotFieldListModule = new PivotFieldList({\n            dataSourceSettings: {\n                providerType: this.parent.dataSourceSettings.providerType,\n                rows: [],\n                columns: [],\n                values: [],\n                filters: []\n            },\n            spinnerTemplate: this.parent.spinnerTemplate,\n            allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n            renderMode: 'Popup',\n            allowCalculatedField: this.parent.allowCalculatedField,\n            showValuesButton: this.parent.showValuesButton,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            target: this.parent.element.parentElement,\n            aggregateTypes: this.parent.aggregateTypes,\n            maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n            aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n        });\n        this.parent.pivotFieldListModule.isPopupView = true;\n        this.parent.pivotFieldListModule.pivotGridModule = this.parent;\n        this.parent.pivotFieldListModule.appendTo('#' + this.element.id);\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.element) {\n            this.element.style.display = 'block';\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else if (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)))) {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth && (!isNullOrUndefined((this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS))))) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateModule,\n            update: this.updateControl\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.update, this);\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.update);\n    };\n    /**\n     * To destroy the Field List\n     * @return {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule) {\n            this.parent.pivotFieldListModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import { PivotButton } from '../actions/pivot-button';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, prepend } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the grouping bar pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        /* tslint:disable:no-any */\n        var pivotButtonModule = ((!this.parent.pivotButtonModule || (this.parent.pivotButtonModule && this.parent.pivotButtonModule.isDestroyed)) ?\n            new PivotButton(this.parent) : this.parent.pivotButtonModule);\n        this.createPivotButtons();\n        var pivotButtons = [];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!element.classList.contains(cls.GROUP_CHART_ROW)) {\n                pivotButtons = pivotButtons.concat([].slice.call(element.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n            }\n        }\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            var indentDiv = createElement('span', {\n                className: 'e-indent-div',\n                styles: 'width:' + j * indentWidth + 'px'\n            });\n            prepend([indentDiv], pivotButtons[j]);\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.'\n            + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if ((this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) ||\n                (this.parent.dataSourceSettings.columns.length > 0 ? !element.classList.contains(cls.GROUP_CHART_COLUMN) : true)) {\n                element.innerHTML = '';\n            }\n        }\n        /* tslint:enable:no-any */\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        var count = axis.length;\n        for (var i = 0, lnt = fields.length; i < lnt; i++) {\n            if (fields[i]) {\n                var args = {\n                    field: fields[i],\n                    axis: axis[i].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingbar';\n    };\n    /** @hidden */\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(this.leftAxisPanel);\n        this.groupingTable.appendChild(this.rightAxisPanel);\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        this.groupingTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_PIVOT_ROW);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.remove(cls.GROUP_PIVOT_ROW);\n            if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            if (this.parent.chartSettings.chartSeries &&\n                ['Pie', 'Pyramid', 'Doughnut', 'Funnel'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_ACCUMULATION_COLUMN);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    /* tslint:disable-next-line:no-any */\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = this.parent.olapEngineModule.headerContent ?\n                            Object.keys(this.parent.olapEngineModule.headerContent).length : 0;\n                    }\n                    else {\n                        emptyRowCount = this.parent.engineModule.headerContent ?\n                            Object.keys(this.parent.engineModule.headerContent).length : 0;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 2) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                /* tslint:disable:no-any */\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                                /* tslint:enable:no-any */\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                if (columns[cCnt].width != \"auto\") {\n                    columns[cCnt].width = width;\n                }\n                else {\n                    columns[cCnt].minWidth = width;\n                }\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n        }\n        if (this.touchObj && !this.touchObj.isDestroyed) {\n            this.touchObj.destroy();\n        }\n        if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            remove(this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS));\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.fieldsDropDown = [];\n        this.conditionsDropDown = [];\n        this.fontNameDropDown = [];\n        this.fontSizeDropDown = [];\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalformatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n        }));\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON,\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition'),\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_APPLY_BUTTON,\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_CANCEL_BUTTON,\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.isAdaptive) {\n            this.dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, header: this.parent.localeObj.getConstant('conditionalFormating'), target: document.body\n            });\n        }\n        else {\n            this.dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this), close: this.removeDialog.bind(this),\n                cssClass: cls.FORMAT_DIALOG, isModal: false, closeOnEscape: true, enableRtl: this.parent.enableRtl,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormating'), target: this.parent.element\n            });\n        }\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'conditionalformatting');\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function (args) {\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).\n            setAttribute('title', this.parent.localeObj.getConstant('conditionalFormating'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var _this = this;\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            _this.destroyColorPickers();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            this.parent.renderPivotGrid();\n            this.dialog.close();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        this.dialog.close();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ||\n                document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value === '') {\n                document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ?\n                    document.querySelector('#' + this.parentID + 'conditionvalue1' + i).focus() :\n                    document.querySelector('#' + this.parentID + 'conditionvalue2' + i).focus();\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value);\n            this.newFormat[i].value2 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                className: cls.EMPTY_FORMAT,\n                innerHTML: this.parent.localeObj.getConstant('emptyFormat')\n            });\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        this.dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { type: 'button', 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.FORMAT_INNER });\n            var table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            var tRow = createElement('tr');\n            var td = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('value')\n            });\n            td.appendChild(valuelabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            measureDropdown.appendChild(measureInput);\n            td.appendChild(measureDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            td.appendChild(conditionDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var style = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ? 'display:none; width:10px' : '';\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: this.parent.isAdaptive ? style === '' ? 'width: 35%' : 'width: 100%' : style === '' ? 'width: 45px' :\n                    'width: 120px',\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE1\n            });\n            td.appendChild(value1);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i, className: cls.FORMAT_VALUE_SPAN,\n                innerHTML: '&', styles: style\n            });\n            td.appendChild(valuespan);\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '0', 'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: (this.parent.isAdaptive && style === '') ? 'width: 35%' : style === '' ? 'width: 45px' : style,\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE2\n            });\n            td.appendChild(value2);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            if (this.parent.isAdaptive) {\n                innerDiv.appendChild(table);\n                table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            }\n            tRow = createElement('tr');\n            td = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('formatLabel')\n            });\n            td.appendChild(formatlabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            td.appendChild(fontNameDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '0' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            td.appendChild(fontSizeDropdown);\n            tRow.appendChild(td);\n            if (this.parent.isAdaptive) {\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n            }\n            td = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_FONT_COLOR\n            });\n            td.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '0' }, className: cls.FORMAT_BACK_COLOR\n            });\n            td.appendChild(colorPicker2);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var valuePreview = createElement('div', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                innerHTML: '123.45',\n            });\n            td.appendChild(valuePreview);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            innerDiv.appendChild(table);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            fields.push({\n                index: i_1 + 1,\n                name: this.parent.dataSourceSettings.values[i_1].caption || this.parent.dataSourceSettings.values[i_1].name,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        this.fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.measureChange.bind(this, i)\n        });\n        this.fieldsDropDown[i].isStringTemplate = true;\n        this.fieldsDropDown[i].appendTo('#' + this.parentID + 'measureinput' + i);\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        this.conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.conditionChange.bind(this, i)\n        });\n        this.conditionsDropDown[i].isStringTemplate = true;\n        this.conditionsDropDown[i].appendTo('#' + this.parentID + 'conditioninput' + i);\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        this.fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupWidth: '150px', popupHeight: '200px',\n            change: this.fontNameChange.bind(this, i)\n        });\n        this.fontNameDropDown[i].isStringTemplate = true;\n        this.fontNameDropDown[i].appendTo('#' + this.parentID + 'fontnameinput' + i);\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        this.fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px',\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            change: this.fontSizeChange.bind(this, i)\n        });\n        this.fontSizeDropDown[i].isStringTemplate = true;\n        this.fontSizeDropDown[i].appendTo('#' + this.parentID + 'fontsizeinput' + i);\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.width =\n                this.parent.isAdaptive ? '10%' : '10px';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n        }\n        else {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '100%' : '120px';\n        }\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER + ' ' + cls.FORMAT_FONT_COLOR_PICKER,\n            value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i)\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo('#' + this.parentID + 'fontcolor' + i);\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor = color;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = format.style.fontFamily;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i)\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo('#' + this.parentID + 'backgroundcolor' + i);\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo('#' + this.parentID + 'removeButton' + i);\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.destroyColorPickers();\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     * @returns boolean\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     * @returns { r: number, g: number, b: number } | null\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     * @returns string\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        else if (colour.search('rgba') === 0) {\n            var value = colour.substr(5).split(')')[0].split(',');\n            var rgb = '';\n            var a = '';\n            for (var i = 0; i < value.length - 1; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            a = (Math.round(+value[3] * 255)).toString(16);\n            return '#' + rgb + a;\n        }\n        else if (colour.search('rgb') === 0) {\n            var value = colour.substr(4).split(')')[0].split(',');\n            var rgb = '';\n            for (var i = 0; i < value.length; i++) {\n                value[i] = (+value[i]).toString(16);\n                if (value[i].length === 1) {\n                    value[i] = '0' + value[i];\n                }\n                rgb = rgb + value[i];\n            }\n            return '#' + rgb;\n        }\n        return '#d5d5d5';\n    };\n    ConditionalFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.destroyColorPickers();\n            this.dialog.destroy();\n        }\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting')) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n    };\n    ConditionalFormatting.prototype.destroyColorPickers = function () {\n        for (var i = 0; i < (this.newFormat ? this.newFormat.length : 0); i++) {\n            if (this.fontColor && this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                this.fontColor[i].destroy();\n            }\n            if (this.backgroundColor && this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                this.backgroundColor[i].destroy();\n            }\n        }\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     * @returns void\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        this.dialog.refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     * @returns void\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.close();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, isBlazor, getInstance, addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { Deferred } from '@syncfusion/ej2-data';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { PdfPageOrientation } from '@syncfusion/ej2-pdf-export';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        /** @hidden */\n        this.isMultiAxisChange = false;\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList'));\n        }\n        else if (this.parent.showGroupingBar &&\n            this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar'));\n        }\n        else {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_grid'));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            items: this.getItems(),\n            allowKeyboard: false,\n            width: !this.parent.gridSettings.allowAutoResizing ? (this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2)) : 'auto'\n        });\n        this.toolbar.isStringTemplate = true;\n        var viewStr = 'viewContainerRef';\n        var registerTemp = 'registeredTemplate';\n        if (this.parent[viewStr]) {\n            this.toolbar[registerTemp] = {};\n            this.toolbar[viewStr] = this.parent[viewStr];\n        }\n        if (this.parent.toolbarTemplate && typeof (this.parent.toolbarTemplate) === 'string') {\n            this.toolbar.appendTo(this.parent.toolbarTemplate);\n            this.parent.element.replaceChild(this.toolbar.element, this.parent.element.querySelector('.' + cls.GRID_TOOLBAR));\n            this.toolbar.element.classList.add(cls.GRID_TOOLBAR);\n        }\n        else {\n            this.toolbar.appendTo('#' + this.parent.element.id + 'pivot-toolbar');\n            this.toolbar.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n        }\n        if (this.parent.chart) {\n            this.parent.chart.setProperties({ width: this.parent.grid ? this.parent.getGridWidthAsNumber().toString() : this.parent.getWidthAsNumber().toString() }, true);\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        /* tslint:disable:no-any */\n        var reports = { reportName: [] };\n        var tool = this;\n        if (isBlazor()) {\n            reports = this.fetchReportsArgs();\n            reports.then(function (e) {\n                tool.reportList.dataSource = e.reportName;\n                return e;\n            });\n        }\n        else {\n            /* tslint:enable:no-any */\n            this.parent.trigger(events.fetchReport, reports);\n        }\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    /* tslint:disable */\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    var toDisable = this.parent.displayOption.view === 'Chart';\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                        id: this.parent.element.id + 'grid', cssClass: toDisable ? cls.MENU_DISABLE : '',\n                        click: this.menuItemClick.bind(this)\n                    });\n                    break;\n                case 'Chart':\n                    var validTypes = (this.parent.displayOption.view === 'Table');\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                        id: this.parent.element.id + 'chartmenu', cssClass: validTypes ? cls.MENU_DISABLE : ''\n                    });\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType === 'olap') {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n                default:\n                    if (typeof (item) === 'object') {\n                        items.push(item);\n                    }\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf('FieldList') === -1 && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList') &&\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display === 'none') {\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    /* tslint:enable */\n    Toolbar.prototype.reportChange = function (args) {\n        this.dropArgs = args;\n        if (this.parent.isModified && this.currentReport !== '') {\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n        }\n        else {\n            this.reportLoad(args);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this_1 = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this_1.currentReport = observedArgs.reportName;\n                _this_1.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else if (this.currentReport === '' && (args.item.id === (this.parent.element.id + 'save') || args.item.id === (this.parent.element.id + 'saveas'))) {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function (args) {\n        if (!(this.mdxDialog && !this.mdxDialog.isDestroyed)) {\n            this.renderMDXDialog();\n        }\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            innerHTML: this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim(),\n            attrs: { 'readonly': 'readonly' }\n        });\n        outerDiv.appendChild(textarea);\n        this.mdxDialog.content = outerDiv;\n        this.mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        if (args) {\n            this.dialog.header = args.item.tooltipText;\n            var outerDiv = createElement('div', {\n                className: cls.GRID_REPORT_OUTER\n            });\n            var label = createElement('div', {\n                className: cls.GRID_REPORT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('reportName')\n            });\n            var input = createElement('input', {\n                className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n                innerHTML: (action && action === 'rename' ? this.currentReport : ''),\n                attrs: {\n                    'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                    'value': (action && action === 'rename' ? this.currentReport : '')\n                },\n            });\n            input.setSelectionRange(input.textContent.length, input.textContent.length);\n            outerDiv.appendChild(label);\n            outerDiv.appendChild(input);\n            this.dialog.content = outerDiv;\n            this.dialog.refresh();\n            this.dialog.show();\n        }\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        switch (args.item.id) {\n            case (this.parent.element.id + 'save'):\n            case (this.parent.element.id + 'saveas'):\n                this.saveReport(args);\n                break;\n            case (this.parent.element.id + 'remove'):\n                this.action = 'Remove';\n                if (this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                }\n                else {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                }\n                return;\n            case (this.parent.element.id + 'rename'):\n                this.renameReport(args);\n                break;\n            case (this.parent.element.id + 'new'):\n                this.action = 'New';\n                this.newArgs = args;\n                if (this.parent.isModified && this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                }\n                else {\n                    this.createNewReport(args);\n                }\n                break;\n            case (this.parent.element.id + 'load'):\n                this.action = 'Load';\n                break;\n            case (this.parent.element.id + 'fieldlist'):\n                if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                    this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.show();\n                }\n                break;\n            case (this.parent.element.id + 'formatting'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'mdxQuery'):\n                this.mdxQueryDialog(args);\n                break;\n            case (this.parent.element.id + 'numberFormatting'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'report-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'report-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        }));\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parent.element.id + 'report-dialog');\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'mdx-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'mdx-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        }));\n        this.mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.mdxDialog.isStringTemplate = true;\n        this.mdxDialog.appendTo('#' + this.parent.element.id + 'mdx-dialog');\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var textArea = this.mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var reportInput = this.dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        if ((this.dialog.header === this.parent.localeObj.getConstant('save') ||\n            this.dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'Save';\n            this.currentReport = reportInput.value;\n            var isExist_1 = false;\n            /* tslint:disable */\n            var _this_2 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_1 = true;\n                        break;\n                    }\n                }\n                if (isExist_1) {\n                    _this_2.createConfirmDialog(_this_2.parent.localeObj.getConstant('alert'), _this_2.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_2.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var saveArgs = {\n                    report: _this_2.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_2.parent.trigger(events.saveReport, saveArgs);\n                _this_2.parent.isModified = false;\n                _this_2.updateReportList();\n                _this_2.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('new') &&\n            reportInput.value && reportInput.value !== '') {\n            this.action = 'New';\n            this.currentReport = reportInput.value;\n            var isExist_2 = false;\n            /* tslint:disable */\n            var _this_3 = this;\n            /* tslint:enable */\n            var reports_1 = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports_1, function (observedArgs) {\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === reports_1.reportName[i]) {\n                        isExist_2 = true;\n                        break;\n                    }\n                }\n                if (isExist_2) {\n                    _this_3.createConfirmDialog(_this_3.parent.localeObj.getConstant('alert'), _this_3.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_3.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                _this_3.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    _this_3.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: _this_3.parent.getPersistData(),\n                    reportName: reportInput.value\n                };\n                _this_3.parent.trigger(events.saveReport, saveArgs);\n                _this_3.parent.isModified = false;\n                _this_3.updateReportList();\n                _this_3.dialog.hide();\n            });\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            if (this.currentReport === reportInput.value) {\n                this.dialog.hide();\n                return;\n            }\n            this.action = 'Rename';\n            var isExist_3 = false;\n            /* tslint:disable */\n            var _this_4 = this;\n            /* tslint:enable */\n            var reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_4.renameText = reportInput.value;\n                for (var i = 0; i < observedArgs.reportName.length; i++) {\n                    if (reportInput.value === observedArgs.reportName[i]) {\n                        isExist_3 = true;\n                        break;\n                    }\n                }\n                if (isExist_3) {\n                    _this_4.createConfirmDialog(_this_4.parent.localeObj.getConstant('alert'), _this_4.parent.localeObj.getConstant('replaceConfirmBefore') + '\"' + reportInput.value + '\"' +\n                        _this_4.parent.localeObj.getConstant('replaceConfirmAfter'));\n                    return;\n                }\n                var renameArgs = {\n                    reportName: _this_4.currentReport,\n                    rename: reportInput.value\n                };\n                _this_4.parent.trigger(events.renameReport, renameArgs);\n                _this_4.currentReport = reportInput.value;\n                _this_4.updateReportList();\n                _this_4.dialog.hide();\n            });\n        }\n    };\n    Toolbar.prototype.createNewReport = function (args) {\n        this.dialogShow(args);\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        this.dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('yes'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('no'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        var _this_1 = this;\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.removeReport, removeArgs);\n            var reports = this.fetchReports();\n            if (reports.reportName && reports.reportName.length > 0) {\n                var loadArgs = {\n                    reportName: reports.reportName[reports.reportName.length - 1]\n                };\n                this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                    _this_1.currentReport = observedArgs.reportName;\n                    _this_1.parent.isModified = false;\n                });\n                this.currentReport = reports.reportName[reports.reportName.length - 1];\n            }\n            else {\n                this.currentReport = '';\n                this.parent.isModified = false;\n                this.action = '';\n            }\n            this.updateReportList();\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '' && this.parent.isModified) {\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.createNewReport(this.newArgs);\n                }\n                else {\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else if (this.action === 'New') {\n                this.parent.trigger(events.newReport);\n                if (isBlazor()) {\n                    this.parent.setProperties({ dataSourceSettings: { columns: [], rows: [], values: [], filters: [] } }, false);\n                }\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                this.updateReportList();\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: this.renameText,\n                isReportExists: true\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = this.renameText;\n            this.parent.isModified = false;\n            this.updateReportList();\n            this.dialog.hide();\n        }\n        this.confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        if (this.action === 'New') {\n            if (this.parent.isModified) {\n                this.createNewReport(this.newArgs);\n            }\n            else {\n                this.dialog.hide();\n            }\n        }\n        else if (this.action === 'Save') {\n            this.currentReport = this.reportList.value;\n            this.dialog.hide();\n        }\n        else if (this.action === 'Rename') {\n            this.dialog.hide();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        this.confirmPopUp.hide();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.createChartMenu = function () {\n        var _this_1 = this;\n        if (document.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            var menuItems = [];\n            var types = this.getValidChartType();\n            for (var i = 0; (i < types.length && i < 7); i++) {\n                var type = types[i];\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant(type.toLowerCase()),\n                    id: this.parent.element.id + '_' + type,\n                });\n            }\n            if (menuItems.length === 7) {\n                menuItems.splice(6);\n                menuItems.push({\n                    text: this.parent.localeObj.getConstant('MoreOption'),\n                    id: this.parent.element.id + '_' + 'ChartMoreOption',\n                });\n            }\n            var toDisable = (menuItems.length <= 0 || this.parent.displayOption.view === 'Table');\n            menuItems.push({\n                separator: true\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('multipleAxes'),\n                id: this.parent.element.id + '_' + 'multipleAxes'\n            });\n            menuItems.push({\n                text: this.parent.localeObj.getConstant('showLegend'),\n                id: this.parent.element.id + '_' + 'showLegend'\n            });\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : menuItems,\n                }];\n            if (this.chartMenu && !this.chartMenu.isDestroyed) {\n                this.chartMenu.destroy();\n            }\n            this.chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this),\n                beforeOpen: this.whitespaceRemove.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                },\n                beforeItemRender: this.multipleAxesCheckbox.bind(this)\n            });\n            this.chartMenu.isStringTemplate = true;\n            this.chartMenu.appendTo('#' + this.parent.element.id + 'chart_menu');\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.create = function () {\n        var _this_1 = this;\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            this.createChartMenu();\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'export_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            this.exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.exportMenu.isStringTemplate = true;\n            this.exportMenu.appendTo('#' + this.parent.element.id + 'export_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'subtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.subTotalMenu.isStringTemplate = true;\n            this.subTotalMenu.appendTo('#' + this.parent.element.id + 'subtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'grandtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this),\n                onClose: function (args) {\n                    _this_1.focusToolBar();\n                }\n            });\n            this.grandTotalMenu.isStringTemplate = true;\n            this.grandTotalMenu.appendTo('#' + this.parent.element.id + 'grandtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'formatting_menu')) {\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormatMenu'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormatingMenu'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            this.formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.formattingMenu.isStringTemplate = true;\n            this.formattingMenu.appendTo('#' + this.parent.element.id + 'formatting_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_reportlist')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.parent.localeObj.getConstant('defaultReport')\n            };\n            if (isBlazor()) {\n                var pivotData = JSON.parse(saveArgs.report);\n                pivotData.dataSourceSettings = PivotUtil.getClonedDataSourceSettings(this.parent.dataSourceSettings);\n                saveArgs.report = JSON.stringify(pivotData);\n            }\n            this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n            this.parent.trigger(events.saveReport, saveArgs);\n            var reports = this.fetchReports();\n            this.reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                cssClass: cls.REPORT_LIST_DROP,\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            this.reportList.isStringTemplate = true;\n            this.reportList.appendTo('#' + this.parent.element.id + '_reportlist');\n        }\n        this.updateItemElements();\n    };\n    Toolbar.prototype.updateItemElements = function () {\n        var itemElements = [].slice.call(this.toolbar.element.querySelectorAll('.e-toolbar-item'));\n        for (var _i = 0, itemElements_1 = itemElements; _i < itemElements_1.length; _i++) {\n            var element = itemElements_1[_i];\n            if (element.querySelector('button')) {\n                element.querySelector('button').setAttribute('tabindex', '0');\n            }\n            else if (element.querySelector('.e-menu.e-menu-parent')) {\n                element.querySelector('.e-menu.e-menu-parent').setAttribute('tabindex', '-1');\n                if (element.querySelector('.e-menu-item.e-menu-caret-icon')) {\n                    element.querySelector('.e-menu-item.e-menu-caret-icon').setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    Toolbar.prototype.whitespaceRemove = function (args) {\n        args.element.style.padding = '0px';\n        var separator = args.element.querySelector('.e-separator');\n        if (separator) {\n            separator.style.margin = '0px';\n        }\n    };\n    Toolbar.prototype.multipleAxesCheckbox = function (args) {\n        if (this.parent.element.id + '_' + 'multipleAxes' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'checkBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('multipleAxes'),\n                cssClass: 'e-multipleAxes',\n                checked: this.parent.chartSettings.enableMultiAxis,\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'checkBox');\n            if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) &&\n                !args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.add(cls.MENU_DISABLE);\n                checkbox.disabled = true;\n            }\n            else if ((['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) < 0) &&\n                args.element.classList.contains(cls.MENU_DISABLE)) {\n                args.element.classList.remove(cls.MENU_DISABLE);\n                checkbox.disabled = false;\n            }\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-multipleAxes');\n            args.element.appendChild(checkboxObj);\n        }\n        else if (this.parent.element.id + '_' + 'showLegend' === args.element.id) {\n            var inputCheckbox = createElement('input', {\n                id: this.parent.element.id + '_' + 'showLegendCheckBox'\n            });\n            inputCheckbox.style.display = 'none';\n            this.parent.element.appendChild(inputCheckbox);\n            var checkbox = new CheckBox({\n                label: this.parent.localeObj.getConstant('showLegend'),\n                checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n                cssClass: 'e-showLegend',\n                enableRtl: this.parent.enableRtl\n            });\n            args.element.innerText = '';\n            checkbox.appendTo('#' + this.parent.element.id + '_' + 'showLegendCheckBox');\n            var checkboxObj = this.parent.element.querySelector('.e-checkbox-wrapper.e-showLegend');\n            args.element.appendChild(checkboxObj);\n        }\n    };\n    Toolbar.prototype.getLableState = function (type) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.showLableState = chartSettings.legendSettings.visible;\n        }\n        else {\n            this.showLableState = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1 ?\n                false : true;\n        }\n        return this.showLableState;\n    };\n    Toolbar.prototype.getAllChartItems = function () {\n        return ['Line', 'Column', 'Area', 'Bar', 'StackingColumn', 'StackingArea', 'StackingBar', 'StepLine', 'StepArea',\n            'SplineArea', 'Scatter', 'Spline', 'StackingColumn100', 'StackingBar100', 'StackingArea100', 'Bubble', 'Pareto',\n            'Polar', 'Radar', 'Pie', 'Pyramid', 'Funnel', 'Doughnut'];\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        if (this.parent.currentView === 'Table') {\n            addClass(items.slice(3), cls.MENU_HIDE);\n            removeClass(items.slice(1, 3), cls.MENU_HIDE);\n        }\n        else {\n            addClass(items.slice(1, 3), cls.MENU_HIDE);\n            removeClass(items.slice(3), cls.MENU_HIDE);\n        }\n    };\n    /* tslint:disable:max-line-length */\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    /* tslint:enable:max-line-length */\n    Toolbar.prototype.updateReportList = function () {\n        var reports;\n        if (isBlazor()) {\n            /* tslint:disable */\n            var _this_5 = this;\n            /* tslint:enable */\n            reports = { reportName: [] };\n            this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n                _this_5.reportList.dataSource = observedArgs.reportName;\n                if (_this_5.currentReport === '' && _this_5.reportList.dataSource.length > 0) {\n                    _this_5.reportList.value = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.reportList.text = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                    _this_5.currentReport = _this_5.reportList.dataSource[_this_5.reportList.dataSource.length - 1];\n                }\n                else {\n                    _this_5.reportList.value = _this_5.currentReport;\n                    _this_5.reportList.text = _this_5.currentReport;\n                }\n                _this_5.reportList.refresh();\n            });\n        }\n        else {\n            reports = this.fetchReports();\n            this.reportList.dataSource = reports.reportName;\n            if (this.currentReport === '' && this.reportList.dataSource.length > 0) {\n                this.reportList.value = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.reportList.text = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n                this.currentReport = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            }\n            else {\n                this.reportList.value = this.currentReport;\n                this.reportList.text = this.currentReport;\n            }\n            this.reportList.refresh();\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    Toolbar.prototype.menuItemClick = function (args) {\n        var _this_1 = this;\n        var exportArgs = {};\n        var type;\n        if (this.getAllChartItems().indexOf(args.item.id.split(this.parent.element.id + '_')[1]) > -1 ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'ChartMoreOption') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'multipleAxes') ||\n            (args.item.id.split(this.parent.element.id + '_')[1] === 'showLegend')) {\n            type = args.item.id.split(this.parent.element.id + '_')[1];\n        }\n        /* tslint:disable:max-line-length */\n        switch (args.item.id) {\n            case (this.parent.element.id + 'grid'):\n                if (this.parent.grid && this.parent.chart) {\n                    this.parent.grid.element.style.display = '';\n                    this.parent.chart.element.style.display = 'none';\n                    if (this.parent.chartSettings.enableMultiAxis && this.parent.chartSettings.enableScrollOnMultiAxis) {\n                        this.parent.element.querySelector('.e-pivotchart').style.display = 'none';\n                    }\n                    this.parent.currentView = 'Table';\n                    this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                    if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = '';\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    this.parent.layoutRefresh();\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + 'pdf'):\n                if (this.parent.currentView === 'Table') {\n                    exportArgs = {\n                        pdfExportProperties: { fileName: 'Export.pdf' },\n                        pdfDoc: undefined,\n                        isBlob: false,\n                        isMultipleExport: false\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        if (isBlazor()) {\n                            var pdfProperties = PivotUtil.formatPdfExportProperties(observedArgs.pdfExportProperties);\n                            _this_1.parent.pdfExport(pdfProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                        }\n                        else {\n                            _this_1.parent.pdfExport(observedArgs.pdfExportProperties, observedArgs.isMultipleExport, observedArgs.pdfDoc, observedArgs.isBlob);\n                        }\n                    });\n                }\n                else {\n                    exportArgs = {\n                        width: undefined,\n                        height: undefined,\n                        orientation: PdfPageOrientation.Landscape,\n                        type: 'PDF',\n                        fileName: 'result',\n                    };\n                    this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                        _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                    });\n                }\n                break;\n            case (this.parent.element.id + 'excel'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.xlsx' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this_1.parent.excelExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this_1.parent.excelExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case (this.parent.element.id + 'csv'):\n                exportArgs = {\n                    excelExportProperties: { fileName: 'Export.csv' },\n                    isBlob: false,\n                    isMultipleExport: false,\n                    workbook: undefined\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    if (isBlazor()) {\n                        var excelProperties = PivotUtil.formatExcelExportProperties(observedArgs.excelExportProperties);\n                        _this_1.parent.csvExport(excelProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                    else {\n                        _this_1.parent.csvExport(observedArgs.excelExportProperties, observedArgs.isMultipleExport, observedArgs.workbook, observedArgs.isBlob);\n                    }\n                });\n                break;\n            case (this.parent.element.id + 'png'):\n                exportArgs = {\n                    type: 'PNG',\n                    width: undefined,\n                    height: undefined,\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'jpeg'):\n                exportArgs = {\n                    type: 'JPEG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                    width: undefined,\n                    height: undefined,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'svg'):\n                exportArgs = {\n                    width: undefined,\n                    height: undefined,\n                    type: 'SVG',\n                    fileName: 'result',\n                    orientation: PdfPageOrientation.Landscape,\n                };\n                this.parent.trigger(events.beforeExport, exportArgs, function (observedArgs) {\n                    _this_1.parent.chartExport(observedArgs.type, observedArgs.fileName, observedArgs.orientation, observedArgs.width, observedArgs.height);\n                });\n                break;\n            case (this.parent.element.id + 'notsubtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: false, showColumnSubTotals: false, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: false, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'subtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showSubTotals: true, showColumnSubTotals: true, showRowSubTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'notgrandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: false, showColumnGrandTotals: false, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalrow'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: false, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotalcolumn'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: false } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'grandtotal'):\n                this.parent.setProperties({ dataSourceSettings: { showGrandTotals: true, showColumnGrandTotals: true, showRowGrandTotals: true } }, true);\n                this.parent.refreshData();\n                break;\n            case (this.parent.element.id + 'numberFormattingMenu'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'conditionalFormattingMenu'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + '_' + type):\n                if (args.item && args.item.text) {\n                    if (type === 'ChartMoreOption') {\n                        this.createChartTypeDialog();\n                    }\n                    else if (type === 'multipleAxes') {\n                        if (this.parent.chartSettings.enableScrollOnMultiAxis) {\n                            this.isMultiAxisChange = true;\n                        }\n                        this.parent.chartSettings.enableMultiAxis = !this.parent.chartSettings.enableMultiAxis;\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                    else if (this.getAllChartItems().indexOf(type) > -1) {\n                        this.updateChartType(type, false);\n                    }\n                    else if (type === 'showLegend') {\n                        this.parent.chart.legendSettings.visible = !this.showLableState;\n                        if (this.parent.chartSettings.legendSettings) {\n                            this.parent.chartSettings.legendSettings.visible = !this.showLableState;\n                        }\n                        else {\n                            this.parent.setProperties({ chartSettings: { legendSettings: { visible: !this.showLableState } } }, true);\n                        }\n                        this.updateChartType(this.parent.chartSettings.chartSeries.type, true);\n                    }\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n        }\n        /* tslint:enable:max-line-length */\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    Toolbar.prototype.getValidChartType = function () {\n        var menuItems = [];\n        for (var i = 0; (i <= this.parent.chartTypes.length); i++) {\n            var type = this.parent.chartTypes[i];\n            if ((this.getAllChartItems().indexOf(type) > -1) && (menuItems.indexOf(type) < 0)) {\n                menuItems.push(type);\n            }\n        }\n        return menuItems;\n    };\n    Toolbar.prototype.createChartTypeDialog = function () {\n        var _this_1 = this;\n        var chartDialog = this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + '_ChartTypeDialog',\n            className: cls.PIVOTCHART_TYPE_DIALOG\n        }));\n        this.chartTypesDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('chartTypeSettings'),\n            content: this.getDialogContent(),\n            isModal: true,\n            beforeOpen: this.beforeOpen.bind(this),\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: function () { _this_1.chartTypeDialogUpdate(); },\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true },\n                },\n                {\n                    click: function () { _this_1.removeDialog(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            close: this.removeDialog.bind(this)\n        });\n        this.chartTypesDialog.isStringTemplate = true;\n        this.chartTypesDialog.appendTo(chartDialog);\n    };\n    Toolbar.prototype.removeDialog = function () {\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_ChartTypeDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ChartTypeDialog'));\n        }\n    };\n    Toolbar.prototype.chartTypeDialogUpdate = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var chartType = getInstance('#' + this.parent.element.id + '_ChartTypeOption', DropDownList).value;\n        var checked = getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).checked;\n        var checkedShow = getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked;\n        this.parent.chart.legendSettings.visible = checkedShow;\n        if (this.chartLableState) {\n            this.parent.chart.legendSettings.visible = checkedShow;\n            if (this.parent.chartSettings.legendSettings) {\n                this.parent.chartSettings.legendSettings.visible = checkedShow;\n            }\n            else {\n                this.parent.setProperties({ chartSettings: { legendSettings: { visible: checkedShow } } }, true);\n            }\n        }\n        this.updateChartType(chartType, false);\n        this.parent.chartSettings.enableMultiAxis = checked;\n        this.chartTypesDialog.close();\n    };\n    Toolbar.prototype.updateChartType = function (type, isMultiAxis) {\n        if (this.getAllChartItems().indexOf(type) > -1) {\n            if (this.parent.chart) {\n                this.parent.currentView = 'Chart';\n                this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                /* tslint:disable:max-line-length */\n                this.parent.chart.element.style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                this.parent.chart.setProperties({ width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber()) }, true);\n                if (this.parent.chartSettings.chartSeries.type === type && !isMultiAxis) {\n                    this.parent.chartModule.updateView();\n                }\n                else {\n                    this.parent.chartSettings.chartSeries.type = type;\n                }\n            }\n        }\n    };\n    Toolbar.prototype.getDialogContent = function () {\n        var mainWrapper = createElement('div', { className: 'e-chart-type-div-content' });\n        var optionWrapperDiv = createElement('div', { className: 'e-chart-type-option-wrapper' });\n        var optionTextDiv = createElement('div', {\n            className: 'e-chart-type-option-text', innerHTML: this.parent.localeObj.getConstant('ChartType')\n        });\n        var dropOptionDiv = createElement('div', { id: this.parent.element.id + '_ChartTypeOption' });\n        optionWrapperDiv.appendChild(optionTextDiv);\n        optionWrapperDiv.appendChild(dropOptionDiv);\n        var chartTypeDatasource = [];\n        var chartType = this.getValidChartType();\n        for (var i = 0; i < chartType.length; i++) {\n            chartTypeDatasource.push({ value: chartType[i], text: this.parent.localeObj.getConstant(chartType[i].toLowerCase()) });\n        }\n        var optionWrapper = new DropDownList({\n            dataSource: chartTypeDatasource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: this.parent.chartSettings.chartSeries.type ? this.parent.chartSettings.chartSeries.type : this.getValidChartType()[0],\n            width: '100%',\n            change: this.changeDropDown.bind(this)\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(dropOptionDiv);\n        mainWrapper.appendChild(optionWrapperDiv);\n        var checkboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogMultipleAxis',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(checkboxWrap);\n        var labelCheckboxWrap = createElement('input', {\n            id: this.parent.element.id + '_DialogShowLabel',\n            attrs: { 'type': 'checkbox' }\n        });\n        mainWrapper.appendChild(labelCheckboxWrap);\n        return mainWrapper;\n    };\n    Toolbar.prototype.changeDropDown = function (args) {\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (!(chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined)) {\n            var checked = ['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1 ?\n                false : true;\n            getInstance('#' + this.parent.element.id + '_DialogShowLabel', CheckBox).checked = checked;\n        }\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(args.value.toString()) > -1) {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = true;\n        }\n        else {\n            getInstance('#' + this.parent.element.id + '_DialogMultipleAxis', CheckBox).disabled = false;\n        }\n    };\n    Toolbar.prototype.beforeOpen = function () {\n        var _this_1 = this;\n        var checkbox = new CheckBox({\n            label: this.parent.localeObj.getConstant('multipleAxes'),\n            cssClass: 'e-dialog-multiple-axis',\n            checked: this.parent.chartSettings.enableMultiAxis ? this.parent.chartSettings.enableMultiAxis : false,\n            enableRtl: this.parent.enableRtl,\n        });\n        var checkbox1 = new CheckBox({\n            label: this.parent.localeObj.getConstant('showLegend'),\n            checked: this.getLableState(this.parent.chartSettings.chartSeries.type),\n            change: function () { _this_1.chartLableState = true; },\n            cssClass: 'e-dialog-show-legend',\n            enableRtl: this.parent.enableRtl,\n        });\n        checkbox1.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogShowLabel'));\n        checkbox.appendTo(this.chartTypesDialog.element.querySelector('#' + this.parent.element.id + '_DialogMultipleAxis'));\n        if (['Pie', 'Funnel', 'Pyramid', 'Doughnut'].indexOf(this.parent.chartSettings.chartSeries.type) > -1) {\n            checkbox.disabled = true;\n        }\n        var chartSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        if (chartSettings && chartSettings.legendSettings && chartSettings.legendSettings.visible !== undefined) {\n            this.chartLableState = true;\n        }\n        else {\n            this.chartLableState = false;\n        }\n    };\n    /**\n     * To refresh the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.createToolbar();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.confirmPopUp && !this.confirmPopUp.isDestroyed) {\n            this.confirmPopUp.destroy();\n        }\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (this.mdxDialog && !this.mdxDialog.isDestroyed) {\n            this.mdxDialog.destroy();\n        }\n        if (this.chartMenu && !this.chartMenu.isDestroyed) {\n            this.chartMenu.destroy();\n        }\n        if (this.chartTypesDialog && !this.chartTypesDialog.isDestroyed) {\n            this.chartTypesDialog.destroy();\n        }\n        if (this.exportMenu && !this.exportMenu.isDestroyed) {\n            this.exportMenu.destroy();\n        }\n        if (this.subTotalMenu && !this.subTotalMenu.isDestroyed) {\n            this.subTotalMenu.destroy();\n        }\n        if (this.grandTotalMenu && !this.grandTotalMenu.isDestroyed) {\n            this.grandTotalMenu.destroy();\n        }\n        if (this.formattingMenu && !this.formattingMenu.isDestroyed) {\n            this.formattingMenu.destroy();\n        }\n        if (this.reportList && !this.reportList.isDestroyed) {\n            this.reportList.destroy();\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n        }\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar')) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n    };\n    Toolbar.prototype.focusToolBar = function () {\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-focused'), 'e-focused');\n        removeClass(document.querySelector('.' + cls.GRID_TOOLBAR).querySelectorAll('.e-menu-item.e-selected'), 'e-selected');\n        if (document.querySelector('.e-toolbar-items')) {\n            addClass([document.querySelector('.e-toolbar-items')], 'e-focused');\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.newFormat = [];\n        this.lastFormattedValue = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberformatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     * @returns void\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.dialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerHTML = this.parent.localeObj.getConstant('numberFormat');\n        var formatObject;\n        this.newFormat = [{ name: this.parent.localeObj.getConstant('AllValues'), format: 'N0', useGrouping: true }];\n        var format = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n            for (var j = 0; j < this.parent.dataSourceSettings.formatSettings.length; j++) {\n                if (this.parent.dataSourceSettings.formatSettings[j].name === this.parent.dataSourceSettings.values[i].name) {\n                    formatObject = {\n                        name: this.parent.dataSourceSettings.formatSettings[j].name,\n                        format: this.parent.dataSourceSettings.formatSettings[j].format,\n                        useGrouping: this.parent.dataSourceSettings.formatSettings[j].useGrouping\n                    };\n                    this.newFormat.push(formatObject);\n                }\n            }\n        }\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        for (var j = 0; j < this.parent.dataSourceSettings.values.length; j++) {\n            if (format.indexOf(this.parent.dataSourceSettings.values[j].name) === -1) {\n                formatObject = {\n                    name: this.parent.dataSourceSettings.values[j].name, format: 'N0',\n                    useGrouping: true\n                };\n                this.newFormat.push(formatObject);\n            }\n        }\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('values')\n        });\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('formatType')\n        });\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('grouping')\n        });\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('decimalPlaces')\n        });\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('customFormatString')\n        });\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatValueDrop')) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                valueFields.push({\n                    index: i + 1, name: this.parent.dataSourceSettings.values[i].caption || this.parent.dataSourceSettings.values[i].name,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            this.valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP, change: this.valueChange.bind(this), width: '100%',\n                open: this.customUpdate.bind(this)\n            });\n            this.valuesDropDown.isStringTemplate = true;\n            this.valuesDropDown.appendTo('#' + this.parent.element.id + '_FormatValueDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 3, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            this.formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl,\n                cssClass: cls.FORMATTING_FORMAT_DROP, width: '100%'\n            });\n            this.formatDropDown.isStringTemplate = true;\n            this.formatDropDown.appendTo('#' + this.parent.element.id + '_FormatDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_GroupingDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            this.groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP, width: '100%', change: this.groupingChange.bind(this)\n            });\n            this.groupingDropDown.isStringTemplate = true;\n            this.groupingDropDown.appendTo('#' + this.parent.element.id + '_GroupingDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_DecimalDrop')) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 },\n            ];\n            this.decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP, popupHeight: 150, width: '100%', change: this.decimalChange.bind(this)\n            });\n            this.decimalDropDown.isStringTemplate = true;\n            this.decimalDropDown.appendTo('#' + this.parent.element.id + '_DecimalDrop');\n        }\n        if (this.formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n        if (this.lastFormattedValue.length !== 0) {\n            this.valuesDropDown.value = this.lastFormattedValue[0].name;\n            var fString = this.lastFormattedValue[0].format;\n            var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n            var group = this.lastFormattedValue[0].useGrouping ? this.parent.localeObj.getConstant('true') :\n                this.parent.localeObj.getConstant('false');\n            this.updateFormattingDialog(fString, first, group);\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.newFormat;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString === '' ? '' : fString.split('')[0].toLowerCase();\n                var group = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                    this.parent.localeObj.getConstant('false');\n                this.updateFormattingDialog(fString, first, group);\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = 0;\n            this.groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.updateFormattingDialog = function (fString, first, group) {\n        if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n            this.formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = Number(fString.split('')[1]);\n            this.groupingDropDown.value = group;\n        }\n        else {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n            this.customText.value = fString;\n        }\n    };\n    NumberFormatting.prototype.customUpdate = function () {\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('Custom')) {\n            var index = this.getIndexValue();\n            this.newFormat[index].format = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        var index = this.getIndexValue();\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            this.groupingDropDown.enabled = false;\n            this.decimalDropDown.enabled = false;\n            this.newFormat[index].format = this.customText.value;\n        }\n        else {\n            var text = this.formattedText();\n            this.newFormat[index].format = text;\n            this.customText.disabled = true;\n            this.groupingDropDown.enabled = true;\n            this.decimalDropDown.enabled = true;\n            this.customText.value = '';\n        }\n    };\n    NumberFormatting.prototype.groupingChange = function () {\n        var index = this.getIndexValue();\n        this.newFormat[index].useGrouping = this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false;\n    };\n    NumberFormatting.prototype.getIndexValue = function () {\n        var format = [];\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.push(this.newFormat[i].name);\n        }\n        var index = format.indexOf(this.valuesDropDown.value.toString());\n        return index;\n    };\n    NumberFormatting.prototype.decimalChange = function () {\n        var index = this.getIndexValue();\n        var text = this.formattedText();\n        this.newFormat[index].format = text;\n    };\n    NumberFormatting.prototype.formattedText = function () {\n        var text;\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = this.formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                this.formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            return text += this.decimalDropDown.value;\n        }\n        else {\n            return text = this.customText.value;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text = this.formattedText();\n        var index = this.getIndexValue();\n        this.newFormat.splice(index, 1);\n        var format = extend([], this.newFormat, true);\n        if (this.valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            var fieldList = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule.fieldList : this.parent.engineModule.fieldList;\n            for (var _i = 0, _a = Object.keys(fieldList); _i < _a.length; _i++) {\n                var key = _a[_i];\n                this.insertFormat(key, text);\n            }\n        }\n        else {\n            this.insertFormat(this.valuesDropDown.value.toString(), text);\n        }\n        var eventArgs = {\n            formatSettings: PivotUtil.cloneFormatSettings(this.newFormat),\n            formatName: this.valuesDropDown.value.toString(),\n            cancel: false\n        };\n        this.parent.trigger(events.numberFormatting, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: observedArgs.formatSettings } }, true);\n                try {\n                    _this.parent.updateDataSource(false);\n                    _this.dialog.close();\n                }\n                catch (exception) {\n                    _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n                    /* tslint:disable-next-line:max-line-length */\n                    _this.parent.pivotCommon.errorDialog.createErrorDialog(_this.parent.localeObj.getConstant('error'), _this.parent.localeObj.getConstant('invalidFormat'), _this.dialog.element);\n                    _this.parent.hideWaitingPopup();\n                }\n            }\n            else {\n                _this.dialog.close();\n                _this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            }\n        });\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text) {\n        var isExist = false;\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false\n        };\n        var format = this.newFormat;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n        this.lastFormattedValue = [];\n        this.lastFormattedValue.push(newFormat);\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     * @hidden\n     */\n    function Grouping(parent) {\n        /* tslint:disable-next-line:max-line-length */\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        this.parentElement = parentElement;\n        this.selectedCellsInfo = [];\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('aria-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        this.selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        this.selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedOptions\n     * @param  {SelectedCellsInfo[]} axis - Get the members name from the given selected cells information\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (this.selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (this.selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            if (isBlazor()) {\n                PivotUtil.setPivotProperties(this.parent, { dataSourceSettings: { groupSettings: groupFields } });\n            }\n            else {\n                this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            }\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            this.parent.notify(events.initialLoad, {});\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames, type) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        /* tslint:disable */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        /* tslint:enable */\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type) {\n        var _this = this;\n        var groupDialog = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialog);\n        this.groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.groupDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            overlayClick: function () { _this.removeDialog(); },\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement\n        });\n        this.groupDialog.isStringTemplate = true;\n        this.groupDialog.appendTo(groupDialog);\n    };\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-wrapper' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    /* tslint:disable:max-line-length */\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text', innerHTML: this.parent.localeObj.getConstant('groupFieldCaption')\n                    });\n                    /* tslint:enable:max-line-length */\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-wrapper' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text', innerHTML: this.parent.localeObj.getConstant('groupTitle')\n                    });\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-wrapper' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        value: caption, width: '100%'\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        width: '100%'\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-wrapper'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-wrapper'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-wrapper'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text', innerHTML: this.parent.localeObj.getConstant('groupBy')\n                    });\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') },\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        /* tslint:disable */\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            select: function () {\n                                groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                if (intervalObj_1.checkBoxSelectionModule.activeLi.length === 0) {\n                                    groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                            }\n                        });\n                        /* tslint:enable */\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%'\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%'\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    /* tslint:disable:max-func-body-length */\n    Grouping.prototype.updateGroupSettings = function () {\n        var dialogElement = this.groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance('#' + this.parentElement.id + 'group_input_option', MaskedTextBox);\n            var captionInputInstance = getInstance('#' + this.parentElement.id + 'group_caption_option', MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            /* tslint:disable-next-line:max-line-length */\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ? customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_start_option', CheckBox);\n            var endCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_end_option', CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_start_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_start_input', NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_end_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_end_input', NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_interval_input', MultiSelect) :\n                getInstance('#' + this.parentElement.id + 'group_interval_input', NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        this.groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item, pos) { return item.name; });\n                if (newItems) {\n                    /* tslint:disable-next-line:max-line-length */\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item, pos) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        return orderedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            var selectedOptions = [];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if (this.parent.grid && this.parent.grid.isDestroyed) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        if (this.groupDialog && !this.groupDialog.isDestroyed) {\n            this.groupDialog.destroy();\n        }\n        if (this.parentElement && document.getElementById(this.parentElement.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_GroupDialog'));\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.render\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.handlers.load, this); //For initial rendering\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","getDay","getHours","getMinutes","getSeconds","getMilliseconds","isNaN","Number","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedPivotValues","pivotValues","clonedSets","i","j","this","getClonedPivotValueObj","undefined","getDefinedObj","inArray","collection","cnt","isContainCommonElements","collection1","collection2","lnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","type","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","slice","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","fieldMapping","showSubTotals","showRowSubTotals","showColumnSubTotals","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","showAggregationOnValueField","authentication","CloneAuthenticationObject","updateDataSourceSettings","clonedCollection","collection_1","set","name","caption","axis","baseField","baseItem","isCalculatedField","isNamedSet","showNoDataItems","dataType","showFilterIcon","showSortIcon","showRemoveIcon","showValueTypeIcon","showEditIcon","allowDragAndDrop","collection_2","condition","items","levelCount","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_3","order","collection_4","delimiter","collection_5","calendar","currency","format","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","userName","password","collection_6","formatString","formula","hierarchyUniqueName","collection_7","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_8","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_9","groupName","getFilterItemByName","fieldName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","getFieldInfo","len","fieldItem","position","fieldList","olapEngineModule","engineModule","isNamedSets","aggregateType","isButtonIconRefesh","prop","oldProp","newProp","isButtonRefresh","propValidation","oldAxesProp","newAxesProp","axes","oldAxis","newAxis","indexOf","options","oldAxisProp","newAxisProp","k","a","b","c","propValidation_1","validation","exception","formatPivotValues","Axis","actualText","ActualText","indexObject","IndexObject","index","Index","rowHeaders","RowHeaders","columnHeaders","ColumnHeaders","formattedText","FormattedText","actualValue","ActualValue","rowIndex","RowIndex","colIndex","ColIndex","colSpan","ColSpan","level","Level","rowSpan","RowSpan","isSum","IsSum","isGrandSum","IsGrandSum","valueSort","ValueSort","ordinal","Ordinal","hasChild","HasChild","isDrilled","IsDrilled","Value","Type","members","Members","formatPdfHeaderFooter","pdf","contents","content","pageNumberType","PageNumberType","Style","penColor","PenColor","penSize","PenSize","dashStyle","DashStyle","textBrushColor","TextBrushColor","textPenColor","TextPenColor","FontSize","hAlign","HAlign","vAlign","VAlign","points","Points","x1","X1","y1","Y1","x2","X2","y2","Y2","Format","Position","x","X","y","Y","size","Size","height","Height","width","Width","src","Src","font","Font","formatPdfExportProperties","pageOrientation","PageOrientation","pageSize","PageSize","header","Header","fromTop","FromTop","Contents","Columns","footer","Footer","FromBottom","includeHiddenColumn","IncludeHiddenColumn","dataSource","DataSource","exportType","ExportType","theme","Theme","record","Record","Caption","fileName","FileName","hierarchyExportMode","HierarchyExportMode","allowHorizontalOverflow","AllowHorizontalOverflow","formatExcelStyle","fontColor","FontColor","fontName","FontName","String","bold","Bold","indent","Indent","italic","Italic","underline","Underline","backColor","BackColor","wrapText","WrapText","borders","Borders","numberFormat","NumberFormat","formatExcelCell","cell","cells","hyperlink","target","Hyperlink","Target","displayText","DisplayText","styles","formatExcelHeaderFooter","excel","Rows","row","Cells","grouping","Grouping","formatExcelExportProperties","query","multipleExport","MultipleExport","blankRows","BlankRows","headerRows","HeaderRows","footerRows","FooterRows","formatFieldList","fList","id","Id","FormatString","formattedMembers","FormattedMembers","dateMember","DateMember","filter","Filter","sort","Sort","AggregateType","BaseField","BaseItem","filterType","FilterType","Formula","isSelected","IsSelected","isExcelFilter","IsExcelFilter","ShowNoDataItems","isCustomField","IsCustomField","ShowFilterIcon","ShowSortIcon","ShowRemoveIcon","ShowEditIcon","ShowValueTypeIcon","AllowDragAndDrop","IsCalculatedField","ShowSubTotals","frameContent","rowPosition","dataContent","pivot","isEmptyData","isEngineUpdated","rowCnt","start","end","rCnt","cCnt","getLocalizedObject","locale","localeObj","getConstant","updateReport","report","Name","DataType","FormatSettings","Currency","MaximumFractionDigits","MaximumSignificantDigits","MinimumFractionDigits","MinimumIntegerDigits","MinimumSignificantDigits","Skeleton","UseGrouping","generateUUID","d","Date","getTime","d2","performance","now","replace","r","Math","random","floor","toString","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","PivotEngine","aggregatedValueMatrix","valueContent","formatFields","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeadersCount","columnHeadersCount","rMembers","cMembers","groupingFields","valueMatrix","indexMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rowGrandTotal","columnGrandTotal","removeRowGrandTotal","removeColumnGrandTotal","isValueHasAdvancedAggregate","rawIndexObject","isEditing","actualData","groupRawIndex","fieldKeys","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","customRegex","formatRegex","renderEngine","customProperties","fn","getValueCellInfo","globalize","Internationalization","fieldsType","enableSort","isValueFilterEnabled","isDrillThrough","isBlazor","shift","pageSettings","getGroupedRawData","formats","groups","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMutiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fillFieldMembers","updateSortSettings","generateValueMatrix","filterMembers","columnLength","updateFilterMembers","generateGridData","pos","splice","frameHeaderWithKeys","countFields","map","hasCountField","realData","headerFields","concat","groupRawData","finalData","groupKeys","indexLength","currData","vPos","hPos","memberJoin","join","currFieldName","currValue","savedData","summType","_this","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","len_1","interval","isInRangeAvail","getRange","newDate","newFieldName","setFullYear","getFullYear","month","ceil","getMonth","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","newField","len_3","startValue","endValue","cStartValue","cEndValue","unframedSet","dataLength","framedSetLength","max","len_4","duplicateData","frameData","lastIndexOf","_b","keys_2","_c","axisFields_2","field","len_5","customFieldName","pattern","match","parentField","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","parseInt","getFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","getCalculatedField","lenE","dataTypes","getMappingField","toLowerCase","updateTreeViewData","updateFieldList","actualFormula","this_2","calc","calcProperties","powerFunction","formulaType","split","lmt","aggregateValue","selectedString","filterElements","filterElements_1","dataFields_1","validateValueFields","indMat","dlen","kLn","kl","isDataAvail","membersCnt","fmembersCnt","dl","mkey","fKey","formattedValue","getFormattedValue","dateText","vMat","keyLen","flList","tkln","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","member","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","valueFilter","rowFilterData","isValueFiltered","allMember","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","column","cellSets","getCellSet","rowCellType","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","updateHeaders","rowFlag","columnFlag","updatePivotValues","slicePos","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","memberName","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","engine","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","grandHeader","pop","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","framedHeader","isNotDateType","childrens","stringValue","alphaNumbervalue","charAt","isNullArgument","textArray","hText","mIndex","mType","getMember","sortByValueRow","vlen","aggreColl","rMembers_1","rMembers_2","insertAllMember","rowLength","rowCells","savedCell","spanCnt","indexObj","colCnt","rowPos","cellType","isSpanned","fieldCnt","drillOption","memberString","keyInd","parentMember","valueFil","hierarchy","rlen","decisionObj","reportDataType","isNoData","isDateType","savedMembers","lt","memInd","headerValue","availData","filterPosition","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","lt_1","rowCurrentPage","rowSize","exactStartPos","performSlicing","columnCurrentPage","columnSize","startPos","removeChildMembers","framedMember","customText","reformAxis","tnum","vlt","rTotal","cTotal","actCnt","isLeastNode","hpos","actpos","vln","name_1","calObj","vData","cln","clt","updateRowData","recursiveRowData","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","updateSelectedHeaders","childMembers","aggregateHeaders","children","vCount","isChild","uniqueName","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_2","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","len_6","cLevelName","axisObj","isSelectedColumn","len_7","uniqueLevelName","colIndex_3","currentSet","selectedHeaderCollection_1","colIndex_2","indexCollection_2","cVal","formatNumber","clen","_g","rowindexCollection_2","selectedHeaderCollection_2","rowindexCollection_1","selectedColumn","getSelectedColumn","_h","indexCollection_3","selectedColumnValue","selectedRow","getSelectedRow","_j","selectedHeaderCollection_3","_k","colIndex_4","_l","indexCollection_4","selectedRowValue","_m","selectedHeaderCollection_4","_o","rowindexCollection_3","selectedCol","_p","indexCollection_5","selectedColValue","_q","colIndex_5","_r","selectedHeaderCollection_5","_s","selectedHeaderCollection_6","colheads_1","head","rowheads_1","gTotalIndex","totalValues","gTotalIndex_1","rIndex","val_1","gTotalIndex_2","val_2","isGrand","subTotal","toLocaleString","currentCellSets","keys_3","vcnt","colItmLn","sortText","isTotalHide","lvl","isSingleMeasure","name_3","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","formatField","test","flag","integerPart","decimalPart","items_1","text","RegExp","initialLoad","uiUpdate","contentReady","dataReady","ROOT","RTL","DEVICE","ICON","COLLAPSE","EXPAND","TABLE","CALCINPUT","FLAT","FORMAT","FORMULA","MENU_HIDE","INPUT","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","GRID_REMOVE","GRID_TOOLBAR","PIVOTCHART","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","AggregateMenu","parent","menuInfo","render","args","parentElement","openContextMenu","buttonElement","isStringField","summaryTypes","getMenuItem","eventArgs","cancel","aggregateTypes","getModuleName","isPopupView","trigger","observedArgs","createContextMenu","currentMenu","getBoundingClientRect","enableRtl","open","top","window","scrollY","document","documentElement","scrollTop","left","menuItems","isDestroyed","destroy","checkDuplicates","element","getAllSummaryType","menuOptions","beforeOpen","beforeMenuOpen","bind","onClose","querySelector","focus","select","selectOptionInContextMenu","contextMenu","getElementById","innerHTML","createElement","appendChild","Menu","isStringTemplate","appendTo","isString","zIndex","display","createValueSettingsDialog","valueDialog","className","attrs","data-field","Dialog","animationSettings","effect","allowDragging","createFieldOptions","isModal","visible","showCloseIcon","buttons","click","updateValueSettings","buttonModel","cssClass","isPrimary","hide","closeOnEscape","renderMode","overlayClick","removeDialog","close","fieldCaption","getAttribute","summaryType","summaryDataSource","summaryItems","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","textContent","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","dataBind","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","allowDeferLayoutUpdate","notify","events.uiUpdate","triggerPopulateEvent","dialogElement","captionInstance","getInstance","summaryInstance","baseFieldInstance","baseItemInstance","remove","Render","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","gridSettings","formatList","getFormatList","aggMenu","gridHeaderCellInfo","gridCellCollection","injectGridModules","getRowStartPos","grid","frameDataSource","frameStackedHeaders","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","getHeaderContent","calculateGridWidth","allowAutoResizing","refreshUI","calculateGridHeight","bindGrid","on","headerRefreshed","refreshHeader","enableVirtualization","mHdr","mCont","vtr","virtualHeaderDiv","setStyleAttribute","transform","scrollLeft","isEmpty","Grid","frozenColumns","frozenRows","enableHover","frameEmptyData","frameEmptyColumns","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","rowHeight","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","pdfExportComplete","excelExportComplete","excelDataBound","lastGridSettings","gridObject","pivotColumns","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","startIndex","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","lastColumn","cellTemplate","getCellTemplate","targetCell","enableHtmlSanitizer","appendHtml","SanitizeHtmlHelper","sanitize","outerHTML","borderRight","borderLeft","widthService","setWidthToTable","notEmpty","currentView","hideScroll","setFocusOnLastCell","renderReactTemplates","events.contentReady","keyboardModule","event","nodeName","gridFocus","serviceLocator","getService","setFocusedElement","addClass","cellTarget","lastCellClicked","elem","bool","isGroupElement","classList","contains","allowGrouping","groupingModule","validateField","pivotValue1","querySelectorAll","cls.EXPAND","add","cls.MENU_HIDE","cls.COLLAPSE","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","innerText","allowCalculatedField","fieldType_1","menuItem","MouseEvent","view","bubbles","cancelable","exportArgs","ele","rowIndx","colIndx","pivotValue","pdfDoc","isBlob","isMultipleExport","pdfExportProperties","pdfProperties","pdfExport","workbook","excelExportProperties","excelProperties","excelExport","csvExport","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","validateColumnTotalcell","headerPosKeys","sumLock","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","vSort","lock","padding-top","customAttributes","offsetWidth","firstColWidth","gridColumn","firstRowHeight","offsetHeight","e","clearTimeout","timeOutObj","setTimeout","onSelect","pivotArgs","currentCell","selectedElements_1","customClass","hyperlinkSettings","isValueCell","onOlapRowCellBoundEvent","localizedText","rowGrandPos","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","colGrandPos","isSummaryCellHyperlink","isValueCellHyperlink","colindex","templateID","unWireEvents","wireEvents","pivotview","rowMeasurePos","tupRowInfo","tupInfo","memberPosition","uNameCollection","fieldSep","substring","memberType","nxtIndextCount","lastIndextCount","prevHasChild","fPos","typeCollection","isHierarchy","hasAllMember","iPos","maxIndent","hierarchyName","levelUniqueName","currPos_1","lvlPosition","hierarchyPOs","currPos_2","currHierarchyPos","currPos","lvlPos","hasChild_1","measurePosition","allStartPos","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnCellHyperlink","hdrdiv","lineHeight","div","navigator","userAgent","insertBefore","tupColumnInfo","prevCell","isSpannedCell","colLength","currCell","parentCellSpan","parentCellPos","onHyperCellClick","nativeEvent","getElement","0","1","calculateColWidth","colCount","parWidth","parseFloat","columnWidth","isOverflows","colWidth","resizeColWidth","eleWidth","totColWidth","elementCreated","gridHeight","parHeight","getHeightAsNumber","cls.GRID_TOOLBAR","tableHeight","cls.TABLE","contentHeight","tableWidth","horizontalOverflow","verticalOverflow","commonOverflow","singleValueFormat","integrateModel","headerCnt","headerSplit","splitPos","columnModel","actualCnt","colField","setSavedWidth","minWidth","tmpSpan","innerModel","innerPos","clipMode","configLastColumnWidth","triggerColumnRenderEvent","formatArray","fString","fCnt","gridCell","exportHeaderEvent","exportContentEvent","paragraphIndent","excelRows","tmpCell","EventHandler","CommonKeyboardInteraction","keyConfigs","shiftF","shiftS","shiftE","delete","enter","escape","upArrow","downArrow","tabIndex","KeyboardEvents","keyAction","keyActionHandler","eventName","processFilter","processSort","processEdit","processDelete","processEnter","processClose","processFilterNodeSelection","getButtonElement","allPivotButtons","closest","preventDefault","moduleName","filterDialog","dialogPopUp","dialogElement_1","isExcelFilter_1","allowExcelLikeFilter","keyCode","memberEditorTree","firstLi","removeAttribute","allMemberEditorTree","parentID","dialogInstance","ej2_instances","button","pivotButtons_1","EventBase","updateSorting","checkisDescending","isDescending","sortObj","newSortObj","lastSortInfo","updateFiltering","treeData","getOlapData","isValidFilterItemsAvail","getTreeData","popupTarget","filterTargetID","createFilterDialog","isItemAvail","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","levels","getFilterMembers","getMembers","currrentMembers","searchMembers","filterItemObj","dummyfilterItems","memberObject","filterItems_1","getParentNode","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","getParentIDs","treeObj","pid","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","isDataOverflow","isChecked","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","isDateField","filterItems_3","isSearchRender","hasChildren","updateChildNodeStates","members_4","state","sMembers","members_5","parentItem","parentNodes","selectedNodes_1","parent_1","members_6","isNodeExpand","NodeStateModified","onStateModified","droppedClass","nodeDropped","droppedPosition","dataSourceUpdate","btnElement","actualFieldName","tag","description","errorDialog","createErrorDialog","getButtonPosition","updateFieldlistData","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","draggedClass","eventdrop","dropField","dropAxis","dropPosition","draggedAxis","removeFieldFromReport","getNewField","droppedField","droppedAxis","dataSourceUpdate_1","droppedArgs","isMeasureAvail","measureField","fieldAxis","pivotButtonModule","axisFieldModule","ErrorDialog","dialogRenderer","fieldListDialog","errorPopUp","closeErrorDialog","body","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","data-fieldName","aria-label","filterCaption","headerTemplate","filterObject","getFilterObject","iconCss","disabled","closeFilterDialog","removeFilterDialog","filterArgs","fieldMembers","filterSetting","createTabMenu","updateCheckedState","createTreeView","visibility","memberTreeView","nodeChecked","nodeStateModified","allMemberSelect","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","createSortOptions","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","nodeAttr","htmlAttributes","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeSelected","startsWith","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","sortWrapper","cls.FILTER_SORT_CLASS","cls.RTL","sortAscendElement","cls.SORT_SELECTED_CLASS","sortDescendElement","sortBtnElement","Button","unWireEvent","wireEvent","dropMenu","DropDownButton","selectedLevel","nodeLimit","getSearchMembers","isAllMember","checkedNode","getNode","uncheckAll","checkAll","applySorting","sortElements","dataCount","nodeData","childNodes","getChildMembers","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","fieldType","formatObj","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","measures","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","unshift","levelObj","fieldlistData_1","fieldListData","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","cloneNode","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","valueIndex","lDataSource","levelIndex","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","NumericTextBox","inputObj2_2","inputObj1_3","inputObj2_3","role","aria-haspopup","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","PivotCommon","pivotEngine","Common","commonModule","addEventListener","initiateCommonModule","pivotCommon","Browser","isDevice","handlers","load","events.initialLoad","removeEventListener","off","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","FieldListFieldOptions","ConditionalFormatSettings","GroupSettings","CalculatedFieldSettings","CustomGroups","DrillOptions","ValueSortSettings","Authentication","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","mode","cellSelectionMode","wrapMode","Event","exportToExcel","clonedValues","currentPivotValues","exportAllPages","applyFormatting","dataCollections","workSheets","dataColl","colLen","rowLen","actualrCnt","maxLevel","pivotCell","rowOrdinal","measureName","lineStyle","Workbook","worksheets","currencyCode","save","PDFExport","addPage","eventParams","page","pages","PdfStandardFont","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","brush","PdfSolidBrush","PdfColor","pen","PdfPen","PdfPageTemplateElement","RectangleF","graphics","clientSize","drawString","PdfStringFormat","PdfTextAlignment","Center","template","footerTemplate","bottom","hexDecToRgb","hexDec","Error","bigint","g","getFontStyle","fontType","strikeout","Strikeout","getBorderStyle","borderStyle","PdfBorders","pdfColor","all","borderWidth","borderColor","getDashStyle","dashType","getStyle","border","gridStyle","Helvetica","getFontFamily","fontStyle","penBrushColor","setRecordThemeStyle","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","applyEvent","headerStyle","firstColumnWidth","dataCollIndex","vLen","allowRepeatHeader","integratedCnt","pdfGrid","PdfGrid","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","columnSpan","applyStyle","processCellStyle","stringFormat","indent_1","alignment","Right","Left","lineAlignment","PdfVerticalAlignment","Middle","getColumn","draw","PointF","conditionalFormattingModule","hexToRgb","backgroundBrush","textBrush","family","getFont","cellStyle","arg","textColor","textPen","argument","PdfDocument","KeyboardInteraction","tab","shiftTab","shiftUp","shiftDown","shiftLeft","shiftRight","shiftEnter","ctrlEnter","leftArrow","rightArrow","ctrlShiftF","pivotViewKeyboardModule","processTab","processShiftTab","processSelection","clearSelection","toggleFieldList","getNextButton","allpivotButtons","getPrevButton","chartAxis","rowAxis","columnFilterValueAxis","columnFilterValueGroup","rowGroup","chartGroup","tableAxis","groupingbarButton","headerButton","getFocusedElement","nextButton","currentInfo","skipAction","showFieldList","toolbar","toolbarModule","activeElement","gridElement","getElementsByTagName","lastChild","prevButton","allPivotButtons_1","shiftKey","ctrlKey","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","rowIndex_1","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","pivotFieldListModule","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldElement","items_2","items_3","dropClass","VirtualScroll","previousValues","frozenPreviousValues","eventType","addInternalEvents","displayOption","fCont","clearEvents","onHorizondalScroll","onVerticalScroll","common","onWheelScroll","setPageXY","onTouchScroll","isPreventScrollEvent","deltaMode","deltaY","getPointXY","pageXY","touches","pageX","pageY","pointerType","update","direction","rowValues_1","exactSize_1","section","scrollPosObject","vertical","hideWaitingPopup","showWaitingPopup","rowStartPos_1","pivot_1","sfBlazor","copyWithoutCircularReferences","interopAdaptor","invokeMethodAsync","then","updateBlazorData","exactPage","verticalSection","getEngine","scrollPage","pageRowStartPos","colValues_1","exactSize_2","horizontal","colStartPos_1","pivot_2","horizontalSection","pageColStartPos","verticalScrollScale","horizontalScrollScale","scrollDirection","horiOffset","vertiOffset","trim","scrollerBrowserLimit","excessMove","notLastPage","clientWidth","vWidth","clientHeight","movableTable","vHeight","removeInternalEvents","DrillThroughDialog","indexString","isUpdated","gridIndexObjects","gridData","showDrillThroughDialog","rawData","editSettings","allowInlineEditing","allowEditing","editCell","removeDrillThroughDialog","drillThroughDialog","createDrillThroughGrid","drillThroughGrid","dataWithPrimarykey","beforeClose","updateData","previousPosition","gridIndexObjectsValue_1","addItems","prevItems","allowCommandColumns","currModule_1","AddItem","RemoveItem","ModifiedItem","bulkChanges","gridIndex","drillThroughValue","Key","addedData","removedData","updatedData","eventArgs_1","currentData","previousData","gridResize","currentTarget","firstElementChild","numericTextBox","textBoxValue","indexValue","blur","textBoxElement","focusIn","dataPos","drillThroughBody","drillThroughBodyHeader","toolbarItems","Toolbar","ColumnChooser","showColumnChooser","gridColumns","allowPaging","formatData","dialogModule","gridObj","Edit","Page","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","isPrimaryKey","actionComplete","requestType","beforeBatchSave","frameGridColumns","reverse","validationRules","required","editType","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","drillThroughElement","valueCaption","aggType","tupleInfo","colOrdinal","getUniqueName","getDrillThroughData","maxRowsInDrillThrough","gridJSON","ColumnIndex","parsedObj","triggerDialog","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","valuetText","drillThrough","PivotChart","headerColl","columnGroupObject","fieldPosition","measuresNames","accumulationType","loadChart","chartSettings","colMeasurePos","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","zoomFactor","dataLabel","refresh","primary","cls.PIVOTCHART","showToolbar","getGridWidthAsNumber","getChartHeight","chartSeries","AccumulationChart","Chart","enableMultiAxis","measureList","accEmptyPoint","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","drillDimension","groupHierarchyWithLevels","rKeys_1","rKey","firstRowCell","fieldPos","currrentLevel","isAttributeDrill","drillInfo","cKeys","prevMemberCell","cKeys_1","cKey","cellIndex","measureAllow","colHeaders","columnSeries","yValue","refreshChart","persistSettings","getPersistData","columnDelimiter","columnHeader","chartType","currentColumn","currentSeries","frameChartSeries","palettes","xName","yName","emptyPointSettings","innerRadius","columnKeys_1","yAxisName","seriesEvent","pivotChart","bindChart","frameObjectWithKeys","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","chartElement","enableScrollOnMultiAxis","getChartAutoHeight","overflow","overflowX","isMultiAxisChange","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","StripLine","DataLabel","PieSeries","FunnelSeries","PyramidSeries","AccumulationDataLabel","AccumulationLegend","AccumulationTooltip","legendSettings","tooltip","enableSmartLabels","center","pieCenter","enableBorderOnMouseMove","highLightMode","highlightMode","highlightPattern","titleStyle","subTitle","subTitleStyle","margin","background","selectionMode","accumulationSelectionMode","isMultiSelect","enableExport","selectedDataIndexes","enableAnimation","useGroupingSeparator","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","tooltipRender","loaded","resized","zoomSettings","chartArea","crosshair","isTransposed","enableSideBySidePlacement","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","axisLabelRender","multiLevelLabelClick","seriesIndex","showMultiLevelLabels","pointIndex","creatMenu","accumulationMenu","scrollX","drillThroughModule","percentChart","percentAggregateTypes","valCnt","divider","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","plotOffsetTop","lengthofFormat","colIndexColl","rKeys_2","cKeys_2","fieldCount","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","span","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","getZoomFactor","calculatedWidth","seriesLength","templateFn","templateParser","tooltipTemplate","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","majorTickLines","enableSelectionZooming","seriesName","point","columnText","rowText","getTooltipTemplate","rowFields","getHeaderField","columnFields","templateVariable","valueField","tooltipTemplateFn","isChartLoaded","alignIcon","multilabelAxisName","updateView","isServerWaitingPopup","getString","getMenuItems","expand","collapse","drillMenuOpen","drillMenuSelect","enableItems","levelCol","labelInfo","memberUqName","fieldAvail","memIndex","drillArgs","drillItem","renderPivotGrid","drillItems","uName","zoomModule","isZoomed","axisLabelFont","fontWeight","axisTitleFont","chartTitleFont","chartSubTitleFont","crosshairLabelFont","tooltipLabelFont","legendLabelFont","stripLineLabelFont","stockEventFont","Animation","ChartSegment","Margin","Border","Offset","Indexes","ChartArea","CrosshairSettings","DataLabelSettings","right","PivotChartConnectorStyle","PivotChartDataLabel","MarkerSettings","ErrorBarCapSettings","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","CrosshairTooltip","StripLineSettings","LabelBorder","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","ChartLocation","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","PivotChartSeriesErrorSettings","PivotChartSeriesTrendline","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","PivotChartSettingsIndexes","PivotChartSettingsMargin","PivotAxis","PivotTooltipSettings","PivotPieChartCenter","PivotZoomSettings","ChartSettings","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isPaging","updateDrilledItems","fieldDataObj","fieldListObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","frameMDXQuery","request","LCID","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","calColumnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","drillQuery","getAttributeDrillQuery","updateValueSortQuery","getMeasurePos","drilledMembers_1","drillInfo_1","result","getDrillLevel","getDimensionPos","isExist","isAttributeMemberExist","levelQuery","getHierarchyQuery","isAvailable","hierarchyPosition","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_2","rawQuery","drillInfo_2","heirarchize","slicers","i_1","colUqName","getDimensionUniqueName","slicerUqName","dimension","hierarchyNode","curElement","hierarchyNode_1","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","namedSetsPosition","colDepth","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","isColDrill","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","getCulture","getAxisFields","frameSortObject","setNamedSetsPosition","updateFieldlist","loadCalculatedMemberElements","updateFilterItems","xmlDoc","xmlaCellSet","countCells","newPage","prevPage","colMeasures","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","rowTuples","valCollection","measureInfo","getMeasureInfo","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","tuples","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","startTupPos","lastMesPos","memPos","prevParent","typeColl","drillStartPos","startDrillUniquename","drillEndPos","firstTupMembers","attrDrill","checkAttributeDrill","drillAllow","withoutAllAllow","parentUniqueName","lastPos","lastMemPos","withoutAllDrilled","depth","getDepth","getCaptionCollectionWithMeasure","showTotals","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","memberUName","memberCaption","parentUName","UName","currUName","currCaption","currLevel","uNames","captions","uCollection","parentLevel","setDrillInfo","tuple","captionColection","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","_this_1","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberPos","memberDepth","getMeasurePosition","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","isAdjacentToMeasure","isAdjacent","childMember","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","rPos","currentTuple","frameUniqueName","getParentUname","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","newPos","temporary","grandTotal","arrange","prevRowCell","prevColIndex","prevColRowCell","key_1","sortColumnHeaders","length_1","cellPos","l","length_2","q","weight","hgt","height1","hgt1","leng","m","pElement","cElement","o","hasLastMeasure","measureAvail","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","rowEndPos","startRowOrdinal","lastColCell","valElement","formatDate","mAxis","measureAxis","measureIndex","valueInfo","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","values_2","vOrdinalIndex","cRow","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillField","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","actualFilter","expression","parentHierarchy","isSelect","getFieldListItems","getAggregateType","isMembersAvail","selectedElements","parentNodes_1","currentItems","selectedElement","drilledItems","maxRows","filteritems","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","isSearchFilter","loadLevelMember","isAllFilterData","filterParentQuery","dimProp","generateMembers","loadLevelMembers","memberUQName","getCalcChildMembers","searchString","maxNodeLimit","parentUqName","expanded","nodeSelect","fieldDate","hierarchyElements","fields_2","isAllMemberAvail","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","spriteCssClass","fields_3","dimensionName","dimensionCaption","defaultHierarchy","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_4","fieldObj","loadHierarchyElements","dataFields_4","fields_5","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_6","levelCaption","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_7","measureGRPName","measuresGroups","success","Ajax","contentType","beforeSend","onSuccess","DOMParser","parseFromString","onFailure","send","httpRequest","setRequestHeader","btoa","connectionInfo","getMDXQuery","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","lastFilterInfo","lastCalcFieldInfo","shiftLockedPos","savedSelectedCellsPos","cellSelectionPos","isPopupClicked","isMouseDown","isMouseUp","remoteData","defaultItems","isCellBoxMultiSelection","posCount","isModified","isInitialRendering","needsID","pivotRefresh","Component","XMLHttpRequest","setValue","mergePersistPivotData","PivotView_1","requiredModules","modules","allowConditionalFormatting","allowNumberFormatting","toolbarTemplate","preRender","isIE","info","isTouchMode","initProperties","renderToolTip","defaultLocale","total","noValue","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","sortAscending","sortDescending","sortNone","clearCalculatedField","editCalculatedField","formulaField","dragField","clearFilter","by","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Min","SampleVar","PopulationVar","RunningTotals","Max","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","csv","png","jpeg","svg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","pie","funnel","doughnut","pyramid","stackingcolumn","stackingarea","stackingbar","stepline","steparea","splinearea","spline","stackingcolumn100","stackingbar100","stackingarea100","bubble","pareto","radar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","true","false","decimalPlaces","expressionField","customFormat","numberFormatString","selectedHierarchy","olapDropText","Percent","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","multipleAxes","showLegend","exit","chartTypeSettings","ChartType","yes","no","numberFormatMenu","conditionalFormatingMenu","removeCalculatedField","replaceConfirmBefore","replaceConfirmAfter","invalidJSON","invalidCSV","L10n","isDragging","onBeforeTooltipOpen","showTooltip","showTipPointer","mouseTrail","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","aggregateGroup","buildDefaultItems","exportGroupItems","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","chartPointClick","updatePageSettings","chartModule","colValues","rowValues","heightAsNumber","getWidthAsNumber","loadData","guid","renderEmptyGrid","withCredentials","onreadystatechange","onReadyStateChange","readyState","DONE","responseText","currentAction","currentMembers","dateMembers","updateFilterEvents","pivotCount","RowCount","ColumnCount","RowStartPosition","ColumnStartPosition","RowFirstLevel","ColumnFirstLevel","HeaderText","HeaderDelimiter","SortOrder","initEngine","isRequireUpdate","endDialog","exactSize","aggField","cField","rawDataArgs","editArgs","enableDrillThrough","stringify","params","aggregatedItem","calculatedItem","fetchRawDataArgs","hash","jsonObject","cellTemplateFn","spinnerTemplate","createSpinner","loadArgs","updateClass","renderComplete","generateData","events.dataReady","onContentReady","keyEntity","addOnPersist","loadPersistData","persistData","pivotData","blazdataSource","localStorage","getItem","showConditionalFormattingDialog","withHeader","onPropertyChanged","updateGroupingReport","savedDataSourceSettings","refreshData","treeViewModule","fieldTable","renderLayout","clonedDataSet","dataSet","refreshToolbar","createChartMenu","compile","innerHtml","tempElement","firstChild","clearTemplate","resetBlazorTemplate","clonedDataSource","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","formatUnit","showSpinner","hideSpinner","isRefreshGrid","isSorted","isFiltered","isAggChange","isCalcChange","interopArguments","enginePopulatedEventMethod","datasourceSettings","excelExportModule","pdfExportModule","chartExport","orientation","exportModule","printChart","print","chartDrillInfo","clonedDrillMembers_1","drillMembers","drilledItem_1","drillArgs_1","onOlapDrill","clonedDrillMembers","isAttributeHierarchy","clonedMembers","drillSet","memberItem","itemPos","clonedMembers_1","drilledMember","drillItemCollection","member_1","clonedMembers_2","fieldListSpinnerElement","isEmptyGrid","virtualDiv","mCnt","verOffset","unwireEvents","gridCells","gridCells_1","templateObject","isGrandTotal","isTotal","valueSortInfo","updateBlazorTemplate","hasField","getRowText","getColText","limit","colText","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","parentAt","lastSelectedElement","mouseMoveHandler","mouseUpHandler","CellClicked","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","setCommonColumnsWidth","onWindowResize","rowDeselect","selectRow","cellClick","getSelectedCellsPos","setSavedSelectedCells","applyRowSelection","rCount","colStart","colEnd","rowStart","isCtrl","showPopup","queryStringArray","isToggle","activeColumns","actColPos","rowSelectedList","isTargetSelected","scrollModule","setWidth","setHeight","overflowY","isArray","clonedReport","pivot_3","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalLen","blazPivotValues","valLen","getData","aggregateObj","bindTriggerEvents","getObject","executeQuery","requiresCount","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","insertRule","createTextNode","conditionalSettings","ilen","jlen","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","isDateGroupUpdated","drillObj","settingsObj","isExists","removeButtonFocus","numberFormattingModule","isServerRendered","cls.ROOT","showNumberFormattingDialog","NotifyPropertyChanges","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","cancelButtonClick","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldList","pivotFieldList","pivotChange","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","dialogOpen","offsetTop","adaptiveElement","selectedNodes","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","onShowFieldList","show","updateAdaptiveCalculatedField","TreeViewRenderer","fieldListSort","renderTreeDialog","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","centerDiv","axisHeader","renderTreeView","headerWrapper","None","Ascend","Descend","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeStateChange","autoCheck","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","dialogClose","textChange","addNode","liList","disabledList","fieldInfo","draggedNode","dragEventArgs","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","droppableButton","wrapperElement","li_1","id_1","selectedNode_1","fieldInfo_1","updateCheckState","updateSelectedNodes","updateReportSettings","updateNodeStateChange","removeFieldArgs","dropArgs","chkState","checkClass","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","updateDropIndicator","PivotButton","menuOption","PivotFieldList","axisField","AxisFieldRenderer","renderPivotButton","valuePos","showValuesButton","groupingBarSettings","isMeasureFieldsAvail","buttonWrapper","data-tag","cls.PIVOT_BUTTON_CLASS","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","calcElement","removeElement","pivotButton","createDraggable","valueData","valueFiedDropDownList","ddlDiv","availColindex","columnData","firstValueRow","columnFieldDropDownList","delimiter_1","aggregation","filterMem","updateButtontext","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","validateDropdown","createSummaryType","createMenuOption","openCalculatedFieldDialog","buttonCall","draggable","Draggable","clone","enableTailMode","enableAutoScroll","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","filterCLass","cls.FILTER_COMMON_CLASS","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","loop","actualFilterItems","updatedFilterItems_1","cloneElement","intDestroy","detach","fieldListPopup","bindEvents","cursorAt","isNOU","targetTouches","cursor","isButtonDropped","droppableTarget","thisObj","pivotObj","mouseEventArgs","$this_1","parsedData","bindDialogEvents","updateDialogButtonEvents","ClearFilter","updateFilterState","updateCustomFilter","removeDataSourceSettings","inputElementString","focusElement","filterEventArgs","refreshPivotButtonState","setFocus","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","sNodeLength","pivotButtons_2","selectedButton","pivotButtons_3","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","captionData","frameCustomProperties","staticPivotGridModule","fieldListRender","requireRefresh","pivotDataSet","this$_2","getFieldCaption","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","dataArgs","updateOlapDataSource","pivotId","ID","VARP","CALC","isFormula","existingReport","dialog","inputObj","droppable","newFields","isFieldExist","formulaText","fieldText","formatText","isEdit","currentFieldName","confirmPopUp","displayMenu","cls.GRID_REMOVE","createConfirmDialog","fieldClickHandler","cls.FORMAT","renderMobileLayout","accordionClickHandler","originalEvent","optionElement","accordionCreated","allElement","accordion","append","clearFormula","treeNode","edited","customString","memberTypeDrop","hierarchyDrop","formatDrop","readonly","curMenu","removeCalcField","calcfields","removeItem","removeNodes","validSummaryTypes","getValidSummaryType","duplicateTypes","createMenu","offset","selectContextMenu","applyFormula","currentObj","calculatedField","getCalculatedFieldInfo","calcInfo","currentFormula","updateFormatSettings","addFormula","newFormat","isFormatExist","showError","cls.CALCINPUT","calcFields","getFieldListData","typeVal","icon","fieldDropped","textCovered","currentValue","cursorPos","selectionStart","textAfterText","textBeforeText","setSelectionRange","createDialog","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","timeOut","renderDialogElements","outerDiv","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","olapCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","formatStringData","createOlapDropElements","mData","fData","fieldData","memberTypeData_1","formatStringData_1","memberTypeObj","hierarchyListObj","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","editElement","editWrapper","liTextElement_1","spaceElement","prepend","createTypeContainer","input","data-ftxt","data-value","menuTypes","getAccordionData","cls.FLAT","cancelBtnClick","formatInputObj","Accordion","expanding","accordionExpand","clicked","created","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","isRemove","replaceFormula","cls.OK_BUTTON_CLASS","FieldList","initiateModule","containerWrapper","aggregateCellInfo","updateControl","currentWidth","actualWidth","abs","AxisFields","indentDiv","GroupingBar","touchObj","Touch","tapHold","tapHoldHandler","groupingTable","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","rowPanel","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","axisPanels_1","displayMode","groupingChartTable","appendToElement","emptyRowCount","emptyHeader","colGroupElement","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","rowHeader_1","rhElement","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","valueColWidth","setColWidth","dropIndicatorUpdate","ConditionalFormatting","fieldsDropDown","conditionsDropDown","fontNameDropDown","fontSizeDropDown","addButtonClick","cls.FLAT_CLASS","refreshConditionValues","destroyColorPickers","addFormat","createDialogElements","renderDropDowns","renderColorPicker","innerDiv","table","tRow","td","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","cls.INPUT","valuespan","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","popupHeight","popupWidth","measureChange","conditionChange","fontNames","fontNameChange","fontSizeChange","ColorPicker","cls.FORMAT_COLOR_PICKER","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","rgb","round","currentReport","createToolbar","renderDialog","tool","getItems","allowKeyboard","viewStr","replaceChild","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","resolve","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","toDisable","cls.TOOLBAR_GRID","menuItemClick","validTypes","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","reportLoad","itemData","saveReport","saveArgs","dialogShow","mdxQueryDialog","mdxDialog","renderMDXDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","newArgs","createNewReport","okBtnClick","copyMDXQuery","textArea","execCommand","err","reportInput","isExist_2","_this_3","reports_1","updateReportList","isExist_3","_this_4","renameText","renameArgs","isExist_1","_this_2","okButtonClick","removeArgs","isReportExists","getValidChartType","separator","cls.TOOLBAR_CHART","chartMenu","whitespaceRemove","focusToolBar","beforeItemRender","multipleAxesCheckbox","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","subTotalMenu","updateSubtotalSelection","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","updateItemElements","itemElements_1","inputCheckbox","checkboxObj","getLableState","showLableState","getAllChartItems","cls.PIVOT_DISABLE_ICON","_this_5","PdfPageOrientation","Landscape","createChartTypeDialog","updateChartType","chartTypes","chartDialog","chartTypesDialog","getDialogContent","chartTypeDialogUpdate","checkedShow","chartLableState","isMultiAxis","mainWrapper","optionWrapperDiv","optionTextDiv","dropOptionDiv","chartTypeDatasource","changeDropDown","checkboxWrap","labelCheckboxWrap","NumberFormatting","lastFormattedValue","updateFormatting","formatObject","renderControls","outerElement","tValue","valueLable","valueDrop","formatLable","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","valueChange","customUpdate","formatDropDown","dropDownChange","groupingDropDown","groupingChange","decimalDropDown","decimalChange","first","updateFormattingDialog","getIndexValue","insertFormat","formatName","isUpdate","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","currentField","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","checkBoxSelectionModule","activeLi","selectedInterval","intervalObj","min","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupOrders_1","orderedSettings","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.PivotView","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping"],"mappings":"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"}