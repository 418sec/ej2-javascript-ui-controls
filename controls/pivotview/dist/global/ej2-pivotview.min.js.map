{"version":3,"file":"ej2-pivotview.min.js","sources":["../../src/base/util.js","../../src/base/engine.js","../../src/common/base/constant.js","../../src/common/base/css-constant.js","../../src/common/popups/aggregate-menu.js","../../src/pivotview/renderer/render.js","../../src/pivotview/model/datasourcesettings.js","../../src/pivotview/model/gridsettings.js","../../src/pivotview/actions/excel-export.js","../../src/pivotview/actions/pdf-export.js","../../src/pivotview/actions/keyboard.js","../../src/common/popups/context-menu.js","../../src/pivotview/actions/virtualscroll.js","../../src/common/popups/drillthrough-dialog.js","../../src/pivotview/actions/drill-through.js","../../src/pivotchart/base/pivotchart.js","../../src/pivotview/model/chartsettings.js","../../src/base/olap/mdx-query.js","../../src/base/olap/engine.js","../../src/pivotview/base/pivotview.js","../../src/common/actions/keyboard.js","../../src/common/actions/event-base.js","../../src/common/actions/node-state-modified.js","../../src/common/actions/dataSource-update.js","../../src/common/popups/error-dialog.js","../../src/common/popups/filter-dialog.js","../../src/common/base/pivot-common.js","../../src/pivotfieldlist/renderer/dialog-renderer.js","../../src/pivotfieldlist/renderer/tree-renderer.js","../../src/pivotfieldlist/renderer/axis-table-renderer.js","../../src/common/actions/pivot-button.js","../../src/pivotfieldlist/renderer/axis-field-renderer.js","../../src/pivotfieldlist/renderer/renderer.js","../../src/pivotfieldlist/base/field-list.js","../../src/common/calculatedfield/calculated-field.js","../../src/common/actions/field-list.js","../../src/common/actions/common.js","../../src/common/grouping-bar/axis-field-renderer.js","../../src/common/grouping-bar/grouping-bar.js","../../src/common/conditionalformatting/conditional-formatting.js","../../src/common/popups/toolbar.js","../../src/common/popups/formatting-dialog.js","../../src/common/popups/grouping.js","../../src/global.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n/**\n * This is a file to perform common utility for OLAP and Relational datasource\n * @hidden\n */\nvar PivotUtil = /** @class */ (function () {\n    function PivotUtil() {\n    }\n    PivotUtil.getType = function (value) {\n        var val;\n        val = (value && value.getDay) ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n            value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n        return val;\n    };\n    PivotUtil.resetTime = function (date) {\n        date.setHours(0, 0, 0, 0);\n        return date;\n    };\n    PivotUtil.getClonedData = function (data) {\n        var clonedData = [];\n        if (data) {\n            for (var _i = 0, _a = data; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var fields = Object.keys(item);\n                var keyPos = 0;\n                /* tslint:disable */\n                var framedSet = {};\n                /* tslint:enable */\n                while (keyPos < fields.length) {\n                    framedSet[fields[keyPos]] = item[fields[keyPos]];\n                    keyPos++;\n                }\n                clonedData.push(framedSet);\n            }\n        }\n        return clonedData;\n    };\n    PivotUtil.getClonedPivotValues = function (pivotValues) {\n        var clonedSets = [];\n        for (var i = 0; i < pivotValues.length; i++) {\n            if (pivotValues[i]) {\n                clonedSets[i] = [];\n                for (var j = 0; j < pivotValues[i].length; j++) {\n                    if (pivotValues[i][j]) {\n                        clonedSets[i][j] = this.getClonedObj(pivotValues[i][j]);\n                    }\n                }\n            }\n        }\n        return clonedSets;\n    };\n    PivotUtil.getClonedObj = function (data) {\n        var keyPos = 0;\n        /* tslint:disable */\n        var framedSet = {};\n        /* tslint:enable */\n        if (!(data === null || data === undefined)) {\n            var fields = Object.keys(data);\n            while (keyPos < fields.length) {\n                framedSet[fields[keyPos]] = data[fields[keyPos]];\n                keyPos++;\n            }\n        }\n        else {\n            framedSet = data;\n        }\n        return framedSet;\n    };\n    PivotUtil.inArray = function (value, collection) {\n        if (collection) {\n            for (var i = 0, cnt = collection.length; i < cnt; i++) {\n                if (collection[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n    PivotUtil.isContainCommonElements = function (collection1, collection2) {\n        var isContain = false;\n        for (var i = 0, cnt = collection1.length; i < cnt; i++) {\n            for (var j = 0, lnt = collection2.length; j < lnt; j++) {\n                if (collection2[j] === collection1[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /* tslint:disable */\n    PivotUtil.setPivotProperties = function (control, properties) {\n        control.allowServerDataBinding = false;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = false;\n        }\n        control.setProperties(properties, true);\n        control.allowServerDataBinding = true;\n        if (control.pivotGridModule) {\n            control.pivotGridModule.allowServerDataBinding = true;\n        }\n    };\n    /* tslint:enable */\n    PivotUtil.getClonedDataSourceSettings = function (dataSourceSettings) {\n        var clonesDataSource = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            providerType: dataSourceSettings.providerType,\n            url: dataSourceSettings.url,\n            localeIdentifier: dataSourceSettings.localeIdentifier,\n            excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields.slice(),\n            expandAll: dataSourceSettings.expandAll,\n            allowLabelFilter: dataSourceSettings.allowLabelFilter,\n            allowValueFilter: dataSourceSettings.allowValueFilter,\n            allowMemberFilter: dataSourceSettings.allowMemberFilter,\n            enableSorting: dataSourceSettings.enableSorting ? true : false,\n            rows: this.cloneFieldSettings(dataSourceSettings.rows),\n            columns: this.cloneFieldSettings(dataSourceSettings.columns),\n            filters: this.cloneFieldSettings(dataSourceSettings.filters),\n            values: this.cloneFieldSettings(dataSourceSettings.values),\n            filterSettings: this.cloneFilterSettings(dataSourceSettings.filterSettings),\n            sortSettings: this.cloneSortSettings(dataSourceSettings.sortSettings),\n            drilledMembers: this.cloneDrillMemberSettings(dataSourceSettings.drilledMembers),\n            valueSortSettings: this.CloneValueSortObject(dataSourceSettings.valueSortSettings),\n            valueAxis: dataSourceSettings.valueAxis,\n            formatSettings: this.cloneFormatSettings(dataSourceSettings.formatSettings),\n            calculatedFieldSettings: this.cloneCalculatedFieldSettings(dataSourceSettings.calculatedFieldSettings),\n            showSubTotals: dataSourceSettings.showSubTotals,\n            showRowSubTotals: dataSourceSettings.showRowSubTotals,\n            showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n            showGrandTotals: dataSourceSettings.showGrandTotals,\n            showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n            showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n            showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n            alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n            conditionalFormatSettings: this.cloneConditionalFormattingSettings(dataSourceSettings.conditionalFormatSettings),\n            emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n            groupSettings: this.cloneGroupSettings(dataSourceSettings.groupSettings)\n        };\n        return clonesDataSource;\n    };\n    PivotUtil.updateDataSourceSettings = function (control, dataSourceSettings) {\n        if (control) {\n            /* tslint:disable */\n            this.setPivotProperties(control, {\n                dataSourceSettings: {\n                    catalog: dataSourceSettings.catalog,\n                    cube: dataSourceSettings.cube,\n                    providerType: dataSourceSettings.providerType,\n                    url: dataSourceSettings.url,\n                    localeIdentifier: dataSourceSettings.localeIdentifier,\n                    excludeFields: isNullOrUndefined(dataSourceSettings.excludeFields) ? [] : dataSourceSettings.excludeFields,\n                    expandAll: dataSourceSettings.expandAll,\n                    allowLabelFilter: dataSourceSettings.allowLabelFilter,\n                    allowValueFilter: dataSourceSettings.allowValueFilter,\n                    allowMemberFilter: dataSourceSettings.allowMemberFilter,\n                    enableSorting: dataSourceSettings.enableSorting ? true : false,\n                    rows: dataSourceSettings.rows,\n                    columns: dataSourceSettings.columns,\n                    filters: dataSourceSettings.filters,\n                    values: dataSourceSettings.values,\n                    filterSettings: dataSourceSettings.filterSettings,\n                    sortSettings: dataSourceSettings.sortSettings,\n                    drilledMembers: dataSourceSettings.drilledMembers,\n                    valueSortSettings: dataSourceSettings.valueSortSettings,\n                    valueAxis: dataSourceSettings.valueAxis,\n                    formatSettings: dataSourceSettings.formatSettings,\n                    calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings,\n                    showSubTotals: dataSourceSettings.showSubTotals,\n                    showRowSubTotals: dataSourceSettings.showRowSubTotals,\n                    showColumnSubTotals: dataSourceSettings.showColumnSubTotals,\n                    showGrandTotals: dataSourceSettings.showGrandTotals,\n                    showRowGrandTotals: dataSourceSettings.showRowGrandTotals,\n                    showColumnGrandTotals: dataSourceSettings.showColumnGrandTotals,\n                    showHeaderWhenEmpty: dataSourceSettings.showHeaderWhenEmpty,\n                    alwaysShowValueHeader: dataSourceSettings.alwaysShowValueHeader,\n                    conditionalFormatSettings: dataSourceSettings.conditionalFormatSettings,\n                    emptyCellsTextContent: dataSourceSettings.emptyCellsTextContent,\n                    groupSettings: dataSourceSettings.groupSettings\n                }\n            });\n        }\n    };\n    PivotUtil.cloneFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var set = collection_1[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    caption: set.caption,\n                    axis: set.axis,\n                    baseField: set.baseField,\n                    baseItem: set.baseItem,\n                    isCalculatedField: set.isCalculatedField,\n                    isNamedSet: set.isNamedSet,\n                    showNoDataItems: set.showNoDataItems,\n                    showSubTotals: set.showSubTotals,\n                    type: set.type\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFilterSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_2 = collection; _i < collection_2.length; _i++) {\n                var set = collection_2[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    type: set.type,\n                    condition: set.condition,\n                    items: set.items ? set.items.slice() : set.items,\n                    levelCount: set.levelCount,\n                    measure: set.measure,\n                    selectedField: set.selectedField,\n                    showDateFilter: set.showDateFilter,\n                    showLabelFilter: set.showLabelFilter,\n                    showNumberFilter: set.showNumberFilter,\n                    value1: set.value1,\n                    value2: set.value2\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneSortSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_3 = collection; _i < collection_3.length; _i++) {\n                var set = collection_3[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    order: set.order\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneDrillMemberSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_4 = collection; _i < collection_4.length; _i++) {\n                var set = collection_4[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    delimiter: set.delimiter,\n                    items: set.items ? set.items.slice() : set.items\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneFormatSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_5 = collection; _i < collection_5.length; _i++) {\n                var set = collection_5[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    calendar: set.calendar,\n                    currency: set.currency,\n                    format: set.format,\n                    maximumFractionDigits: set.maximumFractionDigits,\n                    maximumSignificantDigits: set.maximumSignificantDigits,\n                    minimumFractionDigits: set.minimumFractionDigits,\n                    minimumIntegerDigits: set.minimumIntegerDigits,\n                    minimumSignificantDigits: set.minimumSignificantDigits,\n                    skeleton: set.skeleton,\n                    type: set.type,\n                    useGrouping: set.useGrouping\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.CloneValueSortObject = function (collection) {\n        if (collection) {\n            var clonedCollection = {\n                columnIndex: collection.columnIndex,\n                headerDelimiter: collection.headerDelimiter,\n                headerText: collection.headerText,\n                measure: collection.measure,\n                sortOrder: collection.sortOrder\n            };\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCalculatedFieldSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_6 = collection; _i < collection_6.length; _i++) {\n                var set = collection_6[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    formatString: set.formatString,\n                    formula: set.formula,\n                    hierarchyUniqueName: set.hierarchyUniqueName\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneConditionalFormattingSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_7 = collection; _i < collection_7.length; _i++) {\n                var set = collection_7[_i];\n                clonedCollection.push({\n                    applyGrandTotals: set.applyGrandTotals,\n                    conditions: set.conditions,\n                    label: set.label,\n                    measure: set.measure,\n                    style: set.style ? {\n                        backgroundColor: set.style.backgroundColor,\n                        color: set.style.color,\n                        fontFamily: set.style.fontFamily,\n                        fontSize: set.style.fontSize\n                    } : set.style,\n                    value1: set.value1,\n                    value2: set.value2\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneGroupSettings = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_8 = collection; _i < collection_8.length; _i++) {\n                var set = collection_8[_i];\n                clonedCollection.push({\n                    name: set.name,\n                    caption: set.caption,\n                    customGroups: this.cloneCustomGroups(set.customGroups),\n                    endingAt: set.endingAt,\n                    startingAt: set.startingAt,\n                    groupInterval: set.groupInterval,\n                    rangeInterval: set.rangeInterval,\n                    type: set.type\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.cloneCustomGroups = function (collection) {\n        if (collection) {\n            var clonedCollection = [];\n            for (var _i = 0, collection_9 = collection; _i < collection_9.length; _i++) {\n                var set = collection_9[_i];\n                clonedCollection.push({\n                    groupName: set.groupName,\n                    items: set.items ? set.items.slice() : set.items\n                });\n            }\n            return clonedCollection;\n        }\n        else {\n            return collection;\n        }\n    };\n    PivotUtil.getFilterItemByName = function (fieldName, fields) {\n        var filterItems = new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName));\n        if (filterItems && filterItems.length > 0) {\n            return filterItems[filterItems.length - 1];\n        }\n        return undefined;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotUtil.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    return PivotUtil;\n}());\nexport { PivotUtil };\n","import { extend, Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotUtil } from './util';\n/**\n * PivotEngine is used to manipulate the relational or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar PivotEngine = /** @class */ (function () {\n    function PivotEngine() {\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.dateFormatFunction = {};\n        /** @hidden */\n        this.calculatedFields = {};\n        /** @hidden */\n        this.calculatedFormulas = {};\n        /** @hidden */\n        this.valueAxis = 0;\n        /** @hidden */\n        this.saveDataHeaders = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.colStartPos = 0;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        /** @hidden */\n        this.rMembers = [];\n        /** @hidden */\n        this.cMembers = [];\n        /** @hidden */\n        this.groupingFields = {};\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        /** @hidden */\n        this.data = [];\n        /** @hidden */\n        this.actualData = [];\n        /** @hidden */\n        this.groupRawIndex = {};\n        this.allowDataCompression = false;\n        this.dataSourceSettings = {};\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.columnKeys = {};\n        this.fieldDrillCollection = {};\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /* private makeMirrorObject(elements: number[], obj: NumberIndex): void {\n             for (let lp: number = 0, end: number = elements.length; lp < end; lp++) {\n                 obj[elements[lp]] = elements[lp];\n             }\n         } */\n    }\n    /* tslint:disable */\n    PivotEngine.prototype.renderEngine = function (dataSource, customProperties, fn) {\n        this.getValueCellInfo = fn;\n        this.formatFields = {};\n        this.dateFormatFunction = {};\n        this.calculatedFields = {};\n        this.calculatedFormulas = {};\n        this.valueAxis = 0;\n        this.saveDataHeaders = {};\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.rowStartPos = 0;\n        this.colStartPos = 0;\n        this.excludeFields = isNullOrUndefined(dataSource.excludeFields) ? [] : dataSource.excludeFields;\n        this.enableValueSorting = false;\n        this.headerCollection = { rowHeaders: [], columnHeaders: [], rowHeadersCount: 0, columnHeadersCount: 0 };\n        this.valueMatrix = [];\n        this.indexMatrix = [];\n        this.aggregatedValueMatrix = [];\n        this.rMembers = [];\n        this.cMembers = [];\n        this.memberCnt = -1;\n        this.pageInLimit = false;\n        this.endPos = 0;\n        this.removeCount = 0;\n        this.colHdrBufferCalculated = false;\n        this.colValuesLength = 1;\n        this.rowValuesLength = 1;\n        this.slicedHeaders = [];\n        this.fieldFilterMem = {};\n        this.filterPosObj = {};\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        this.rawIndexObject = {};\n        this.isEditing = false;\n        var fields;\n        var val;\n        var filterRw;\n        this.globalize = new Internationalization();\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.fieldsType = customProperties ? customProperties.fieldsType : {};\n        this.enableSort = dataSource.enableSorting;\n        this.alwaysShowValueHeader = dataSource.alwaysShowValueHeader;\n        this.showHeaderWhenEmpty = isNullOrUndefined(dataSource.showHeaderWhenEmpty) ? true : dataSource.showHeaderWhenEmpty;\n        this.showSubTotals = isNullOrUndefined(dataSource.showSubTotals) ? true : dataSource.showSubTotals;\n        this.showRowSubTotals = isNullOrUndefined(dataSource.showRowSubTotals) ? true : dataSource.showRowSubTotals;\n        this.showColumnSubTotals = isNullOrUndefined(dataSource.showColumnSubTotals) ? true : dataSource.showColumnSubTotals;\n        this.showGrandTotals = isNullOrUndefined(dataSource.showGrandTotals) ? true : dataSource.showGrandTotals;\n        this.showRowGrandTotals = isNullOrUndefined(dataSource.showRowGrandTotals) ? true : dataSource.showRowGrandTotals;\n        this.showColumnGrandTotals = isNullOrUndefined(dataSource.showColumnGrandTotals) ? true : dataSource.showColumnGrandTotals;\n        this.allowValueFilter = dataSource.allowValueFilter;\n        this.isValueFilterEnabled = false;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        this.isDrillThrough = customProperties ? (customProperties.isDrillThrough ? customProperties.isDrillThrough : false) : false;\n        this.valueContent = [];\n        this.dataSourceSettings = dataSource;\n        if (!(dataSource.dataSource instanceof DataManager)) {\n            this.data = dataSource.dataSource;\n        }\n        if (customProperties && customProperties.pageSettings && customProperties.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        if (this.data && this.data[0]) {\n            this.fields = Object.keys(this.data[0]);\n            this.rows = dataSource.rows ? dataSource.rows : [];\n            this.columns = dataSource.columns ? dataSource.columns : [];\n            this.filters = dataSource.filters ? dataSource.filters : [];\n            this.values = dataSource.values ? dataSource.values : [];\n            this.formats = dataSource.formatSettings ? dataSource.formatSettings : [];\n            this.groups = dataSource.groupSettings ? dataSource.groupSettings : [];\n            this.calculatedFieldSettings = dataSource.calculatedFieldSettings ? dataSource.calculatedFieldSettings : [];\n            this.enableSort = dataSource.enableSorting === undefined ? true : dataSource.enableSorting;\n            fields = this.getGroupData(this.data);\n            this.validateFilters(dataSource);\n            this.isExpandAll = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? true : dataSource.expandAll;\n            this.drilledMembers =\n                dataSource.drilledMembers ? (this.isValueFiltersAvail && dataSource.allowValueFilter) ? [] : dataSource.drilledMembers : [];\n            this.isMutiMeasures = this.values.length > 1 ? true : false;\n            this.valueAxis = dataSource.valueAxis === 'row' ? 1 : 0;\n            this.emptyCellTextContent = dataSource.emptyCellsTextContent ? dataSource.emptyCellsTextContent : '';\n            this.rowValuesLength = this.valueAxis === 1 ? this.values.length : 1;\n            this.colValuesLength = this.valueAxis === 0 ? this.values.length : 1;\n            this.valueSortSettings = dataSource.valueSortSettings ||\n                { sortOrder: 'None', headerDelimiter: '.', headerText: '', columnIndex: undefined };\n            this.valueSortData = [];\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.allowDataCompression = this.pageSettings && this.pageSettings.allowDataCompression;\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.removeIrrelevantFields(dataSource, Object.keys(this.fieldList));\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var columnLength = this.columns.length - 1;\n            this.columnKeys = {};\n            while (columnLength > -1) {\n                this.columnKeys[this.columns[columnLength].name] = this.columns[columnLength];\n                columnLength--;\n            }\n            this.updateFilterMembers(dataSource);\n            this.generateGridData(dataSource);\n        }\n    };\n    PivotEngine.prototype.removeIrrelevantFields = function (dataSource, fields) {\n        var report = {};\n        report[0] = dataSource.rows;\n        report[1] = dataSource.columns;\n        report[2] = dataSource.values;\n        report[3] = dataSource.filters;\n        var pos = 0;\n        while (pos < 4) {\n            if (report[pos]) {\n                for (var cnt = 0; cnt < report[pos].length; cnt++) {\n                    if ((this.excludeFields.indexOf(report[pos][cnt].name) > -1) || (!isNullOrUndefined(fields) && fields.indexOf(report[pos][cnt].name) === -1)) {\n                        report[pos].splice(cnt, 1);\n                        cnt--;\n                    }\n                }\n            }\n            pos++;\n        }\n    };\n    PivotEngine.prototype.getGroupedRawData = function (dataSourceSettings) {\n        this.data = [];\n        for (var _i = 0, _a = this.actualData; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.data[this.data.length] = this.frameHeaderWithKeys(data);\n        }\n        var countFields = dataSourceSettings.values.filter(function (item) {\n            return item.type === 'Count' || item.type === 'DistinctCount';\n        }).map(function (item) { return item.name; });\n        var hasCountField = countFields.length > 0;\n        var realData = this.data;\n        var headerFields = dataSourceSettings.rows.concat(dataSourceSettings.columns.concat(dataSourceSettings.filters)).map(function (item) {\n            return item.name;\n        });\n        var groupRawData = {};\n        var finalData = [];\n        this.groupRawIndex = {};\n        var groupKeys = {};\n        var indexLength = 0;\n        for (var i = 0; i < realData.length; i++) {\n            var currData = realData[i];\n            var members = [];\n            if (hasCountField) {\n                for (var vPos = 0; vPos < countFields.length; vPos++) {\n                    currData[countFields[vPos]] = isNullOrUndefined(currData[countFields[vPos]]) ? currData[countFields[vPos]] : 1;\n                }\n            }\n            for (var hPos = 0; hPos < headerFields.length; hPos++) {\n                members.push(currData[headerFields[hPos]]);\n            }\n            var memberJoin = members.join('-');\n            if (groupRawData[memberJoin]) {\n                for (var vPos = 0; vPos < dataSourceSettings.values.length; vPos++) {\n                    var currFieldName = dataSourceSettings.values[vPos].name;\n                    var currValue = currData[currFieldName];\n                    var savedData = groupRawData[memberJoin];\n                    var summType = dataSourceSettings.values[vPos].type;\n                    if (!isNullOrUndefined(currValue)) {\n                        if (typeof currValue !== 'number' || summType === 'DistinctCount') {\n                            summType = 'Count';\n                        }\n                        if (isNullOrUndefined(savedData[currFieldName])) {\n                            savedData[currFieldName] = summType === 'Product' ? 1 : ((summType === 'Min' || summType === 'Max')\n                                ? undefined : 0);\n                        }\n                        else if (typeof savedData[currFieldName] !== 'number') {\n                            savedData[currFieldName] = 1;\n                        }\n                        if (summType === 'Count') {\n                            savedData[currFieldName] += 1;\n                        }\n                        else if (summType === 'Min') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] > currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Max') {\n                            if (!isNullOrUndefined(savedData[currFieldName])) {\n                                savedData[currFieldName] = savedData[currFieldName] < currValue ?\n                                    currValue : savedData[currFieldName];\n                            }\n                        }\n                        else if (summType === 'Product') {\n                            savedData[currFieldName] *= currValue;\n                        }\n                        else {\n                            savedData[currFieldName] += currValue;\n                        }\n                    }\n                }\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[groupKeys[memberJoin]].push(i);\n                }\n            }\n            else {\n                groupRawData[memberJoin] = currData;\n                finalData.push(currData);\n                if (this.isDrillThrough) {\n                    this.groupRawIndex[indexLength] = [i];\n                    groupKeys[memberJoin] = indexLength;\n                    indexLength++;\n                }\n            }\n        }\n        return finalData;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getGroupData = function (data) {\n        var fieldkeySet = data[0];\n        var _loop_1 = function (group) {\n            var fieldName = group.name;\n            var caption = group.caption;\n            if (this_1.fields.indexOf(fieldName) > -1) {\n                var groupFields = {};\n                var customGroupFieldName = void 0;\n                if (group.type === 'Date' && this_1.groupingFields[fieldName]) {\n                    return { value: fieldkeySet };\n                }\n                else if (group.type === 'Number') {\n                    if (PivotUtil.getType(fieldkeySet[fieldName]) === 'number' || !this_1.groupingFields[fieldName]) {\n                        if (group.rangeInterval) {\n                            data.sort(function (a, b) { return (a[fieldName] > b[fieldName]) ? 1 : ((b[fieldName] > a[fieldName]) ? -1 : 0); });\n                        }\n                    }\n                    else {\n                        return { value: fieldkeySet };\n                    }\n                }\n                else if (group.type === 'Custom' && this_1.fields.indexOf(fieldName + '_custom_group') > -1) {\n                    return { value: fieldkeySet };\n                }\n                var len = data.length;\n                while (len--) {\n                    var item = data[len];\n                    if (item[fieldName] && group.type === 'Date') {\n                        var date = new Date(item[fieldName].toString());\n                        if (!isNullOrUndefined(date) && group.groupInterval.length > 0) {\n                            for (var i = 0, len_1 = group.groupInterval.length; i < len_1; i++) {\n                                var interval = group.groupInterval[i];\n                                var isInRangeAvail = this_1.getRange(group, date.getTime());\n                                var newDate = PivotUtil.resetTime(new Date());\n                                switch (interval) {\n                                    case 'Years':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_years';\n                                            groupFields[newFieldName] = interval;\n                                            item[newFieldName] = (isInRangeAvail ? undefined : new Date(newDate.setFullYear(date.getFullYear())).toString());\n                                        }\n                                        break;\n                                    case 'Quarters':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarters';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            item[newFieldName] = (isInRangeAvail ? undefined : ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString()));\n                                        }\n                                        break;\n                                    case 'QuarterYear':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_quarterYear';\n                                            groupFields[newFieldName] = interval;\n                                            var month = Math.ceil((date.getMonth() + 1) / 3);\n                                            item[newFieldName] = (isInRangeAvail ? undefined :\n                                                ((this_1.localeObj ? this_1.localeObj.getConstant('qtr') : 'Qtr') + month.toString() + ' '\n                                                    + (this_1.localeObj ? this_1.localeObj.getConstant('of') : 'of') + ' '\n                                                    + date.getFullYear().toString()));\n                                        }\n                                        break;\n                                    case 'Months':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_months';\n                                            groupFields[newFieldName] = interval;\n                                            item[newFieldName] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), newDate.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Days':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_days';\n                                            groupFields[newFieldName] = interval;\n                                            item[newFieldName] = (isInRangeAvail ? undefined : new Date(newDate.setMonth(date.getMonth(), date.getDate())).toString());\n                                        }\n                                        break;\n                                    case 'Hours':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_hours';\n                                            groupFields[newFieldName] = interval;\n                                            item[newFieldName] = (isInRangeAvail ? undefined : new Date(newDate.setHours(date.getHours())).toString());\n                                        }\n                                        break;\n                                    case 'Minutes':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_minutes';\n                                            groupFields[newFieldName] = interval;\n                                            item[newFieldName] = (isInRangeAvail ? undefined : new Date(newDate.setMinutes(date.getMinutes())).toString());\n                                        }\n                                        break;\n                                    case 'Seconds':\n                                        {\n                                            var newFieldName = (i === group.groupInterval.length - 1) ? fieldName : fieldName + '_date_group_seconds';\n                                            groupFields[newFieldName] = interval;\n                                            item[newFieldName] = (isInRangeAvail ? undefined : new Date(newDate.setSeconds(date.getSeconds())).toString());\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else if (item[fieldName] && group.type === 'Number') {\n                        var isInRangeAvail = this_1.getRange(group, item[fieldName]);\n                        item[fieldName] = isInRangeAvail ? undefined : item[fieldName];\n                    }\n                    else if (item[fieldName] && group.type === 'Custom' && group.customGroups && group.customGroups.length > 0) {\n                        var newFieldName = fieldName + '_custom_group';\n                        var customGroups = group.customGroups;\n                        var groupValue = void 0;\n                        for (var i = 0, len_2 = customGroups.length; i < len_2; i++) {\n                            {\n                                var cGroup = customGroups[i];\n                                if (cGroup.items && cGroup.items.length > 1) {\n                                    customGroupFieldName = newFieldName;\n                                    var isDataMatch = PivotUtil.inArray(item[fieldName].toString(), cGroup.items) == -1 ? false : true;\n                                    item[newFieldName] = (isDataMatch ? (cGroup.groupName && cGroup.groupName != '') ? cGroup.groupName :\n                                        this_1.localeObj.getConstant('group') + ' ' + i : (groupValue && groupValue !== item[fieldName].toString()) ?\n                                        groupValue : item[fieldName].toString());\n                                    groupValue = item[newFieldName];\n                                }\n                            }\n                        }\n                    }\n                    var keys = Object.keys(item);\n                    var isCompleteSet = [];\n                    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                        var key = keys_1[_i];\n                        isCompleteSet.push((item[key]) ? true : false);\n                    }\n                    ;\n                    fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? item : fieldkeySet);\n                    this_1.fields = Object.keys(fieldkeySet);\n                }\n                if (group.type === 'Date') {\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var groupKeys = Object.keys(groupFields);\n                    var gCnt = Object.keys(groupKeys).length;\n                    var groupField = void 0;\n                    for (var _a = 0, axisFields_1 = axisFields; _a < axisFields_1.length; _a++) {\n                        var axis = axisFields_1[_a];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === fieldName) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    axis.splice(i, 1);\n                                    var dataFields = this_1.rows;\n                                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                                    while (gCnt--) {\n                                        if (!PivotUtil.getFieldByName(groupKeys[gCnt], dataFields)) {\n                                            groupField = groupFields[groupKeys[gCnt]];\n                                            var newField = {\n                                                name: groupKeys[gCnt],\n                                                caption: (this_1.localeObj ? this_1.localeObj.getConstant(groupField) : groupField) + ' (' + (actualField.caption ? actualField.caption : actualField.name) + ')',\n                                                type: 'Count',\n                                                showNoDataItems: actualField.showNoDataItems,\n                                                baseField: actualField.baseField,\n                                                baseItem: actualField.baseItem,\n                                            };\n                                            axis.splice(i, 0, newField);\n                                        }\n                                    }\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    gCnt = Object.keys(groupKeys).length;\n                    while (gCnt--) {\n                        groupField = groupFields[groupKeys[gCnt]];\n                        for (var i = 0, len_3 = this_1.formats.length; i < len_3; i++) {\n                            if (this_1.formats[i].name === groupKeys[gCnt]) {\n                                this_1.formats.splice(i, 1);\n                                break;\n                            }\n                        }\n                        if (groupField !== 'Quarters' && groupField !== 'QuarterYear') {\n                            var formatSettings = {\n                                name: groupKeys[gCnt],\n                                type: ['Years', 'Months', 'Days'].indexOf(groupField) > -1 ? 'date' : 'time',\n                                format: ((groupField === 'Years') ? 'yyyy' : (groupField === 'Months') ? 'MMM' :\n                                    (groupField === 'Days') ? 'd-MMM' : (groupField === 'Hours') ? 'hh a' :\n                                        (groupField === 'Minutes') ? ':mm' : (groupField === 'Seconds') ? ':ss' : undefined)\n                            };\n                            this_1.formats.push(formatSettings);\n                        }\n                    }\n                }\n                else if (group.type === 'Number' && group.rangeInterval) {\n                    var startValue = void 0;\n                    var endValue = void 0;\n                    var cStartValue = void 0;\n                    var cEndValue = void 0;\n                    var framedSet = [];\n                    var unframedSet = [];\n                    var dataLength = data.length;\n                    var cnt = 0;\n                    this_1.groupingFields[fieldName] = fieldName;\n                    while (cnt < dataLength) {\n                        unframedSet.push(data[cnt][fieldName]);\n                        if (data[cnt][fieldName] && framedSet.indexOf(data[cnt][fieldName]) === -1) {\n                            framedSet.push(data[cnt][fieldName]);\n                        }\n                        cnt++;\n                    }\n                    var framedSetLength = Math.max.apply(Math, framedSet);\n                    for (var i = framedSet[0], len_4 = framedSetLength; i < len_4; i++) {\n                        if (unframedSet.indexOf(i) < 0) {\n                            var duplicateData = this_1.frameData(data[0]);\n                            duplicateData[fieldName] = i;\n                            var index = unframedSet.lastIndexOf(i - 1);\n                            unframedSet.splice(index + 1, 0, i);\n                            data.splice(index + 1, 0, duplicateData);\n                        }\n                    }\n                    dataLength = data.length;\n                    cnt = 0;\n                    while (cnt < dataLength) {\n                        if (data[cnt] && data[cnt][fieldName]) {\n                            cStartValue = data[cnt][fieldName];\n                            cEndValue = cStartValue + (group.rangeInterval - 1);\n                            startValue = (!startValue) ? cStartValue : startValue;\n                            endValue = ((!endValue) ? ((cEndValue > framedSetLength) ? framedSetLength : cEndValue) : ((endValue > framedSetLength) ? framedSetLength : endValue));\n                            if (cStartValue >= startValue && cStartValue <= endValue) {\n                                data[cnt][fieldName] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            else if (cStartValue > endValue && cStartValue === endValue + 1) {\n                                startValue = endValue + 1;\n                                endValue = ((startValue + (group.rangeInterval - 1) > framedSetLength) ? framedSetLength : startValue + (group.rangeInterval - 1));\n                                data[cnt][fieldName] = ((startValue === endValue) ? startValue.toString() : startValue.toString() + '-' + endValue.toString());\n                            }\n                            var keys = Object.keys(data[cnt]);\n                            var isCompleteSet = [];\n                            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                                var key = keys_2[_b];\n                                isCompleteSet.push((data[cnt][key]) ? true : false);\n                            }\n                            ;\n                            fieldkeySet = (((isCompleteSet.indexOf(false) === -1) && keys.length === Object.keys(data[0]).length) ? data[cnt] : fieldkeySet);\n                        }\n                        cnt++;\n                    }\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    for (var _c = 0, axisFields_2 = axisFields; _c < axisFields_2.length; _c++) {\n                        var fields = axisFields_2[_c];\n                        var field = PivotUtil.getFieldByName(fieldName, fields);\n                        if (field) {\n                            field = field.properties ? field.properties : field;\n                            field.type = 'Count';\n                        }\n                    }\n                    for (var i = 0, len_5 = this_1.formats.length; i < len_5; i++) {\n                        if (this_1.formats[i].name === fieldName) {\n                            this_1.formats.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                else if (group.type === 'Custom' && customGroupFieldName) {\n                    var customFieldName = customGroupFieldName;\n                    // this.groupingFields[customFieldName] = customFieldName;\n                    var isDataSource = false;\n                    var axisFields = [this_1.rows, this_1.columns, this_1.values, this_1.filters];\n                    var dataFields = this_1.rows;\n                    dataFields = dataFields.concat(this_1.columns, this_1.values, this_1.filters);\n                    var pattern = [];\n                    if (!caption || caption == '') {\n                        pattern = customFieldName.match(/_custom_group/g);\n                    }\n                    // let actualFieldName: string = fieldName.replace(/_custom_group/g, '');\n                    var parentField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var customGroupField = PivotUtil.getFieldByName(customFieldName, dataFields);\n                    for (var _d = 0, axisFields_3 = axisFields; _d < axisFields_3.length; _d++) {\n                        var axis = axisFields_3[_d];\n                        if (!isDataSource && axis) {\n                            var cnt = axis.length;\n                            var i = 0;\n                            while (i < cnt) {\n                                if (axis[i].name === group.name && !customGroupField) {\n                                    isDataSource = true;\n                                    var actualField = axis[i];\n                                    var newField = {\n                                        name: customFieldName,\n                                        caption: (!caption || caption == '') ? (parentField.caption ? parentField.caption : parentField.name) + (pattern.length + 1) : caption,\n                                        type: 'Count',\n                                        showNoDataItems: actualField.showNoDataItems,\n                                        baseField: actualField.baseField,\n                                        baseItem: actualField.baseItem,\n                                    };\n                                    axis.splice(i, 0, newField);\n                                    break;\n                                }\n                                else if (axis[i].name === customFieldName && customGroupField) {\n                                    var newField = {\n                                        name: customGroupField.name,\n                                        caption: (!caption || caption == '') ? customGroupField.caption : caption,\n                                        type: customGroupField.type,\n                                        showNoDataItems: customGroupField.showNoDataItems,\n                                        baseField: customGroupField.baseField,\n                                        baseItem: customGroupField.baseItem,\n                                    };\n                                    axis.splice(i, 1, newField);\n                                    break;\n                                }\n                                i++;\n                            }\n                            if (isDataSource) {\n                                break;\n                            }\n                        }\n                    }\n                    var formatfield = PivotUtil.getFieldByName(fieldName, PivotUtil.cloneFormatSettings(this_1.formats));\n                    if (formatfield) {\n                        formatfield.name = customFieldName;\n                        this_1.formats.push(formatfield);\n                    }\n                }\n                this_1.groupingFields = extend(this_1.groupingFields, groupFields);\n            }\n            else {\n                return { value: fieldkeySet };\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.groups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var state_1 = _loop_1(group);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        this.fields = Object.keys(fieldkeySet);\n        return fieldkeySet;\n    };\n    PivotEngine.prototype.frameData = function (data) {\n        var fields = Object.keys(data);\n        var keyPos = 0;\n        var framedSet = {};\n        while (keyPos < fields.length) {\n            framedSet[fields[keyPos]] = undefined;\n            keyPos++;\n        }\n        return framedSet;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.getRange = function (group, cValue) {\n        var isRangeAvail;\n        if (group.type === 'Date') {\n            var cDate = new Date(cValue);\n            var startDate = typeof (group.startingAt) === 'string' ? new Date(group.startingAt) : group.startingAt;\n            var endDate = typeof (group.endingAt) === 'string' ? new Date(group.endingAt) : group.endingAt;\n            if (startDate && cDate.getTime() < startDate.getTime() ||\n                endDate && cDate.getTime() > endDate.getTime()) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        else {\n            var startValue = typeof (group.startingAt) === 'string' ? parseInt(group.startingAt, 10) : group.startingAt;\n            var endValue = typeof (group.endingAt) === 'string' ? parseInt(group.endingAt, 10) : group.endingAt;\n            if (startValue && cValue < startValue || endValue && cValue > endValue) {\n                isRangeAvail = true;\n            }\n            else {\n                isRangeAvail = false;\n            }\n        }\n        return isRangeAvail;\n    };\n    PivotEngine.prototype.getFormattedFields = function (fields) {\n        var cnt = this.formats.length;\n        while (cnt--) {\n            this.formatFields[this.formats[cnt].name] = this.formats[cnt];\n            if (this.formats[cnt].type) {\n                this.dateFormatFunction[this.formats[cnt].name] = {\n                    exactFormat: this.globalize.getDateFormat(this.formats[cnt]),\n                    fullFormat: this.globalize.getDateFormat({\n                        format: 'yyyy/MM/dd/HH/mm/ss', type: this.formats[cnt].type\n                    })\n                };\n            }\n            // for (let len: number = 0, lnt: number = fields.length; len < lnt; len++) {\n            // if (fields[len] && fields[len].name === this.formats[cnt].name) {\n            //     this.formatFields[fields[len].name] = this.formats[cnt];\n            // }\n            // }\n        }\n    };\n    PivotEngine.prototype.getFieldList = function (fields, isSort, isValueFilteringEnabled) {\n        var type;\n        var keys = this.fields;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        this.getFormattedFields(dataFields);\n        this.getCalculatedField(keys);\n        keys = this.fields;\n        var lenE = this.excludeFields.length;\n        lenE = lenE - 1;\n        while (lenE > -1) {\n            var index = this.fields.indexOf(this.excludeFields[lenE]);\n            this.fields.splice(index, 1);\n            if (this.fieldList) {\n                delete this.fieldList[this.excludeFields[lenE]];\n            }\n            lenE--;\n        }\n        var len = keys.length;\n        if (this.savedFieldList) {\n            this.fieldList = this.savedFieldList;\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                if (this.fieldList[key]) {\n                    this.fieldList[key].isSelected = false;\n                    this.fieldList[key].index = len;\n                    this.fieldList[key].filter = [];\n                    this.fieldList[key].sort = isSort ? 'Ascending' : 'None';\n                    this.fieldList[key].isExcelFilter = false;\n                    this.fieldList[key].filterType = '';\n                    if (this.isValueFiltersAvail && isValueFilteringEnabled) {\n                        this.fieldList[key].dateMember = [];\n                        this.fieldList[key].formattedMembers = {};\n                        this.fieldList[key].members = {};\n                    }\n                }\n                else {\n                    this.fieldList[key] = {\n                        id: key,\n                        caption: key,\n                        type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                            'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                        sort: isSort ? 'Ascending' : 'None',\n                        isSelected: false,\n                        filterType: '',\n                        index: len,\n                        filter: [],\n                        isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1))\n                    };\n                }\n            }\n        }\n        else {\n            this.fieldList = {};\n            while (len--) { /** while is used for better performance than for */\n                var key = keys[len];\n                type = (this.fieldsType && this.fieldsType[key]) ? this.fieldsType[key] : PivotUtil.getType(fields[key]);\n                this.fieldList[key] = {\n                    id: key,\n                    caption: key,\n                    type: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1)) ?\n                        'string' : (type === undefined || type === 'undefined') ? 'number' : type,\n                    filterType: '',\n                    index: len,\n                    filter: [],\n                    sort: isSort ? 'Ascending' : 'None',\n                    isSelected: false,\n                    isCustomField: ((key.indexOf('_custom_group') !== -1) || (key.indexOf('_date_group') !== -1))\n                };\n            }\n        }\n        this.updateTreeViewData(dataFields);\n    };\n    PivotEngine.prototype.updateFieldList = function (savedFieldList) {\n        var keys = this.fields;\n        var len = keys.length;\n        while (len--) { /** while is used for better performance than for */\n            this.fieldList[keys[len]].isExcelFilter = savedFieldList[keys[len]].isExcelFilter;\n        }\n    };\n    PivotEngine.prototype.updateTreeViewData = function (fields) {\n        var cnt = fields.length;\n        var lnt = this.calculatedFieldSettings.length;\n        while (cnt--) {\n            if (this.fieldList[fields[cnt].name]) {\n                var field = this.fieldList[fields[cnt].name];\n                field.caption = fields[cnt].caption ? fields[cnt].caption : fields[cnt].name;\n                field.isSelected = true;\n                field.showNoDataItems = fields[cnt].showNoDataItems;\n                field.aggregateType = fields[cnt].type;\n                field.baseField = fields[cnt].baseField;\n                field.baseItem = fields[cnt].baseItem;\n            }\n        }\n        while (lnt--) {\n            if (this.fieldList[this.calculatedFieldSettings[lnt].name]) {\n                this.fieldList[this.calculatedFieldSettings[lnt].name].aggregateType = 'CalculatedField';\n                this.fieldList[this.calculatedFieldSettings[lnt].name].formula = this.calculatedFieldSettings[lnt].formula;\n            }\n        }\n    };\n    /* tslint:disable:typedef */\n    PivotEngine.prototype.getCalculatedField = function (keys) {\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.calculatedFields[field.name] = extend({}, field, null, true);\n            this.calculatedFields[field.name].actualFormula = field.formula;\n        }\n        var fieldKeys = Object.keys(this.calculatedFields);\n        var _loop_2 = function (calc, cnt) {\n            var field = this_2.calculatedFields[fieldKeys[calc]];\n            var calcProperties = field.properties;\n            var actualFormula = (calcProperties ? calcProperties.formula : field.formula).replace(/ +/g, '');\n            var formula = actualFormula.replace(/\"/g, '');\n            field.formula = formula.indexOf('^') > -1 ? this_2.powerFunction(formula) : formula;\n            if (field.formula.indexOf('Math.min(') === -1 && field.formula.indexOf('min(') > -1) {\n                field.formula = field.formula.replace(/min\\(/g, 'Math.min(');\n            }\n            if (field.formula.indexOf('Math.max(') === -1 && field.formula.indexOf('max(') > -1) {\n                field.formula = field.formula.replace(/max\\(/g, 'Math.max(');\n            }\n            if (field.formula.indexOf('Math.abs(') === -1 && field.formula.indexOf('abs(') > -1) {\n                field.formula = field.formula.replace(/abs\\(/g, 'Math.abs(');\n            }\n            field.name = calcProperties ? calcProperties.name : field.name;\n            keys = keys.filter(function (key) { return key !== field.name; });\n            keys.push(field.name);\n            var formulaType = actualFormula.split('\\\"');\n            for (var len = 0, lmt = formulaType.length; len < lmt; len++) {\n                var type = formulaType[len];\n                var aggregateValue = type.split(/[ .:;?!~,`\"&|()<>{}\\[\\]\\r\\n/\\\\]+/);\n                var selectedString = (aggregateValue[0] === 'DistinctCount' ?\n                    'DistinctCount' : aggregateValue[0] === 'PopulationStDev' ?\n                    'PopulationStDev' : aggregateValue[0] === 'SampleStDev' ? 'SampleStDev' : aggregateValue[0] === 'PopulationVar' ?\n                    'PopulationVar' : aggregateValue[0] === 'SampleVar' ? 'SampleVar' : aggregateValue[0]);\n                if (['Sum', 'Count', 'Min', 'Max', 'Avg', 'Product', 'DistinctCount',\n                    'PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar'].indexOf(selectedString) !== -1) {\n                    var index = keys.indexOf(aggregateValue[1]);\n                    if (!this_2.calculatedFormulas[field.name]) {\n                        this_2.calculatedFormulas[field.name] = [{\n                                index: index,\n                                type: selectedString,\n                                formula: type,\n                            }];\n                    }\n                    else {\n                        this_2.calculatedFormulas[field.name].push({\n                            index: index,\n                            type: selectedString,\n                            formula: type,\n                        });\n                    }\n                }\n            }\n        };\n        var this_2 = this;\n        for (var calc = 0, cnt = fieldKeys.length; calc < cnt; calc++) {\n            _loop_2(calc, cnt);\n        }\n        this.fields = keys;\n    };\n    PivotEngine.prototype.validateFilters = function (data) {\n        this.isValueFiltersAvail = false;\n        var filterElements = data.filterSettings ? data.filterSettings : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterElements_1 = filterElements; _i < filterElements_1.length; _i++) {\n            var filter = filterElements_1[_i];\n            for (var _a = 0, dataFields_1 = dataFields; _a < dataFields_1.length; _a++) {\n                var field = dataFields_1[_a];\n                if (filter.name === field.name && filter.type === 'Value') {\n                    this.isValueFiltersAvail = true;\n                    break;\n                }\n            }\n            if (this.isValueFiltersAvail) {\n                break;\n            }\n        }\n    };\n    PivotEngine.prototype.fillFieldMembers = function (data, indMat) {\n        var keys = this.fields;\n        var dlen = data.length;\n        var fList = this.fieldList;\n        var kLn = keys.length;\n        for (var kl = 0; kl < kLn; kl++) {\n            var key = keys[kl];\n            if (!fList[key].members || this.allowDataCompression) {\n                fList[key].members = {};\n            }\n            if (!fList[key].formattedMembers || this.allowDataCompression) {\n                fList[key].formattedMembers = {};\n            }\n            if (!fList[key].dateMember || this.allowDataCompression) {\n                fList[key].dateMember = [];\n            }\n            var members = fList[key].members;\n            var isDataAvail = Object.keys(members).length > 0 ? true : false;\n            var formattedMembers = fList[key].formattedMembers;\n            var dateMember = fList[key].dateMember;\n            var membersCnt = 0;\n            var fmembersCnt = 0;\n            //let sort: string[] = [];\n            for (var dl = 0; dl < dlen; dl++) {\n                var mkey = data[dl][key];\n                // if (!isNullOrUndefined(mkey)) {\n                if (!isDataAvail) {\n                    var fKey = mkey;\n                    var formattedValue = (this.pageSettings && !(this.formatFields[key] &&\n                        (['date', 'dateTime', 'time'].indexOf(this.formatFields[key].type) > -1))) ? ({\n                        formattedText: mkey === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(mkey)) :\n                            mkey === undefined ? (this.localeObj ? (key in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(mkey)) : mkey.toString(), actualText: mkey === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(mkey)) : mkey === undefined ? (this.localeObj ?\n                            (key in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                                this.localeObj.getConstant('undefined') : String(mkey)) : mkey\n                    }) : this.getFormattedValue(mkey, key);\n                    if (formattedValue.formattedText) {\n                        fKey = formattedValue.formattedText;\n                    }\n                    if (!members.hasOwnProperty(mkey)) {\n                        membersCnt++;\n                        members[mkey] = {\n                            index: [dl], ordinal: membersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                        /* tslint:disable-next-line:max-line-length */\n                        dateMember.push({ formattedText: formattedValue.formattedText, actualText: (formattedValue.dateText ? formattedValue.dateText : formattedValue.actualText) });\n                        //sort.push(mkey);\n                    }\n                    else {\n                        members[mkey].index.push(dl);\n                    }\n                    if (!formattedMembers.hasOwnProperty(fKey)) {\n                        fmembersCnt++;\n                        formattedMembers[fKey] = {\n                            index: [dl], ordinal: fmembersCnt,\n                            isDrilled: this.isExpandAll ? true : false\n                        };\n                    }\n                    else {\n                        formattedMembers[fKey].index.push(dl);\n                    }\n                }\n                if (!(indMat[dl])) {\n                    indMat[dl] = [];\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                else {\n                    indMat[dl][kl] = members[mkey].ordinal;\n                }\n                // }\n            }\n            /*sort = Object.keys(members).sort();\n            let sortedMembers: Members = {};\n            for (let sln: number = 0, slt: number = sort.length; sln < slt; sln++) {\n                sortedMembers[sort[sln]] = members[sort[sln]];\n            }\n            fList[key].members = sortedMembers; */\n        }\n    };\n    PivotEngine.prototype.generateValueMatrix = function (data) {\n        var keys = this.fields;\n        var len = data.length;\n        var vMat = [];\n        var keyLen = keys.length;\n        var flList = this.fieldList;\n        while (len--) {\n            var record = data[len];\n            var tkln = keyLen;\n            //if (isNullOrUndefined(vMat[len])) {\n            vMat[len] = [];\n            //}\n            while (tkln--) {\n                var key = keys[tkln];\n                vMat[len][tkln] = (flList[key].type === 'number' || isNullOrUndefined(data[len][key])) ? data[len][key] : 1;\n            }\n        }\n        return vMat;\n    };\n    PivotEngine.prototype.updateSortSettings = function (sortSettings, isSort) {\n        for (var sln = 0, slt = sortSettings ? sortSettings.length : 0; sln < slt && isSort; sln++) {\n            if (this.fieldList[sortSettings[sln].name]) {\n                this.fieldList[sortSettings[sln].name].sort = sortSettings[sln].order;\n            }\n        }\n    };\n    PivotEngine.prototype.updateFilterMembers = function (source) {\n        var filterRw = this.filterMembers;\n        var list = {};\n        //let eList: {[key: string] : number} = {};\n        var isInclude = this.getFilters(source, list);\n        //this.getFilterExcludeList(source.rows, flist);\n        //this.getFilterExcludeList(source.columns, flist);\n        //this.getFilterExcludeList(source.filters, flist);\n        // let filters: Iterator = isInclude ? iList : eList;\n        var dln = this.indexMatrix.length;\n        if (isInclude) {\n            var keys = list.include.index;\n            for (var ln = 0; ln < keys.length; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[keys[ln]] === undefined) {\n                    filterRw.push(keys[ln]);\n                }\n            }\n        }\n        else {\n            for (var ln = 0; ln < dln; ln++) {\n                if (list.exclude === undefined || list.exclude.indexObject[ln] === undefined) {\n                    filterRw.push(ln);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getFilters = function (source, ilist) {\n        var filterElements = source.filterSettings ? source.filterSettings : [];\n        var filters = this.filters;\n        var isInclude = false;\n        var filter = [];\n        //let type: string;\n        for (var rln = 0, rlt = filterElements.length; rln < rlt; rln++) {\n            var filterElement = filterElements[rln].properties ?\n                filterElements[rln].properties : filterElements[rln];\n            if (this.fieldList[filterElement.name] &&\n                this.fieldList[filterElement.name].isSelected &&\n                this.isValidFilterField(filterElement, source.allowMemberFilter, source.allowLabelFilter)) {\n                this.applyLabelFilter(filterElement);\n                if (filterElement) {\n                    filter = filterElement.items;\n                }\n                if (filterElement.type && filterElement.type === 'Include') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.frameFilterList(filter, filterElement.name, ilist, 'include', filterElement.showLabelFilter, isInclude);\n                    isInclude = true;\n                }\n                else {\n                    this.frameFilterList(filter, filterElement.name, ilist, 'exclude', filterElement.showLabelFilter);\n                }\n                if (filterElement.showLabelFilter) {\n                    filterElement.items = [];\n                    filterElement.type = filterElement.showDateFilter ? 'Date' : filterElement.showNumberFilter ? 'Number' : 'Label';\n                }\n            }\n        }\n        /* for (let cln: number = 0, clt: number = cols.length; cln < clt; cln ++) {\n             filter = cols[cln].filter ? cols[cln].filter.items : [];\n             if (filter.length && cols[cln].filter.type && cols[cln].filter.type === 'include') {\n                 //type = cols[cln].filter.type;\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, cols[cln].name, ilist, 'exclude');\n             }\n         }\n         for (let vln: number = 0, vlt: number = filters.length; vln < vlt; vln ++) {\n             filter = filters[vln].filter ? filters[vln].filter.items : [];\n             if (filter.length && filters[vln].filter.type && filters[vln].filter.type === 'include') {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'include', isInclude);\n                 isInclude = true;\n             } else {\n                 this.frameFilterList(filter, filters[vln].name, ilist, 'exclude');\n             }\n         } */\n        return isInclude;\n    };\n    PivotEngine.prototype.isValidFilterField = function (filterElement, allowMemberFiltering, allowLabelFiltering) {\n        var fieldName = filterElement.name;\n        var isValidFilterElement = false;\n        var filterTypes = ['Include', 'Exclude'];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (this.fieldList[fieldName].isSelected && allowMemberFiltering && filterTypes.indexOf(filterElement.type) >= 0) {\n            var field = this.fieldList[fieldName];\n            var members = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            var isNotValidFilterElement = false;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var field_1 = _a[_i];\n                if (fieldName === field_1.name) {\n                    isNotValidFilterElement = true;\n                    break;\n                }\n            }\n            var isItemAvail = false;\n            for (var _b = 0, _c = filterElement.items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n            if (!isNotValidFilterElement && isItemAvail) {\n                isValidFilterElement = true;\n            }\n        }\n        else if (allowLabelFiltering) {\n            for (var _d = 0, dataFields_2 = dataFields; _d < dataFields_2.length; _d++) {\n                var field = dataFields_2[_d];\n                if (fieldName === field.name &&\n                    (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0)) {\n                    isValidFilterElement = true;\n                    break;\n                }\n            }\n        }\n        return isValidFilterElement;\n    };\n    PivotEngine.prototype.applyLabelFilter = function (filterElement) {\n        if (['Label', 'Date', 'Number'].indexOf(filterElement.type) >= 0) {\n            var members = Object.keys(this.fieldList[filterElement.name].members);\n            filterElement.showLabelFilter = true;\n            if (filterElement.type === 'Label') {\n                /* tslint:disable-next-line:max-line-length */\n                filterElement.items = this.getLabelFilterMembers(members, filterElement.condition, filterElement.value1, filterElement.value2);\n            }\n            else if (filterElement.type === 'Date') {\n                filterElement.showDateFilter = true;\n                var date1 = typeof (filterElement.value1) === 'string' ? new Date(filterElement.value1) : filterElement.value1;\n                var date2 = typeof (filterElement.value2) === 'string' ? new Date(filterElement.value2) : filterElement.value2;\n                /* tslint:disable-next-line:max-line-length */\n                filterElement.items = this.getDateFilterMembers(members, filterElement.name, filterElement.condition, date1, date2);\n            }\n            else {\n                filterElement.showNumberFilter = true;\n                filterElement.items = [];\n                for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                    var member = members_1[_i];\n                    var operand1 = this.getParsedValue(filterElement.name, filterElement.value1);\n                    var operand2 = this.getParsedValue(filterElement.name, filterElement.value2);\n                    var cValue = this.getParsedValue(filterElement.name, member);\n                    /* tslint:disable-next-line:max-line-length */\n                    if (this.validateFilterValue(cValue, filterElement.condition, operand1, operand2)) {\n                        filterElement.items.push(member);\n                    }\n                }\n            }\n            var excludeOperators = ['DoesNotBeginWith', 'DoesNotContains', 'DoesNotEndsWith', 'DoesNotEquals', 'NotBetween'];\n            filterElement.type = (filterElement.condition ? (excludeOperators.indexOf(filterElement.condition) > -1 &&\n                !filterElement.showNumberFilter) ? 'Exclude' : 'Include' : 'Exclude');\n        }\n        else {\n            filterElement.showLabelFilter = false;\n        }\n    };\n    PivotEngine.prototype.getLabelFilterMembers = function (members, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_2 = members; _i < members_2.length; _i++) {\n            var member = members_2[_i];\n            var filterValue = member.toLowerCase();\n            if (value1.toString()) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'BeginWith':\n                    case 'DoesNotBeginWith':\n                        if (filterValue.indexOf(value1.toLowerCase()) === 0) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'EndsWith':\n                    case 'DoesNotEndsWith':\n                        if (filterValue.match(value1.toLowerCase() + '$') !== null) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Contains':\n                    case 'DoesNotContains':\n                        if (filterValue.indexOf(value1.toLowerCase()) > -1) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThan':\n                        if (filterValue > value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'GreaterThanOrEqualTo':\n                        if (filterValue >= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThan':\n                        if (filterValue < value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'LessThanOrEqualTo':\n                        if (filterValue <= value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue >= value1.toLowerCase()) && (filterValue <= value2.toLowerCase())) {\n                            items.push(member);\n                        }\n                        break;\n                    default:\n                        if (filterValue === value1.toLowerCase()) {\n                            items.push(member);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getDateFilterMembers = function (members, name, operator, value1, value2) {\n        var items = [];\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var filterValue = new Date(member);\n            if (value1) {\n                switch (operator) {\n                    case 'Equals':\n                    case 'DoesNotEquals':\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'After':\n                        if (filterValue.getTime() > value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'AfterOrEqualTo':\n                        if (filterValue.getTime() >= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Before':\n                        if (filterValue.getTime() < value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'BeforeOrEqualTo':\n                        if (filterValue.getTime() <= value1.getTime()) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    case 'Between':\n                    case 'NotBetween':\n                        if ((filterValue.getTime() >= value1.getTime()) &&\n                            (filterValue.getTime() <= value2.getTime())) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                    default:\n                        if (this.getFormattedValue(filterValue.toString(), name).formattedText === this.getFormattedValue(value1.toString(), name).formattedText) {\n                            items.push(this.getFormattedValue(member, name).formattedText);\n                        }\n                        break;\n                }\n            }\n        }\n        return items;\n    };\n    /* tslint:enable */\n    PivotEngine.prototype.validateFilterValue = function (val, operator, value1, value2) {\n        var isMemberInclude = false;\n        if (typeof (value1) === 'number') {\n            switch (operator) {\n                case 'Equals':\n                    if (val === value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'DoesNotEquals':\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThan':\n                    if (val > value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'GreaterThanOrEqualTo':\n                    if (val >= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThan':\n                    if (val < value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'LessThanOrEqualTo':\n                    if (val <= value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'Between':\n                    if ((val >= value1) && (val <= value2)) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                case 'NotBetween':\n                    if (!((val >= value1) && (val <= value2))) {\n                        isMemberInclude = true;\n                    }\n                    break;\n                default:\n                    if (val !== value1) {\n                        isMemberInclude = true;\n                    }\n                    break;\n            }\n        }\n        return isMemberInclude;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.frameFilterList = function (filter, name, list, type, isLabelFilter, isInclude) {\n        if (!list[type]) {\n            list[type] = { indexObject: {}, index: [] };\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        else {\n            this.updateFilter(filter, name, list, type, isLabelFilter, isInclude);\n        }\n        // }\n    };\n    PivotEngine.prototype.updateFilter = function (filter, name, list, type, isLabelFilter, isInclude) {\n        var fln = 0;\n        var field = this.fieldList[name];\n        field.filter = filter;\n        field.filterType = type;\n        field.isExcelFilter = isLabelFilter;\n        var members = (this.formatFields[name] &&\n            (['date', 'dateTime', 'time'].indexOf(this.formatFields[name].type) > -1)) ?\n            field.formattedMembers : field.members;\n        var allowFil = isInclude;\n        var final = {};\n        var filterObj = {};\n        final[type] = { indexObject: {}, index: [] };\n        this.fieldFilterMem[name] = { memberObj: {} };\n        while (filter[fln]) {\n            if (members[filter[fln]]) {\n                var indx = members[filter[fln]].index;\n                if (type === 'include') {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (!allowFil || list[type].indexObject[indx[iln]] !== undefined) {\n                            final[type].indexObject[indx[iln]] = indx[iln];\n                            final[type].index.push(indx[iln]);\n                        }\n                    }\n                }\n                else {\n                    for (var iln = 0, ilt = indx.length; iln < ilt; iln++) {\n                        if (list[type].indexObject[indx[iln]] === undefined) {\n                            list[type].indexObject[indx[iln]] = indx[iln];\n                            list[type].index.push(indx[iln]);\n                        }\n                    }\n                    this.fieldFilterMem[name].memberObj[filter[fln]] = filter[fln];\n                }\n            }\n            fln++;\n        }\n        if (type === 'include') {\n            list[type] = final[type];\n            for (var iln = 0; iln < filter.length; iln++) {\n                if (members[filter[iln]]) {\n                    filterObj[filter[iln]] = filter[iln];\n                }\n            }\n            var items = Object.keys(members);\n            for (var iln = 0, ilt = items.length; iln < ilt; iln++) {\n                if (filterObj[items[iln]] === undefined) {\n                    this.fieldFilterMem[name].memberObj[items[iln]] = items[iln];\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.applyValueFiltering = function (rowData, level, rows, columns, valueFilter, rowFilterData, type) {\n        this.isValueFiltered = false;\n        var allMember = extend({}, rows[rows.length - 1], null, true);\n        this.getFilteredData(rows, columns, valueFilter, rowFilterData, level, rowData.name, allMember, type);\n        if (this.isValueFiltered) {\n            rowFilterData.push(allMember);\n            rows = rowFilterData;\n        }\n        return rows;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getFilteredData = function (rows, columns, filterSettings, rowFilterData, level, fieldName, allMember, type) {\n        var rLen = rows.length;\n        for (var i = 0; i < rLen; i++) {\n            if (filterSettings[fieldName]) {\n                if (rows[i].level === level) {\n                    this.isValueFiltered = true;\n                    this.fieldList[fieldName].isExcelFilter = true;\n                    var value = 0;\n                    var measure = filterSettings[fieldName].measure;\n                    var mPos = this.fieldList[measure].index;\n                    var aggregate = this.fieldList[measure].aggregateType;\n                    this.rawIndexObject = {};\n                    value = (type === 'row' ? this.getAggregateValue(rows[i].index, columns.indexObject, mPos, aggregate) :\n                        this.getAggregateValue(columns.index, rows[i].indexObject, mPos, aggregate));\n                    var cellDetails = {\n                        fieldName: measure,\n                        row: rows[i],\n                        column: columns,\n                        value: value,\n                        cellSets: this.getCellSet(this.rawIndexObject),\n                        /* tslint:disable-next-line:max-line-length */\n                        rowCellType: (rows[i].hasChild && rows[i].isDrilled ? 'subTotal' : rows[i].type === 'grand sum' ? 'grandTotal' : 'value'),\n                        /* tslint:disable-next-line:max-line-length */\n                        columnCellType: (columns.hasChild && columns.isDrilled ? 'subTotal' : columns.type === 'grand sum' ? 'grandTotal' : 'value'),\n                        aggregateType: aggregate,\n                        skipFormatting: false\n                    };\n                    if (this.getValueCellInfo) {\n                        this.getValueCellInfo(cellDetails);\n                    }\n                    value = cellDetails.value;\n                    this.rawIndexObject = {};\n                    var operand1 = this.getParsedValue(measure, filterSettings[fieldName].value1);\n                    var operand2 = this.getParsedValue(measure, filterSettings[fieldName].value2);\n                    /* tslint:disable-next-line:max-line-length */\n                    if (!this.validateFilterValue(value, filterSettings[fieldName].condition, operand1, operand2) && rows[i].type !== 'grand sum') {\n                        var data = this.removefilteredData(rows[i], this.valueFilteredData);\n                        var row = data ? data : rows[i];\n                        this.validateFilteredParentData(row, this.valueFilteredData, allMember, 0, level, type);\n                    }\n                    else if (rows[i].type !== 'grand sum') {\n                        rowFilterData.push(extend({}, rows[i], null, true));\n                        rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    }\n                }\n                else if (rows[i].hasChild && rows[i].members.length > 0 && rows[i].type !== 'grand sum') {\n                    rowFilterData.push(extend({}, rows[i], null, true));\n                    rowFilterData[rowFilterData.length - 1].members = [];\n                    rowFilterData[rowFilterData.length - 1].isLevelFiltered = true;\n                    /* tslint:disable-next-line:max-line-length */\n                    this.getFilteredData(rows[i].members, columns, filterSettings, rowFilterData[rowFilterData.length - 1].members, level, fieldName, allMember, type);\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.getParsedValue = function (measure, value) {\n        var cValue = value ? value.toString() : '';\n        if (this.formatFields[measure] && value) {\n            var formatSetting = extend({}, this.formatFields[measure], null, true);\n            delete formatSetting.name;\n            return this.globalize.parseNumber(cValue, formatSetting);\n        }\n        else {\n            return this.globalize.parseNumber(cValue, { format: 'N' });\n        }\n    };\n    PivotEngine.prototype.removefilteredData = function (row, rowFilterData) {\n        var rows = extend([], rowFilterData, null, true);\n        var filteredData;\n        for (var i = 0; i < rows.length; i++) {\n            if (row.isLevelFiltered && row.axis === rows[i].axis &&\n                row.valueSort.levelName === rows[i].valueSort.levelName &&\n                row.actualText === rows[i].actualText && row.axis === rows[i].axis &&\n                row.level === rows[i].level && row.ordinal === rows[i].ordinal) {\n                filteredData = rows[i];\n                rowFilterData.splice(i, 1);\n                break;\n            }\n            else if (rowFilterData[i].hasChild && rowFilterData[i].members.length > 0) {\n                this.removefilteredData(row, rowFilterData[i].members);\n            }\n        }\n        return filteredData;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.validateFilteredParentData = function (row, rows, allMemberData, i, level, type) {\n        if (rows.length > 0) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var rowFilteredData = rows_1[_i];\n                if (rowFilteredData.level === i) {\n                    if (type === 'row') {\n                        var index = row.index;\n                        for (var _a = 0, index_1 = index; _a < index_1.length; _a++) {\n                            var key = index_1[_a];\n                            if (allMemberData.index.indexOf(key) >= 0) {\n                                allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                            }\n                            if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                rowFilteredData.level !== level && rowFilteredData.index.indexOf(key) >= 0) {\n                                rowFilteredData.index.splice(rowFilteredData.index.indexOf(key), 1);\n                            }\n                        }\n                    }\n                    else {\n                        var index = row.indexObject;\n                        for (var _b = 0, _c = Object.keys(index); _b < _c.length; _b++) {\n                            var key = _c[_b];\n                            if (index.hasOwnProperty(key)) {\n                                delete allMemberData.indexObject[key];\n                                if (((row.valueSort.levelName.toString()).indexOf(rowFilteredData.valueSort.levelName.toString()) >= 0) &&\n                                    rowFilteredData.level !== level) {\n                                    delete rowFilteredData.indexObject[key];\n                                }\n                            }\n                        }\n                    }\n                    if (rowFilteredData && rowFilteredData.members.length > 0 &&\n                        rowFilteredData.members[0].level === i + 1 && rowFilteredData.members[0].level !== level) {\n                        this.validateFilteredParentData(row, rowFilteredData.members, allMemberData, i + 1, level, type);\n                    }\n                }\n            }\n        }\n        else {\n            if (type === 'row') {\n                var index = row.index;\n                for (var _d = 0, index_2 = index; _d < index_2.length; _d++) {\n                    var key = index_2[_d];\n                    if (allMemberData.index.indexOf(key) >= 0) {\n                        allMemberData.index.splice(allMemberData.index.indexOf(key), 1);\n                    }\n                }\n            }\n            else {\n                var index = row.indexObject;\n                for (var _e = 0, _f = Object.keys(index); _e < _f.length; _e++) {\n                    var key = _f[_e];\n                    if (index.hasOwnProperty(key)) {\n                        delete allMemberData.indexObject[key];\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateFramedHeaders = function (framedHeaders, dataHeaders, filteredHeaders, headers, type) {\n        for (var _i = 0, framedHeaders_1 = framedHeaders; _i < framedHeaders_1.length; _i++) {\n            var dHeader = framedHeaders_1[_i];\n            this.isHeaderAvail = false;\n            if (this.validateFilteredHeaders(dHeader, filteredHeaders, type) || dHeader.type === 'grand sum') {\n                if (type === 'row') {\n                    this.rowCount += this.rowValuesLength;\n                }\n                else {\n                    this.columnCount += this.colValuesLength;\n                }\n                headers.push(extend({}, dHeader, null, true));\n                headers[headers.length - 1].members = [];\n                if (dHeader.hasChild && dHeader.isDrilled && dHeader.members.length > 0) {\n                    this.updateFramedHeaders(dHeader.members, dataHeaders, filteredHeaders, headers[headers.length - 1].members, type);\n                }\n            }\n        }\n        return this.filterFramedHeaders;\n    };\n    PivotEngine.prototype.validateFilteredHeaders = function (dHeader, filteredHeaders, type) {\n        for (var _i = 0, filteredHeaders_1 = filteredHeaders; _i < filteredHeaders_1.length; _i++) {\n            var vHeader = filteredHeaders_1[_i];\n            if (!this.isHeaderAvail) {\n                if (dHeader.actualText === vHeader.actualText &&\n                    dHeader.level === vHeader.level &&\n                    dHeader.valueSort.levelName === vHeader.valueSort.levelName) {\n                    if (type === 'row') {\n                        if (vHeader.index.length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.index = vHeader.index;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.index = vHeader.index;\n                            return false;\n                        }\n                    }\n                    else {\n                        if (Object.keys(vHeader.indexObject).length > 0) {\n                            this.isHeaderAvail = true;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return true;\n                        }\n                        else {\n                            this.isHeaderAvail = false;\n                            dHeader.indexObject = vHeader.indexObject;\n                            return false;\n                        }\n                    }\n                }\n                else if (vHeader.hasChild && vHeader.members.length > 0 && vHeader.type !== 'grand sum') {\n                    this.validateFilteredHeaders(dHeader, vHeader.members, type);\n                }\n            }\n        }\n        return this.isHeaderAvail;\n    };\n    PivotEngine.prototype.isEmptyDataAvail = function (rowHeaders, columnHeaders) {\n        this.isEmptyData = false;\n        if (rowHeaders.length > 0 && rowHeaders[rowHeaders.length - 1].type === 'grand sum' &&\n            rowHeaders[rowHeaders.length - 1].index.length === 0) {\n            this.isEmptyData = true;\n        }\n        if (columnHeaders.length > 0 && columnHeaders[columnHeaders.length - 1].type === 'grand sum' &&\n            Object.keys(columnHeaders[columnHeaders.length - 1].indexObject).length === 0) {\n            this.isEmptyData = true;\n        }\n        if (rowHeaders.length === 0 || columnHeaders.length === 0) {\n            this.isEmptyData = true;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateGridData = function (dataSource) {\n        this.data = dataSource.dataSource;\n        if (this.pageSettings && this.pageSettings.allowDataCompression) {\n            this.actualData = this.data;\n            this.data = this.getGroupedRawData(dataSource);\n        }\n        this.indexMatrix = [];\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var field = _a[_i];\n            this.fieldList[field].members = {};\n            this.fieldList[field].formattedMembers = {};\n            this.fieldList[field].dateMember = [];\n        }\n        this.fillFieldMembers(this.data, this.indexMatrix);\n        this.valueMatrix = this.generateValueMatrix(this.data);\n        this.filterMembers = [];\n        this.cMembers = [];\n        this.rMembers = [];\n        this.updateFilterMembers(dataSource);\n        this.isEditing = true;\n        this.isDrillThrough = true;\n        this.generateGridData(dataSource);\n        this.isEditing = false;\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.generateGridData = function (dataSource, headerCollection) {\n        var keys = this.fields;\n        var columns = dataSource.columns ? dataSource.columns : [];\n        var data = this.data;\n        var rows = dataSource.rows ? dataSource.rows : [];\n        var filterSettings = dataSource.filterSettings;\n        var values = dataSource.values ? dataSource.values : [];\n        var size = 1;\n        this.removeCount = 0;\n        this.isExpandAll = dataSource.expandAll;\n        this.drilledMembers = dataSource.drilledMembers ? dataSource.drilledMembers : [];\n        this.isEmptyData = false;\n        var filterMembers = [];\n        var showNoDataItems = (rows[0] && rows[0].showNoDataItems) || (columns[0] && columns[0].showNoDataItems);\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        if (showNoDataItems) {\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n        }\n        for (var ln = 0; ln < this.filterMembers.length; ln++) {\n            this.filterPosObj[this.filterMembers[ln]] = this.filterMembers[ln];\n        }\n        //let childrens: Field = this.fieldList[rows[0].name + ''];\n        this.valueSortSettings.columnIndex = undefined;\n        var st1 = new Date().getTime();\n        this.frameDrillObject();\n        if (!this.isValueFilterEnabled || this.isEditing) {\n            if (!headerCollection) {\n                this.columnCount = 0;\n                this.rowCount = 0;\n                this.cMembers = [];\n                this.rMembers = [];\n                if (rows.length !== 0) {\n                    this.rMembers =\n                        this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ? filterMembers : this.filterMembers, 'row', '', this.allowValueFilter);\n                }\n                if (columns.length !== 0) {\n                    this.cMembers = this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                        filterMembers : this.filterMembers, 'column', '', this.allowValueFilter);\n                }\n                this.insertAllMembersCommon();\n                this.saveDataHeaders = (this.isValueFiltersAvail && dataSource.allowValueFilter) ? {\n                    rowHeaders: extend([], this.rMembers, null, true),\n                    columnHeaders: extend([], this.cMembers, null, true)\n                } : {};\n            }\n        }\n        this.pivotValues = [];\n        var gridData = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        this.valueFilteredData = [];\n        this.filterFramedHeaders = [];\n        var rowheads = [];\n        var colheads = [];\n        var rowFilteredData = [];\n        var columnFilteredData = [];\n        var valuesCount = (this.values.length);\n        if (this.isValueFiltersAvail && dataSource.allowValueFilter && !headerCollection) {\n            this.valueFilteredData = [];\n            var rowHeaders = this.saveDataHeaders.rowHeaders;\n            var columnHeaders = this.saveDataHeaders.columnHeaders;\n            if (filterSettings.length > 0) {\n                var valueFilters = {};\n                var valueFields = {};\n                for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                    var value = values_1[_i];\n                    valueFields[value.name] = value;\n                }\n                for (var _a = 0, filterSettings_1 = filterSettings; _a < filterSettings_1.length; _a++) {\n                    var filter = filterSettings_1[_a];\n                    rowHeaders = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n                    columnHeaders = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n                    this.valueFilteredData = [];\n                    var filterElement = filter.properties ?\n                        filter.properties : filter;\n                    if (filterElement.type === 'Value' && this.fieldList[filter.name] && this.fieldList[filter.name].isSelected) {\n                        valueFilters[filter.name] = filter;\n                        filterElement.items = [];\n                        var isAvail = false;\n                        var rLen = rows.length;\n                        var cLen = columns.length;\n                        for (var i = 0; i < rLen; i++) {\n                            if (filterElement.name === rows[i].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                rowFilteredData = this.applyValueFiltering(rows[i], i, rowHeaders, columnHeaders[columnHeaders.length - 1], valueFilters, this.valueFilteredData, 'row');\n                                break;\n                            }\n                        }\n                        for (var j = 0; j < cLen; j++) {\n                            if (filterElement.name === columns[j].name && valueFields[filterElement.measure] && !isAvail) {\n                                isAvail = true;\n                                /* tslint:disable-next-line:max-line-length */\n                                columnFilteredData = this.applyValueFiltering(columns[j], j, columnHeaders, rowHeaders[rowHeaders.length - 1], valueFilters, this.valueFilteredData, 'column');\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            rowFilteredData = (rowFilteredData.length > 0 ? rowFilteredData : rowHeaders);\n            columnFilteredData = (columnFilteredData.length > 0 ? columnFilteredData : columnHeaders);\n            this.isEmptyDataAvail(rowFilteredData, columnFilteredData);\n            var savedFieldList = extend({}, this.fieldList, null, true);\n            this.indexMatrix = [];\n            var fields = this.data[0];\n            this.getFieldList(fields, this.enableSort, dataSource.allowValueFilter);\n            this.fillFieldMembers(this.data, this.indexMatrix);\n            this.updateSortSettings(dataSource.sortSettings, this.enableSort);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n            this.filterMembers = [];\n            var pageSize = 1;\n            this.updateFilterMembers(dataSource);\n            this.rMembers = rows.length !== 0 ?\n                this.getIndexedHeaders(rows, data, 0, rows[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'row', '') : [];\n            this.cMembers = columns.length !== 0 ?\n                this.getIndexedHeaders(columns, data, 0, columns[0].showNoDataItems ?\n                    filterMembers : this.filterMembers, 'column', '') : [];\n            this.insertAllMembersCommon();\n            this.updateFieldList(savedFieldList);\n            this.rowCount = 0;\n            this.columnCount = 0;\n            this.rMembers = this.updateFramedHeaders(this.rMembers, this.rMembers, rowFilteredData, this.filterFramedHeaders, 'row');\n            this.filterFramedHeaders = [];\n            this.cMembers = this.updateFramedHeaders(this.cMembers, this.cMembers, columnFilteredData, this.filterFramedHeaders, 'column');\n            this.isValueFilterEnabled = true;\n        }\n        if (!headerCollection) {\n            this.applyValueSorting();\n        }\n        if (this.pageSettings) {\n            if (!headerCollection) {\n                this.headerCollection.rowHeaders = this.rMembers;\n                this.headerCollection.columnHeaders = this.cMembers;\n                this.headerCollection.rowHeadersCount = this.rowCount;\n                this.headerCollection.columnHeadersCount = this.columnCount;\n            }\n            else {\n                this.rMembers = headerCollection.rowHeaders;\n                this.cMembers = headerCollection.columnHeaders;\n                this.rowCount = headerCollection.rowHeadersCount;\n                this.columnCount = headerCollection.columnHeadersCount;\n            }\n            this.calculatePagingValues();\n        }\n        this.getAggregatedHeaders(rows, columns, this.rMembers, this.cMembers, values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        //this.getHeaderData(rmembers, rowheads, gridData, 0);              \n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, this.rMembers[this.rMembers.length - 1], this.cMembers[this.cMembers.length - 1]);\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        var st2 = new Date().getTime();\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n        //  console.log(st1 - st2);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:typedef */\n    /** @hidden */\n    PivotEngine.prototype.onDrill = function (drilledItem) {\n        this.frameDrillObject();\n        var headersInfo = this.getHeadersInfo(drilledItem.fieldName, drilledItem.axis);\n        this.performDrillOperation(headersInfo.headers, drilledItem, headersInfo.fields, headersInfo.position, 0);\n        this.headerCollection.rowHeadersCount = this.rowCount;\n        this.headerCollection.columnHeadersCount = this.columnCount;\n        if (headersInfo.axis === 'row') {\n            this.headerCollection.rowHeaders = headersInfo.headers;\n        }\n        else {\n            this.headerCollection.columnHeaders = headersInfo.headers;\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onSort = function (sortItem) {\n        var headersInfo = this.getHeadersInfo(sortItem.name, '');\n        this.fieldList[sortItem.name].sort = sortItem.order;\n        this.performSortOperation(headersInfo.headers, sortItem, headersInfo, 0);\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onFilter = function (filterItem, dataSource) {\n        var headersInfo = this.getHeadersInfo(filterItem.name, '');\n        if (filterItem.type === 'Include' && filterItem.items.length === this.fieldList[filterItem.name].dateMember.length) {\n            this.fieldList[filterItem.name].filter = [];\n            this.fieldList[filterItem.name].filterType = '';\n        }\n        else {\n            this.fieldList[filterItem.name].filter = filterItem.items;\n            this.fieldList[filterItem.name].filterType = filterItem.type;\n        }\n        var posObj = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            posObj[pos] = pos;\n        }\n        this.filterMembers = [];\n        this.fieldFilterMem = {};\n        this.updateFilterMembers(dataSource);\n        var addPos = this.filterMembers.filter(function (pos) { return posObj[pos] === undefined; });\n        var itemsObj = {};\n        for (var _b = 0, _c = filterItem.items; _b < _c.length; _b++) {\n            var item = _c[_b];\n            itemsObj[item] = item;\n        }\n        var showNoDataItems = (this.rows[0] && this.rows[0].showNoDataItems) || (this.columns[0] && this.columns[0].showNoDataItems);\n        if (showNoDataItems) {\n            var filterMembers = [];\n            this.filterPosObj = {};\n            for (var ln = 0; ln < addPos.length; ln++) {\n                this.filterPosObj[addPos[ln]] = addPos[ln];\n            }\n            for (var ln = 0; ln < this.indexMatrix.length; ln++) {\n                filterMembers.push(ln);\n            }\n            addPos = filterMembers;\n        }\n        this.performFilterCommonUpdate(filterItem, headersInfo, addPos);\n        this.frameHeaderObjectsCollection = false;\n        this.headerObjectsCollection = {};\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onAggregation = function (field) {\n        this.fieldList[field.name].aggregateType = field.type;\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        if (this.allowDataCompression) {\n            this.data = this.getGroupedRawData(this.dataSourceSettings);\n            this.valueMatrix = this.generateValueMatrix(this.data);\n        }\n        this.updateEngine();\n    };\n    /** @hidden */\n    PivotEngine.prototype.onCalcOperation = function (field) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        this.getCalculatedField(this.fields);\n        if (this.fieldList[field.name]) {\n            this.fieldList[field.name].formula = field.formula;\n        }\n        else {\n            this.fieldList[field.name] = {\n                id: field.name,\n                caption: field.name,\n                type: 'number',\n                aggregateType: 'CalculatedField',\n                filterType: '',\n                index: this.fields.length - 1,\n                filter: [],\n                sort: this.enableSort ? 'Ascending' : 'None',\n                isSelected: true,\n                isExcelFilter: false,\n                formula: field.formula\n            };\n            if (this.valueAxis === 1) {\n                this.headerCollection.rowHeadersCount = this.rowCount = (this.rowCount / (this.values.length - 1)) * this.values.length;\n            }\n            else {\n                this.headerCollection.columnHeadersCount = this.columnCount = (this.columnCount / (this.values.length - 1)) * this.values.length;\n            }\n        }\n        this.updateEngine();\n    };\n    PivotEngine.prototype.performDrillOperation = function (headers, drilledItem, fields, position, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (position === currentPosition) {\n                if (drilledItem.memberName === headers[count].valueSort.levelName.split(this.valueSortSettings.headerDelimiter)\n                    .join(drilledItem.delimiter ? drilledItem.delimiter : '**')) {\n                    if (drilledItem.action === 'down') {\n                        headers[count].isDrilled = true;\n                        headers[count].members = this.getIndexedHeaders(fields, this.data, position + 1, headers[count].index, drilledItem.axis, drilledItem.memberName.\n                            split(drilledItem.delimiter ? drilledItem.delimiter : '**').join(this.valueSortSettings.headerDelimiter));\n                        var sortedHeaders = void 0;\n                        if (drilledItem.axis === 'row') {\n                            sortedHeaders = this.applyValueSorting(headers[count].members, this.cMembers);\n                            headers[count].members = sortedHeaders.rMembers;\n                        }\n                        else {\n                            var showSubTotals = this.showSubTotals && this.showColumnSubTotals && fields[position].showSubTotals;\n                            this.columnCount -= !showSubTotals ? this.colValuesLength : 0;\n                            sortedHeaders = this.applyValueSorting(this.rMembers, headers[count].members);\n                            headers[count].members = sortedHeaders.cMembers;\n                        }\n                    }\n                    else {\n                        headers[count].isDrilled = false;\n                        this.updateHeadersCount(headers[count].members, drilledItem.axis, position, fields, 'minus', true);\n                        headers[count].members = [];\n                    }\n                    break;\n                }\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performDrillOperation(headers[count].members, drilledItem, fields, position, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performSortOperation = function (headers, sortItem, headersInfo, currentPosition) {\n        var count = 0;\n        while (count < headers.length) {\n            if (headersInfo.position === currentPosition) {\n                headers = this.getSortedHeaders(headers, sortItem.order.toString());\n                break;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this.performSortOperation(headers[count].members, sortItem, headersInfo, currentPosition + 1);\n            }\n            count++;\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterDeletion = function (headers, filterItem, headersInfo, filterObjects, currentPosition) {\n        var count = 0;\n        var loopIn = true;\n        var _loop_3 = function () {\n            if (headersInfo.position === currentPosition) {\n                var engine_1 = this_3;\n                headers = headers.filter(function (item) {\n                    return !engine_1.fieldFilterMem[filterItem.name].memberObj[item.formattedText] || item.type === 'grand sum';\n                });\n                loopIn = false;\n            }\n            else if (headers[count].members.length > 0) {\n                headers[count].members = this_3.performFilterDeletion(headers[count].members, filterItem, headersInfo, filterObjects, currentPosition + 1);\n            }\n            count++;\n        };\n        var this_3 = this;\n        while (count < headers.length && loopIn) {\n            _loop_3();\n        }\n        var engine = this;\n        return headers.filter(function (item) {\n            return item.members.length > 0 ? item.members.length > 0 : engine.matchIndexes(item.indexObject, filterObjects);\n        });\n    };\n    PivotEngine.prototype.matchIndexes = function (index, filterObjects) {\n        var keys = Object.keys(index);\n        var len = keys.length;\n        if (len === 0) {\n            return true;\n        }\n        while (len > -1) {\n            if (filterObjects[index[keys[len]]] !== undefined) {\n                return true;\n            }\n            len--;\n        }\n        return false;\n    };\n    PivotEngine.prototype.performFilterAddition = function (headers, fields, headersInfo) {\n        var count = 0;\n        var _loop_4 = function () {\n            var levelName = headers[count].valueSort.levelName;\n            if (this_4.headerObjectsCollection[levelName]) {\n                var memberNameObj_1 = {};\n                for (var _i = 0, _a = headers[count].members; _i < _a.length; _i++) {\n                    var member = _a[_i];\n                    memberNameObj_1[member.valueSort.levelName.toString()] = member.valueSort.levelName.toString();\n                }\n                var excessHeaders = this_4.headerObjectsCollection[levelName].filter(function (member) {\n                    return !memberNameObj_1[member.valueSort.levelName.toString()];\n                });\n                headers[count].members = headers[count].members.concat(excessHeaders);\n                headers[count].members = this_4.getSortedHeaders(headers[count].members, this_4.fieldList[headersInfo.fields[headers[count].members[0].level].name].sort);\n                delete this_4.headerObjectsCollection[levelName];\n            }\n            if (headers[count].members.length > 0) {\n                headers[count].members = this_4.performFilterAddition(headers[count].members, fields, headersInfo);\n            }\n            count++;\n        };\n        var this_4 = this;\n        while (count < headers.length) {\n            _loop_4();\n        }\n        return headers;\n    };\n    PivotEngine.prototype.performFilterCommonUpdate = function (filterItem, headersInfo, addPos) {\n        var rawHeaders = headersInfo.axis === 'row' ? this.rMembers : this.cMembers;\n        var filterObjects = {};\n        for (var _i = 0, _a = this.filterMembers; _i < _a.length; _i++) {\n            var item = _a[_i];\n            filterObjects[item] = item;\n        }\n        if (this.fieldFilterMem[filterItem.name]) {\n            rawHeaders = this.performFilterDeletion(headersInfo.headers, filterItem, headersInfo, filterObjects, 0);\n        }\n        if (addPos.length > 0) {\n            this.frameHeaderObjectsCollection = true;\n            if (headersInfo.fields.filter(function (item) { return item.showNoDataItems; }).length > 0) {\n                addPos = this.data.map(function (item, pos) { return pos; });\n            }\n            this.headerObjectsCollection['parent'] = this.getIndexedHeaders(headersInfo.fields, this.data, 0, addPos, headersInfo.axis, '');\n            rawHeaders = this.performFilterAddition(rawHeaders, headersInfo.fields, headersInfo);\n            var headerNames_1 = {};\n            for (var _b = 0, rawHeaders_1 = rawHeaders; _b < rawHeaders_1.length; _b++) {\n                var header = rawHeaders_1[_b];\n                headerNames_1[header.valueSort.levelName.toString()] = header.valueSort.levelName.toString();\n            }\n            var excessHeaders = this.headerObjectsCollection['parent'].filter(function (header) {\n                return !headerNames_1[header.valueSort.levelName.toString()];\n            });\n            var grandHeader = rawHeaders.filter(function (item) { return item.type === 'grand sum'; });\n            if (grandHeader.length > 0) {\n                rawHeaders.pop();\n            }\n            rawHeaders = this.getSortedHeaders(rawHeaders.concat(excessHeaders), this.fieldList[headersInfo.fields[0].name].sort).concat(grandHeader);\n        }\n        if (headersInfo.axis === 'row') {\n            this.rowCount = 0;\n        }\n        else {\n            this.columnCount = 0;\n        }\n        this.updateHeadersCount(rawHeaders, headersInfo.axis, 0, headersInfo.fields, 'plus', false);\n        if (headersInfo.axis === 'row') {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.rows, this.data, 0, this.filterMembers, 'row', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.rMembers = this.headerCollection.rowHeaders = rawHeaders;\n            this.headerCollection.rowHeadersCount = this.rowCount;\n        }\n        else {\n            if (headersInfo.position > 0) {\n                this.insertPosition(this.columns, this.data, 0, this.filterMembers, 'column', '', rawHeaders);\n            }\n            this.insertTotalPosition(rawHeaders);\n            this.cMembers = this.headerCollection.columnHeaders = rawHeaders;\n            this.headerCollection.columnHeadersCount = this.columnCount;\n        }\n        this.applyValueSorting();\n    };\n    PivotEngine.prototype.getHeadersInfo = function (fieldName, axis) {\n        this.rMembers = this.headerCollection.rowHeaders;\n        this.cMembers = this.headerCollection.columnHeaders;\n        axis = axis === '' ? this.getAxisByFieldName(fieldName) : axis;\n        var headers = axis === 'row' ? this.rMembers : this.cMembers;\n        var fields = axis === 'row' ? this.rows : this.columns;\n        var position = 0;\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            if (field.name === fieldName) {\n                break;\n            }\n            position++;\n        }\n        return { axis: axis, fields: fields, headers: headers, position: position };\n    };\n    /** @hidden */\n    PivotEngine.prototype.updateEngine = function () {\n        this.removeCount = 0;\n        this.calculatePagingValues();\n        this.pivotValues = [];\n        this.headerContent = [];\n        this.valueContent = [];\n        var rowheads = [];\n        var colheads = [];\n        var valuesCount = (this.values.length);\n        this.getAggregatedHeaders(this.rows, this.columns, this.rMembers, this.cMembers, this.values);\n        this.getHeaderData(this.cMembers, colheads, this.pivotValues, 0, this.valueAxis ? 1 : valuesCount);\n        this.insertSubTotals();\n        /* tslint:disable-next-line:max-line-length */\n        this.getTableData(this.rMembers, rowheads, colheads, 0, this.pivotValues, valuesCount, this.rMembers[this.rMembers.length - 1], this.cMembers[this.cMembers.length - 1]);\n        this.applyAdvancedAggregate(rowheads, colheads, this.pivotValues);\n        this.isEngineUpdated = true;\n        this.isEmptyDataAvail(this.rMembers, this.cMembers);\n    };\n    PivotEngine.prototype.getAxisByFieldName = function (fieldName) {\n        var axisCount = 0;\n        var axis = '';\n        while (axisCount < 4 && axis === '') {\n            switch (axisCount) {\n                case 0:\n                    axis = this.getFieldByName(fieldName, this.rows) ? 'row' : '';\n                    break;\n                case 1:\n                    axis = this.getFieldByName(fieldName, this.columns) ? 'column' : '';\n                    break;\n            }\n            axisCount++;\n        }\n        return axis;\n    };\n    PivotEngine.prototype.getFieldByName = function (fieldName, fields) {\n        return new DataManager({ json: fields }).executeLocal(new Query().where('name', 'equal', fieldName))[0];\n    };\n    /* tslint:disable:no-any */\n    PivotEngine.prototype.updateHeadersCount = function (headers, axis, position, fields, action, isDrill) {\n        var lenCnt = 0;\n        var field = fields[position];\n        var showSubTotals = true;\n        if (axis === 'column') {\n            showSubTotals = this.showSubTotals && this.showColumnSubTotals && field.showSubTotals;\n        }\n        else {\n            showSubTotals = this.showSubTotals && this.showRowSubTotals && field.showSubTotals;\n        }\n        while (lenCnt < headers.length) {\n            if (axis === 'row') {\n                this.rowCount = this.rowCount - (action === 'plus' ? -(this.valueAxis === 1 ? this.values.length : 1) :\n                    (this.valueAxis === 1 ? this.values.length : 1));\n            }\n            else {\n                this.columnCount = this.columnCount - (action === 'plus' ? -(this.valueAxis === 1 ? 1 : this.values.length) :\n                    (this.valueAxis === 1 ? 1 : this.values.length));\n            }\n            if (headers[lenCnt].members.length > 0) {\n                this.updateHeadersCount(headers[lenCnt].members, axis, position + 1, fields, action, true);\n            }\n            lenCnt++;\n        }\n        if (axis === 'column' && !showSubTotals && isDrill) {\n            this.columnCount += action === 'plus' ? -this.colValuesLength : this.colValuesLength;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.frameHeaderWithKeys = function (header) {\n        var keys = Object.keys(header);\n        var keyPos = 0;\n        var framedHeader = {};\n        while (keyPos < keys.length) {\n            framedHeader[keys[keyPos]] = header[keys[keyPos]];\n            keyPos++;\n        }\n        return framedHeader;\n    };\n    PivotEngine.prototype.getSortedHeaders = function (headers, sortOrder) {\n        var isNotDateType = !(this.formatFields && this.formatFields[headers[0].valueSort.axis] &&\n            this.formatFields[headers[0].valueSort.axis].type);\n        if (isNotDateType) {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                    headers;\n        }\n        else {\n            return sortOrder === 'Ascending' ?\n                (headers.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                sortOrder === 'Descending' ?\n                    (headers.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                    headers;\n        }\n    };\n    /** @hidden */\n    PivotEngine.prototype.applyValueSorting = function (rMembers, cMembers) {\n        var isNullArgument = false;\n        if (rMembers === undefined || cMembers === undefined) {\n            rMembers = this.rMembers;\n            cMembers = this.cMembers;\n            isNullArgument = true;\n        }\n        if (this.enableValueSorting && this.valueSortSettings.headerText &&\n            this.valueSortSettings.headerText !== '' && this.values.length > 0) {\n            var textArray = this.valueSortSettings.headerText.split(this.valueSortSettings.headerDelimiter);\n            var hText = '';\n            var mIndex = void 0;\n            var mType = void 0;\n            var caption = void 0;\n            for (var i = 0; i < this.values.length; i++) {\n                if (this.values[i].caption === textArray[textArray.length - 1]) {\n                    caption = this.values[i].name;\n                    break;\n                }\n                else {\n                    caption = textArray[textArray.length - 1];\n                }\n            }\n            if (((this.values.length === 1 && this.columns.length === 0) || this.values.length > 1) && caption && this.fieldList[caption]) {\n                for (var i = 0; i < textArray.length - 1; i++) {\n                    hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                }\n                mIndex = this.fieldList[caption].index;\n                mType = this.fieldList[caption].aggregateType;\n            }\n            else {\n                if (!this.alwaysShowValueHeader || textArray.length === 1) {\n                    hText = this.valueSortSettings.headerText;\n                }\n                else {\n                    for (var i = 0; i < textArray.length - 1; i++) {\n                        hText = hText === '' ? textArray[i] : (hText + this.valueSortSettings.headerDelimiter + textArray[i]);\n                    }\n                }\n                mIndex = this.fieldList[this.values[0].name].index;\n                mType = this.fieldList[this.values[0].name].aggregateType;\n            }\n            var member = void 0;\n            if (this.valueAxis === 0) {\n                member = this.getMember(cMembers, hText);\n                if (member) {\n                    rMembers = this.sortByValueRow(rMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            else {\n                member = this.getMember(rMembers, hText);\n                if (member) {\n                    cMembers = this.sortByValueRow(cMembers, member, this.valueSortSettings.sortOrder, mIndex, mType);\n                }\n            }\n            if (isNullArgument) {\n                this.rMembers = rMembers;\n                this.cMembers = cMembers;\n                if (this.pageSettings) {\n                    this.headerCollection.rowHeaders = this.rMembers;\n                    this.headerCollection.columnHeaders = this.cMembers;\n                }\n            }\n        }\n        return { rMembers: rMembers, cMembers: cMembers };\n    };\n    PivotEngine.prototype.getMember = function (cMembers, headerText) {\n        var vlen = cMembers.length;\n        var member;\n        for (var j = 0; j < vlen; j++) {\n            if (cMembers[j].valueSort.levelName === headerText) {\n                member = cMembers[j];\n                break;\n            }\n            else if (cMembers[j].members.length > 0) {\n                member = this.getMember(cMembers[j].members, headerText);\n            }\n            if (member) {\n                return member;\n            }\n        }\n        return member;\n    };\n    PivotEngine.prototype.sortByValueRow = function (rMembers, member, sortOrder, mIndex, mType) {\n        var aggreColl = [];\n        for (var _i = 0, rMembers_1 = rMembers; _i < rMembers_1.length; _i++) {\n            var header = rMembers_1[_i];\n            if (header.type === 'grand sum') {\n                aggreColl.push({ 'header': header });\n            }\n            else {\n                this.rawIndexObject = {};\n                var value = this.getAggregateValue(header.index, member.indexObject, mIndex, mType);\n                var cellDetails = {\n                    fieldName: this.fields[mIndex],\n                    row: header,\n                    column: member,\n                    value: value,\n                    cellSets: this.getCellSet(this.rawIndexObject),\n                    /* tslint:disable-next-line:max-line-length */\n                    rowCellType: (header.hasChild && header.isDrilled ? 'subTotal' : header.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    /* tslint:disable-next-line:max-line-length */\n                    columnCellType: (member.hasChild && member.isDrilled ? 'subTotal' : member.type === 'grand sum' ? 'grandTotal' : 'value'),\n                    aggregateType: mType,\n                    skipFormatting: false\n                };\n                if (this.getValueCellInfo) {\n                    this.getValueCellInfo(cellDetails);\n                }\n                value = cellDetails.value;\n                this.rawIndexObject = {};\n                aggreColl.push({ 'header': header, 'value': value });\n            }\n        }\n        aggreColl.sort(function (a, b) {\n            return sortOrder === 'Descending' ?\n                ((b['value'] || b['header']['type'] === 'grand sum' ?\n                    b['value'] : 0) - (a['value'] || a['header']['type'] === 'grand sum' ? a['value'] : 0)) :\n                ((a['value'] || a['header']['type'] === 'grand sum' ?\n                    a['value'] : 0) - (b['value'] || b['header']['type'] === 'grand sum' ? b['value'] : 0));\n        });\n        rMembers = aggreColl.map(function (item) { return item['header']; });\n        for (var _a = 0, rMembers_2 = rMembers; _a < rMembers_2.length; _a++) {\n            var header = rMembers_2[_a];\n            if (header.members.length > 0) {\n                header.members = this.sortByValueRow(header.members, member, sortOrder, mIndex, mType);\n            }\n        }\n        return rMembers;\n    };\n    PivotEngine.prototype.insertAllMembersCommon = function () {\n        /* inserting the row grant-total members */\n        var rowFlag = (this.showGrandTotals && this.showRowGrandTotals) ? true : (this.rows.length > 0) ? false : true;\n        if (rowFlag) {\n            this.insertAllMember(this.rMembers, this.filterMembers, '', 'row');\n        }\n        /* inserting the column gran-total members */\n        var columnFlag = (this.showGrandTotals && this.showColumnGrandTotals) ? true : (this.columns.length > 0) ? false : true;\n        if (columnFlag) {\n            this.insertAllMember(this.cMembers, this.filterMembers, '', 'column');\n        }\n    };\n    PivotEngine.prototype.insertSubTotals = function () {\n        var rowLength = this.pivotValues.length;\n        for (var rowCnt = 0; rowCnt < rowLength; rowCnt++) {\n            var rowCells = this.pivotValues[rowCnt];\n            if (rowCells) {\n                var savedCell = void 0;\n                var spanCnt = 1;\n                var colLength = rowCells.length;\n                var indexObj = void 0;\n                for (var colCnt = colLength - 1; colCnt > 0; colCnt--) {\n                    var cell = rowCells[colCnt];\n                    if (cell) {\n                        // if (cell.rowSpan > 1) {\n                        //     cell.rowSpan = 1;\n                        // }\n                        if (savedCell) {\n                            savedCell.colSpan = spanCnt;\n                            savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                        }\n                        indexObj = { index: cell.index, indexObject: cell.indexObject };\n                        cell.index = [];\n                        cell.indexObject = {};\n                        savedCell = extend({}, cell, null, true);\n                        cell.index = indexObj.index;\n                        cell.indexObject = indexObj.indexObject;\n                        var rowPos = rowCnt + 1;\n                        while (this.pivotValues[rowPos] && !this.pivotValues[rowPos][colCnt]) {\n                            if (!this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            var cellType = (cell.type === 'sum' || cell.type === 'grand sum') ? cell.type : 'sum';\n                            this.pivotValues[rowPos][colCnt] = this.headerContent[rowPos][colCnt] = {\n                                type: cellType, formattedText: ((cell.type === 'sum' || cell.type === 'grand sum') ? cell.formattedText :\n                                    (cell.formattedText + ' Total')),\n                                axis: 'column', level: -1, colIndex: colCnt, rowIndex: rowPos, valueSort: cell.valueSort\n                            };\n                            if (cell.valueSort && cell.valueSort[this.valueSortSettings.headerText]) {\n                                this.valueSortSettings.columnIndex = colCnt;\n                            }\n                            var isSpanned = false;\n                            if (cellType === 'grand sum') {\n                                this.pivotValues[rowCnt][colCnt].rowSpan = (rowPos - rowCnt) + 1;\n                                savedCell.rowSpan = (rowPos - rowCnt) + 1;\n                            }\n                            else if (this.pivotValues[rowCnt][colCnt].type !== 'sum' &&\n                                this.pivotValues[rowCnt][colCnt].isDrilled) {\n                                this.pivotValues[rowCnt + 1][colCnt].rowSpan = rowPos - rowCnt;\n                                isSpanned = true;\n                            }\n                            else {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            if (rowPos > (rowCnt + 1) && (this.pivotValues[rowCnt][colCnt].type === 'sum' ||\n                                isSpanned)) {\n                                this.pivotValues[rowPos][colCnt].rowSpan = -1;\n                            }\n                            rowPos++;\n                        }\n                        spanCnt = 1;\n                    }\n                    else {\n                        rowCells[colCnt] = this.headerContent[rowCnt][colCnt] = extend({}, savedCell, null, true);\n                        rowCells[colCnt].index = this.headerContent[rowCnt][colCnt].index = indexObj.index;\n                        rowCells[colCnt].indexObject = this.headerContent[rowCnt][colCnt].indexObject = indexObj.indexObject;\n                        spanCnt++;\n                        rowCells[colCnt].colSpan = spanCnt;\n                        rowCells[colCnt].colIndex = rowCells[colCnt].colIndex - (spanCnt - 1);\n                    }\n                    if (colCnt === 1 && savedCell) {\n                        savedCell.colSpan = spanCnt;\n                        savedCell.colIndex = savedCell.colIndex - (spanCnt - 1);\n                    }\n                }\n            }\n        }\n    };\n    PivotEngine.prototype.frameDrillObject = function () {\n        this.fieldDrillCollection = {};\n        for (var fieldCnt = 0; fieldCnt < this.drilledMembers.length; fieldCnt++) {\n            var drillOption = this.drilledMembers[fieldCnt];\n            for (var memberCnt = 0; memberCnt < drillOption.items.length; memberCnt++) {\n                var memberString = drillOption.name + this.valueSortSettings.headerDelimiter +\n                    drillOption.items[memberCnt].split(drillOption.delimiter).join(this.valueSortSettings.headerDelimiter);\n                this.fieldDrillCollection[memberString] = memberString;\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    PivotEngine.prototype.getIndexedHeaders = function (keys, data, keyInd, position, axis, parentMember, valueFil) {\n        var hierarchy = [];\n        if (keys) {\n            var rlen = keys.length;\n            var decisionObj = {};\n            var fieldName = keys[keyInd].name;\n            var field = keys[keyInd];\n            // let members: string[] = Object.keys(this.fieldList[field].members);\n            var childrens = this.fieldList[fieldName];\n            var isNoData = false;\n            var isDateType = (this.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1));\n            var showNoDataItems = (position.length < 1 && keyInd > 0) || field.showNoDataItems;\n            var savedMembers = {};\n            if (showNoDataItems) {\n                var members = Object.keys(childrens.members);\n                for (var pos = 0, lt = members.length; pos < lt; pos++) {\n                    if (this.showHeaderWhenEmpty || (this.localeObj && members[pos] !== this.localeObj.getConstant('undefined'))) {\n                        savedMembers[members[pos]] = members[pos];\n                    }\n                }\n                if (position.length < 1) {\n                    isNoData = true;\n                    position.length = members.length;\n                }\n            }\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                if (!isNullOrUndefined(keys[keyInd].showSubTotals) && !keys[keyInd].showSubTotals) {\n                    member.showSubTotals = false;\n                }\n                member.hasChild = keyInd < rlen - 1;\n                member.level = keyInd;\n                member.axis = axis;\n                member.colSpan = 1;\n                var memInd = isNoData ? childrens.members[Object.keys(savedMembers)[0]].ordinal :\n                    this.indexMatrix[position[pos]][childrens.index];\n                var headerValue = isNoData ? Object.keys(savedMembers)[0] :\n                    data[position[pos]][fieldName];\n                if ((isNullOrUndefined(headerValue) || (this.localeObj && headerValue === this.localeObj.getConstant('undefined')))\n                    && !this.showHeaderWhenEmpty) {\n                    if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                        Object.keys(savedMembers).length > 0) {\n                        lt = Object.keys(savedMembers).length;\n                        isNoData = true;\n                        pos = -1;\n                    }\n                    continue;\n                }\n                delete savedMembers[headerValue];\n                if (showNoDataItems && this.fieldFilterMem[fieldName] &&\n                    this.fieldFilterMem[fieldName].memberObj[headerValue] === headerValue) {\n                    continue;\n                }\n                var formattedValue = isDateType ? {\n                    actualText: headerValue,\n                    formattedText: childrens.dateMember[memInd - 1].formattedText,\n                    dateText: childrens.dateMember[memInd - 1].actualText\n                } :\n                    {\n                        formattedText: headerValue === null ? (this.localeObj ? this.localeObj.getConstant('null') : String(headerValue)) :\n                            headerValue === undefined ? (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : String(headerValue), actualText: headerValue === null ? (this.localeObj ?\n                            this.localeObj.getConstant('null') : String(headerValue)) : headerValue === undefined ?\n                            (this.localeObj ? (fieldName in this.groupingFields) ?\n                                this.localeObj.getConstant('groupOutOfRange') : this.localeObj.getConstant('undefined') :\n                                String(headerValue)) : headerValue\n                    };\n                member.actualText = formattedValue.actualText;\n                member.formattedText = formattedValue.formattedText;\n                if (isDateType) {\n                    member.dateText = formattedValue.dateText;\n                }\n                var availData = showNoDataItems ? (this.filterPosObj[position[pos]] !== undefined &&\n                    !isNoData ? true : false) : true;\n                //member.name = members[memInd];\n                // member.type = member.hasChild ? 'All' : 'Single';\n                var pindx = void 0;\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    member.index = decisionObj[memInd].index;\n                    member.indexObject = decisionObj[memInd].indexObject;\n                    if (availData) {\n                        member.index = decisionObj[memInd].index = [position[pos]];\n                        decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                        member.indexObject = decisionObj[memInd].indexObject;\n                    }\n                    member.ordinal = memInd;\n                    member.valueSort = {};\n                    member.valueSort.axis = fieldName;\n                    if (keyInd !== 0) {\n                        member.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter + member.formattedText;\n                        member.valueSort[parentMember + this.valueSortSettings.headerDelimiter + member.formattedText] = 1;\n                    }\n                    else {\n                        member.valueSort[member.formattedText] = 1;\n                        member.valueSort.levelName = member.formattedText;\n                    }\n                    var memberString = member.valueSort.axis + this.valueSortSettings.headerDelimiter + member.valueSort.levelName;\n                    member.isDrilled = (valueFil && this.isValueFiltersAvail) ?\n                        true : (member.hasChild && this.fieldDrillCollection[memberString]) ?\n                        this.isExpandAll ? false : true : childrens.members[headerValue].isDrilled;\n                    //if (!member.members) {\n                    member.members = [];\n                    //}\n                    //let copyObj: AxisSet = Object.create(member);\n                    hierarchy.push(member);\n                }\n                else if (availData) {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n                if (showNoDataItems && !isNoData && keyInd > 0 && pos + 1 === position.length &&\n                    Object.keys(savedMembers).length > 0) {\n                    isNoData = true;\n                    lt = Object.keys(savedMembers).length;\n                    pos = -1;\n                }\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (!this.frameHeaderObjectsCollection) {\n                    if (axis === 'row') {\n                        this.rowCount += this.rowValuesLength;\n                    }\n                    else {\n                        this.columnCount += this.colValuesLength;\n                    }\n                }\n                var level = null;\n                if (hierarchy[iln].valueSort && hierarchy[iln].valueSort.levelName) {\n                    level = hierarchy[iln].valueSort.levelName;\n                }\n                parentMember = (level || hierarchy[iln].formattedText);\n                if (!this.showHeaderWhenEmpty && rlen - 1 > keyInd && hierarchy[iln].index &&\n                    hierarchy[iln].index.length > 0 && !showNoDataItems) {\n                    var headerValue = data[hierarchy[iln].index[0]][keys[keyInd + 1].name];\n                    var hasChild = (isNullOrUndefined(headerValue) || (this.localeObj &&\n                        headerValue === this.localeObj.getConstant('undefined'))) && hierarchy[iln].index.length === 1 ? false : true;\n                    hierarchy[iln].hasChild = hasChild;\n                }\n                else if (!this.showHeaderWhenEmpty && showNoDataItems && keys[keyInd + 1] && keys[keyInd + 1].name &&\n                    Object.keys(this.fieldList[keys[keyInd + 1].name].members).length) {\n                    hierarchy[iln].hasChild = true;\n                }\n                if (rlen - 1 > keyInd && hierarchy[iln].isDrilled) {\n                    this.columnCount -= (!(this.showSubTotals && this.showColumnSubTotals && field.showSubTotals) && axis === 'column') ?\n                        this.colValuesLength : 0;\n                    var filterPosition = hierarchy[iln].index;\n                    /* tslint:disable:align */\n                    hierarchy[iln].members = this.getIndexedHeaders(keys, data, keyInd + 1, (filterPosition === undefined ? [] : filterPosition), axis, parentMember);\n                    /* tslint:enable:align */\n                    if (this.frameHeaderObjectsCollection) {\n                        this.headerObjectsCollection[parentMember] = hierarchy[iln].members;\n                    }\n                }\n            }\n            /* tslint:disable:typedef */\n            if (this.enableSort) {\n                // return new DataManager(hierarchy as JSON[]).executeLocal(new Query().sortBy('actualText', childrens.sort.toLowerCase()));\n                if (isDateType) {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.dateText > b.dateText) ? 1 : ((b.dateText > a.dateText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.dateText < b.dateText) ? 1 : ((b.dateText < a.dateText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n                else {\n                    return childrens.sort === 'Ascending' ?\n                        (hierarchy.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 : ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        childrens.sort === 'Descending' ?\n                            (hierarchy.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 : ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            hierarchy;\n                }\n            }\n            else {\n                return hierarchy;\n            }\n            /* tslint:enable:typedef */\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.getOrderedIndex = function (headers) {\n        var orderedIndex = {};\n        for (var i = 0; i < headers.length; i++) {\n            if (headers[i].type !== 'grand sum') {\n                orderedIndex[headers[i].ordinal] = i;\n            }\n        }\n        return orderedIndex;\n    };\n    PivotEngine.prototype.insertPosition = function (keys, data, keyInd, position, axis, parentMember, slicedHeaders) {\n        var hierarchy = [];\n        var orderedIndex = this.getOrderedIndex(slicedHeaders);\n        if (keys) {\n            var decisionObj = {};\n            var field = keys[keyInd].name;\n            var childrens = this.fieldList[field];\n            for (var pos = 0, lt = position.length; pos < lt; pos++) {\n                var member = {};\n                var memInd = this.indexMatrix[position[pos]][childrens.index];\n                var slicedHeader = slicedHeaders[orderedIndex[memInd]];\n                var formattedValue = (this.formatFields[field] &&\n                    (['date', 'dateTime', 'time'].indexOf(this.formatFields[field].type) > -1)) ?\n                    this.getFormattedValue(data[position[pos]][field], field) :\n                    { formattedText: data[position[pos]][field].toString(), actualText: data[position[pos]][field].toString() };\n                if (!(slicedHeader && slicedHeader.formattedText === formattedValue.formattedText)) {\n                    continue;\n                }\n                if (!(decisionObj && decisionObj[memInd])) {\n                    decisionObj[memInd] = { index: [], indexObject: {} };\n                    slicedHeader.index = decisionObj[memInd].index = [position[pos]];\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                    slicedHeader.indexObject = decisionObj[memInd].indexObject;\n                    slicedHeader.valueSort = {};\n                    slicedHeader.valueSort.axis = field;\n                    if (keyInd !== 0) {\n                        slicedHeader.valueSort.levelName = parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText;\n                        slicedHeader.valueSort[parentMember + this.valueSortSettings.headerDelimiter +\n                            slicedHeader.formattedText] = 1;\n                    }\n                    else {\n                        slicedHeader.valueSort[slicedHeader.formattedText] = 1;\n                        slicedHeader.valueSort.levelName = slicedHeader.formattedText;\n                    }\n                    member.members = [];\n                    hierarchy.push(member);\n                }\n                else {\n                    decisionObj[memInd].index.push(position[pos]);\n                    decisionObj[memInd].indexObject[position[pos]] = position[pos];\n                }\n            }\n            var diff = slicedHeaders.length - hierarchy.length;\n            while (diff > 0) {\n                hierarchy.push({ members: [] });\n                diff--;\n            }\n            for (var iln = 0, ilt = hierarchy.length; iln < ilt; iln++) {\n                if (slicedHeaders[iln].members.length > 0) {\n                    var level = null;\n                    if (slicedHeaders[iln].valueSort && slicedHeaders[iln].valueSort.levelName) {\n                        level = slicedHeaders[iln].valueSort.levelName;\n                    }\n                    parentMember = (level || slicedHeaders[iln].formattedText);\n                    /* tslint:disable:align */\n                    hierarchy[iln].members =\n                        this.insertPosition(keys, data, keyInd + 1, slicedHeaders[iln].index, axis, parentMember, slicedHeaders[iln].members);\n                    /* tslint:enable:align */\n                }\n            }\n            return hierarchy;\n        }\n        else {\n            return hierarchy;\n        }\n    };\n    PivotEngine.prototype.insertTotalPosition = function (headers) {\n        var summCell = headers[headers.length - 1];\n        if (summCell && summCell.type === 'grand sum') {\n            summCell.index = this.filterMembers;\n            /* tslint:disable:typedef */\n            var lt = void 0;\n            for (var ln = 0, lt_1 = this.filterMembers.length; ln < lt_1; ln++) {\n                summCell.indexObject[this.filterMembers[ln]] = this.filterMembers[ln];\n            }\n            /* tslint:enable:typedef */\n        }\n        return headers;\n    };\n    PivotEngine.prototype.calculatePagingValues = function () {\n        if (this.pageSettings) {\n            if (this.valueAxis === 1) {\n                this.rowValuesLength = this.values.length;\n            }\n            else {\n                this.colValuesLength = this.values.length;\n            }\n            this.memberCnt = -this.rowValuesLength;\n            this.rowStartPos = ((this.pageSettings.rowCurrentPage * this.pageSettings.rowSize) -\n                (this.pageSettings.rowSize)) * this.rowValuesLength;\n            var exactStartPos = (this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength)) > this.rowCount ?\n                (this.rowCount - (this.pageSettings.rowSize * 3 * this.rowValuesLength)) : this.rowStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.rowStartPos = 0;\n                this.pageSettings.rowCurrentPage = 1;\n            }\n            this.rowFirstLvl = (this.rowStartPos - exactStartPos) % this.pageSettings.rowSize;\n            this.rowStartPos = exactStartPos;\n            this.endPos = this.rowStartPos + (this.pageSettings.rowSize * 3 * this.rowValuesLength);\n            this.endPos = this.endPos > this.rowCount ? this.rowCount : this.endPos;\n            this.rMembers = this.performSlicing(this.rMembers, [], this.rowStartPos, 'row');\n            this.memberCnt = -this.colValuesLength;\n            this.pageInLimit = false;\n            this.colHdrBufferCalculated = false;\n            this.colStartPos = ((this.pageSettings.columnCurrentPage * this.pageSettings.columnSize) -\n                (this.pageSettings.columnSize)) * this.colValuesLength;\n            exactStartPos = (this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength)) >\n                this.columnCount ?\n                (this.columnCount - (this.pageSettings.columnSize * 3 * this.colValuesLength)) : this.colStartPos;\n            if (exactStartPos < 0) {\n                exactStartPos = this.colStartPos = 0;\n                this.pageSettings.columnCurrentPage = 1;\n            }\n            this.colFirstLvl = (this.colStartPos - exactStartPos) % this.pageSettings.columnSize;\n            this.colStartPos = exactStartPos;\n            this.endPos = this.colStartPos + (this.pageSettings.columnSize * 3 * this.colValuesLength);\n            this.endPos = this.endPos > this.columnCount ? this.columnCount : this.endPos;\n            this.cMembers = this.performSlicing(this.cMembers, [], this.colStartPos, 'column');\n            this.memberCnt = -1;\n            this.pageInLimit = false;\n        }\n    };\n    PivotEngine.prototype.performSlicing = function (headers, slicedHeaders, startPos, axis) {\n        var pos = 0;\n        while (headers[pos]) {\n            this.memberCnt += axis === 'column' ? this.colValuesLength : this.rowValuesLength;\n            if (startPos <= this.memberCnt && this.endPos >= this.memberCnt && !this.pageInLimit) {\n                if (axis === 'column') {\n                    this.colFirstLvl = this.colFirstLvl + headers[pos].level;\n                }\n                else {\n                    this.rowFirstLvl = this.rowFirstLvl + headers[pos].level;\n                }\n                this.pageInLimit = true;\n            }\n            if (this.pageInLimit) {\n                if (this.endPos <= this.memberCnt) {\n                    if (axis === 'column') {\n                        if (headers[pos].members.length === 0) {\n                            if (this.colHdrBufferCalculated) {\n                                break;\n                            }\n                            this.colHdrBufferCalculated = true;\n                            this.endPos += (headers[pos].level * this.colValuesLength);\n                        }\n                        else if (this.colHdrBufferCalculated) {\n                            break;\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            slicedHeaders.push(headers[pos].members.length > 0 ? this.removeChildMembers(headers[pos]) : headers[pos]);\n            if (headers[pos].members.length > 0) {\n                if (axis === 'column') {\n                    this.memberCnt -= !(this.showSubTotals && this.showColumnSubTotals &&\n                        this.columnKeys[headers[pos].valueSort.axis].showSubTotals) ? this.colValuesLength : 0;\n                }\n                slicedHeaders[slicedHeaders.length - 1].members =\n                    this.performSlicing(headers[pos].members, [], startPos, axis);\n            }\n            if (!this.pageInLimit) {\n                slicedHeaders.pop();\n            }\n            if (headers[pos].level === 0 && this.pageInLimit && this.endPos <= this.memberCnt) {\n                break;\n            }\n            pos++;\n        }\n        return slicedHeaders;\n    };\n    PivotEngine.prototype.removeChildMembers = function (member) {\n        var keys = Object.keys(member);\n        var keyPos = 0;\n        var framedMember = {};\n        while (keyPos < keys.length) {\n            framedMember[keys[keyPos]] = member[keys[keyPos]];\n            if (keys[keyPos] === 'members') {\n                framedMember['members'] = [];\n            }\n            keyPos++;\n        }\n        return framedMember;\n    };\n    PivotEngine.prototype.insertAllMember = function (set, filter, customText, axis) {\n        var len = set.length;\n        customText = ' Total';\n        set[len] = {\n            hasChild: false,\n            index: filter,\n            level: 0,\n            axis: axis,\n            isDrilled: false,\n            indexObject: {},\n            members: [],\n            formattedText: 'Grand' + customText,\n            ordinal: len,\n            type: 'grand sum',\n            valueSort: {}\n        };\n        set[len].valueSort[set[len].formattedText] = 1;\n        set[len].valueSort.levelName = set[len].formattedText;\n        for (var ln = 0, lt = filter.length; ln < lt; ln++) {\n            set[len].indexObject[filter[ln]] = filter[ln];\n        }\n        if (axis === 'row') {\n            this.rowCount += this.rowValuesLength;\n        }\n        else {\n            this.columnCount += this.colValuesLength;\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getTableData = function (rows, reformAxis, columns, tnum, data, vlt, rTotal, cTotal) {\n        for (var rlt = rows.length, rln = 0; rln < rlt; rln++) {\n            tnum = data.length;\n            reformAxis[tnum] = rows[rln];\n            var actCnt = tnum - Number(Object.keys(reformAxis)[0]);\n            //let rplus: number = rln + 1;\n            //let lvl: number = rows[rln].level;\n            var isLeastNode = !reformAxis[tnum].members.length;\n            rows[rln].colIndex = 0;\n            rows[rln].rowIndex = tnum;\n            if (!data[tnum]) {\n                data[tnum] = [];\n                this.valueContent[actCnt] = {};\n                //data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            else {\n                // data[tnum][0] = rows[rln].name;\n                data[tnum][0] = this.valueContent[actCnt][0] = this.frameHeaderWithKeys(rows[rln]);\n            }\n            if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && !(rows[rln].hasChild &&\n                ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals))) {\n                var hpos = tnum;\n                var actpos = actCnt;\n                for (var vln = 0; vln < vlt; vln++) {\n                    tnum++;\n                    actCnt++;\n                    var name_1 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'row',\n                        actualText: this.values[vln].name,\n                        formattedText: name_1,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: 0,\n                        rowIndex: tnum,\n                        type: 'value'\n                    };\n                    if (!data[tnum]) {\n                        data[tnum] = [];\n                        this.valueContent[actCnt] = {};\n                        data[tnum][0] = this.valueContent[actCnt][0] = calObj;\n                    }\n                    var vData = data[tnum][0].valueSort;\n                    vData[data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_1] = 1;\n                    vData.levelName = data[tnum - vln - 1][0].valueSort.levelName + this.valueSortSettings.headerDelimiter\n                        + name_1;\n                    for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                        //for (let vln: number = 0; (!this.valueAxis && vln < vlt); vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                        data[hpos][dln - 1] = this.valueContent[actpos][dln - 1] = {\n                            axis: 'value', actualText: '', colSpan: 1,\n                            colIndex: dln, formattedText: '', hasChild: false\n                        };\n                        // }\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vlt, rTotal, cTotal);\n            }\n            else {\n                for (var cln = 0, dln = 1, clt = columns.length; cln < clt; ++cln) {\n                    for (var vln = 0; vln < vlt; vln++) {\n                        this.updateRowData(rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal);\n                        dln = data[tnum].length;\n                    }\n                }\n                this.recursiveRowData(rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, 0, rTotal, cTotal);\n            }\n        }\n        /* for (let rlt: number = rows.length, rln: number = 0; rln < rlt; rln++) {\n            if (!data[rln]) {\n                data[rln] = [];\n                data[rln][0] = rows[rln].name;\n            } else {\n                data[rln][0] = rows[rln].name;\n            }\n            for (let cln: number = 0, dln: number = 1, clt: number = columns.length; cln < clt; dln = ++cln) {\n                data[rln][dln] = this.getAggregateValue(rows[rln].index, columns[cln].index, 11);\n            }\n        } */\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaders = function (rows, columns, rMembers, cMembers, values) {\n        this.selectedHeaders = { selectedHeader: [], values: [] };\n        for (var vlt = values.length, vln = 0; vln < vlt; vln++) {\n            switch (values[vln].type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var baseField = void 0;\n                        var baseItem = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField && values[vln].baseItem) {\n                            baseField = values[vln].baseField;\n                            baseItem = values[vln].baseItem;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                            baseItem = Object.keys(this.fieldList[columns[0].name].members)[0];\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                            baseItem = Object.keys(this.fieldList[rows[0].name].members)[0];\n                        }\n                        var isHeaderSelected = false;\n                        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n                            var row = rows_2[_i];\n                            if (row.name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, baseItem, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var _a = 0, columns_1 = columns; _a < columns_1.length; _a++) {\n                                var column = columns_1[_a];\n                                if (column.name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, baseItem, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((values[vln].type === 'PercentageOfParentRowTotal' ? rMembers : cMembers), values[vln].name, undefined, false, (values[vln].type === 'PercentageOfParentRowTotal' ? 'row' : 'column'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        this.selectedHeaders.values.push(values[vln].name);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.getAggregatedHeaderData((this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? cMembers : rMembers), values[vln].name, undefined, false, (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? 'column' : 'row'), values[vln].type, this.selectedHeaders.selectedHeader, vln);\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        var baseField = void 0;\n                        this.selectedHeaders.values.push(values[vln].name);\n                        if (values[vln].baseField) {\n                            baseField = values[vln].baseField;\n                        }\n                        else if (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) && columns.length > 0) {\n                            baseField = columns[0].name;\n                        }\n                        else if (rows.length > 0) {\n                            baseField = rows[0].name;\n                        }\n                        var isHeaderSelected = false;\n                        for (var len = rows.length, i = 0; i < len; i++) {\n                            if (rows[i].name === baseField) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rMembers, values[vln].name, undefined, false, 'row', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                isHeaderSelected = true;\n                                break;\n                            }\n                        }\n                        if (!isHeaderSelected) {\n                            for (var len = columns.length, i = 0; i < len; i++) {\n                                if (columns[i].name === baseField) {\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(cMembers, values[vln].name, undefined, false, 'column', values[vln].type, this.selectedHeaders.selectedHeader, vln, i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.getAggregatedHeaderData = function (headers, name, baseItem, isChildren, type, aggregateType, selectedHeaders, vln, level) {\n        for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\n            var rln = headers_1[_i];\n            switch (aggregateType) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var levelName = rln.valueSort.levelName.toString().split('.');\n                        if (levelName.indexOf(baseItem) !== -1) {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(baseItem, rln.level, type, isChildren, name, aggregateType, rln.valueSort.levelName, (isChildren ? [rln] : headers), vln + 1));\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, baseItem, true, type, aggregateType, selectedHeaders[selectedHeaders.length - 1].childMembers, vln);\n                            }\n                        }\n                        else if (rln.members.length > 0) {\n                            this.getAggregatedHeaderData(rln.members, name, baseItem, false, type, aggregateType, selectedHeaders, vln);\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                    {\n                        if (rln.type === 'grand sum') {\n                            /* tslint:disable-next-line:max-line-length */\n                            selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, headers, vln + 1));\n                        }\n                        else {\n                            if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, rln.members, vln + 1));\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln);\n                            }\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentTotal':\n                    {\n                        if (rln.type !== 'grand sum') {\n                            if (rln.level === level) {\n                                if (rln.members.length > 0) {\n                                    if (isChildren) {\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        for (var _a = 0, _b = rln.members; _a < _b.length; _a++) {\n                                            var member = _b[_a];\n                                            aggregateHeaders.push(member);\n                                        }\n                                    }\n                                    else {\n                                        var children = extend([], rln.members, null, true);\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, children, vln + 1));\n                                        var aggregateHeaders = selectedHeaders[selectedHeaders.length - 1].aggregateHeaders;\n                                        aggregateHeaders.push(rln);\n                                    }\n                                    /* tslint:disable-next-line:max-line-length */\n                                    this.getAggregatedHeaderData(rln.members, name, undefined, true, type, aggregateType, selectedHeaders, vln, level + 1);\n                                }\n                                else {\n                                    if (!isChildren) {\n                                        /* tslint:disable-next-line:max-line-length */\n                                        selectedHeaders.push(this.updateSelectedHeaders(undefined, rln.level, type, false, name, aggregateType, rln.valueSort.levelName, [rln], vln + 1));\n                                    }\n                                }\n                            }\n                            else if (rln.members.length > 0) {\n                                /* tslint:disable-next-line:max-line-length */\n                                this.getAggregatedHeaderData(rln.members, name, undefined, false, type, aggregateType, selectedHeaders, vln, level);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotEngine.prototype.updateSelectedHeaders = function (baseItem, level, type, isChildren, name, aggregateType, levelName, headers, vCount) {\n        var headerData = {\n            name: baseItem,\n            level: level,\n            axis: type,\n            isChild: isChildren,\n            value: name,\n            type: aggregateType,\n            uniqueName: levelName,\n            aggregateHeaders: headers,\n            childMembers: [],\n            valueCount: vCount\n        };\n        return headerData;\n    };\n    PivotEngine.prototype.applyAdvancedAggregate = function (rowheads, colheads, data) {\n        this.aggregatedValueMatrix = [];\n        if (this.selectedHeaders.values.length > 0) {\n            var pivotIndex = {};\n            var colIndex = [];\n            var isIndexFilled = false;\n            for (var rlt = data.length, rln = 0; rln < rlt; rln++) {\n                if (data[rln] !== undefined && data[rln][0] !== undefined) {\n                    if (!isIndexFilled) {\n                        for (var clt = data[rln].length, cln = 0; cln < clt; cln++) {\n                            if (data[rln][cln].axis === 'value' &&\n                                this.selectedHeaders.values.indexOf(data[rln][cln].actualText) !== -1) {\n                                colIndex.push(cln);\n                                isIndexFilled = true;\n                            }\n                        }\n                    }\n                    if (colIndex.length > 0 && data[rln][colIndex[0]].axis === 'value' &&\n                        this.selectedHeaders.values.indexOf(data[rln][colIndex[0]].actualText) !== -1) {\n                        for (var _i = 0, colIndex_1 = colIndex; _i < colIndex_1.length; _i++) {\n                            var index = colIndex_1[_i];\n                            pivotIndex[rln + ',' + index] = [rln, index];\n                        }\n                    }\n                }\n            }\n            this.updateAggregates(rowheads, colheads, data, this.selectedHeaders.selectedHeader, colIndex, pivotIndex);\n            var indexCollection = Object.keys(pivotIndex);\n            for (var _a = 0, indexCollection_1 = indexCollection; _a < indexCollection_1.length; _a++) {\n                var index = indexCollection_1[_a];\n                var currentSet = data[pivotIndex[index][0]][pivotIndex[index][1]];\n                // currentSet.formattedText = '0';\n                currentSet.formattedText = (this.selectedHeaders.selectedHeader.length > 0 ? this.emptyCellTextContent : '#N/A');\n                if (!this.aggregatedValueMatrix[pivotIndex[index][0]]) {\n                    this.aggregatedValueMatrix[pivotIndex[index][0]] = [];\n                }\n                this.aggregatedValueMatrix[pivotIndex[index][0]][pivotIndex[index][1]] = 0;\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable:all */\n    PivotEngine.prototype.updateAggregates = function (rowheads, colheads, data, selectedHeaders, colIndex, pivotIndex) {\n        for (var _i = 0, selectedHeaders_1 = selectedHeaders; _i < selectedHeaders_1.length; _i++) {\n            var headers = selectedHeaders_1[_i];\n            var selectedHeaderCollection = headers.aggregateHeaders;\n            var name_2 = headers.value;\n            var valueCount = (this.valueAxis && (this.isMutiMeasures || this.alwaysShowValueHeader) ? headers.valueCount : 0);\n            var aggregateType = headers.type;\n            var uniqueName = headers.uniqueName;\n            var axis = headers.axis;\n            var isRowBaseField = axis === 'row' ? true : false;\n            var activeValues = void 0;\n            var indexCollection = [];\n            var activeColumn = [];\n            var columnHeaders = [];\n            var rowindexCollection = [];\n            var selectedRowValues = [];\n            var selectedColumnValues = [];\n            if ((['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal', 'RunningTotals']).indexOf(headers.type) !== -1) {\n                if (isRowBaseField) {\n                    if (headers.type !== 'RunningTotals') {\n                        for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                            if (rowheads[rln] !== undefined) {\n                                if (rowheads[rln].valueSort[uniqueName]) {\n                                    activeValues = rowheads[rln];\n                                    selectedRowValues = data[rln + valueCount];\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    for (var len_6 = data.length, i = 0; i < len_6; i++) {\n                        if (data[i] !== undefined && data[i][0] === undefined) {\n                            columnHeaders.push(data[i]);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    var len = columnHeaders.length;\n                    while (len--) {\n                        var axisObj = columnHeaders[len][colIndex[0]];\n                        var cLevelName = axisObj.actualText;\n                        if (this.selectedHeaders.values.indexOf(cLevelName) === -1) {\n                            activeColumn = columnHeaders[len];\n                            len = 0;\n                        }\n                    }\n                    if (headers.type !== 'RunningTotals') {\n                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                            var isSelectedColumn = false;\n                            if (activeColumn[cln] !== undefined && activeColumn[cln].valueSort[uniqueName]) {\n                                activeValues = activeColumn[cln];\n                                for (var len_7 = data.length, i = 0; i < len_7; i++) {\n                                    var axisObj = data[i];\n                                    if (axisObj !== undefined && axisObj[0] !== undefined &&\n                                        axisObj[cln].axis === 'value' &&\n                                        this.selectedHeaders.values.indexOf(axisObj[cln].actualText) !== -1) {\n                                        isSelectedColumn = true;\n                                        selectedColumnValues[i] = axisObj[cln];\n                                        rowindexCollection.push(i);\n                                    }\n                                }\n                                if (isSelectedColumn) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            switch (headers.type) {\n                case 'DifferenceFrom':\n                case 'PercentageOfDifferenceFrom':\n                    {\n                        var isChildren = headers.isChild;\n                        if (isRowBaseField) {\n                            if (!isChildren) {\n                                for (var _a = 0, selectedHeaderCollection_1 = selectedHeaderCollection; _a < selectedHeaderCollection_1.length; _a++) {\n                                    var item = selectedHeaderCollection_1[_a];\n                                    for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                        if (rowheads[rln] !== undefined) {\n                                            if (rowheads[rln].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rln].level === activeValues.level && rowheads[rln].type !== 'grand sum') {\n                                                for (var _b = 0, colIndex_2 = colIndex; _b < colIndex_2.length; _b++) {\n                                                    var index = colIndex_2[_b];\n                                                    var currentSet = data[rln + valueCount][index];\n                                                    if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                        indexCollection.push([rln + valueCount, index]);\n                                                        if (pivotIndex[rln + valueCount + ',' + index]) {\n                                                            delete pivotIndex[rln + valueCount + ',' + index];\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split('.');\n                                for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                    if (rowheads[rlen] !== undefined) {\n                                        var levelName = rowheads[rlen].valueSort.levelName.toString().split('.');\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            rowheads[rlen].level === activeValues.level) {\n                                            for (var _c = 0, colIndex_3 = colIndex; _c < colIndex_3.length; _c++) {\n                                                var index = colIndex_3[_c];\n                                                var currentSet = data[rlen + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([rlen + valueCount, index]);\n                                                    if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                        delete pivotIndex[rlen + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _d = 0, indexCollection_2 = indexCollection; _d < indexCollection_2.length; _d++) {\n                                var index = indexCollection_2[_d];\n                                var currentSet = data[index[0]][index[1]];\n                                var cVal = currentSet.value - selectedRowValues[index[1]].value;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                }\n                                else {\n                                    cVal = (selectedRowValues[index[1]].value === 0 ?\n                                        0 : (cVal / selectedRowValues[index[1]].value));\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isChildren) {\n                                for (var _e = 0, selectedHeaderCollection_2 = selectedHeaderCollection; _e < selectedHeaderCollection_2.length; _e++) {\n                                    var item = selectedHeaderCollection_2[_e];\n                                    for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                        var isSelectedColumn = false;\n                                        if (activeColumn[cln] !== undefined &&\n                                            activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                            activeColumn[cln].level === activeValues.level && activeColumn[cln].type !== 'grand sum') {\n                                            for (var _f = 0, rowindexCollection_1 = rowindexCollection; _f < rowindexCollection_1.length; _f++) {\n                                                var index = rowindexCollection_1[_f];\n                                                var currentSet = data[index][cln];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, cln]);\n                                                    if (pivotIndex[index + ',' + cln]) {\n                                                        delete pivotIndex[index + ',' + cln];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                var uniqueLevelName = uniqueName.split('.');\n                                for (var clt = activeColumn.length, clen = 0; clen < clt; clen++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[clen] !== undefined) {\n                                        var levelName = activeColumn[clen].valueSort.levelName.toString().split('.');\n                                        if (levelName.indexOf(uniqueLevelName[uniqueLevelName.length - 1]) !== -1 &&\n                                            activeColumn[clen].level === activeValues.level) {\n                                            for (var _g = 0, rowindexCollection_2 = rowindexCollection; _g < rowindexCollection_2.length; _g++) {\n                                                var index = rowindexCollection_2[_g];\n                                                var currentSet = data[index][clen];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    isSelectedColumn = true;\n                                                    indexCollection.push([index, clen]);\n                                                    if (pivotIndex[index + ',' + clen]) {\n                                                        delete pivotIndex[index + ',' + clen];\n                                                    }\n                                                }\n                                            }\n                                            if (isSelectedColumn) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _h = 0, indexCollection_3 = indexCollection; _h < indexCollection_3.length; _h++) {\n                                var index = indexCollection_3[_h];\n                                var currentSet = data[index[0]][index[1]];\n                                var cVal = currentSet.value - selectedColumnValues[index[0]].value;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                if (!this.aggregatedValueMatrix[index[0]]) {\n                                    this.aggregatedValueMatrix[index[0]] = [];\n                                }\n                                if (aggregateType === 'DifferenceFrom') {\n                                    currentSet.formattedText = cVal === 0 ? this.emptyCellTextContent : this.getFormattedValue(cVal, name_2).formattedText;\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                                else {\n                                    cVal = (selectedColumnValues[index[0]].value === 0 ?\n                                        0 : (cVal / selectedColumnValues[index[0]].value));\n                                    currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                    this.aggregatedValueMatrix[index[0]][index[1]] = cVal;\n                                }\n                            }\n                        }\n                        if (headers.childMembers.length > 0) {\n                            this.updateAggregates(rowheads, colheads, data, headers.childMembers, colIndex, pivotIndex);\n                        }\n                    }\n                    break;\n                case 'PercentageOfParentRowTotal':\n                case 'PercentageOfParentColumnTotal':\n                case 'PercentageOfParentTotal':\n                    {\n                        if (isRowBaseField) {\n                            for (var _j = 0, selectedHeaderCollection_3 = selectedHeaderCollection; _j < selectedHeaderCollection_3.length; _j++) {\n                                var item = selectedHeaderCollection_3[_j];\n                                for (var rlt = rowheads.length, i = 0; i < rlt; i++) {\n                                    if (rowheads[i] !== undefined) {\n                                        if (rowheads[i].valueSort[item.valueSort.levelName] &&\n                                            rowheads[i].level === item.level) {\n                                            for (var _k = 0, colIndex_4 = colIndex; _k < colIndex_4.length; _k++) {\n                                                var index = colIndex_4[_k];\n                                                var currentSet = data[i + valueCount][index];\n                                                if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                    indexCollection.push([i + valueCount, index]);\n                                                    if (pivotIndex[i + valueCount + ',' + index]) {\n                                                        delete pivotIndex[i + valueCount + ',' + index];\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _l = 0, indexCollection_4 = indexCollection; _l < indexCollection_4.length; _l++) {\n                                var i = indexCollection_4[_l];\n                                var currentSet = data[i[0]][i[1]];\n                                var cVal = currentSet.value / selectedRowValues[i[1]].value;\n                                cVal = isNaN(cVal) ? 0 : cVal;\n                                currentSet.formattedText = (cVal !== 0 ? this.globalize.formatNumber(cVal, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = cVal;\n                            }\n                        }\n                        else {\n                            for (var _m = 0, selectedHeaderCollection_4 = selectedHeaderCollection; _m < selectedHeaderCollection_4.length; _m++) {\n                                var item = selectedHeaderCollection_4[_m];\n                                for (var clt = activeColumn.length, j = 0; j < clt; j++) {\n                                    var isSelectedColumn = false;\n                                    if (activeColumn[j] !== undefined &&\n                                        activeColumn[j].valueSort[item.valueSort.levelName]) {\n                                        for (var _o = 0, rowindexCollection_3 = rowindexCollection; _o < rowindexCollection_3.length; _o++) {\n                                            var index = rowindexCollection_3[_o];\n                                            var currentSet = data[index][j];\n                                            if (currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                isSelectedColumn = true;\n                                                indexCollection.push([index, j]);\n                                                if (pivotIndex[index + ',' + j]) {\n                                                    delete pivotIndex[index + ',' + j];\n                                                }\n                                            }\n                                        }\n                                        if (isSelectedColumn) {\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            for (var _p = 0, indexCollection_5 = indexCollection; _p < indexCollection_5.length; _p++) {\n                                var i = indexCollection_5[_p];\n                                var currentSet = data[i[0]][i[1]];\n                                var val = currentSet.value / selectedColumnValues[i[0]].value;\n                                val = isNaN(val) ? 0 : val;\n                                currentSet.formattedText = (val !== 0 ? this.globalize.formatNumber(val, { format: 'P', maximumFractionDigits: 2 }) : this.emptyCellTextContent);\n                                if (!this.aggregatedValueMatrix[i[0]]) {\n                                    this.aggregatedValueMatrix[i[0]] = [];\n                                }\n                                this.aggregatedValueMatrix[i[0]][i[1]] = val;\n                            }\n                        }\n                    }\n                    break;\n                case 'RunningTotals':\n                    {\n                        if (isRowBaseField) {\n                            for (var _q = 0, colIndex_5 = colIndex; _q < colIndex_5.length; _q++) {\n                                var index = colIndex_5[_q];\n                                var cVal = 0;\n                                for (var _r = 0, selectedHeaderCollection_5 = selectedHeaderCollection; _r < selectedHeaderCollection_5.length; _r++) {\n                                    var item = selectedHeaderCollection_5[_r];\n                                    for (var rlt = rowheads.length, rlen = 0; rlen < rlt; rlen++) {\n                                        if (rowheads[rlen] !== undefined) {\n                                            var currentSet = data[rlen + valueCount][index];\n                                            if (rowheads[rlen] !== undefined && rowheads[rlen].valueSort[item.valueSort.levelName] &&\n                                                rowheads[rlen].level === item.level && currentSet.axis === 'value' &&\n                                                currentSet.actualText === name_2) {\n                                                if (rowheads[rlen].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rlen + valueCount]) {\n                                                        this.aggregatedValueMatrix[rlen + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rlen + valueCount][index] = cVal;\n                                                }\n                                                if (pivotIndex[rlen + valueCount + ',' + index]) {\n                                                    delete pivotIndex[rlen + valueCount + ',' + index];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            for (var rlt = rowheads.length, rln = 0; rln < rlt; rln++) {\n                                if (rowheads[rln] !== undefined) {\n                                    var cVal = 0;\n                                    for (var _s = 0, selectedHeaderCollection_6 = selectedHeaderCollection; _s < selectedHeaderCollection_6.length; _s++) {\n                                        var item = selectedHeaderCollection_6[_s];\n                                        for (var clt = activeColumn.length, cln = 0; cln < clt; cln++) {\n                                            var currentSet = data[rln + valueCount][cln];\n                                            if (activeColumn[cln] !== undefined &&\n                                                activeColumn[cln].valueSort[item.valueSort.levelName] &&\n                                                currentSet.axis === 'value' && currentSet.actualText === name_2) {\n                                                if (activeColumn[cln].type !== 'grand sum') {\n                                                    cVal += currentSet.value;\n                                                    currentSet.formattedText = this.getFormattedValue(cVal, name_2).formattedText;\n                                                    if (!this.aggregatedValueMatrix[rln + valueCount]) {\n                                                        this.aggregatedValueMatrix[rln + valueCount] = [];\n                                                    }\n                                                    this.aggregatedValueMatrix[rln + valueCount][cln] = cVal;\n                                                }\n                                                if (pivotIndex[rln + valueCount + ',' + cln]) {\n                                                    delete pivotIndex[rln + valueCount + ',' + cln];\n                                                }\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /* tslint:enable:all */\n    PivotEngine.prototype.recursiveRowData = function (rows, reformAxis, columns, tnum, data, vlt, isLeastNode, rln, vln, rTotal, cTotal) {\n        if (!isLeastNode) {\n            this.getTableData(reformAxis[tnum - vln].members, reformAxis, columns, tnum, data, vlt, rTotal, cTotal);\n        }\n        if (!this.pageSettings) {\n            reformAxis[tnum - vln].members = [];\n        }\n    };\n    PivotEngine.prototype.updateRowData = function (rows, columns, tnum, data, vln, rln, cln, dln, actCnt, rTotal, cTotal) {\n        var mPos = this.fieldList[this.values[vln].name].index;\n        var aggregate = this.fieldList[this.values[vln].name].aggregateType;\n        var field = this.values[vln].name;\n        var gTotalIndex = [];\n        var totalValues = {};\n        var value = 0;\n        // let isLeast: boolean = isLeastNode && (vln === vlt - 1);\n        switch (aggregate) {\n            case 'Index':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]], [rows[rln], cTotal], [rTotal, columns[cln]], [rTotal, cTotal]];\n                    var valueContent = ['cVal', 'rTotalVal', 'cTotalVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _i = 0, gTotalIndex_1 = gTotalIndex; _i < gTotalIndex_1.length; _i++) {\n                        var rIndex = gTotalIndex_1[_i];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val = ((totalValues.cVal) * (totalValues.gTotalVal)) / ((totalValues.rTotalVal) * (totalValues.cTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showRowSubTotals || !this.showSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val) ? 0 : val));\n                }\n                break;\n            case 'PercentageOfGrandTotal':\n            case 'PercentageOfColumnTotal':\n            case 'PercentageOfRowTotal':\n                {\n                    gTotalIndex = [[rows[rln], columns[cln]]];\n                    gTotalIndex.push((aggregate === 'PercentageOfGrandTotal' ?\n                        [rTotal, cTotal] : (aggregate === 'PercentageOfColumnTotal' ? [rTotal, columns[cln]] : [rows[rln], cTotal])));\n                    var valueContent = ['cVal', 'gTotalVal'];\n                    var i = 0;\n                    for (var _a = 0, gTotalIndex_2 = gTotalIndex; _a < gTotalIndex_2.length; _a++) {\n                        var rIndex = gTotalIndex_2[_a];\n                        totalValues[valueContent[i]] = this.getAggregateValue((rIndex[0]).index, (rIndex[1]).indexObject, mPos, aggregate);\n                        i++;\n                    }\n                    var val = ((totalValues.cVal) / (totalValues.gTotalVal));\n                    value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                        !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                        (isNullOrUndefined(totalValues.cVal) ? totalValues.cVal : (isNaN(val) ? 0 : val));\n                }\n                break;\n            default:\n                value = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) && !rows[rln].showSubTotals) ||\n                    !this.showSubTotals || !this.showRowSubTotals)) ? undefined :\n                    this.getAggregateValue(rows[rln].index, columns[cln].indexObject, mPos, aggregate);\n                break;\n        }\n        var cellDetails = {\n            fieldName: this.values[vln].name,\n            row: rows[rln],\n            column: columns[cln],\n            value: value,\n            cellSets: this.getCellSet(this.rawIndexObject),\n            /* tslint:disable-next-line:max-line-length */\n            rowCellType: (rows[rln].hasChild && rows[rln].isDrilled ? 'subTotal' : rows[rln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            /* tslint:disable-next-line:max-line-length */\n            columnCellType: (columns[cln].hasChild && columns[cln].isDrilled ? 'subTotal' : columns[cln].type === 'grand sum' ? 'grandTotal' : 'value'),\n            aggregateType: aggregate,\n            skipFormatting: false\n        };\n        if (this.getValueCellInfo) {\n            this.getValueCellInfo(cellDetails);\n        }\n        value = cellDetails.value;\n        var isSum = rows[rln].hasChild || columns[cln].hasChild ||\n            rows[rln].type === 'grand sum' || columns[cln].type === 'grand sum';\n        var subTotal = (rows[rln].members.length > 0 && ((!isNullOrUndefined(rows[rln].showSubTotals) &&\n            !rows[rln].showSubTotals) || !this.showSubTotals || !this.showRowSubTotals));\n        var formattedText = subTotal ?\n            '' : (value === undefined) ? this.emptyCellTextContent :\n            aggregate === 'Count' ? value.toLocaleString() : this.getFormattedValue(value, field).formattedText;\n        if (!isNaN(value) && !isNullOrUndefined(value) &&\n            (['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal']).indexOf(aggregate) >= 0) {\n            formattedText = this.globalize.formatNumber(value, { format: 'P', maximumFractionDigits: 2 });\n        }\n        else if (!subTotal &&\n            isNaN(value) && !isNullOrUndefined(value) &&\n            (['PopulationStDev', 'SampleStDev', 'PopulationVar', 'SampleVar']).indexOf(aggregate) !== -1) {\n            formattedText = '#DIV/0!';\n        }\n        //dln = data[tnum].length;\n        /* tslint:disable-next-line:max-line-length */\n        formattedText = (cellDetails.skipFormatting ? isNullOrUndefined(value) ? this.emptyCellTextContent : value.toString() : formattedText);\n        data[tnum][dln] = this.valueContent[actCnt][dln] = {\n            axis: 'value', actualText: field, indexObject: this.isDrillThrough ? this.rawIndexObject : {},\n            rowHeaders: rows[rln].type === 'grand sum' ? '' : rows[rln].valueSort.levelName,\n            columnHeaders: columns[cln].type === 'grand sum' ? '' : columns[cln].valueSort.levelName,\n            formattedText: formattedText, value: isNullOrUndefined(value) ? 0 : value, rowIndex: tnum, colIndex: dln, isSum: isSum\n        };\n        this.rawIndexObject = {};\n    };\n    PivotEngine.prototype.getCellSet = function (rawIndexObject) {\n        var currentCellSets = [];\n        var keys = Object.keys(rawIndexObject);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var index = keys_3[_i];\n            if (this.data[parseInt(index, 10)]) {\n                currentCellSets.push(this.data[parseInt(index, 10)]);\n            }\n        }\n        return currentCellSets;\n    };\n    PivotEngine.prototype.getHeaderData = function (axis, reformAxis, data, tnum, vcnt) {\n        var rlt = axis.length;\n        var colItmLn = this.columns.length;\n        var sortText = this.valueSortSettings.headerText;\n        //let valueLn: number = this.values.length;\n        for (var rln = 0; rln < rlt; rln++) {\n            if (axis[rln].members.length) {\n                this.getHeaderData(axis[rln].members, reformAxis, data, tnum, vcnt);\n            }\n            var isTotalHide = true;\n            if ((!isNullOrUndefined(axis[rln].showSubTotals) && !axis[rln].showSubTotals) ||\n                !this.showSubTotals || !this.showColumnSubTotals) {\n                if (!(axis[rln].members.length > 0)) {\n                    reformAxis[reformAxis.length] = this.frameHeaderWithKeys(axis[rln]);\n                }\n                else {\n                    this.removeCount++;\n                    isTotalHide = false;\n                }\n                tnum = reformAxis.length - 1;\n            }\n            else {\n                tnum = reformAxis.length;\n                reformAxis[tnum] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            //  let rplus: number = rln + 1;\n            var lvl = axis[rln].level;\n            axis[rln].rowIndex = lvl;\n            axis[rln].colIndex = (tnum * vcnt) + vcnt;\n            if (!data[lvl]) {\n                data[lvl] = [];\n                this.headerContent[lvl] = {};\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            else {\n                data[lvl][(tnum * vcnt) + vcnt] = this.headerContent[lvl][(tnum * vcnt) + vcnt] = this.frameHeaderWithKeys(axis[rln]);\n            }\n            var isSingleMeasure = (this.columns.length === 0 && this.values.length === 1) ? true : false;\n            if ((this.isMutiMeasures || this.alwaysShowValueHeader || isSingleMeasure) && !this.valueAxis && isTotalHide) {\n                for (var vln = 0; vln < vcnt; vln++) {\n                    var name_3 = this.values[vln].caption ? this.values[vln].caption : this.values[vln].name;\n                    var calObj = {\n                        axis: 'column',\n                        actualText: this.values[vln].name,\n                        formattedText: name_3,\n                        level: 0,\n                        valueSort: {},\n                        colIndex: (tnum * vcnt) + 1 + vln,\n                        rowIndex: colItmLn\n                    };\n                    if (!data[colItmLn]) {\n                        data[colItmLn] = [];\n                        this.headerContent[colItmLn] = {};\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    else {\n                        data[colItmLn][(tnum * vcnt) + 1 + vln] = this.headerContent[colItmLn][(tnum * vcnt) + 1 + vln] = calObj;\n                    }\n                    var vData = data[colItmLn][(tnum * vcnt) + 1 + vln].valueSort;\n                    vData[axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3] = 1;\n                    vData.levelName = axis[rln].valueSort.levelName + this.valueSortSettings.headerDelimiter + name_3;\n                    if (vData && vData[sortText]) {\n                        this.valueSortSettings.columnIndex = (tnum * vcnt) + 1 + vln;\n                    }\n                }\n            }\n            else if (axis[rln].valueSort && axis[rln].valueSort[sortText]) {\n                this.valueSortSettings.columnIndex = (tnum * vcnt) + 1;\n            }\n            if (!this.pageSettings) {\n                reformAxis[tnum].members = [];\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotEngine.prototype.getAggregateValue = function (rowIndex, columnIndex, value, type) {\n        //rowIndex = rowIndex.sort();\n        //columnIndex = columnIndex.sort();\n        var rlt = rowIndex.length;\n        //let clt: number = columnIndex.length;\n        var mirror = {};\n        var ri = 0;\n        var ci = 0;\n        var cellValue = 0;\n        var avgCnt = 0;\n        var isInit = true;\n        var isValueExist = false;\n        if (type && type.toLowerCase() === 'count') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    cellValue += (isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value]) ?\n                        0 : (this.allowDataCompression ? this.valueMatrix[rowIndex[ri]][value] : 1));\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'distinctcount') {\n            var duplicateValues = [];\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        if (duplicateValues.length === 0 || (duplicateValues.length > 0 && duplicateValues.indexOf(currentVal) === -1)) {\n                            cellValue += this.allowDataCompression ? currentVal : 1;\n                            duplicateValues.push(currentVal);\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'product') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    isValueExist = true;\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        cellValue = ((isInit || isNullOrUndefined(cellValue)) ? 1 : cellValue);\n                        cellValue *= currentVal;\n                    }\n                    else if (isInit) {\n                        cellValue = currentVal;\n                    }\n                    isInit = false;\n                }\n                ri++;\n            }\n        }\n        else if (type && (['populationstdev', 'samplestdev', 'populationvar', 'samplevar']).indexOf(type.toLowerCase()) !== -1) {\n            var i = 0;\n            var val = 0;\n            var indexVal = [];\n            var avgVal = 0;\n            var cVal = 0;\n            var avgDifferenceVal = 0;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (!isNullOrUndefined(currentVal)) {\n                        val += currentVal;\n                        indexVal.push(currentVal);\n                        i++;\n                    }\n                }\n                ri++;\n            }\n            if (i > 0) {\n                avgVal = val / i;\n                for (var _i = 0, indexVal_1 = indexVal; _i < indexVal_1.length; _i++) {\n                    var index = indexVal_1[_i];\n                    avgDifferenceVal += Math.pow((index - avgVal), 2);\n                }\n                if ((['populationstdev', 'samplestdev']).indexOf(type.toLowerCase()) !== -1) {\n                    cVal = Math.sqrt(avgDifferenceVal / (type.toLowerCase() === 'populationstdev' ? i : (i - 1)));\n                }\n                else {\n                    cVal = avgDifferenceVal / (type.toLowerCase() === 'populationvar' ? i : (i - 1));\n                }\n                cellValue = (cVal === 0 ? NaN : cVal);\n            }\n            else {\n                cellValue = val;\n            }\n        }\n        else if (type && type.toLowerCase() === 'min') {\n            var isFirst = true;\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(this.valueMatrix[rowIndex[ri]][value])) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                    }\n                    else {\n                        if (isFirst) {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value];\n                            isFirst = false;\n                        }\n                        else {\n                            cellValue = this.valueMatrix[rowIndex[ri]][value] < cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                        }\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'max') {\n            var isMaxFirst = true;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined && this.valueMatrix[rowIndex[ri]][value] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    if (isMaxFirst) {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value];\n                        isMaxFirst = false;\n                    }\n                    else {\n                        cellValue = this.valueMatrix[rowIndex[ri]][value] > cellValue ? this.valueMatrix[rowIndex[ri]][value] : cellValue;\n                    }\n                }\n                ri++;\n            }\n        }\n        else if (type && type.toLowerCase() === 'calculatedfield') {\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    var calcField = this.calculatedFields[this.fields[value]];\n                    var actualFormula = calcField.formula;\n                    var aggregateField = {};\n                    if (this.calculatedFormulas[calcField.name]) {\n                        var calculatedFormulas = this.calculatedFormulas[calcField.name];\n                        for (var len = 0, lmt = calculatedFormulas.length; len < lmt; len++) {\n                            var aggregatedValue = calculatedFormulas[len];\n                            var value_1 = aggregateField[aggregatedValue.formula];\n                            if (value_1 === undefined) {\n                                var type_1 = aggregatedValue.type;\n                                value_1 = this.getAggregateValue(rowIndex, columnIndex, aggregatedValue.index, type_1);\n                                aggregateField[aggregatedValue.formula] = value_1;\n                            }\n                            actualFormula = (actualFormula).replace(aggregatedValue.formula, String(value_1));\n                        }\n                    }\n                    /* tslint:disable */\n                    cellValue = this.evaluate(actualFormula);\n                    (cellValue === Infinity ? Infinity : (cellValue === undefined || isNaN(cellValue)) ? undefined : JSON.parse(String(cellValue)));\n                    /* tslint:enable */\n                }\n                ri++;\n            }\n        }\n        else {\n            cellValue = undefined;\n            while (rowIndex[ri] !== undefined) {\n                if (columnIndex[rowIndex[ri]] !== undefined) {\n                    isValueExist = true;\n                    this.rawIndexObject[rowIndex[ri]] = rowIndex[ri];\n                    //let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                    var currentVal = this.valueMatrix[rowIndex[ri]][value];\n                    if (isNullOrUndefined(cellValue) && isNullOrUndefined(currentVal)) {\n                        cellValue = currentVal;\n                    }\n                    else {\n                        if (isNullOrUndefined(cellValue)) {\n                            cellValue = 0;\n                        }\n                        cellValue += (isNullOrUndefined(currentVal) ? 0 : currentVal);\n                    }\n                    if (!isNullOrUndefined(currentVal)) {\n                        avgCnt++;\n                    }\n                }\n                ri++;\n            }\n        }\n        /* if (rlt > clt) {\n             this.makeMirrorObject(rowIndex, mirror);\n             while (columnIndex[ci] !== undefined) {\n                 if (mirror[columnIndex[ci]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(ci, 1)[0] : columnIndex[ci];\n                     //rowIndex.splice\n                     sum += this.valueMatrix[cIndx][value];\n                 }\n                 ci++;\n             }\n         } else {\n             this.makeMirrorObject(columnIndex, mirror);\n             while (rowIndex[ri] !== undefined) {\n                 if (mirror[rowIndex[ri]]) {\n                     let cIndx: number = isLeastLevel ? columnIndex.splice(columnIndex.indexOf(rowIndex[ri]), 1)[0] : rowIndex[ri];\n                     sum += this.valueMatrix[rowIndex[ri]][value];\n                 }\n                 ri++;\n             }\n         } */\n        return ((type && type.toLowerCase() === 'avg' && cellValue !== 0 &&\n            !isNullOrUndefined(cellValue)) ? (cellValue / avgCnt) : isValueExist ? cellValue : undefined);\n    };\n    PivotEngine.prototype.evaluate = function (obj) {\n        return Function('\"use strict\";return (' + obj + ')')();\n    };\n    ;\n    /* tslint:enable */\n    /** hidden */\n    PivotEngine.prototype.getFormattedValue = function (value, fieldName) {\n        var commonValue = value === null ? (this.localeObj ? this.localeObj.getConstant('null') :\n            String(value)) : value === undefined ?\n            (this.localeObj ? (fieldName in this.groupingFields) ? this.localeObj.getConstant('groupOutOfRange') :\n                this.localeObj.getConstant('undefined') : String(value)) : value;\n        var formattedValue = {\n            formattedText: commonValue.toString(),\n            actualText: commonValue,\n            dateText: commonValue\n        };\n        if (this.formatFields[fieldName] && value) {\n            try {\n                var formatField = (this.formatFields[fieldName].properties ?\n                    this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n                var formatSetting = extend({}, formatField, null, true);\n                delete formatSetting.name;\n                if (!formatSetting.minimumSignificantDigits && formatSetting.minimumSignificantDigits < 1) {\n                    delete formatSetting.minimumSignificantDigits;\n                }\n                if (!formatSetting.maximumSignificantDigits && formatSetting.maximumSignificantDigits < 1) {\n                    delete formatSetting.maximumSignificantDigits;\n                }\n                if (formatSetting.type) {\n                    formattedValue.formattedText = this.dateFormatFunction[fieldName].exactFormat(new Date(value));\n                }\n                else {\n                    delete formatSetting.type;\n                    if ((formatSetting.format) && !(this.formatRegex.test(formatSetting.format))) {\n                        var pattern = formatSetting.format.match(this.customRegex);\n                        var integerPart = pattern[6];\n                        formatSetting.useGrouping = integerPart.indexOf(',') !== -1;\n                    }\n                    formattedValue.formattedText = this.globalize.formatNumber(value, formatSetting);\n                }\n                formattedValue.actualText = value;\n                if (this.fieldList[fieldName].sort !== 'None' && formatSetting.type &&\n                    ['date', 'dateTime', 'time'].indexOf(this.formatFields[fieldName].type) > -1) {\n                    formattedValue.dateText = this.dateFormatFunction[fieldName].fullFormat(new Date(value));\n                }\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText = formattedValue.formattedText === 'NaN' ?\n                        commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = formattedValue.dateText === 'NaN' ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n            catch (exception) {\n                if (!this.fieldList[fieldName].isCustomField) {\n                    throw exception;\n                }\n            }\n            finally {\n                if (this.fieldList[fieldName].isCustomField) {\n                    formattedValue.formattedText =\n                        (isNullOrUndefined(formattedValue.formattedText) || formattedValue.formattedText === 'NaN') ?\n                            commonValue.toString() : formattedValue.formattedText;\n                    formattedValue.dateText = (isNullOrUndefined(formattedValue.dateText) || formattedValue.dateText === 'NaN') ?\n                        commonValue.toString() : formattedValue.dateText;\n                }\n            }\n        }\n        return formattedValue;\n    };\n    PivotEngine.prototype.powerFunction = function (formula) {\n        if (formula.indexOf('^') > -1) {\n            var items_1 = [];\n            while (formula.indexOf('(') > -1) {\n                formula = formula.replace(/(\\([^\\(\\)]*\\))/g, function (text, item) {\n                    items_1.push(item);\n                    return ('~' + (items_1.length - 1));\n                });\n            }\n            items_1.push(formula);\n            formula = '~' + (items_1.length - 1);\n            while (formula.indexOf('~') > -1) {\n                formula = formula.replace(new RegExp('~' + '(\\\\d+)', 'g'), function (text, index) {\n                    return items_1[index].replace(/(\\w*)\\^(\\w*)/g, 'Math.pow' + '($1,$2)');\n                });\n            }\n        }\n        return formula;\n    };\n    return PivotEngine;\n}());\nexport { PivotEngine };\n","/**\n * Specifies pivot external events\n * @hidden\n */\n/** @hidden */\nexport var load = 'load';\n/** @hidden */\nexport var enginePopulating = 'enginePopulating';\n/** @hidden */\nexport var enginePopulated = 'enginePopulated';\n/** @hidden */\nexport var onFieldDropped = 'onFieldDropped';\n/** @hidden */\nexport var beforePivotTableRender = 'beforePivotTableRender';\n/** @hidden */\nexport var afterPivotTableRender = 'afterPivotTableRender';\n/** @hidden */\nexport var beforeExport = 'beforeExport';\n/** @hidden */\nexport var excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nexport var pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nexport var excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nexport var pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nexport var onPdfCellRender = 'onPdfCellRender';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var headerCellInfo = 'headerCellInfo';\n/** @hidden */\nexport var hyperlinkCellClick = 'hyperlinkCellClick';\n/** @hidden */\nexport var resizing = 'resizing';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var cellClick = 'cellClick';\n/** @hidden */\nexport var drillThrough = 'drillThrough';\n/** @hidden */\nexport var beforeColumnsRender = 'beforeColumnsRender';\n/** @hidden */\nexport var selected = 'selected';\n/** @hidden */\nexport var cellSelecting = 'cellSelecting';\n/** @hidden */\nexport var drill = 'drill';\n/** @hidden */\nexport var cellSelected = 'cellSelected';\n/** @hidden */\nexport var cellDeselected = 'cellDeselected';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var beginDrillThrough = 'beginDrillThrough';\n/** @hidden */\nexport var saveReport = 'saveReport';\n/** @hidden */\nexport var fetchReport = 'fetchReport';\n/** @hidden */\nexport var loadReport = 'loadReport';\n/** @hidden */\nexport var renameReport = 'renameReport';\n/** @hidden */\nexport var removeReport = 'removeReport';\n/** @hidden */\nexport var newReport = 'newReport';\n/** @hidden */\nexport var toolbarRender = 'toolbarRender';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var chartTooltipRender = 'chartTooltipRender';\n/** @hidden */\nexport var chartLoaded = 'chartLoaded';\n/** @hidden */\nexport var chartLoad = 'chartLoad';\n/** @hidden */\nexport var chartResized = 'chartResized';\n/** @hidden */\nexport var chartAxisLabelRender = 'chartAxisLabelRender';\n/** @hidden */\nexport var chartSeriesCreated = 'chartSeriesCreated';\n/** @hidden */\nexport var aggregateCellInfo = 'aggregateCellInfo';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var fieldListRefreshed = 'fieldListRefreshed';\n/** @hidden */\nexport var conditionalFormatting = 'conditionalFormatting';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var memberFiltering = 'memberFiltering';\n/**\n * Specifies pivot internal events\n */\n/** @hidden */\nexport var initialLoad = 'initial-load';\n/** @hidden */\nexport var uiUpdate = 'ui-update';\n/** @hidden */\nexport var scroll = 'scroll';\n/** @hidden */\nexport var contentReady = 'content-ready';\n/** @hidden */\nexport var dataReady = 'data-ready';\n/** @hidden */\nexport var initSubComponent = 'init-groupingbar';\n/** @hidden */\nexport var treeViewUpdate = 'tree-view-update';\n/** @hidden */\nexport var pivotButtonUpdate = 'pivot-button-update';\n/** @hidden */\nexport var initCalculatedField = 'init-calculatedfield';\n/** @hidden */\nexport var click = 'click';\n/** @hidden */\nexport var initToolbar = 'init-toolbar';\n/** @hidden */\nexport var initFormatting = 'init-formatting';\n/** @hidden */\nexport var initGrouping = 'init-grouping';\n","/**\n * CSS Constants\n * @hidden\n */\n/** @hidden */\nexport var ROOT = 'e-pivotfieldlist';\n/** @hidden */\nexport var RTL = 'e-rtl';\n/** @hidden */\nexport var PIVOTCHART_LTR = 'e-ltr';\n/** @hidden */\nexport var DEVICE = 'e-device';\n/** @hidden */\nexport var ICON = 'e-icons';\n/** @hidden */\nexport var ICON_DISABLE = 'e-disable';\n/** @hidden */\nexport var ICON_HIDDEN = 'e-hide';\n/** @hidden */\nexport var AXISFIELD_ICON_CLASS = 'e-dropdown-icon';\n/** @hidden */\nexport var WRAPPER_CLASS = 'e-pivotfieldlist-wrapper';\n/** @hidden */\nexport var OLAP_WRAPPER_CLASS = 'e-olapfieldlist-wrapper';\n/** @hidden */\nexport var CONTAINER_CLASS = 'e-field-list-container';\n/** @hidden */\nexport var TOGGLE_FIELD_LIST_CLASS = 'e-toggle-field-list';\n/** @hidden */\nexport var STATIC_FIELD_LIST_CLASS = 'e-static';\n/** @hidden */\nexport var TOGGLE_SELECT_CLASS = 'e-select-table';\n/** @hidden */\nexport var FIELD_TABLE_CLASS = 'e-field-table';\n/** @hidden */\nexport var OLAP_FIELD_TABLE_CLASS = 'e-olap-field-table';\n/** @hidden */\nexport var FIELD_LIST_CLASS = 'e-field-list';\n/** @hidden */\nexport var OLAP_FIELD_LIST_CLASS = 'e-olap-field-list-tree';\n/** @hidden */\nexport var FIELD_LIST_TREE_CLASS = 'e-field-list-tree';\n/** @hidden */\nexport var FIELD_HEADER_CLASS = 'e-field-header';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CLASS = 'e-field-list-title';\n/** @hidden */\nexport var FIELD_LIST_TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var FIELD_LIST_FOOTER_CLASS = 'e-field-list-footer';\n/** @hidden */\nexport var CALCULATED_FIELD_CLASS = 'e-calculated-field';\n/** @hidden */\nexport var FLAT_CLASS = 'e-flat e-primary';\n/** @hidden */\nexport var OUTLINE_CLASS = 'e-outline';\n/** @hidden */\nexport var AXIS_TABLE_CLASS = 'e-axis-table';\n/** @hidden */\nexport var OLAP_AXIS_TABLE_CLASS = 'e-olap-axis-table';\n/** @hidden */\nexport var LEFT_AXIS_PANEL_CLASS = 'e-left-axis-fields';\n/** @hidden */\nexport var RIGHT_AXIS_PANEL_CLASS = 'e-right-axis-fields';\n/** @hidden */\nexport var AXIS_HEADER_CLASS = 'e-axis-header';\n/** @hidden */\nexport var AXIS_CONTENT_CLASS = 'e-axis-content';\n/** @hidden */\nexport var AXIS_PROMPT_CLASS = 'e-draggable-prompt';\n/** @hidden */\nexport var PIVOT_BUTTON_WRAPPER_CLASS = 'e-pvt-btn-div';\n/** @hidden */\nexport var PIVOT_BUTTON_CLASS = 'e-pivot-button';\n/** @hidden */\nexport var PIVOT_BUTTON_CONTENT_CLASS = 'e-content';\n/** @hidden */\nexport var DRAG_CLONE_CLASS = 'e-button-drag-clone';\n/** @hidden */\nexport var SORT_CLASS = 'e-sort';\n/** @hidden */\nexport var SORT_DESCEND_CLASS = 'e-descend';\n/** @hidden */\nexport var FILTER_COMMON_CLASS = 'e-btn-filter';\n/** @hidden */\nexport var FILTER_CLASS = 'e-pv-filter';\n/** @hidden */\nexport var FILTERED_CLASS = 'e-pv-filtered';\n/** @hidden */\nexport var REMOVE_CLASS = 'e-remove';\n/** @hidden */\nexport var DRAG_CLASS = 'e-drag';\n/** @hidden */\nexport var DROP_INDICATOR_CLASS = 'e-drop-indicator';\n/** @hidden */\nexport var INDICATOR_HOVER_CLASS = 'e-drop-hover';\n/** @hidden */\nexport var MEMBER_EDITOR_DIALOG_CLASS = 'e-member-editor-dialog';\n/** @hidden */\nexport var EDITOR_TREE_WRAPPER_CLASS = 'e-member-editor-wrapper';\n/** @hidden */\nexport var EDITOR_TREE_CONTAINER_CLASS = 'e-member-editor-container';\n/** @hidden */\nexport var DRILLTHROUGH_GRID_CLASS = 'e-drillthrough-grid';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_CLASS = 'e-drillthrough-body';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS = 'e-drillthrough-body-header-container';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_CLASS = 'e-drillthrough-body-header';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_COMMON_CLASS = 'e-drillthrough-body-header-common';\n/** @hidden */\nexport var DRILLTHROUGH_BODY_HEADER_VALUE_CLASS = 'e-drillthrough-body-header-value';\n/** @hidden */\nexport var DRILLTHROUGH_DIALOG = 'e-drillthrough-dialog';\n/** @hidden */\nexport var EDITOR_LABEL_WRAPPER_CLASS = 'e-editor-label-wrapper';\n/** @hidden */\nexport var EDITOR_LABEL_CLASS = 'e-editor-label';\n/** @hidden */\nexport var CHECK_BOX_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var NODE_CHECK_CLASS = 'e-check';\n/** @hidden */\nexport var NODE_STOP_CLASS = 'e-stop';\n/** @hidden */\nexport var OK_BUTTON_CLASS = 'e-ok-btn';\n/** @hidden */\nexport var CANCEL_BUTTON_CLASS = 'e-cancel-btn';\n/** @hidden */\nexport var ERROR_DIALOG_CLASS = 'e-pivot-error-dialog';\n/** @hidden */\nexport var DROPPABLE_CLASS = 'e-droppable';\n/** @hidden */\nexport var ROW_AXIS_CLASS = 'e-rows';\n/** @hidden */\nexport var COLUMN_AXIS_CLASS = 'e-columns';\n/** @hidden */\nexport var VALUE_AXIS_CLASS = 'e-values';\n/** @hidden */\nexport var FILTER_AXIS_CLASS = 'e-filters';\n/** @hidden */\nexport var GROUPING_BAR_CLASS = 'e-grouping-bar';\n/** @hidden */\nexport var VALUE_COLUMN_CLASS = 'e-value-column';\n/** @hidden */\nexport var GROUP_ROW_CLASS = 'e-group-rows';\n/** @hidden */\nexport var GROUP_COLUMN_CLASS = 'e-group-columns';\n/** @hidden */\nexport var GROUP_FLEX_CLASS = 'e-group-flex';\n/** @hidden */\nexport var GROUP_VALUE_CLASS = 'e-group-values';\n/** @hidden */\nexport var GROUP_FILTER_CLASS = 'e-group-filters';\n/** @hidden */\nexport var DIALOG_CLOSE_ICON_CLASS = 'e-icon-btn';\n/** @hidden */\nexport var NO_DRAG_CLASS = 'e-drag-restrict';\n/** @hidden */\nexport var SELECTED_NODE_CLASS = 'e-list-selected';\n/** @hidden */\nexport var TITLE_HEADER_CLASS = 'e-title-header';\n/** @hidden */\nexport var TITLE_CONTENT_CLASS = 'e-title-content';\n/** @hidden */\nexport var TEXT_CONTENT_CLASS = 'e-text-content';\n/** @hidden */\nexport var FOOTER_CONTENT_CLASS = 'e-footer-content';\n/** @hidden */\nexport var ADAPTIVE_CONTAINER_CLASS = 'e-adaptive-container';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_BUTTON_CLASS = 'e-field-list-btn';\n/** @hidden */\nexport var ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS = 'e-calculated-field-btn';\n/** @hidden */\nexport var BUTTON_SMALL_CLASS = 'e-small';\n/** @hidden */\nexport var BUTTON_ROUND_CLASS = 'e-round';\n/** @hidden */\nexport var ADD_ICON_CLASS = 'e-add-icon';\n/** @hidden */\nexport var BUTTON_FLAT_CLASS = 'e-flat';\n/** @hidden */\nexport var STATIC_CENTER_DIV_CLASS = 'e-center-div';\n/** @hidden */\nexport var STATIC_CENTER_HEADER_CLASS = 'e-center-title';\n/** @hidden */\nexport var ADAPTIVE_FIELD_LIST_DIALOG_CLASS = 'e-adaptive-field-list-dialog';\n/** @hidden */\nexport var LIST_TEXT_CLASS = 'e-list-text';\n/** @hidden */\nexport var LIST_SELECT_CLASS = 'e-selected-node';\n/** @hidden */\nexport var LIST_FRAME_CLASS = 'e-frame';\n/** @hidden */\nexport var EXCEL_FILTER_ICON_CLASS = 'e-excl-filter-icon';\n/** @hidden */\nexport var SELECTED_MENU_ICON_CLASS = 'e-selected-menu-icon';\n/** @hidden */\nexport var EMPTY_ICON_CLASS = 'e-emptyicon';\n/** @hidden */\nexport var SUB_MENU_CLASS = 'e-submenu';\n/** @hidden */\nexport var FOCUSED_CLASS = 'e-focused';\n/** @hidden */\nexport var SELECTED_CLASS = 'e-selected';\n/** @hidden */\nexport var MENU_ITEM_CLASS = 'e-menu-item';\n/** @hidden */\nexport var FILTER_MENU_OPTIONS_CLASS = 'e-filtermenu-options';\n/** @hidden */\nexport var SELECTED_OPTION_ICON_CLASS = 'e-selected-option-icon';\n/** @hidden */\nexport var SELECTED_LEVEL_ICON_CLASS = 'e-selected-level-icon';\n/** @hidden */\nexport var FILTER_DIV_CONTENT_CLASS = 'e-filter-div-content';\n/** @hidden */\nexport var FILTER_TEXT_DIV_CLASS = 'e-filter-text-div';\n/** @hidden */\nexport var BETWEEN_TEXT_DIV_CLASS = 'e-between-text-div';\n/** @hidden */\nexport var SEPARATOR_DIV_CLASS = 'e-separator-div';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_1_CLASS = 'e-filter-option-wrapper-1';\n/** @hidden */\nexport var FILTER_OPTION_WRAPPER_2_CLASS = 'e-filter-option-wrapper-2';\n/** @hidden */\nexport var FILTER_INPUT_DIV_1_CLASS = 'e-filter-input-div-1';\n/** @hidden */\nexport var FILTER_INPUT_DIV_2_CLASS = 'e-filter-input-div-2';\n/** @hidden */\nexport var VALUE_OPTIONS_CLASS = 'e-value-options';\n/** @hidden */\nexport var LEVEL_OPTIONS_CLASS = 'e-level-options';\n/** @hidden */\nexport var FILTER_OPERATOR_CLASS = 'e-filter-operator';\n/** @hidden */\nexport var COLLAPSE = 'e-collapse';\n/** @hidden */\nexport var EXPAND = 'e-expand';\n/** @hidden */\nexport var TABLE = 'e-table';\n/** @hidden */\nexport var BODY = 'e-body';\n/** @hidden */\nexport var PIVOTBODY = 'e-pivotbody';\n/** @hidden */\nexport var COLUMNSHEADER = 'e-columnsheader';\n/** @hidden */\nexport var ROWSHEADER = 'e-rowsheader';\n/** @hidden */\nexport var VALUESCONTENT = 'e-valuescontent';\n/** @hidden */\nexport var VALUECELL = 'e-valuecell';\n/** @hidden */\nexport var PIVOTHEADER = 'e-pivotheader';\n/** @hidden */\nexport var PGHEADERS = 'e-pgheaders';\n/** @hidden */\nexport var TOPHEADER = 'e-topheader';\n/** @hidden */\nexport var HEADERCELL = 'e-headercell';\n/** @hidden */\nexport var SUMMARY = 'e-summary';\n/** @hidden */\nexport var CELLVALUE = 'e-cellvalue';\n/** @hidden */\nexport var ROW = 'e-row';\n/** @hidden */\nexport var PIVOTTOOLTIP = 'e-pivottooltip';\n/** @hidden */\nexport var TOOLTIP_HEADER = 'e-tooltipheader';\n/** @hidden */\nexport var TOOLTIP_CONTENT = 'e-tooltipcontent';\n/** @hidden */\nexport var NEXTSPAN = 'e-nextspan';\n/** @hidden */\nexport var LASTSPAN = 'e-lastspan';\n/** @hidden */\nexport var EDITOR_SEARCH_WRAPPER_CLASS = 'e-editor-search-wrapper';\n/** @hidden */\nexport var EDITOR_SEARCH_CLASS = 'e-editor-search';\n/** @hidden */\nexport var SELECT_ALL_WRAPPER_CLASS = 'e-select-all-wrapper';\n/** @hidden */\nexport var SELECT_ALL_CLASS = 'e-select-all';\n/** @hidden */\nexport var PIVOTCALC = 'e-pivot-calc';\n/** @hidden */\nexport var CALCDIALOG = 'e-pivot-calc-dialog-div';\n/** @hidden */\nexport var OLAP_CALCDIALOG = 'e-olap-calc-dialog-div';\n/** @hidden */\nexport var CALCRADIO = 'e-pivot-calc-radio';\n/** @hidden */\nexport var CALCCHECK = 'e-pivot-calc-check';\n/** @hidden */\nexport var CALCINPUT = 'e-pivot-calc-input';\n/** @hidden */\nexport var CALC_FORMAT_INPUT = 'e-custom-format-input';\n/** @hidden */\nexport var CALCINPUTDIV = 'e-pivot-calc-input-div';\n/** @hidden */\nexport var CALC_CUSTOM_FORMAT_INPUTDIV = 'e-olap-calc-custom-format-div';\n/** @hidden */\nexport var CALC_HIERARCHY_LIST_DIV = 'e-olap-calc-hierarchy-list-div';\n/** @hidden */\nexport var CALC_FORMAT_TYPE_DIV = 'e-olap-calc-format-type-div';\n/** @hidden */\nexport var CALC_MEMBER_TYPE_DIV = 'e-olap-calc-member-type-div';\n/** @hidden */\nexport var MEMBER_OPTIONS_CLASS = 'e-member-options';\n/** @hidden */\nexport var HIERARCHY_OPTIONS_CLASS = 'e-hierarchy-options';\n/** @hidden */\nexport var FORMAT_OPTIONS_CLASS = 'e-format-options';\n/** @hidden */\nexport var FORMAT_INPUT_CLASS = 'e-format-input-options';\n/** @hidden */\nexport var CALCOUTERDIV = 'e-pivot-calc-outer-div';\n/** @hidden */\nexport var OLAP_CALCOUTERDIV = 'e-olap-calc-outer-div';\n/** @hidden */\nexport var FLAT = 'e-flat';\n/** @hidden */\nexport var FORMAT = 'e-format';\n/** @hidden */\nexport var FORMULA = 'e-pivot-formula';\n/** @hidden */\nexport var TREEVIEW = 'e-pivot-treeview';\n/** @hidden */\nexport var TREEVIEWOUTER = 'e-pivot-treeview-outer';\n/** @hidden */\nexport var CALCCANCELBTN = 'e-pivot-cancel-button';\n/** @hidden */\nexport var CALCADDBTN = 'e-pivot-add-button';\n/** @hidden */\nexport var CALCOKBTN = 'e-pivot-ok-button';\n/** @hidden */\nexport var CALCACCORD = 'e-pivot-accord';\n/** @hidden */\nexport var CALCBUTTONDIV = 'e-pivot-button-div';\n/** @hidden */\nexport var AXIS_ICON_CLASS = 'e-axis';\n/** @hidden */\nexport var AXIS_ROW_CLASS = 'e-axis-row';\n/** @hidden */\nexport var AXIS_COLUMN_CLASS = 'e-axis-column';\n/** @hidden */\nexport var AXIS_VALUE_CLASS = 'e-axis-value';\n/** @hidden */\nexport var AXIS_FILTER_CLASS = 'e-axis-filter';\n/** @hidden */\nexport var AXIS_NAVIGATE_WRAPPER_CLASS = 'e-axis-nav-div';\n/** @hidden */\nexport var LEFT_NAVIGATE_WRAPPER_CLASS = 'e-left-nav-wrapper';\n/** @hidden */\nexport var RIGHT_NAVIGATE_WRAPPER_CLASS = 'e-right-nav-wrapper';\n/** @hidden */\nexport var LEFT_NAVIGATE_CLASS = 'e-left-nav-icon';\n/** @hidden */\nexport var RIGHT_NAVIGATE_CLASS = 'e-right-nav-icon';\n/** @hidden */\nexport var GRID_CLASS = 'e-grid';\n/** @hidden */\nexport var PIVOT_VIEW_CLASS = 'e-pivotview';\n/** @hidden */\nexport var PIVOT_ALL_FIELD_TITLE_CLASS = 'e-pivot-all-field-title';\n/** @hidden */\nexport var PIVOT_FIELD_TITLE_CLASS = 'e-pivot-field-name-title';\n/** @hidden */\nexport var PIVOT_FORMULA_TITLE_CLASS = 'e-pivot-formula-title';\n/** @hidden */\nexport var OLAP_HIERARCHY_TITLE_CLASS = 'e-olap-hierarchy-title';\n/** @hidden */\nexport var OLAP_FORMAT_TITLE_CLASS = 'e-olap-format-title';\n/** @hidden */\nexport var OLAP_MEMBER_TITLE_CLASS = 'e-olap-member-title';\n/** @hidden */\nexport var PIVOT_CONTEXT_MENU_CLASS = 'e-pivot-context-menu';\n/** @hidden */\nexport var MENU_DISABLE = 'e-disabled';\n/** @hidden */\nexport var MENU_HIDE = 'e-menu-hide';\n/** @hidden */\nexport var EMPTY_MEMBER_CLASS = 'e-member-prompt';\n/** @hidden */\nexport var CALC_EDIT = 'e-edit';\n/** @hidden */\nexport var CALC_EDITED = 'e-edited';\n/** @hidden */\nexport var CALC_INFO = 'e-info';\n/** @hidden */\nexport var EMPTY_FIELD = 'e-empty-field';\n/** @hidden */\nexport var FORMAT_DIALOG = 'e-pivot-formatting-dialog';\n/** @hidden */\nexport var FORMAT_CONDITION_BUTTON = 'e-format-condition-button';\n/** @hidden */\nexport var FORMAT_NEW = 'e-new-format';\n/** @hidden */\nexport var FORMAT_OUTER = 'e-format-outer-div';\n/** @hidden */\nexport var FORMAT_INNER = 'e-format-inner-div';\n/** @hidden */\nexport var FORMAT_TABLE = 'e-format-table';\n/** @hidden */\nexport var FORMAT_VALUE_LABEL = 'e-format-value-label';\n/** @hidden */\nexport var FORMAT_LABEL = 'e-format-label';\n/** @hidden */\nexport var INPUT = 'e-input';\n/** @hidden */\nexport var FORMAT_VALUE1 = 'e-format-value1';\n/** @hidden */\nexport var FORMAT_VALUE2 = 'e-format-value2';\n/** @hidden */\nexport var FORMAT_VALUE_SPAN = 'e-format-value-span';\n/** @hidden */\nexport var FORMAT_FONT_COLOR = 'e-format-font-color';\n/** @hidden */\nexport var FORMAT_BACK_COLOR = 'e-format-back-color';\n/** @hidden */\nexport var FORMAT_VALUE_PREVIEW = 'e-format-value-preview';\n/** @hidden */\nexport var FORMAT_COLOR_PICKER = 'e-format-color-picker';\n/** @hidden */\nexport var FORMAT_DELETE_ICON = 'e-format-delete-icon';\n/** @hidden */\nexport var FORMAT_DELETE_BUTTON = 'e-format-delete-button';\n/** @hidden */\nexport var SELECTED_COLOR = 'e-selected-color';\n/** @hidden */\nexport var DIALOG_HEADER = 'e-dlg-header';\n/** @hidden */\nexport var FORMAT_APPLY_BUTTON = 'e-format-apply-button';\n/** @hidden */\nexport var FORMAT_CANCEL_BUTTON = 'e-format-cancel-button';\n/** @hidden */\nexport var FORMAT_ROUND_BUTTON = 'e-small e-round';\n/** @hidden */\nexport var VIRTUALTRACK_DIV = 'e-virtualtrack';\n/** @hidden */\nexport var MOVABLECONTENT_DIV = 'e-movablecontent';\n/** @hidden */\nexport var FROZENCONTENT_DIV = 'e-frozencontent';\n/** @hidden */\nexport var MOVABLEHEADER_DIV = 'e-movableheader';\n/** @hidden */\nexport var FROZENHEADER_DIV = 'e-frozenheader';\n/** @hidden */\nexport var DEFER_APPLY_BUTTON = 'e-defer-apply-button';\n/** @hidden */\nexport var DEFER_CANCEL_BUTTON = 'e-defer-cancel-button';\n/** @hidden */\nexport var LAYOUT_FOOTER = 'e-layout-footer';\n/** @hidden */\nexport var CELL_SELECTED_BGCOLOR = 'e-cellselectionbackground';\n/** @hidden */\nexport var SELECTED_BGCOLOR = 'e-selectionbackground';\n/** @hidden */\nexport var BUTTON_LAYOUT = 'e-button-layout';\n/** @hidden */\nexport var CHECKBOX_LAYOUT = 'e-checkbox-layout';\n/** @hidden */\nexport var DEFER_UPDATE_BUTTON = 'e-defer-update-btn';\n/** @hidden */\nexport var HEADERCONTENT = 'e-headercontent';\n/** @hidden */\nexport var BACK_ICON = 'e-field-list-back-icon';\n/** @hidden */\nexport var TITLE_MOBILE_HEADER = 'e-title-mobile-header';\n/** @hidden */\nexport var TITLE_MOBILE_CONTENT = 'e-title-mobile-content';\n/** @hidden */\nexport var ROW_CELL_CLASS = 'e-rowcell';\n/** @hidden */\nexport var CELL_ACTIVE_BGCOLOR = 'e-active';\n/** @hidden */\nexport var SPAN_CLICKED = 'e-spanclicked';\n/** @hidden */\nexport var ROW_SELECT = 'e-rowselect';\n/** @hidden */\nexport var GRID_HEADER = 'e-gridheader';\n/** @hidden */\nexport var GRID_CONTENT = 'e-gridcontent';\n/** @hidden */\nexport var GRID_EXPORT = 'e-export';\n/** @hidden */\nexport var PIVOTVIEW_EXPORT = 'e-pivotview-export';\n/** @hidden */\nexport var PIVOTVIEW_GRID = 'e-pivotview-grid';\n/** @hidden */\nexport var PIVOTVIEW_EXPAND = 'e-pivotview-expand';\n/** @hidden */\nexport var PIVOTVIEW_COLLAPSE = 'e-pivotview-collapse';\n/** @hidden */\nexport var PIVOTVIEW_GROUP = 'e-pivotview-group';\n/** @hidden */\nexport var PIVOTVIEW_UN_GROUP = 'e-pivotview-ungroup';\n/** @hidden */\nexport var GRID_PDF_EXPORT = 'e-pivotview-pdf-export';\n/** @hidden */\nexport var GRID_EXCEL_EXPORT = 'e-pivotview-excel-export';\n/** @hidden */\nexport var GRID_CSV_EXPORT = 'e-pivotview-csv-export';\n/** @hidden */\nexport var GRID_PNG_EXPORT = 'e-pivotview-png-export';\n/** @hidden */\nexport var GRID_JPEG_EXPORT = 'e-pivotview-jpeg-export';\n/** @hidden */\nexport var GRID_SVG_EXPORT = 'e-pivotview-svg-export';\n/** @hidden */\nexport var GRID_LOAD = 'e-load-report';\n/** @hidden */\nexport var GRID_NEW = 'e-new-report';\n/** @hidden */\nexport var GRID_RENAME = 'e-rename-report';\n/** @hidden */\nexport var GRID_REMOVE = 'e-remove-report';\n/** @hidden */\nexport var GRID_SAVEAS = 'e-saveas-report';\n/** @hidden */\nexport var GRID_SAVE = 'e-save-report';\n/** @hidden */\nexport var GRID_SUB_TOTAL = 'e-sub-total';\n/** @hidden */\nexport var GRID_GRAND_TOTAL = 'e-grand-total';\n/** @hidden */\nexport var GRID_FORMATTING = 'e-toolbar-formatting';\n/** @hidden */\nexport var GRID_TOOLBAR = 'e-pivot-toolbar';\n/** @hidden */\nexport var GRID_REPORT_LABEL = 'e-pivotview-report-label';\n/** @hidden */\nexport var GRID_REPORT_INPUT = 'e-pivotview-report-input';\n/** @hidden */\nexport var GRID_REPORT_OUTER = 'e-report-outer';\n/** @hidden */\nexport var GRID_REPORT_DIALOG = 'e-pivotview-report-dialog';\n/** @hidden */\nexport var TOOLBAR_FIELDLIST = 'e-toolbar-fieldlist';\n/** @hidden */\nexport var TOOLBAR_GRID = 'e-toolbar-grid';\n/** @hidden */\nexport var TOOLBAR_CHART = 'e-toolbar-chart';\n/** @hidden */\nexport var REPORT_LIST_DROP = 'e-reportlist-drop';\n/** @hidden */\nexport var PIVOTCHART = 'e-pivotchart';\n/** @hidden */\nexport var GROUP_CHART_ROW = 'e-group-chart-rows';\n/** @hidden */\nexport var GROUP_CHART_COLUMN = 'e-group-chart-columns';\n/** @hidden */\nexport var GROUP_CHART_VALUE = 'e-group-chart-values';\n/** @hidden */\nexport var GROUP_CHART_MULTI_VALUE = 'e-group-chart-multi-values';\n/** @hidden */\nexport var GROUP_CHART_FILTER = 'e-group-chart-filters';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN_DIV = 'e-group-chart-values-drodown-div';\n/** @hidden */\nexport var GROUP_CHART_VALUE_DROPDOWN = 'e-group-chart-values-drodown';\n/** @hidden */\nexport var CHART_GROUPING_BAR_CLASS = 'e-chart-grouping-bar';\n/** @hidden */\nexport var PIVOT_DISABLE_ICON = 'e-pivotview-disable-icon';\n/** @hidden */\nexport var PIVOT_SELECT_ICON = 'e-pivotview-select-icon';\n/** @hidden */\nexport var VALUESHEADER = 'e-valuesheader';\n/** @hidden */\nexport var ICON_ASC = 'e-icon-ascending';\n/** @hidden */\nexport var ICON_DESC = 'e-icon-descending';\n/** @hidden */\nexport var GRID_GROUPING_BAR_CLASS = 'e-pivot-grouping-bar';\n/** @hidden */\nexport var MDX_QUERY = 'e-mdx-query';\n/** @hidden */\nexport var MDX_QUERY_CONTENT = 'e-mdx-query-content';\n/** @hidden */\nexport var GRID_MDX_DIALOG = 'e-pivotview-mdx-dialog';\n/** @hidden */\nexport var GRID_MDX = 'e-mdx';\n/** @hidden */\nexport var FORMATTING_DIALOG = 'e-pivot-format-dialog';\n/** @hidden */\nexport var FORMATTING_DIALOG_OUTER = 'e-pivot-format-dialog-outer';\n/** @hidden */\nexport var FORMATTING_VALUE_LABLE = 'e-pivot-format-value-lable';\n/** @hidden */\nexport var FORMATTING_VALUE_DROP = 'e-pivot-format-value-drop';\n/** @hidden */\nexport var FORMATTING_FORMAT_LABLE = 'e-pivot-format-lable';\n/** @hidden */\nexport var FORMATTING_FORMAT_DROP = 'e-pivot-format-drop';\n/** @hidden */\nexport var FORMATTING_CUSTOM_LABLE = 'e-pivot-format-custom-lable';\n/** @hidden */\nexport var FORMATTING_CUSTOM_TEXT = 'e-pivot-format-custom-text';\n/** @hidden */\nexport var FORMATTING_SYMBOL_LABLE = 'e-pivot-format-symbol-lable';\n/** @hidden */\nexport var FORMATTING_SYMBOL_DROP = 'e-pivot-format-symbol-drop';\n/** @hidden */\nexport var FORMATTING_GROUPING_LABLE = 'e-pivot-format-grouping-lable';\n/** @hidden */\nexport var FORMATTING_GROUPING_DROP = 'e-pivot-format-grouping-drop';\n/** @hidden */\nexport var FORMATTING_DECIMAL_LABLE = 'e-pivot-format-decimal-lable';\n/** @hidden */\nexport var FORMATTING_DECIMAL_DROP = 'e-pivot-format-decimal-drop';\n/** @hidden */\nexport var FORMATTING_TOOLBAR = 'e-pivot-format-toolbar';\n/** @hidden */\nexport var FORMATTING_TABLE = 'e-pivot-format-table';\n/** @hidden */\nexport var FORMATTING_MENU = 'e-pivot-format-menu';\n/** @hidden */\nexport var NUMBER_FORMATTING_MENU = 'e-pivot-number-format-menu';\n/** @hidden */\nexport var CONDITIONAL_FORMATTING_MENU = 'e-pivot-conditional-format-menu';\n","import { createElement, remove, extend, getInstance } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as events from '../../common/base/constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `AggregateMenu` module to create aggregate type popup.\n */\n/** @hidden */\nvar AggregateMenu = /** @class */ (function () {\n    /**\n     * Constructor for the rener action.\n     * @hidden\n     */\n    function AggregateMenu(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    AggregateMenu.prototype.render = function (args, parentElement) {\n        this.parentElement = parentElement;\n        this.openContextMenu(args);\n    };\n    AggregateMenu.prototype.openContextMenu = function (args) {\n        if (this.menuInfo === undefined) {\n            this.createContextMenu();\n        }\n        this.currentMenu = args.currentTarget;\n        var pos = this.currentMenu.getBoundingClientRect();\n        if (this.parent.enableRtl) {\n            this.menuInfo.open(pos.top, pos.left - 105);\n        }\n        else {\n            this.menuInfo.open(pos.top, pos.left);\n        }\n    };\n    AggregateMenu.prototype.createContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('Sum'), id: this.parent.element.id + '_Sum' },\n            { text: this.parent.localeObj.getConstant('Count'), id: this.parent.element.id + '_Count' },\n            { text: this.parent.localeObj.getConstant('DistinctCount'), id: this.parent.element.id + '_DistinctCount' },\n            { text: this.parent.localeObj.getConstant('Product'), id: this.parent.element.id + '_Product' },\n            { text: this.parent.localeObj.getConstant('Avg'), id: this.parent.element.id + '_Avg' },\n            { text: this.parent.localeObj.getConstant('Min'), id: this.parent.element.id + '_Min' },\n            { text: this.parent.localeObj.getConstant('Max'), id: this.parent.element.id + '_Max' },\n            { text: this.parent.localeObj.getConstant('MoreOption'), id: this.parent.element.id + '_MoreOption' }\n        ];\n        var menuOptions = {\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectOptionInContextMenu.bind(this)\n        };\n        var removeContextMenu = document.getElementById(this.parent.element.id + 'valueFieldContextMenu');\n        if (removeContextMenu !== null) {\n            removeContextMenu.innerHTML = '';\n        }\n        var contextMenu = createElement('ul', {\n            id: this.parent.element.id + 'valueFieldContextMenu'\n        });\n        this.parent.element.appendChild(contextMenu);\n        this.menuInfo = new Menu(menuOptions);\n        this.menuInfo.isStringTemplate = true;\n        this.menuInfo.appendTo(contextMenu);\n    };\n    AggregateMenu.prototype.beforeMenuOpen = function (args) {\n        args.element.style.zIndex = (this.menuInfo.element.style.zIndex + 3).toString();\n        args.element.style.display = 'inline';\n    };\n    /** @hidden */\n    AggregateMenu.prototype.createValueSettingsDialog = function (target, parentElement) {\n        var _this = this;\n        this.parentElement = parentElement;\n        var valueDialog = createElement('div', {\n            id: this.parentElement.id + '_ValueDialog',\n            className: 'e-value-field-settings',\n            attrs: { 'data-field': target.id }\n        });\n        this.parentElement.appendChild(valueDialog);\n        this.valueDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('valueFieldSettings'),\n            content: this.createFieldOptions(target),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateValueSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.valueDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parentElement,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.valueDialog.isStringTemplate = true;\n        this.valueDialog.appendTo(valueDialog);\n        // this.valueDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('valueFieldSettings');\n    };\n    /* tslint:disable:all */\n    AggregateMenu.prototype.createFieldOptions = function (buttonElement) {\n        var fieldCaption = buttonElement.getAttribute('data-caption');\n        var summaryType = buttonElement.getAttribute('data-type');\n        var baseField = buttonElement.getAttribute('data-basefield');\n        var baseItem = buttonElement.getAttribute('data-baseitem');\n        summaryType = (summaryType.toString() !== 'undefined' ? summaryType : 'Sum');\n        var summaryDataSource = [\n            { value: 'Sum', text: this.parent.localeObj.getConstant('Sum') },\n            { value: 'Count', text: this.parent.localeObj.getConstant('Count') },\n            { value: 'DistinctCount', text: this.parent.localeObj.getConstant('DistinctCount') },\n            { value: 'Product', text: this.parent.localeObj.getConstant('Product') },\n            { value: 'Avg', text: this.parent.localeObj.getConstant('Avg') },\n            { value: 'Min', text: this.parent.localeObj.getConstant('Min') },\n            { value: 'Max', text: this.parent.localeObj.getConstant('Max') },\n            { value: 'Index', text: this.parent.localeObj.getConstant('Index') },\n            { value: 'SampleStDev', text: this.parent.localeObj.getConstant('SampleStDev') },\n            { value: 'PopulationStDev', text: this.parent.localeObj.getConstant('PopulationStDev') },\n            { value: 'SampleVar', text: this.parent.localeObj.getConstant('SampleVar') },\n            { value: 'PopulationVar', text: this.parent.localeObj.getConstant('PopulationVar') },\n            { value: 'RunningTotals', text: this.parent.localeObj.getConstant('RunningTotals') },\n            { value: 'DifferenceFrom', text: this.parent.localeObj.getConstant('DifferenceFrom') },\n            { value: 'PercentageOfDifferenceFrom', text: this.parent.localeObj.getConstant('PercentageOfDifferenceFrom') },\n            { value: 'PercentageOfGrandTotal', text: this.parent.localeObj.getConstant('PercentageOfGrandTotal') },\n            { value: 'PercentageOfColumnTotal', text: this.parent.localeObj.getConstant('PercentageOfColumnTotal') },\n            { value: 'PercentageOfRowTotal', text: this.parent.localeObj.getConstant('PercentageOfRowTotal') },\n            { value: 'PercentageOfParentTotal', text: this.parent.localeObj.getConstant('PercentageOfParentTotal') },\n            { value: 'PercentageOfParentColumnTotal', text: this.parent.localeObj.getConstant('PercentageOfParentColumnTotal') },\n            { value: 'PercentageOfParentRowTotal', text: this.parent.localeObj.getConstant('PercentageOfParentRowTotal') }\n        ];\n        var baseItemTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom'];\n        var baseFieldTypes = ['DifferenceFrom', 'PercentageOfDifferenceFrom', 'PercentageOfParentTotal'];\n        var dataFields = extend([], this.parent.dataSourceSettings.rows, null, true);\n        dataFields = dataFields.concat(this.parent.dataSourceSettings.columns);\n        var fieldDataSource = [];\n        var fieldItemDataSource = [];\n        // let summaryDataSource: { [key: string]: Object }[] = [];\n        // for (let type of summaryTypes) {\n        //     summaryDataSource.push({ value: type, text: type });\n        // }\n        for (var _i = 0, dataFields_1 = dataFields; _i < dataFields_1.length; _i++) {\n            var field = dataFields_1[_i];\n            var value = field.name;\n            var text = (field.caption ? field.caption : field.name);\n            fieldDataSource.push({ value: value, text: text });\n        }\n        baseField = (baseField && (baseField.toString() !== 'undefined' && baseField.toString() !== 'null') ? baseField : fieldDataSource[0].value);\n        fieldItemDataSource = Object.keys(this.parent.engineModule.fieldList[(baseField.toString() !== 'undefined' ?\n            baseField : fieldDataSource[0].value)].formattedMembers);\n        baseItem = (baseItem.toString() !== 'undefined' ? baseItem : fieldItemDataSource[0]);\n        var mainDiv = createElement('div', {\n            className: 'e-value-field-div-content', id: this.parentElement.id + '_field_div_content',\n            attrs: { 'data-type': summaryType, 'data-caption': fieldCaption, 'data-basefield': baseField, 'data-baseitem': baseItem }\n        });\n        var textWrappper = createElement('div', { className: 'e-field-name-text-wrapper', });\n        var filterWrapperDiv1 = createElement('div', { className: 'e-field-option-wrapper' });\n        var optionWrapperDiv1 = createElement('div', { className: 'e-type-option-wrapper' });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-base-field-option-wrapper' });\n        var optionWrapperDiv3 = createElement('div', { className: 'e-base-item-option-wrapper' });\n        var texttitle = createElement('div', { className: 'e-field-name-title', innerHTML: this.parent.localeObj.getConstant('sourceName') + '&nbsp;' });\n        var textContent = createElement('div', { className: 'e-field-name-content', innerHTML: buttonElement.id.toString() });\n        var inputTextDiv1 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('sourceCaption')\n        });\n        var optionTextDiv1 = createElement('div', {\n            className: 'e-base-field-option-text', innerHTML: this.parent.localeObj.getConstant('summarizeValuesBy')\n        });\n        var optionTextDiv2 = createElement('div', {\n            className: 'e-base-item-option-text', innerHTML: this.parent.localeObj.getConstant('baseField')\n        });\n        var optionTextDiv3 = createElement('div', {\n            className: 'e-type-option-text', innerHTML: this.parent.localeObj.getConstant('baseItem')\n        });\n        var inputDiv1 = createElement('div', { className: 'e-caption-input-wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parentElement.id + '_type_option' });\n        var dropOptionDiv2 = createElement('div', { id: this.parentElement.id + '_base_field_option' });\n        var dropOptionDiv3 = createElement('div', { id: this.parentElement.id + '_base_item_option' });\n        var inputField1 = createElement('input', {\n            id: this.parentElement.id + 'type_input_option',\n            className: 'e-caption-input-text',\n            attrs: { 'type': 'text' }\n        });\n        textWrappper.appendChild(texttitle);\n        textWrappper.appendChild(textContent);\n        inputDiv1.appendChild(inputTextDiv1);\n        inputDiv1.appendChild(inputField1);\n        optionWrapperDiv1.appendChild(optionTextDiv1);\n        optionWrapperDiv2.appendChild(optionTextDiv2);\n        optionWrapperDiv3.appendChild(optionTextDiv3);\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        optionWrapperDiv3.appendChild(dropOptionDiv3);\n        filterWrapperDiv1.appendChild(textWrappper);\n        filterWrapperDiv1.appendChild(inputDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv1.appendChild(optionWrapperDiv3);\n        mainDiv.appendChild(filterWrapperDiv1);\n        var popupInstance = this;\n        var optionWrapper1 = new DropDownList({\n            dataSource: summaryDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: summaryType,\n            // popupWidth: 'auto',\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                optionWrapper2.enabled = baseFieldTypes.indexOf(args.value) !== -1 ? true : false;\n                optionWrapper3.enabled = baseItemTypes.indexOf(args.value) !== -1 ? true : false;\n                if (optionWrapper3.enabled && optionWrapper3.dataSource.length === 1) {\n                    optionWrapper3.dataSource = fieldItemDataSource;\n                    optionWrapper3.refresh();\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(dropOptionDiv1);\n        var optionWrapper2 = new DropDownList({\n            dataSource: fieldDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' },\n            value: baseField,\n            // popupWidth: 'auto',\n            enabled: (baseFieldTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                fieldItemDataSource = Object.keys(popupInstance.parent.engineModule.fieldList[args.value].formattedMembers);\n                optionWrapper3.dataSource = fieldItemDataSource;\n                optionWrapper3.value = fieldItemDataSource[0];\n                optionWrapper3.filterBarPlaceholder = popupInstance.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0];\n                optionWrapper3.refresh();\n            }\n        });\n        optionWrapper2.isStringTemplate = true;\n        optionWrapper2.appendTo(dropOptionDiv2);\n        var optionWrapper3 = new DropDownList({\n            dataSource: [fieldItemDataSource[0]], enableRtl: this.parent.enableRtl,\n            value: baseItem,\n            // popupWidth: 'auto',\n            allowFiltering: true,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldItemDataSource[0],\n            enabled: (baseItemTypes.indexOf(summaryType) !== -1 ? true : false),\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n        });\n        optionWrapper3.isStringTemplate = true;\n        optionWrapper3.appendTo(dropOptionDiv3);\n        var inputObj1 = new MaskedTextBox({\n            placeholder: 'Enter field caption',\n            // floatLabelType: 'Auto',\n            enableRtl: this.parent.enableRtl,\n            value: fieldCaption, width: '100%'\n        });\n        inputObj1.isStringTemplate = true;\n        inputObj1.appendTo(inputField1);\n        return mainDiv;\n    };\n    /* tslint:enable:all */\n    AggregateMenu.prototype.selectOptionInContextMenu = function (menu) {\n        if (menu.item.text !== null) {\n            var buttonElement = this.currentMenu.parentElement;\n            var type = menu.item.id.split(this.parent.element.id + '_')[1];\n            if (type === 'MoreOption') {\n                this.createValueSettingsDialog(buttonElement, this.parentElement);\n            }\n            else {\n                var field = buttonElement.getAttribute('data-uid');\n                var valuefields = this.parent.dataSourceSettings.values;\n                var contentElement = buttonElement.querySelector('.e-content');\n                var captionName = menu.item.text + ' ' + this.parent.localeObj.getConstant('of') + ' ' +\n                    this.parent.engineModule.fieldList[field].caption;\n                contentElement.innerHTML = captionName;\n                contentElement.setAttribute('title', captionName);\n                buttonElement.setAttribute('data-type', type);\n                for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === field) {\n                        /* tslint:disable:align */\n                        var dataSourceItem = extend({}, valuefields[vCnt].properties ?\n                            valuefields[vCnt].properties : valuefields[vCnt], null, true);\n                        /* tslint:enable:align */\n                        dataSourceItem.type = type;\n                        this.parent.engineModule.fieldList[field].aggregateType = type;\n                        valuefields.splice(vCnt, 1, dataSourceItem);\n                        this.parent.lastAggregationInfo = dataSourceItem;\n                    }\n                }\n                this.updateDataSource();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateDataSource = function (isRefreshed) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshed);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                /* tslint:disable:align */\n                this.parent.pivotGridModule.setProperties({\n                    dataSourceSettings: this.parent.dataSourceSettings.properties\n                }, true);\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    AggregateMenu.prototype.updateValueSettings = function () {\n        var dialogElement = this.valueDialog.element;\n        var captionInstance = getInstance('#' + this.parentElement.id + 'type_input_option', MaskedTextBox);\n        var summaryInstance = getInstance('#' + this.parentElement.id + '_type_option', DropDownList);\n        var baseFieldInstance = getInstance('#' + this.parentElement.id + '_base_field_option', DropDownList);\n        var baseItemInstance = getInstance('#' + this.parentElement.id + '_base_item_option', DropDownList);\n        var fieldName = dialogElement.getAttribute('data-field');\n        var buttonElement;\n        if (this.parentElement.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            buttonElement = this.parentElement.\n                querySelector('.' + cls.PIVOT_BUTTON_CLASS + '.' + fieldName.replace(/[^A-Z0-9]/ig, ''));\n        }\n        if (buttonElement) {\n            var contentElement = buttonElement.querySelector('.e-content');\n            var captionName = this.parent.localeObj.getConstant(summaryInstance.value) + ' ' +\n                this.parent.localeObj.getConstant('of') + ' ' + captionInstance.value;\n            contentElement.innerHTML = captionName;\n            contentElement.setAttribute('title', captionName);\n            buttonElement.setAttribute('data-type', summaryInstance.value);\n            buttonElement.setAttribute('data-caption', captionInstance.value);\n            buttonElement.setAttribute('data-basefield', baseFieldInstance.value);\n            buttonElement.setAttribute('data-baseitem', baseItemInstance.value);\n        }\n        var selectedField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.values);\n        selectedField = selectedField.properties ?\n            selectedField.properties : selectedField;\n        selectedField.caption = captionInstance.value;\n        selectedField.type = summaryInstance.value;\n        selectedField.baseField = baseFieldInstance.value;\n        selectedField.baseItem = baseItemInstance.value;\n        this.valueDialog.close();\n        // this.parent.axisFieldModule.render();\n        this.parent.lastAggregationInfo = selectedField;\n        this.updateDataSource(true);\n    };\n    AggregateMenu.prototype.removeDialog = function () {\n        if (this.valueDialog && !this.valueDialog.isDestroyed) {\n            this.valueDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_ValueDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_ValueDialog'));\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    AggregateMenu.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuInfo && !this.menuInfo.isDestroyed) {\n            this.menuInfo.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return AggregateMenu;\n}());\nexport { AggregateMenu };\n","import { Reorder, headerRefreshed } from '@syncfusion/ej2-grids';\nimport { Grid, Resize, ExcelExport, PdfExport, ContextMenu, Freeze } from '@syncfusion/ej2-grids';\nimport { Selection } from '@syncfusion/ej2-grids';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, EventHandler, getElement } from '@syncfusion/ej2-base';\nimport { isBlazor, addClass, removeClass, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { AggregateMenu } from '../../common/popups/aggregate-menu';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render PivotGrid control\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        /** @hidden */\n        this.indentCollection = {};\n        this.colPos = 0;\n        this.lastSpan = 0;\n        this.lvlCollection = {};\n        this.hierarchyCollection = {};\n        this.lvlPosCollection = {};\n        this.hierarchyPosCollection = {};\n        this.position = 0;\n        this.measurePos = 0;\n        this.maxMeasurePos = 0;\n        this.hierarchyCount = 0;\n        this.actualText = '';\n        this.parent = parent;\n        this.resColWidth = (this.parent.showGroupingBar && this.parent.groupingBarModule) ? (this.parent.isAdaptive ? 180 : 250) :\n            (this.parent.isAdaptive ? 140 : 200);\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.gridSettings = parent.gridSettings;\n        this.formatList = this.getFormatList();\n        this.aggMenu = new AggregateMenu(this.parent);\n    }\n    /** @hidden */\n    /* tslint:disable */\n    Render.prototype.render = function () {\n        var parent = this.parent;\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.parent.gridHeaderCellInfo = [];\n        this.parent.gridCellCollection = {};\n        this.injectGridModules(parent);\n        this.rowStartPos = this.getRowStartPos();\n        if (this.parent.grid && this.parent.grid.element && this.parent.element.querySelector('.e-grid')) {\n            if (!engine.isEngineUpdated) {\n                engine.headerContent = this.frameDataSource('header');\n                engine.valueContent = this.frameDataSource('value');\n            }\n            else {\n                if (this.parent.enableValueSorting) {\n                    engine.valueContent = this.frameDataSource('value');\n                }\n                engine.isEngineUpdated = false;\n            }\n            /* tslint:disable */\n            this.parent.grid.setProperties({\n                columns: this.frameStackedHeaders(), dataSource: (this.parent.dataType === 'olap' ? true :\n                    parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData ? engine.valueContent :\n                    this.frameDataSource('value')\n            }, true);\n            /* tslint:enable */\n            this.parent.grid.notify('datasource-modified', {});\n            if (this.parent.isScrolling) {\n                this.parent.resizeInfo = {};\n            }\n            this.parent.grid.refreshColumns();\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n            var e = this.parent.element.querySelector('.e-movablecontent');\n            e.querySelector('colGroup').innerHTML =\n                this.parent.grid.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').innerHTML;\n            this.parent.grid.width = this.calculateGridWidth();\n            if (!this.parent.isScrolling) {\n                this.calculateGridHeight(true);\n            }\n            //this.parent.isScrolling = false;\n        }\n        else {\n            this.parent.element.innerHTML = '';\n            this.bindGrid(this.parent, (this.engine.isEmptyData ? true : false));\n            this.parent.element.appendChild(createElement('div', { id: this.parent.element.id + '_grid' }));\n            this.parent.grid.isStringTemplate = true;\n            this.parent.grid.appendTo('#' + this.parent.element.id + '_grid');\n        }\n        /* tslint:disable */\n        this.parent.grid.on(headerRefreshed, this.refreshHeader, this);\n    };\n    Render.prototype.refreshHeader = function () {\n        if (this.parent.enableVirtualization) {\n            var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n            var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n            var vtr = mCont.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            this.parent.virtualHeaderDiv = mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV);\n            if (mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                remove(mHdr.querySelector('.' + cls.VIRTUALTRACK_DIV));\n            }\n            else {\n                this.parent.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n            }\n            mHdr.appendChild(this.parent.virtualHeaderDiv);\n            if (vtr) {\n                setStyleAttribute(this.parent.virtualHeaderDiv, { height: 0, width: vtr.style.width });\n            }\n            setStyleAttribute(mHdr.querySelector('.e-table'), {\n                transform: (mCont.querySelector('.e-table').style.transform).split(',')[0] + ',' + 0 + 'px)'\n            });\n            mHdr.scrollLeft = mCont.scrollLeft;\n        }\n    };\n    /** @hidden */\n    Render.prototype.bindGrid = function (parent, isEmpty) {\n        this.injectGridModules(parent);\n        this.parent.grid = new Grid({\n            frozenColumns: 1,\n            frozenRows: 0,\n            dataSource: isEmpty ? this.frameEmptyData() : this.frameDataSource('value'),\n            columns: isEmpty ? this.frameEmptyColumns() : this.frameStackedHeaders(),\n            height: isEmpty ? 'auto' : this.calculateGridHeight(),\n            width: isEmpty ? this.parent.width : this.calculateGridWidth(),\n            locale: parent.locale,\n            enableRtl: parent.enableRtl,\n            allowExcelExport: parent.allowExcelExport,\n            allowPdfExport: parent.allowPdfExport,\n            allowResizing: this.gridSettings.allowResizing,\n            allowTextWrap: this.gridSettings.allowTextWrap,\n            allowReordering: (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering),\n            allowSelection: this.gridSettings.allowSelection,\n            /* tslint:disable-next-line */\n            contextMenuItems: this.gridSettings.contextMenuItems,\n            selectedRowIndex: this.gridSettings.selectedRowIndex,\n            /* tslint:disable-next-line */\n            selectionSettings: this.gridSettings.selectionSettings,\n            textWrapSettings: this.gridSettings.textWrapSettings,\n            printMode: this.gridSettings.printMode,\n            rowHeight: this.gridSettings.rowHeight,\n            gridLines: this.gridSettings.gridLines,\n            contextMenuClick: this.contextMenuClick.bind(this),\n            contextMenuOpen: this.contextMenuOpen.bind(this),\n            beforeCopy: this.gridSettings.beforeCopy ? this.gridSettings.beforeCopy.bind(this.parent) : undefined,\n            beforePrint: this.gridSettings.beforePrint ? this.gridSettings.beforePrint.bind(this.parent) : undefined,\n            printComplete: this.gridSettings.printComplete ? this.gridSettings.printComplete.bind(this.parent) : undefined,\n            rowSelecting: this.gridSettings.rowSelecting ? this.gridSettings.rowSelecting.bind(this.parent) : undefined,\n            rowSelected: this.rowSelected.bind(this),\n            rowDeselecting: this.gridSettings.rowDeselecting ? this.gridSettings.rowDeselecting.bind(this.parent) : undefined,\n            rowDeselected: this.rowDeselected.bind(this),\n            cellSelecting: this.gridSettings.cellSelecting ? this.gridSettings.cellSelecting.bind(this.parent) : undefined,\n            cellSelected: this.cellSelected.bind(this),\n            cellDeselecting: this.gridSettings.cellDeselecting ? this.gridSettings.cellDeselecting.bind(this.parent) : undefined,\n            cellDeselected: this.cellDeselected.bind(this),\n            resizeStart: this.gridSettings.resizeStart ? this.gridSettings.resizeStart.bind(this.parent) : undefined,\n            columnDragStart: this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined,\n            columnDrag: this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined,\n            columnDrop: this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined,\n            beforeExcelExport: this.beforeExcelExport.bind(this),\n            resizing: this.setGroupWidth.bind(this),\n            resizeStop: this.onResizeStop.bind(this),\n            queryCellInfo: this.queryCellInfo.bind(this),\n            dataBound: this.dataBound.bind(this),\n            headerCellInfo: this.headerCellInfo.bind(this),\n            excelHeaderQueryCellInfo: this.excelHeaderQueryCellInfo.bind(this),\n            pdfHeaderQueryCellInfo: this.pdfHeaderQueryCellInfo.bind(this),\n            excelQueryCellInfo: this.excelQueryCellInfo.bind(this),\n            pdfQueryCellInfo: this.pdfQueryCellInfo.bind(this),\n            beforePdfExport: this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined\n        });\n        if (isBlazor()) {\n            var isJsComponent = 'isJsComponent';\n            /* tslint:disable-next-line */\n            this.parent.grid[isJsComponent] = true;\n        }\n        this.parent.grid.on('header-refreshed', this.headerRefreshed.bind(this));\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.headerRefreshed = function (args) {\n        if (this.parent.lastGridSettings && Object.keys(this.parent.lastGridSettings).indexOf('allowResizing') > -1) {\n            this.parent.lastGridSettings = undefined;\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n                this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                this.parent.groupingBarModule.setGridRowWidth();\n            }\n        }\n    };\n    /* tslint:disable-next-line */\n    Render.prototype.beforeExcelExport = function (args) {\n        if (!isNullOrUndefined(args.gridObject.columns) && !isNullOrUndefined(this.parent.pivotColumns)) {\n            args.gridObject.columns[args.gridObject.columns.length - 1].width =\n                this.parent.pivotColumns[this.parent.pivotColumns.length - 1].width;\n        }\n        this.parent.trigger(events.beforeExcelExport, args);\n    };\n    Render.prototype.rowSelected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowSelected, args);\n    };\n    Render.prototype.rowDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.rowDeselected, args);\n    };\n    Render.prototype.cellSelected = function (args) {\n        if (this.parent.rowRangeSelection.enable) {\n            this.parent.grid.selectionModule.selectRowsByRange(this.parent.rowRangeSelection.startIndex, this.parent.rowRangeSelection.endIndex);\n            this.parent.rowRangeSelection.enable = false;\n        }\n        else {\n            this.parent.renderModule.selected();\n            this.parent.trigger(events.selected, args);\n        }\n    };\n    Render.prototype.cellSelecting = function (args) {\n        this.parent.trigger(events.cellSelecting, args);\n    };\n    Render.prototype.cellDeselected = function (args) {\n        this.parent.renderModule.selected();\n        this.parent.trigger(events.cellDeselected, args);\n    };\n    Render.prototype.queryCellInfo = function (args) {\n        this.parent.renderModule.rowCellBoundEvent(args);\n    };\n    Render.prototype.headerCellInfo = function (args) {\n        this.parent.renderModule.columnCellBoundEvent(args);\n    };\n    Render.prototype.excelHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.excelColumnEvent(args);\n    };\n    Render.prototype.pdfQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfRowEvent(args);\n    };\n    Render.prototype.excelQueryCellInfo = function (args) {\n        this.parent.renderModule.excelRowEvent(args);\n    };\n    Render.prototype.pdfHeaderQueryCellInfo = function (args) {\n        this.parent.renderModule.pdfColumnEvent(args);\n    };\n    Render.prototype.dataBound = function (args) {\n        if (this.parent.cellTemplate && !isBlazor()) {\n            for (var _i = 0, _a = this.parent.gridHeaderCellInfo; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                if (this.parent.cellTemplate) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()(cell, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(cell.targetCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(cell.targetCell, element[0].outerHTML);\n                        }\n                    }\n                }\n            }\n            this.parent.gridHeaderCellInfo = [];\n        }\n        if (this.parent.element.querySelector('.e-firstcell')) {\n            if (this.parent.enableRtl) {\n                this.parent.element.querySelector('.e-firstcell').style.borderRight = 'none';\n            }\n            else {\n                this.parent.element.querySelector('.e-firstcell').style.borderLeft = 'none';\n            }\n        }\n        this.parent.grid.widthService.setWidthToTable();\n        /* tslint:disable-next-line */\n        if (!this.parent.isEmptyGrid) {\n            this.calculateGridHeight(true);\n        }\n        if (this.parent.currentView !== 'Chart') {\n            this.parent.grid.hideScroll();\n        }\n        this.parent.isScrolling = false;\n        this.parent.notify(events.contentReady, {});\n    };\n    /* tslint:disable */\n    /* tslint:disable:typedef */\n    Render.prototype.contextMenuOpen = function (args) {\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var cellTarget = this.parent.lastCellClicked;\n            var elem = null;\n            var bool = void 0;\n            var isGroupElement = void 0;\n            if (cellTarget.classList.contains('e-stackedheadercelldiv') || cellTarget.classList.contains('e-cellvalue') ||\n                cellTarget.classList.contains('e-headercelldiv') || cellTarget.classList.contains('e-icons') || cellTarget.classList.contains('e-rhandler')) {\n                elem = cellTarget.parentElement;\n            }\n            else if (cellTarget.classList.contains('e-headercell') || cellTarget.classList.contains('e-rowcell') || cellTarget.classList.contains('e-columnsheader') ||\n                cellTarget.classList.contains('e-rowsheader') || cellTarget.classList.contains('e-valuescontent') || cellTarget.classList.contains('e-valuesheader')) {\n                elem = cellTarget;\n            }\n            else if (cellTarget.classList.contains('e-headertext')) {\n                elem = cellTarget.parentElement.parentElement;\n            }\n            if (!elem) {\n                args.cancel = true;\n                return;\n            }\n            if (elem.classList.contains('e-valuesheader') || elem.classList.contains('e-stot')) {\n                bool = true;\n            }\n            if (this.parent.allowGrouping && this.parent.groupingModule && !this.validateField(elem)) {\n                isGroupElement = true;\n            }\n            var rowIndex = Number(elem.getAttribute('index'));\n            var colIndex = Number(elem.getAttribute('aria-colindex'));\n            var pivotValue1 = this.parent.pivotValues[rowIndex][colIndex];\n            var select = item.id;\n            switch (select) {\n                case this.parent.element.id + '_expand':\n                    if (elem.querySelectorAll('.' + cls.EXPAND).length > 0) {\n                        if (args.element.querySelectorAll('#' + this.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this.parent.element.id + '_expand').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this.parent.element.id + '_expand').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this.parent.element.id + '_collapse':\n                    if (elem.querySelectorAll('.' + cls.COLLAPSE).length > 0) {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_expand')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.add(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.contains(cls.MENU_HIDE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.remove(cls.MENU_HIDE);\n                            args.element.querySelector('#' + this.parent.element.id + '_expand').classList.remove(cls.MENU_HIDE);\n                        }\n                    }\n                    else {\n                        if (bool) {\n                            args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.add(cls.MENU_HIDE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this.parent.element.id + '_collapse').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this.parent.element.id + '_custom_group':\n                    if (!isGroupElement && args.items.length == 2) {\n                        args.cancel = true;\n                    }\n                    if (args.element.querySelectorAll('#' + this.parent.element.id + '_custom_group')) {\n                        addClass([args.element.querySelector('#' + this.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        if (args.element.querySelectorAll('#' + this.parent.element.id + '_custom_group')) {\n                            removeClass([args.element.querySelector('#' + this.parent.element.id + '_custom_group')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this.parent.element.id + '_custom_ungroup':\n                    if (args.element.querySelectorAll('#' + this.parent.element.id + '_custom_ungroup')) {\n                        addClass([args.element.querySelector('#' + this.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                    }\n                    if (isGroupElement) {\n                        var isUngroupOption = false;\n                        var fieldName = elem.getAttribute('fieldname');\n                        var groupField = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.groupSettings);\n                        if (groupField && groupField.type === 'Custom' || (this.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_custom_group') > -1)) {\n                            groupField = PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), this.parent.dataSourceSettings.groupSettings);\n                            if (groupField) {\n                                var cell = this.parent.engineModule.pivotValues[Number(elem.getAttribute('index'))][Number(elem.getAttribute('aria-colindex'))];\n                                var selectedCellsInfo = this.parent.groupingModule.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n                                selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n                                var selectedOptions = this.parent.groupingModule.getSelectedOptions(selectedCellsInfo);\n                                for (var _b = 0, _c = groupField.customGroups; _b < _c.length; _b++) {\n                                    var customGroup = _c[_b];\n                                    if (selectedOptions.indexOf(customGroup.groupName) > -1) {\n                                        isUngroupOption = true;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        else if (groupField && (groupField.type === 'Date' || groupField.type === 'Number') ||\n                            (this.parent.engineModule.fieldList[fieldName].isCustomField && fieldName.indexOf('_date_group') > -1)) {\n                            isUngroupOption = true;\n                        }\n                        if (args.element.querySelectorAll('#' + this.parent.element.id + '_custom_ungroup') && isUngroupOption) {\n                            removeClass([args.element.querySelector('#' + this.parent.element.id + '_custom_ungroup')], cls.MENU_HIDE);\n                        }\n                    }\n                    break;\n                case this.parent.element.id + '_drillthrough':\n                    if (!this.parent.allowDrillThrough) {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_drillthrough')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (!(elem.classList.contains('e-summary'))) {\n                        if (elem.innerText === \"\") {\n                            if (args.element.querySelector('#' + this.parent.element.id + '_drillthrough')) {\n                                args.element.querySelector('#' + this.parent.element.id + '_drillthrough').classList.add(cls.MENU_DISABLE);\n                            }\n                        }\n                    }\n                    else {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_drillthrough').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_drillthrough').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n                case this.parent.element.id + '_sortasc':\n                    if (!this.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-descending').length > 0) {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_sortdesc':\n                    if (!this.parent.enableValueSorting) {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_sortdesc')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (elem.querySelectorAll('.e-icon-ascending').length > 0) {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_sortasc')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.add(cls.MENU_DISABLE);\n                        }\n                        else {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                        }\n                        if (args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_sortdesc').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    else if (args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.contains(cls.MENU_DISABLE)) {\n                        args.element.querySelector('#' + this.parent.element.id + '_sortasc').classList.remove(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_CalculatedField':\n                    if (!this.parent.allowCalculatedField) {\n                        args.element.querySelector('#' + this.parent.element.id + '_CalculatedField').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_pdf':\n                    if (!this.parent.allowPdfExport) {\n                        args.element.querySelector('#' + this.parent.element.id + '_pdf').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_excel':\n                    if (!this.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this.parent.element.id + '_excel').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_csv':\n                    if (!this.parent.allowExcelExport) {\n                        args.element.querySelector('#' + this.parent.element.id + '_csv').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_exporting':\n                    if ((!this.parent.allowExcelExport) && (!this.parent.allowPdfExport)) {\n                        args.element.querySelector('#' + this.parent.element.id + '_exporting').classList.add(cls.MENU_DISABLE);\n                    }\n                    break;\n                case this.parent.element.id + '_aggregate':\n                    if (elem.innerText === \"\") {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_aggregate')) {\n                            args.element.querySelector('#' + this.parent.element.id + '_aggregate').classList.add(cls.MENU_DISABLE);\n                        }\n                    }\n                    else {\n                        if (args.element.querySelector('#' + this.parent.element.id + '_aggregate').classList.contains(cls.MENU_DISABLE)) {\n                            args.element.querySelector('#' + this.parent.element.id + '_aggregate').classList.remove(cls.MENU_DISABLE);\n                        }\n                    }\n                    break;\n            }\n        }\n        this.parent.trigger(events.contextMenuOpen, args);\n    };\n    Render.prototype.contextMenuClick = function (args) {\n        // this.parent.gridSettings.contextMenuClick();\n        var target = this.parent.lastCellClicked;\n        var selected = args.item.id;\n        var event = new MouseEvent('dblclick', {\n            'view': window,\n            'bubbles': true,\n            'cancelable': true\n        });\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv') || target.classList.contains('e-icons') || target.classList.contains('e-rhandler')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        var rowIndx = Number(ele.getAttribute('index'));\n        var colIndx = Number(ele.getAttribute('aria-colindex'));\n        var pivotValue = this.parent.pivotValues[rowIndx][colIndx];\n        if (args.item.id === this.parent.element.id + '_AggSum' || args.item.id === this.parent.element.id + '_AggProduct' ||\n            args.item.id === this.parent.element.id + '_AggCount' || args.item.id === this.parent.element.id + '_AggDistinctCount' ||\n            args.item.id === this.parent.element.id + '_AggAvg' || args.item.id === this.parent.element.id + '_AggMin' ||\n            args.item.id === this.parent.element.id + '_AggMax' || args.item.id === this.parent.element.id + '_AggMoreOption') {\n            this.field = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].id;\n            this.fieldCaption = this.parent.engineModule.fieldList[pivotValue.actualText.toString()].caption;\n        }\n        switch (selected) {\n            case this.parent.element.id + '_pdf':\n                this.parent.pdfExport();\n                break;\n            case this.parent.element.id + '_excel':\n                this.parent.excelExport();\n                break;\n            case this.parent.element.id + '_csv':\n                this.parent.csvExport();\n                break;\n            case this.parent.element.id + '_drillthrough_menu':\n                ele.dispatchEvent(event);\n                break;\n            case this.parent.element.id + '_sortasc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Ascending';\n                break;\n            case this.parent.element.id + '_sortdesc':\n                this.parent.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            headerText: pivotValue.valueSort.levelName,\n                            headerDelimiter: this.parent.dataSourceSettings.valueSortSettings.headerDelimiter\n                        }\n                    }\n                });\n                this.parent.dataSourceSettings.valueSortSettings.sortOrder = 'Descending';\n                break;\n            case this.parent.element.id + '_expand':\n                if (ele.querySelectorAll('.' + cls.EXPAND)) {\n                    var exp = ele.querySelectorAll('.' + cls.EXPAND)[0];\n                    this.parent.onDrill(exp);\n                }\n                break;\n            case this.parent.element.id + '_collapse':\n                if (ele.querySelectorAll('.' + cls.COLLAPSE)) {\n                    var colp = ele.querySelectorAll('.' + cls.COLLAPSE)[0];\n                    this.parent.onDrill(colp);\n                }\n                break;\n            case this.parent.element.id + '_CalculatedField':\n                this.parent.calculatedFieldModule.createCalculatedFieldDialog();\n                break;\n            case this.parent.element.id + '_AggSum':\n                this.updateAggregate('Sum');\n                break;\n            case this.parent.element.id + '_AggProduct':\n                this.updateAggregate('Product');\n                break;\n            case this.parent.element.id + '_AggCount':\n                this.updateAggregate('Count');\n                break;\n            case this.parent.element.id + '_AggDistinctCount':\n                this.updateAggregate('DistinctCount');\n                break;\n            case this.parent.element.id + '_AggAvg':\n                this.updateAggregate('Avg');\n                break;\n            case this.parent.element.id + '_AggMin':\n                this.updateAggregate('Min');\n                break;\n            case this.parent.element.id + '_AggMax':\n                this.updateAggregate('Max');\n                break;\n            case this.parent.element.id + '_AggMoreOption':\n                ele.setAttribute('id', this.field);\n                ele.setAttribute('data-caption', this.fieldCaption);\n                ele.setAttribute('data-field', this.field);\n                ele.setAttribute('data-type', this.engine.fieldList[pivotValue.actualText.toString()].aggregateType);\n                ele.setAttribute('data-basefield', this.engine.fieldList[pivotValue.actualText.toString()].baseField);\n                ele.setAttribute('data-baseItem', this.engine.fieldList[pivotValue.actualText.toString()].baseItem);\n                this.aggMenu.createValueSettingsDialog(ele, this.parent.element);\n                break;\n            case this.parent.element.id + '_custom_group':\n            case this.parent.element.id + '_custom_ungroup':\n                if (this.parent.groupingModule) {\n                    var args_1 = {\n                        target: ele,\n                        option: selected,\n                        parentElement: this.parent.element\n                    };\n                    this.parent.notify(events.initGrouping, args_1);\n                    this.parent.grid.contextMenuModule.contextMenu.close();\n                }\n                break;\n        }\n        this.parent.trigger(events.contextMenuClick, args);\n    };\n    Render.prototype.validateField = function (target) {\n        var isValueField = false;\n        if (target.classList.contains('e-stot') || target.classList.contains('e-gtot') || target.classList.contains('e-valuescontent') || target.classList.contains('e-valuesheader')) {\n            isValueField = true;\n        }\n        else {\n            var fieldName = target.getAttribute('fieldName');\n            if (!fieldName || fieldName == '') {\n                var rowIndx = Number(target.getAttribute('index'));\n                var colIndx = Number(target.getAttribute('aria-colindex'));\n                fieldName = this.engine.pivotValues[rowIndx][colIndx].actualText;\n            }\n            var valuefields = this.parent.dataSourceSettings.values;\n            for (var valueCnt = 0; valueCnt < valuefields.length; valueCnt++) {\n                if (this.parent.dataSourceSettings.values[valueCnt].name === fieldName) {\n                    isValueField = true;\n                    break;\n                }\n            }\n        }\n        return isValueField;\n    };\n    /* tslint:enable */\n    Render.prototype.updateAggregate = function (aggregate) {\n        var valuefields = this.parent.dataSourceSettings.values;\n        for (var valueCnt = 0; valueCnt < this.parent.dataSourceSettings.values.length; valueCnt++) {\n            if (this.parent.dataSourceSettings.values[valueCnt].name === this.field) {\n                var dataSourceItem = valuefields[valueCnt];\n                dataSourceItem.type = aggregate;\n            }\n        }\n    };\n    Render.prototype.injectGridModules = function (parent) {\n        Grid.Inject(Freeze);\n        if (parent.allowExcelExport) {\n            Grid.Inject(ExcelExport);\n        }\n        if (parent.allowPdfExport) {\n            Grid.Inject(PdfExport);\n        }\n        Grid.Inject(Selection, Reorder, Resize);\n        if (this.gridSettings.contextMenuItems) {\n            Grid.Inject(ContextMenu);\n        }\n    };\n    /** @hidden */\n    Render.prototype.updateGridSettings = function () {\n        this.injectGridModules(this.parent);\n        this.parent.grid.allowResizing = this.gridSettings.allowResizing;\n        this.parent.grid.allowTextWrap = this.gridSettings.allowTextWrap;\n        this.parent.grid.allowReordering = (this.parent.showGroupingBar ? false : this.gridSettings.allowReordering);\n        this.parent.grid.allowSelection = this.gridSettings.allowSelection;\n        /* tslint:disable-next-line */\n        this.parent.grid.contextMenuItems = this.gridSettings.contextMenuItems;\n        this.parent.grid.selectedRowIndex = this.gridSettings.selectedRowIndex;\n        /* tslint:disable-next-line */\n        this.parent.grid.selectionSettings = this.gridSettings.selectionSettings;\n        this.parent.grid.textWrapSettings = this.gridSettings.textWrapSettings;\n        this.parent.grid.printMode = this.gridSettings.printMode;\n        this.parent.grid.rowHeight = this.gridSettings.rowHeight;\n        this.parent.grid.gridLines = this.gridSettings.gridLines;\n        if (this.parent.lastGridSettings) {\n            var keys = Object.keys(this.parent.lastGridSettings);\n            if (keys.indexOf('height') > -1) {\n                this.parent.grid.height = this.gridSettings.height;\n            }\n            if (keys.indexOf('width') > -1) {\n                this.parent.grid.width = this.gridSettings.width;\n            }\n            this.updatePivotColumns();\n            if (keys.indexOf('allowTextWrap') > -1) {\n                this.parent.layoutRefresh();\n            }\n        }\n        this.clearColumnSelection();\n    };\n    Render.prototype.updatePivotColumns = function () {\n        var keys = Object.keys(this.parent.lastGridSettings);\n        for (var colPos = 0; colPos < this.parent.pivotColumns.length; colPos++) {\n            var pivotColumn = this.parent.pivotColumns[colPos];\n            for (var keyPos = 0; keyPos < keys.length; keyPos++) {\n                var key = keys[keyPos];\n                /* tslint:disable-next-line */\n                if (!isNullOrUndefined(this.parent.pivotColumns[colPos][key])) {\n                    /* tslint:disable-next-line */\n                    pivotColumn[key] = this.parent.lastGridSettings[key];\n                }\n            }\n        }\n        this.parent.fillGridColumns(this.parent.grid.columns);\n    };\n    Render.prototype.clearColumnSelection = function () {\n        this.parent.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR).forEach(function (ele) {\n            ele.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n            ele.classList.remove(cls.SELECTED_BGCOLOR);\n        });\n    };\n    Render.prototype.appendValueSortIcon = function (cell, tCell, rCnt, cCnt) {\n        if (this.parent.enableValueSorting && this.parent.dataType === 'pivot') {\n            var vSort = this.parent.dataSourceSettings.valueSortSettings;\n            var len = (cell.type === 'grand sum' &&\n                this.parent.dataSourceSettings.values.length === 1 && !this.parent.dataSourceSettings.alwaysShowValueHeader) ? 0 :\n                (this.parent.dataSourceSettings.values.length > 1 || this.parent.dataSourceSettings.alwaysShowValueHeader) ?\n                    (this.parent.engineModule.headerContent.length - 1) :\n                    this.parent.dataSourceSettings.columns.length === 0 ? 0 : (this.parent.engineModule.headerContent.length - 1);\n            var lock = (vSort && vSort.headerText) ? cell.valueSort.levelName === vSort.headerText : cCnt === vSort.columnIndex;\n            if (vSort !== undefined && lock && rCnt === len && this.parent.dataSourceSettings.valueAxis === 'column') {\n                if (tCell.querySelector('.e-sortfilterdiv')) {\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-descending' : 'e-ascending');\n                    tCell.querySelector('.e-sortfilterdiv').classList.add(vSort.sortOrder === 'Descending' ?\n                        'e-icon-descending' : 'e-icon-ascending');\n                }\n                else {\n                    tCell.appendChild(createElement('div', {\n                        className: (vSort.sortOrder === 'Descending' ?\n                            'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                            'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                    }));\n                }\n                if (!isNullOrUndefined(cell.hasChild) && cell.type !== 'grand sum' && tCell.querySelector('.e-expand') &&\n                    (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'))) {\n                    var element = (tCell.querySelector('.e-icon-descending') || tCell.querySelector('.e-icon-ascending'));\n                    setStyleAttribute(element, { 'padding-top': '12px' });\n                }\n            }\n            // return tCell;\n        }\n        return tCell;\n    };\n    Render.prototype.onResizeStop = function (args) {\n        /* tslint:disable-next-line */\n        var column = args.column.field === '0.formattedText' ? '0.formattedText' : args.column.customAttributes.cell.valueSort.levelName;\n        this.parent.resizeInfo[column] = Number(args.column.width.toString().split('px')[0]);\n        this.setGroupWidth(args);\n        this.calculateGridHeight(true);\n        this.parent.grid.hideScroll();\n    };\n    Render.prototype.setGroupWidth = function (args) {\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n            if (this.parent.element.querySelector('.e-group-row').offsetWidth < 245 && !this.parent.firstColWidth) {\n                args.cancel = true;\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    gridColumn[0].width = this.resColWidth;\n                }\n                this.parent.element.querySelector('.e-frozenheader').querySelector('col').style.width = (this.resColWidth + 'px');\n                this.parent.element.querySelector('.e-frozencontent').querySelector('col').style.width = (this.resColWidth + 'px');\n            }\n            this.parent.element.querySelector('.e-group-rows').style.height = 'auto';\n            this.parent.element.querySelector('.e-group-values').style.width =\n                this.parent.element.querySelector('.e-group-row').offsetWidth + 'px';\n            var firstRowHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n            this.parent.element.querySelector('.e-group-rows').style.height = firstRowHeight + 'px';\n        }\n        this.parent.trigger(args.e.type === 'touchend' || args.e.type === 'mouseup' ? events.resizeStop : events.resizing, args);\n    };\n    /* tslint:disable */\n    /** @hidden */\n    Render.prototype.selected = function () {\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.onSelect.bind(this), 300);\n    };\n    Render.prototype.onSelect = function () {\n        var pivotArgs = { selectedCellsInfo: [], pivotValues: this.parent.pivotValues, currentCell: null };\n        /* tslint:disable-next-line */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.engine.pivotValues[rowIndex][colIndex];\n            if (cell) {\n                if (cell.axis === 'value') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.value,\n                        columnHeaders: cell.columnHeaders,\n                        rowHeaders: cell.rowHeaders,\n                        measure: cell.actualText.toString()\n                    });\n                }\n                else if (cell.axis === 'column') {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: cell.valueSort.levelName,\n                        rowHeaders: '',\n                        measure: ''\n                    });\n                }\n                else {\n                    pivotArgs.selectedCellsInfo.push({\n                        currentCell: cell,\n                        value: cell.formattedText,\n                        columnHeaders: '',\n                        rowHeaders: cell.valueSort.levelName,\n                        measure: ''\n                    });\n                }\n            }\n        }\n        this.parent.trigger(events.cellSelected, pivotArgs);\n    };\n    Render.prototype.rowCellBoundEvent = function (args) {\n        var tCell = args.cell;\n        /* tslint:disable-next-line */\n        if (tCell && !this.parent.isEmptyGrid) {\n            var customClass = this.parent.hyperlinkSettings.cssClass;\n            tCell.setAttribute('index', (Number(tCell.getAttribute('index')) + this.engine.headerContent.length).toString());\n            var cell = args.data[0];\n            if (tCell.getAttribute('aria-colindex') === '0') {\n                if (this.parent.dataType === 'pivot') {\n                    var isValueCell = cell.type && cell.type === 'value';\n                    tCell.innerText = '';\n                    var level = cell.level ? cell.level : (isValueCell ? (this.lastSpan + 1) : 0);\n                    do {\n                        if (level > 0) {\n                            tCell.appendChild(createElement('span', {\n                                className: level === 0 ? '' : cls.NEXTSPAN,\n                            }));\n                        }\n                        level--;\n                    } while (level > -1);\n                    level = cell.level ? cell.level : 0;\n                    this.lastSpan = !isValueCell ? level : this.lastSpan;\n                    if (!cell.hasChild && level > 0) {\n                        tCell.appendChild(createElement('span', {\n                            className: cls.LASTSPAN,\n                        }));\n                    }\n                    var fieldName = void 0;\n                    if ((this.parent.dataSourceSettings.rows.length > 0 &&\n                        (cell.valueSort ? Object.keys(cell.valueSort).length > 0 : true))) {\n                        fieldName = level > -1 ? this.parent.dataSourceSettings.rows[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapRowCellBoundEvent(tCell, cell);\n                }\n                var localizedText = cell.formattedText;\n                if (cell.type) {\n                    if (cell.type === 'grand sum') {\n                        tCell.classList.add('e-gtot');\n                        localizedText = this.parent.localeObj.getConstant('grandTotal');\n                    }\n                    else {\n                        tCell.classList.add('e-stot');\n                    }\n                }\n                tCell.classList.add(cls.ROWSHEADER);\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    tCell.appendChild(createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    }));\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    /* tslint:disable-next-line */\n                    innerHTML: (this.parent.isRowCellHyperlink || cell.enableHyperlink ? '<a  data-url=\"' + localizedText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + localizedText + '</a>' : localizedText)\n                }));\n                var vSort = this.parent.pivotView.dataSourceSettings.valueSortSettings;\n                if (this.parent.enableValueSorting) {\n                    if (vSort && vSort.headerText && this.parent.dataSourceSettings.valueAxis === 'row'\n                        && this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName) {\n                        if (this.parent.pivotValues[Number(tCell.getAttribute('index'))][0].valueSort.levelName\n                            === vSort.headerText) {\n                            var style = (tCell.querySelector('.e-expand') || tCell.querySelector('.e-collapse')) ?\n                                'padding-top: 18px' : 'padding-top: 12px';\n                            tCell.appendChild(createElement('div', {\n                                className: (vSort.sortOrder === 'Descending' ?\n                                    'e-icon-descending e-icons e-descending e-sortfilterdiv' :\n                                    'e-icon-ascending e-icons e-ascending e-sortfilterdiv'),\n                                styles: style\n                            }));\n                        }\n                    }\n                }\n            }\n            else {\n                var innerText = tCell.innerText;\n                tCell.innerText = '';\n                tCell.classList.add(cls.VALUESCONTENT);\n                cell = args.data[Number(tCell.getAttribute('aria-colindex'))];\n                if (cell.isSum) {\n                    tCell.classList.add(cls.SUMMARY);\n                }\n                if (cell.cssClass) {\n                    tCell.classList.add(cell.cssClass);\n                }\n                tCell.appendChild(createElement('span', {\n                    className: cls.CELLVALUE,\n                    innerHTML: ((tCell.className.indexOf('e-summary') !== -1 && this.parent.isSummaryCellHyperlink) ||\n                        (tCell.className.indexOf('e-summary') === -1 && this.parent.isValueCellHyperlink) || cell.enableHyperlink ?\n                        '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>' : innerText)\n                }));\n                if (this.parent.gridSettings.allowReordering && !this.parent.showGroupingBar) {\n                    tCell.setAttribute('aria-colindex', args.column.customAttributes.cell.colIndex.toString());\n                }\n            }\n            if (this.parent.cellTemplate) {\n                var index = tCell.getAttribute('index');\n                var colindex = tCell.getAttribute('aria-colindex');\n                var templateID = index + '_' + colindex;\n                /* tslint:disable-next-line */\n                if (!(window && isBlazor())) {\n                    /* tslint:disable-next-line */\n                    var element = this.parent.getCellTemplate()({ targetCell: tCell }, this.parent, 'cellTemplate', this.parent.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.parent.enableHtmlSanitizer) {\n                            this.parent.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.parent.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                else if (index && colindex) {\n                    this.parent.gridCellCollection[templateID] = tCell;\n                }\n            }\n            this.unWireEvents(tCell);\n            this.wireEvents(tCell);\n        }\n        args.pivotview = this.parent;\n        this.parent.trigger(events.queryCellInfo, args);\n    };\n    /* tslint:disable */\n    Render.prototype.onOlapRowCellBoundEvent = function (tCell, cell) {\n        tCell.innerText = '';\n        var rowMeasurePos = this.engine.rowMeasurePos;\n        if (this.parent.enableVirtualization) {\n            if (cell.ordinal > -1 && this.parent.olapEngineModule.tupRowInfo.length > 0) {\n                var tupInfo = this.parent.olapEngineModule.tupRowInfo[cell.ordinal];\n                var memberPosition = tupInfo.uNameCollection.indexOf(cell.actualText.toString());\n                var cropUName = tupInfo.uNameCollection.substring(0, memberPosition) +\n                    (cell.memberType === 3 ? '' : cell.actualText.toString());\n                var fieldSep = cropUName.split('::').filter(function (item) { return item !== ''; });\n                if (cell.memberType === 3 && rowMeasurePos === fieldSep.length) {\n                    fieldSep.push(cell.actualText.toString());\n                }\n                var nxtIndextCount = -1;\n                var lastIndextCount = 0;\n                var prevHasChild = false;\n                for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                    var fieldMembers = fieldSep[fPos];\n                    var membersCount = fieldMembers.split('~~').length;\n                    nxtIndextCount += membersCount;\n                    var hasChild = Number(tupInfo.members[fPos].querySelector('CHILDREN_CARDINALITY').textContent) > 0;\n                    lastIndextCount += (fPos > 0 && prevHasChild && !hasChild) ? 1 : 0;\n                    prevHasChild = hasChild;\n                }\n                var indent = 0;\n                for (var iPos = 0; iPos < nxtIndextCount; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                for (var iPos = 0; iPos < lastIndextCount && nxtIndextCount > 0; iPos++) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                this.indentCollection[cell.rowIndex] = indent;\n                this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n            }\n        }\n        else {\n            var hierarchyName = cell.hierarchy;\n            var levelName = cell.memberType === 3 ? (this.measurePos + '.' + cell.levelUniqueName) : cell.levelUniqueName;\n            var hasChild = cell.hasChild;\n            if (!this.lvlCollection[levelName] && levelName) {\n                this.lvlPosCollection[this.position] = levelName;\n                this.lvlCollection[levelName] = { position: this.position, hasChild: hasChild };\n                this.position++;\n            }\n            else if (levelName) {\n                var currPos_1 = this.lvlCollection[levelName].position;\n                for (var pos = currPos_1 + 1; pos < this.position; pos++) {\n                    delete this.lvlCollection[this.lvlPosCollection[pos]];\n                    delete this.lvlPosCollection[pos];\n                }\n                this.position = this.position > (currPos_1 + 1) ? (currPos_1 + 1) : this.position;\n            }\n            if (!this.hierarchyCollection[hierarchyName] && hierarchyName) {\n                this.hierarchyPosCollection[this.hierarchyCount] = hierarchyName;\n                this.hierarchyCollection[hierarchyName] = {\n                    lvlPosition: this.position - 1,\n                    hierarchyPOs: this.hierarchyCount\n                };\n                this.hierarchyCount++;\n            }\n            else if (hierarchyName) {\n                var currPos_2 = this.hierarchyCollection[hierarchyName].hierarchyPOs;\n                for (var pos = currPos_2 + 1; pos < this.hierarchyCount; pos++) {\n                    delete this.hierarchyCollection[this.hierarchyPosCollection[pos]];\n                    delete this.hierarchyPosCollection[pos];\n                }\n                this.hierarchyCount = this.hierarchyCount > (currPos_2 + 1) ? (currPos_2 + 1) : this.hierarchyCount;\n            }\n            if (cell.memberType !== 3 && levelName && this.lvlCollection[levelName]) {\n                var currHierarchyPos = this.hierarchyCollection[hierarchyName] ?\n                    this.hierarchyCollection[hierarchyName].hierarchyPOs : -1;\n                this.measurePos = rowMeasurePos <= currHierarchyPos && this.hierarchyPosCollection[rowMeasurePos + 1] ?\n                    this.measurePos : this.lvlCollection[levelName].position;\n            }\n            var currPos = this.lvlCollection[levelName] ? this.lvlCollection[levelName].position : -1;\n            var lvlPos = 0;\n            var indent = 0;\n            while (lvlPos <= currPos && currPos > 0 && cell.level > -1) {\n                var hasChild_1 = this.lvlCollection[this.lvlPosCollection[lvlPos]].hasChild;\n                var prevHasChild = lvlPos > 0 ? this.lvlCollection[this.lvlPosCollection[lvlPos - 1]].hasChild : false;\n                if (prevHasChild && !hasChild_1) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.LASTSPAN,\n                    }));\n                }\n                if (lvlPos !== currPos) {\n                    tCell.appendChild(createElement('span', {\n                        className: cls.NEXTSPAN,\n                    }));\n                    indent++;\n                }\n                lvlPos++;\n            }\n            if (cell.memberType === 3 && cell.level === -1 && Object.keys(this.lvlCollection).length > 1) {\n                tCell.appendChild(createElement('span', {\n                    className: cls.NEXTSPAN,\n                }));\n                indent++;\n            }\n            this.indentCollection[cell.rowIndex] = indent;\n            this.maxIndent = this.maxIndent > indent ? this.maxIndent : indent;\n        }\n        tCell.setAttribute('fieldname', cell.hierarchy);\n        return tCell;\n    };\n    /* tslint:enable */\n    Render.prototype.columnCellBoundEvent = function (args) {\n        if (args.cell.column && args.cell.column.customAttributes) {\n            var cell = args.cell.column.customAttributes.cell;\n            var tCell = args.node;\n            if (cell) {\n                var customClass = this.parent.hyperlinkSettings.cssClass;\n                var level = cell.level ? cell.level : 0;\n                if ((cell.level === -1 && !cell.rowSpan) || cell.rowSpan === -1) {\n                    args.node.style.display = 'none';\n                }\n                else if (cell.rowSpan > 1) {\n                    args.node.setAttribute('rowspan', cell.rowSpan.toString());\n                    args.node.setAttribute('aria-rowspan', cell.rowSpan.toString());\n                    if ((cell.rowIndex + cell.rowSpan) === this.engine.headerContent.length) {\n                        args.node.style.borderBottomWidth = '0px';\n                    }\n                }\n                args.node.setAttribute('aria-colindex', cell.colIndex.toString());\n                args.node.setAttribute('index', cell.rowIndex.toString());\n                var fieldName = void 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (!(this.parent.dataSourceSettings.values && this.parent.dataSourceSettings.valueAxis === 'column' &&\n                        this.parent.dataSourceSettings.values.length > 1 &&\n                        (cell.rowIndex === this.engine.headerContent.length - 1)) && this.parent.dataSourceSettings.columns &&\n                        this.parent.dataSourceSettings.columns.length > 0) {\n                        fieldName = level > -1 && this.parent.dataSourceSettings.columns[level] ?\n                            this.parent.dataSourceSettings.columns[level].name : '';\n                        tCell.setAttribute('fieldname', fieldName);\n                    }\n                }\n                else {\n                    tCell = this.onOlapColumnCellBoundEvent(tCell, cell);\n                }\n                if (cell.type) {\n                    tCell.classList.add(cell.type === 'grand sum' ? 'e-gtot' : 'e-stot');\n                    var localizedText = cell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                        cell.formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total');\n                    if (tCell.querySelector('.e-headertext') !== null) {\n                        tCell.querySelector('.e-headertext').innerText = localizedText;\n                    }\n                    else {\n                        tCell.querySelector('.e-stackedheadercelldiv').innerText = localizedText;\n                    }\n                }\n                tCell.classList.add(cls.COLUMNSHEADER);\n                if (this.parent.isColumnCellHyperlink || cell.enableHyperlink) {\n                    if (tCell.querySelector('.e-stackedheadercelldiv')) {\n                        var innerText = tCell.querySelector('.e-stackedheadercelldiv').innerText;\n                        tCell.querySelector('.e-stackedheadercelldiv').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                    else if (tCell.querySelector('.e-headertext')) {\n                        var innerText = tCell.querySelector('.e-headertext').innerText;\n                        tCell.querySelector('.e-headertext').innerHTML =\n                            '<a data-url=\"' + innerText + '\" class=\"e-hyperlinkcell ' + customClass + '\">' + innerText + '</a>';\n                    }\n                }\n                if (cell.hasChild === true && !cell.isNamedSet) {\n                    var hdrdiv = tCell.querySelector('.e-headercelldiv');\n                    if (hdrdiv) {\n                        hdrdiv.style.height = 'auto';\n                        hdrdiv.style.lineHeight = 'normal';\n                    }\n                    var div = createElement('div', {\n                        className: (cell.isDrilled === true ? cls.COLLAPSE : cls.EXPAND) + ' ' + cls.ICON,\n                        attrs: {\n                            'title': cell.isDrilled === true ? this.parent.localeObj.getConstant('collapse') :\n                                this.parent.localeObj.getConstant('expand')\n                        }\n                    });\n                    tCell.children[0].classList.add(cls.CELLVALUE);\n                    if (window.navigator.userAgent.indexOf('Edge') > -1 || window.navigator.userAgent.indexOf('Trident') > -1) {\n                        tCell.children[0].style.display = 'table';\n                    }\n                    else {\n                        tCell.children[0].style.display = 'block';\n                    }\n                    tCell.insertBefore(div, tCell.children[0]);\n                }\n                tCell = this.appendValueSortIcon(cell, tCell, cell.rowIndex, cell.colIndex);\n                if (this.parent.cellTemplate) {\n                    var index = tCell.getAttribute('index');\n                    var colindex = tCell.getAttribute('aria-colindex');\n                    var templateID = index + '_' + colindex;\n                    /* tslint:disable-next-line */\n                    if (!(window && isBlazor())) {\n                        this.parent.gridHeaderCellInfo.push({ targetCell: tCell });\n                    }\n                    else if (index && colindex) {\n                        this.parent.gridCellCollection[templateID] = tCell;\n                    }\n                }\n                var field = void 0;\n                var len = this.parent.dataSourceSettings.values.length;\n                for (var vCnt = 0; vCnt < len; vCnt++) {\n                    if (this.parent.dataSourceSettings.values[vCnt].name === cell.actualText) {\n                        tCell.classList.add(cls.VALUESHEADER);\n                    }\n                }\n                this.unWireEvents(tCell);\n                this.wireEvents(tCell);\n            }\n        }\n        this.parent.trigger(events.headerCellInfo, args);\n    };\n    Render.prototype.onOlapColumnCellBoundEvent = function (tCell, cell) {\n        tCell.setAttribute('fieldname', cell.memberType === 3 ? cell.actualText.toString() : cell.hierarchy);\n        var prevCell = this.engine.headerContent[cell.rowIndex] ?\n            this.engine.headerContent[cell.rowIndex][cell.colIndex - 1] : undefined;\n        if (prevCell && prevCell.actualText === cell.actualText && prevCell.type === cell.type &&\n            (cell.memberType === 3 ? true : prevCell.colSpan > 1)) {\n            tCell.style.display = 'none';\n        }\n        else {\n            tCell.setAttribute('colspan', cell.colSpan.toString());\n            tCell.setAttribute('aria-colspan', cell.colSpan.toString());\n        }\n        if (cell.rowIndex === (this.engine.headerContent.length - 1) && cell.memberType === 2) {\n            tCell.style.display = this.isSpannedCell(this.engine.headerContent.length, cell) ? 'none' : tCell.style.display;\n        }\n        return tCell;\n    };\n    Render.prototype.isSpannedCell = function (colLength, currCell) {\n        var prevCell = this.engine.headerContent[currCell.rowIndex - 1] ?\n            this.engine.headerContent[currCell.rowIndex - 1][currCell.colIndex] : undefined;\n        var parentCellSpan;\n        var parentCellPos;\n        while (prevCell && ((prevCell.memberType === currCell.memberType) || (prevCell.type && currCell.type))) {\n            if (prevCell.rowSpan > 0) {\n                parentCellSpan = prevCell.rowSpan;\n                parentCellPos = prevCell.rowIndex;\n            }\n            prevCell = this.engine.headerContent[prevCell.rowIndex - 1] ?\n                this.engine.headerContent[prevCell.rowIndex - 1][currCell.colIndex] : undefined;\n        }\n        return (parentCellPos + parentCellSpan) >= colLength;\n    };\n    Render.prototype.onHyperCellClick = function (e) {\n        var cell = e.target.parentElement.parentElement;\n        cell = (cell.className.indexOf('e-headercelldiv') > -1 ? cell.parentElement : cell);\n        var args = {\n            currentCell: cell,\n            data: this.engine.pivotValues[Number(cell.getAttribute('index'))][Number(cell.getAttribute('aria-colindex'))],\n            cancel: true\n        };\n        this.parent.trigger(events.hyperlinkCellClick, args, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                args.currentCell = getElement(args.currentCell);\n                var url = args.currentCell.getAttribute('data-url') ? (args.currentCell).getAttribute('data-url') :\n                    args.currentCell.querySelector('a').getAttribute('data-url');\n                window.open(url);\n            }\n        });\n    };\n    Render.prototype.getRowStartPos = function () {\n        var pivotValues = this.parent.pivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        return rowPos;\n    };\n    Render.prototype.frameDataSource = function (type) {\n        var dataContent = [];\n        if (this.parent.dataSourceSettings.values.length > 0 && !this.engine.isEmptyData) {\n            if ((this.parent.enableValueSorting) || !this.engine.isEngineUpdated) {\n                var rowCnt = 0;\n                var pivotValues = this.parent.pivotValues;\n                var start = type === 'value' ? this.rowStartPos : 0;\n                var end = type === 'value' ? pivotValues.length : this.rowStartPos;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n            else {\n                dataContent = type === 'value' ? this.engine.valueContent : this.engine.headerContent;\n            }\n        }\n        else {\n            dataContent = this.frameEmptyData();\n        }\n        return dataContent;\n    };\n    /** @hidden */\n    /* tslint:disable-next-line */\n    Render.prototype.frameEmptyData = function () {\n        /* tslint:disable-next-line */\n        var dataContent = [{\n                0: { formattedText: this.parent.localeObj.getConstant('grandTotal') },\n                1: { formattedText: this.parent.localeObj.getConstant('emptyData') }\n            }];\n        return dataContent;\n    };\n    Render.prototype.calculateColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        colCount = colCount - 1;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.resizeColWidth = function (colCount) {\n        var parWidth = isNaN(this.parent.width) ? (this.parent.width.toString().indexOf('%') > -1 ?\n            ((parseFloat(this.parent.width.toString()) / 100) * this.parent.element.offsetWidth) : this.parent.element.offsetWidth) :\n            Number(this.parent.width);\n        colCount = colCount - 1;\n        parWidth = parWidth - (this.gridSettings.columnWidth > this.resColWidth ? this.gridSettings.columnWidth : this.resColWidth) - 2;\n        var colWidth = (colCount * this.gridSettings.columnWidth) < parWidth ? (parWidth / colCount) : this.gridSettings.columnWidth;\n        return Math.floor(colWidth);\n    };\n    Render.prototype.calculateGridWidth = function () {\n        var parWidth = this.parent.width;\n        var eleWidth = this.parent.element.getBoundingClientRect().width ?\n            this.parent.element.getBoundingClientRect().width : this.parent.element.offsetWidth;\n        if (this.gridSettings.width === 'auto') {\n            if (this.parent.width === 'auto') {\n                parWidth = eleWidth;\n            }\n            else if (this.parent.width.toString().indexOf('%') > -1) {\n                parWidth = ((parseFloat(this.parent.width.toString()) / 100) * eleWidth);\n            }\n        }\n        else {\n            parWidth = this.gridSettings.width;\n        }\n        return parWidth;\n    };\n    /** @hidden */\n    Render.prototype.calculateGridHeight = function (elementCreated) {\n        var gridHeight = this.parent.height;\n        var parHeight = this.parent.getHeightAsNumber();\n        if (isNaN(parHeight)) {\n            parHeight = this.parent.element.offsetHeight > 0 ? this.parent.element.offsetHeight : 1;\n        }\n        if (this.parent.currentView !== 'Chart') {\n            if (this.gridSettings.height === 'auto' && parHeight && this.parent.element.querySelector('.' + cls.GRID_HEADER)) {\n                var rowColHeight = this.parent.element.querySelector('.' + cls.GRID_HEADER).offsetHeight;\n                var gBarHeight = rowColHeight + (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS) ?\n                    this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS).offsetHeight : 0);\n                var toolBarHeight = this.parent.element.querySelector('.' + cls.GRID_TOOLBAR) ? 42 : 0;\n                gridHeight = parHeight - (gBarHeight + toolBarHeight) - 1;\n                if (elementCreated) {\n                    var tableHeight = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV + ' .' + cls.TABLE).offsetHeight;\n                    var contentHeight = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetHeight;\n                    var tableWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV + ' .' + cls.TABLE).offsetWidth;\n                    var contentWidth = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).offsetWidth;\n                    var horizontalOverflow = contentWidth < tableWidth;\n                    var verticalOverflow = contentHeight < tableHeight;\n                    var commonOverflow = horizontalOverflow && ((gridHeight - tableHeight) < 18) ? true : false;\n                    if (gridHeight >= tableHeight && (horizontalOverflow ? gridHeight >= contentHeight : true) &&\n                        !verticalOverflow && !commonOverflow) {\n                        this.parent.grid.height = 'auto';\n                    }\n                    else {\n                        this.parent.grid.height = gridHeight;\n                    }\n                }\n                else {\n                    if (gridHeight > (this.engine.valueContent.length * this.gridSettings.rowHeight)) {\n                        gridHeight = 'auto';\n                    }\n                }\n            }\n            else {\n                gridHeight = this.gridSettings.height;\n            }\n        }\n        return gridHeight < this.parent.gridSettings.rowHeight ? this.parent.gridSettings.rowHeight : gridHeight;\n    };\n    Render.prototype.frameStackedHeaders = function () {\n        var integrateModel = [];\n        if ((this.parent.dataType === 'olap' ? true : this.parent.dataSourceSettings.values.length > 0) && !this.engine.isEmptyData) {\n            var headerCnt = this.engine.headerContent.length;\n            var headerSplit = [];\n            var splitPos = [];\n            var colWidth = this.calculateColWidth(this.engine.pivotValues[0].length);\n            do {\n                var columnModel = [];\n                var actualCnt = 0;\n                headerCnt--;\n                var colField = this.engine.headerContent[headerCnt];\n                if (colField) {\n                    for (var cCnt = 0; cCnt < Object.keys(colField).length + (colField[0] ? 0 : 1); cCnt++) {\n                        var colSpan = (colField[cCnt] && colField[cCnt].colSpan) ?\n                            ((colField[cCnt].memberType !== 3 || headerCnt === 0) ?\n                                colField[cCnt].colSpan : headerSplit[cCnt]) : 1;\n                        colSpan = this.parent.dataType === 'olap' ? 1 : colSpan;\n                        var rowSpan = (colField[cCnt] && colField[cCnt].rowSpan) ? colField[cCnt].rowSpan : 1;\n                        var formattedText = colField[cCnt] ? (colField[cCnt].type === 'grand sum' ?\n                            this.parent.localeObj.getConstant('grandTotal') : (colField[cCnt].type === 'sum' ?\n                            colField[cCnt].formattedText.split('Total')[0] + this.parent.localeObj.getConstant('total') :\n                            colField[cCnt].formattedText)) : '';\n                        if (headerCnt === this.engine.headerContent.length - 1) {\n                            colSpan = 1;\n                            columnModel[actualCnt] = {\n                                field: (cCnt + '.formattedText'),\n                                headerText: formattedText,\n                                customAttributes: { 'cell': colField[cCnt] },\n                                /* tslint:disable-next-line */\n                                width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) : this.resColWidth,\n                                minWidth: 30,\n                                format: cCnt === 0 ? '' : this.formatList[colField[cCnt].actualText],\n                                allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                allowResizing: this.parent.gridSettings.allowResizing,\n                                visible: true\n                            };\n                        }\n                        else if (headerSplit[cCnt]) {\n                            colSpan = (colField[cCnt] && colField[cCnt].type === 'grand sum' &&\n                                colField[cCnt].memberType === 2) ? 1 : colSpan;\n                            var tmpSpan = colSpan;\n                            var innerModel = [];\n                            var innerPos = cCnt;\n                            while (tmpSpan > 0) {\n                                if (columnModel[actualCnt]) {\n                                    if (!integrateModel[splitPos[innerPos]]) {\n                                        break;\n                                    }\n                                    innerModel.push(integrateModel[splitPos[innerPos]]);\n                                }\n                                else {\n                                    columnModel[actualCnt] = {\n                                        headerText: formattedText,\n                                        /* tslint:disable-next-line */\n                                        field: colField[cCnt] ? colField[cCnt].valueSort.levelName : '',\n                                        customAttributes: { 'cell': colField[cCnt] },\n                                        /* tslint:disable-next-line */\n                                        width: colField[cCnt] ? this.setSavedWidth(colField[cCnt].valueSort.levelName, colWidth) :\n                                            this.resColWidth,\n                                        minWidth: 30,\n                                        allowReordering: (this.parent.showGroupingBar ? false : this.parent.gridSettings.allowReordering),\n                                        allowResizing: this.parent.gridSettings.allowResizing,\n                                        visible: true\n                                    };\n                                    innerModel = [integrateModel[splitPos[innerPos]]];\n                                }\n                                tmpSpan = tmpSpan - headerSplit[innerPos];\n                                innerPos = innerPos + headerSplit[innerPos];\n                            }\n                            columnModel[actualCnt].columns = innerModel;\n                        }\n                        if (columnModel[actualCnt]) {\n                            columnModel[actualCnt].clipMode = this.gridSettings.clipMode;\n                        }\n                        headerSplit[cCnt] = colSpan;\n                        splitPos[cCnt] = actualCnt;\n                        actualCnt++;\n                        cCnt = cCnt + colSpan - 1;\n                    }\n                }\n                integrateModel = columnModel.length > 0 ? columnModel : integrateModel;\n            } while (headerCnt > 0);\n            integrateModel[0] = {\n                field: (0 + '.formattedText'),\n                width: this.resColWidth,\n                minWidth: 30,\n                headerText: '',\n                allowReordering: false,\n                allowResizing: this.parent.gridSettings.allowResizing,\n                visible: true\n            };\n        }\n        else {\n            integrateModel = this.frameEmptyColumns();\n        }\n        if (integrateModel.length > 1) {\n            integrateModel[integrateModel.length - 1].minWidth = integrateModel[integrateModel.length - 1].width;\n            integrateModel[integrateModel.length - 1].width = 'auto';\n        }\n        this.parent.triggerColumnRenderEvent(integrateModel);\n        return integrateModel;\n    };\n    /** @hidden */\n    Render.prototype.setSavedWidth = function (column, width) {\n        width = this.parent.resizeInfo[column] ? this.parent.resizeInfo[column] : width;\n        return width;\n    };\n    /** @hidden */\n    Render.prototype.frameEmptyColumns = function () {\n        var columns = [];\n        var colWidth = this.calculateColWidth(2);\n        columns.push({ field: '0.formattedText', headerText: '', minWidth: 30, width: this.resColWidth });\n        /* tslint:disable-next-line */\n        columns.push({ field: '1.formattedText', headerText: this.parent.localeObj.getConstant('grandTotal'), minWidth: 30, width: colWidth });\n        return columns;\n    };\n    /** @hidden */\n    Render.prototype.getFormatList = function () {\n        var formatArray = {};\n        for (var vCnt = 0; vCnt < this.parent.dataSourceSettings.values.length; vCnt++) {\n            var field = this.parent.dataSourceSettings.values[vCnt];\n            var format = 'N';\n            if (this.parent.dataType === 'olap') {\n                if (this.parent.olapEngineModule.fieldList[field.name]) {\n                    var fString = this.parent.olapEngineModule.fieldList[field.name].formatString;\n                    format = fString.indexOf('#') > -1 ? fString : (fString[0] + '2');\n                }\n            }\n            else {\n                if (this.parent.dataSourceSettings.formatSettings.length > 0) {\n                    for (var fCnt = 0; fCnt < this.parent.dataSourceSettings.formatSettings.length; fCnt++) {\n                        var formatSettings = this.parent.dataSourceSettings.formatSettings[fCnt];\n                        if (field.name === formatSettings.name) {\n                            format = formatSettings.format;\n                            break;\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                }\n            }\n            formatArray[field.name] = format;\n        }\n        return formatArray;\n    };\n    Render.prototype.excelColumnEvent = function (args) {\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.excelHeaderQueryCellInfo, args);\n    };\n    Render.prototype.pdfColumnEvent = function (args) {\n        args = this.exportHeaderEvent(args);\n        this.parent.trigger(events.pdfHeaderQueryCellInfo, args);\n    };\n    Render.prototype.excelRowEvent = function (args) {\n        if (args.column.field === '0.formattedText') {\n            var isValueCell = args.data[0].type === 'value';\n            var level = 0;\n            if (this.parent.dataType === 'olap') {\n                /* tslint:disable-next-line */\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level;\n            }\n            this.colPos = 0;\n            args.style = { hAlign: 'Left', indent: level * 2 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        else {\n            this.colPos++;\n            /* tslint:disable-next-line */\n            if (isNullOrUndefined(args.data[this.colPos].value) || isNullOrUndefined(args.data[this.colPos].formattedText)) {\n                args.value = '';\n            }\n            else {\n                /* tslint:disable-next-line */\n                args.value = args.data[this.colPos].value || args.data[this.colPos].formattedText;\n            }\n        }\n        args = this.exportContentEvent(args);\n        this.parent.trigger(events.excelQueryCellInfo, args);\n    };\n    /* tslint:disable:no-any */\n    Render.prototype.pdfRowEvent = function (args) {\n        args = this.exportContentEvent(args);\n        if (args.column.field === '0.formattedText') {\n            var level = 0;\n            var isValueCell = args.data[0].type === 'value';\n            if (this.parent.dataType === 'olap') {\n                level = this.indentCollection[args.data[0].rowIndex];\n            }\n            else {\n                level = isValueCell ? (this.lastSpan + 1) : args.data[0].level !== -1 ?\n                    args.data[0].level : 0;\n            }\n            args.style = { paragraphIndent: level * 10 };\n            this.lastSpan = isValueCell ? this.lastSpan : level;\n        }\n        this.parent.trigger(events.pdfQueryCellInfo, args);\n    };\n    Render.prototype.exportHeaderEvent = function (args) {\n        var rowSpan = 1;\n        if (args.gridCell.column.customAttributes) {\n            var cell = args.gridCell.column.customAttributes.cell;\n            if (this.actualText !== cell.actualText && cell.colSpan > 1 && cell.level > -1) {\n                args.gridCell.colSpan = args.cell.colSpan = cell.colSpan > -1 ? cell.colSpan : 1;\n            }\n            rowSpan = cell.rowSpan > -1 ? cell.rowSpan : 1;\n            this.actualText = cell.actualText;\n        }\n        else {\n            rowSpan = Object.keys(this.engine.headerContent).length;\n        }\n        if (args.cell.rowSpan !== rowSpan && rowSpan > -1) {\n            args.cell.rowSpan = rowSpan;\n        }\n        return args;\n    };\n    Render.prototype.exportContentEvent = function (args) {\n        args.value = args.data[Number(args.column.field.split('.formattedText')[0])].type === 'grand sum' ?\n            this.parent.localeObj.getConstant('grandTotal') : args.value;\n        return args;\n    };\n    Render.prototype.unWireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.remove(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick);\n        }\n        else {\n            return;\n        }\n    };\n    Render.prototype.wireEvents = function (cell) {\n        if (cell.querySelector('.e-hyperlinkcell')) {\n            /* tslint:disable-next-line */\n            EventHandler.add(cell.querySelector('.e-hyperlinkcell'), this.parent.isAdaptive ? 'touchend' : 'click', this.onHyperCellClick, this);\n        }\n        else {\n            return;\n        }\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, Collection, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the fields in dataSource.\n */\nvar FieldOptions = /** @class */ (function (_super) {\n    __extends(FieldOptions, _super);\n    function FieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"caption\", void 0);\n    __decorate([\n        Property('Sum')\n    ], FieldOptions.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"axis\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"showNoDataItems\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseField\", void 0);\n    __decorate([\n        Property()\n    ], FieldOptions.prototype, \"baseItem\", void 0);\n    __decorate([\n        Property(true)\n    ], FieldOptions.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isNamedSet\", void 0);\n    __decorate([\n        Property(false)\n    ], FieldOptions.prototype, \"isCalculatedField\", void 0);\n    return FieldOptions;\n}(ChildProperty));\nexport { FieldOptions };\nvar FieldListFieldOptions = /** @class */ (function (_super) {\n    __extends(FieldListFieldOptions, _super);\n    function FieldListFieldOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldListFieldOptions;\n}(FieldOptions));\nexport { FieldListFieldOptions };\n/**\n * Configures the style settings.\n */\nvar Style = /** @class */ (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Style.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"color\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property()\n    ], Style.prototype, \"fontSize\", void 0);\n    return Style;\n}(ChildProperty));\nexport { Style };\n/**\n * Configures the filter settings.\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Filter.prototype, \"name\", void 0);\n    __decorate([\n        Property('Include')\n    ], Filter.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"items\", void 0);\n    __decorate([\n        Property('DoesNotEquals')\n    ], Filter.prototype, \"condition\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"measure\", void 0);\n    __decorate([\n        Property(1)\n    ], Filter.prototype, \"levelCount\", void 0);\n    __decorate([\n        Property()\n    ], Filter.prototype, \"selectedField\", void 0);\n    return Filter;\n}(ChildProperty));\nexport { Filter };\n/**\n * Configures the conditional format settings.\n */\nvar ConditionalFormatSettings = /** @class */ (function (_super) {\n    __extends(ConditionalFormatSettings, _super);\n    function ConditionalFormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"value2\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalFormatSettings.prototype, \"style\", void 0);\n    __decorate([\n        Property(true)\n    ], ConditionalFormatSettings.prototype, \"applyGrandTotals\", void 0);\n    return ConditionalFormatSettings;\n}(ChildProperty));\nexport { ConditionalFormatSettings };\n/**\n * Configures the sort settings.\n */\nvar Sort = /** @class */ (function (_super) {\n    __extends(Sort, _super);\n    function Sort() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Sort.prototype, \"name\", void 0);\n    __decorate([\n        Property('Ascending')\n    ], Sort.prototype, \"order\", void 0);\n    return Sort;\n}(ChildProperty));\nexport { Sort };\n/**\n * Configures the format settings of value fields.\n */\nvar FormatSettings = /** @class */ (function (_super) {\n    __extends(FormatSettings, _super);\n    function FormatSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumFractionDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumSignificantDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"maximumSignificantDigits\", void 0);\n    __decorate([\n        Property(true)\n    ], FormatSettings.prototype, \"useGrouping\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"skeleton\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"currency\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"minimumIntegerDigits\", void 0);\n    __decorate([\n        Property()\n    ], FormatSettings.prototype, \"format\", void 0);\n    return FormatSettings;\n}(ChildProperty));\nexport { FormatSettings };\n/**\n * Configures the group settings of fields.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"groupInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"startingAt\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"endingAt\", void 0);\n    __decorate([\n        Property('Date')\n    ], GroupSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"rangeInterval\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"caption\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"customGroups\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the custom group settings of fields.\n */\nvar CustomGroups = /** @class */ (function (_super) {\n    __extends(CustomGroups, _super);\n    function CustomGroups() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CustomGroups.prototype, \"groupName\", void 0);\n    __decorate([\n        Property([])\n    ], CustomGroups.prototype, \"items\", void 0);\n    return CustomGroups;\n}(ChildProperty));\nexport { CustomGroups };\n/**\n * Configures the calculatedfields settings.\n */\nvar CalculatedFieldSettings = /** @class */ (function (_super) {\n    __extends(CalculatedFieldSettings, _super);\n    function CalculatedFieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formula\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"hierarchyUniqueName\", void 0);\n    __decorate([\n        Property()\n    ], CalculatedFieldSettings.prototype, \"formatString\", void 0);\n    return CalculatedFieldSettings;\n}(ChildProperty));\nexport { CalculatedFieldSettings };\n/**\n * Configures drilled state of field members.\n */\nvar DrillOptions = /** @class */ (function (_super) {\n    __extends(DrillOptions, _super);\n    function DrillOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"items\", void 0);\n    __decorate([\n        Property()\n    ], DrillOptions.prototype, \"delimiter\", void 0);\n    return DrillOptions;\n}(ChildProperty));\nexport { DrillOptions };\n/**\n * Configures value sort settings.\n */\nvar ValueSortSettings = /** @class */ (function (_super) {\n    __extends(ValueSortSettings, _super);\n    function ValueSortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('.')\n    ], ValueSortSettings.prototype, \"headerDelimiter\", void 0);\n    __decorate([\n        Property('None')\n    ], ValueSortSettings.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property()\n    ], ValueSortSettings.prototype, \"measure\", void 0);\n    return ValueSortSettings;\n}(ChildProperty));\nexport { ValueSortSettings };\n/**\n * Configures the settings of dataSource.\n */\nvar DataSourceSettings = /** @class */ (function (_super) {\n    __extends(DataSourceSettings, _super);\n    function DataSourceSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"catalog\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"cube\", void 0);\n    __decorate([\n        Property('Relational')\n    ], DataSourceSettings.prototype, \"providerType\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"url\", void 0);\n    __decorate([\n        Property(1033)\n    ], DataSourceSettings.prototype, \"localeIdentifier\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"rows\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"values\", void 0);\n    __decorate([\n        Collection([], FieldOptions)\n    ], DataSourceSettings.prototype, \"filters\", void 0);\n    __decorate([\n        Property([])\n    ], DataSourceSettings.prototype, \"excludeFields\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"expandAll\", void 0);\n    __decorate([\n        Property('column')\n    ], DataSourceSettings.prototype, \"valueAxis\", void 0);\n    __decorate([\n        Collection([], Filter)\n    ], DataSourceSettings.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Collection([], Sort)\n    ], DataSourceSettings.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"enableSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"allowMemberFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowLabelFilter\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"allowValueFilter\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnSubTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showRowGrandTotals\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showColumnGrandTotals\", void 0);\n    __decorate([\n        Property(false)\n    ], DataSourceSettings.prototype, \"alwaysShowValueHeader\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showHeaderWhenEmpty\", void 0);\n    __decorate([\n        Property(true)\n    ], DataSourceSettings.prototype, \"showAggregationOnValueField\", void 0);\n    __decorate([\n        Collection([], FormatSettings)\n    ], DataSourceSettings.prototype, \"formatSettings\", void 0);\n    __decorate([\n        Collection([], DrillOptions)\n    ], DataSourceSettings.prototype, \"drilledMembers\", void 0);\n    __decorate([\n        Complex({}, ValueSortSettings)\n    ], DataSourceSettings.prototype, \"valueSortSettings\", void 0);\n    __decorate([\n        Collection([], CalculatedFieldSettings)\n    ], DataSourceSettings.prototype, \"calculatedFieldSettings\", void 0);\n    __decorate([\n        Collection([], ConditionalFormatSettings)\n    ], DataSourceSettings.prototype, \"conditionalFormatSettings\", void 0);\n    __decorate([\n        Property()\n    ], DataSourceSettings.prototype, \"emptyCellsTextContent\", void 0);\n    __decorate([\n        Collection([], GroupSettings)\n    ], DataSourceSettings.prototype, \"groupSettings\", void 0);\n    return DataSourceSettings;\n}(ChildProperty));\nexport { DataSourceSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event } from '@syncfusion/ej2-base';\n/**\n * Interface for a class SelectionSettings\n */\nvar PivotSelectionSettings = /** @class */ (function (_super) {\n    __extends(PivotSelectionSettings, _super);\n    function PivotSelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], PivotSelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], PivotSelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], PivotSelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], PivotSelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotSelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    return PivotSelectionSettings;\n}(ChildProperty));\nexport { PivotSelectionSettings };\n/**\n *  Represents Pivot widget model class.\n */\nvar GridSettings = /** @class */ (function (_super) {\n    __extends(GridSettings, _super);\n    function GridSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], GridSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Both')\n    ], GridSettings.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(true)\n    ], GridSettings.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(null)\n    ], GridSettings.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(110)\n    ], GridSettings.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], GridSettings.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(false)\n    ], GridSettings.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], GridSettings.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property({ mode: 'Row', cellSelectionMode: 'Flow', type: 'Single' })\n    ], GridSettings.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property({ WrapMode: 'Both' })\n    ], GridSettings.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], GridSettings.prototype, \"printMode\", void 0);\n    __decorate([\n        Property()\n    ], GridSettings.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], GridSettings.prototype, \"columnRender\", void 0);\n    return GridSettings;\n}(ChildProperty));\nexport { GridSettings };\n","import { Workbook } from '@syncfusion/ej2-excel-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid Excel Export module.\n     * @hidden\n     */\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Method to perform excel export.\n     * @hidden\n     */\n    ExcelExport.prototype.exportToExcel = function (type) {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues]\n        };\n        this.parent.trigger(events.beforeExport, args);\n        var fileName = args.fileName;\n        var header = args.header;\n        var footer = args.footer;\n        var dataCollections = args.dataCollections;\n        /** Fill data and export */\n        /* tslint:disable-next-line:no-any */\n        var workSheets = [];\n        for (var dataColl = 0; dataColl < dataCollections.length; dataColl++) {\n            var pivotValues = dataCollections[dataColl];\n            var colLen = 0;\n            var rowLen = pivotValues.length;\n            var actualrCnt = 0;\n            var formatList = this.parent.renderModule.getFormatList();\n            var rows = [];\n            var maxLevel = 0;\n            for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                if (pivotValues[rCnt]) {\n                    actualrCnt++;\n                    colLen = pivotValues[rCnt].length;\n                    var cells = [];\n                    for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                        if (pivotValues[rCnt][cCnt]) {\n                            var pivotCell = pivotValues[rCnt][cCnt];\n                            if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                var cellValue = pivotCell.axis === 'value' ? pivotCell.value : pivotCell.formattedText;\n                                if (pivotCell.type === 'grand sum') {\n                                    cellValue = this.parent.localeObj.getConstant('grandTotal');\n                                }\n                                else if (pivotCell.type === 'sum') {\n                                    cellValue = cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total'));\n                                }\n                                else {\n                                    cellValue = cellValue;\n                                }\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    cells.push({\n                                        index: cCnt + 1, value: cellValue,\n                                        colSpan: pivotCell.colSpan, rowSpan: (pivotCell.rowSpan === -1 ? 1 : pivotCell.rowSpan),\n                                    });\n                                    if (pivotCell.axis === 'value') {\n                                        if (isNaN(pivotCell.value) || pivotCell.formattedText === '' ||\n                                            pivotCell.formattedText === undefined || isNullOrUndefined(pivotCell.value)) {\n                                            cells[cells.length - 1].value = '';\n                                        }\n                                        var field = (this.parent.dataSourceSettings.valueAxis === 'row' &&\n                                            this.parent.dataType === 'olap' && pivotCell.rowOrdinal &&\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal]) ?\n                                            this.engine.tupRowInfo[pivotCell.rowOrdinal].measureName :\n                                            pivotCell.actualText;\n                                        cells[cells.length - 1].style = {\n                                            numberFormat: formatList[field], bold: false, wrapText: true\n                                        };\n                                        if (pivotCell.style) {\n                                            cells[cells.length - 1].style.backColor = pivotCell.style.backgroundColor;\n                                            cells[cells.length - 1].style.fontColor = pivotCell.style.color;\n                                            cells[cells.length - 1].style.fontName = pivotCell.style.fontFamily;\n                                            cells[cells.length - 1].style.fontSize = Number(pivotCell.style.fontSize.split('px')[0]);\n                                        }\n                                    }\n                                    else {\n                                        cells[cells.length - 1].style = {\n                                            bold: true, vAlign: 'Center', wrapText: true, indent: cCnt === 0 ? pivotCell.level * 10 : 0\n                                        };\n                                        if (pivotCell.axis === 'row' && cCnt === 0) {\n                                            cells[cells.length - 1].style.hAlign = 'Left';\n                                            if (this.parent.dataType === 'olap') {\n                                                var indent = this.parent.renderModule.indentCollection[rCnt];\n                                                cells[cells.length - 1].style.indent = indent * 2;\n                                                maxLevel = maxLevel > indent ? maxLevel : indent;\n                                            }\n                                            else {\n                                                cells[cells.length - 1].style.indent = pivotCell.level * 2;\n                                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                            }\n                                        }\n                                    }\n                                    cells[cells.length - 1].style.borders = { color: '#000000', lineStyle: 'Thin' };\n                                }\n                            }\n                            cCnt = cCnt + (pivotCell.colSpan ? (pivotCell.colSpan - 1) : 0);\n                        }\n                        else {\n                            cells.push({\n                                index: cCnt + 1, value: '', colSpan: 1, rowSpan: 1,\n                            });\n                        }\n                    }\n                    rows.push({ index: actualrCnt, cells: cells });\n                }\n            }\n            var columns = [];\n            for (var cCnt = 0; cCnt < colLen; cCnt++) {\n                columns.push({ index: cCnt + 1, width: 100 });\n            }\n            if (maxLevel > 0) {\n                columns[0].width = 100 + (maxLevel * 20);\n            }\n            workSheets.push({ columns: columns, rows: rows });\n        }\n        var book = new Workbook({ worksheets: workSheets }, type === 'Excel' ? 'xlsx' : 'csv');\n        book.save(fileName + (type === 'Excel' ? '.xlsx' : '.csv'));\n    };\n    /**\n     * To destroy the excel export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    ExcelExport.prototype.destroy = function () {\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { PdfGrid, PdfPen, PointF, PdfDocument, PdfStandardFont, PdfFontFamily, PdfSolidBrush, PdfColor, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfFontStyle, PdfPageTemplateElement, RectangleF, PdfBorders } from '@syncfusion/ej2-pdf-export';\nimport * as events from '../../common/base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\n/**\n * @hidden\n * `PDFExport` module is used to handle the PDF export action.\n */\nvar PDFExport = /** @class */ (function () {\n    /**\n     * Constructor for the PivotGrid PDF Export module.\n     * @hidden\n     */\n    function PDFExport(parent) {\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PDFExport.prototype.getModuleName = function () {\n        return 'pdfExport';\n    };\n    PDFExport.prototype.addPage = function (eventParams) {\n        var page = eventParams.document.pages.add();\n        var header = eventParams.args.header;\n        var footer = eventParams.args.footer;\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, 15, PdfFontStyle.Regular);\n        var brush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        var pen = new PdfPen(new PdfColor(0, 0, 0), .5);\n        /** Header and Footer to be set */\n        var headerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        headerTemplate.graphics.drawString(header, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.top = headerTemplate;\n        var footerTemplate = new PdfPageTemplateElement(new RectangleF(0, 0, page.graphics.clientSize.width, 20));\n        footerTemplate.graphics.drawString(footer, font, pen, brush, 0, 0, new PdfStringFormat(PdfTextAlignment.Center));\n        eventParams.document.template.bottom = footerTemplate;\n        return page;\n    };\n    PDFExport.prototype.hexDecToRgb = function (hexDec) {\n        if (hexDec === null || hexDec === '' || hexDec.length !== 7) {\n            throw new Error('please set valid hex value for color..');\n        }\n        hexDec = hexDec.substring(1);\n        var bigint = parseInt(hexDec, 16);\n        var r = (bigint >> 16) & 255;\n        var g = (bigint >> 8) & 255;\n        var b = bigint & 255;\n        return { r: r, g: g, b: b };\n    };\n    PDFExport.prototype.getFontStyle = function (theme) {\n        var fontType = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme) && theme.bold) {\n            fontType |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme) && theme.italic) {\n            fontType |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme) && theme.underline) {\n            fontType |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme) && theme.strikeout) {\n            fontType |= PdfFontStyle.Strikeout;\n        }\n        return fontType;\n    };\n    PDFExport.prototype.getBorderStyle = function (borderStyle) {\n        var borders = new PdfBorders();\n        if (!isNullOrUndefined(borderStyle)) {\n            var borderWidth = borderStyle.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? borderWidth * 0.75 : undefined;\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(borderStyle.color)) {\n                var borderColor = this.hexDecToRgb(borderStyle.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(borderStyle.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(borderStyle.dashStyle);\n            }\n            borders.all = pen;\n        }\n        else {\n            var pdfColor = new PdfColor(234, 234, 234);\n            borders.all = new PdfPen(pdfColor);\n        }\n        return borders;\n    };\n    PDFExport.prototype.getDashStyle = function (dashType) {\n        switch (dashType) {\n            case 'Dash':\n                return 1;\n            case 'Dot':\n                return 2;\n            case 'DashDot':\n                return 3;\n            case 'DashDotDot':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    PDFExport.prototype.getStyle = function () {\n        var border = new PdfBorders();\n        if (!isNullOrUndefined(this.gridStyle)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.header.fontName) ?\n                this.getFontFamily(this.gridStyle.header.fontName) : PdfFontFamily.Helvetica;\n            var fontStyle = this.getFontStyle(this.gridStyle.header);\n            var fontSize = !isNullOrUndefined(this.gridStyle.header.fontSize) ? this.gridStyle.header.fontSize : 10.5;\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.header.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.header.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.header.font)) {\n                font = this.gridStyle.header.font;\n            }\n            return {\n                border: this.getBorderStyle(this.gridStyle.header.border), font: font, brush: new PdfSolidBrush(pdfColor)\n            };\n        }\n        else {\n            return {\n                brush: new PdfSolidBrush(new PdfColor()),\n                border: border, font: undefined\n            };\n        }\n    };\n    PDFExport.prototype.setRecordThemeStyle = function (row, border) {\n        if (!isNullOrUndefined(this.gridStyle) && !isNullOrUndefined(this.gridStyle.record)) {\n            var fontFamily = !isNullOrUndefined(this.gridStyle.record.fontName) ?\n                this.getFontFamily(this.gridStyle.record.fontName) : PdfFontFamily.Helvetica;\n            var fontSize = !isNullOrUndefined(this.gridStyle.record.fontSize) ? this.gridStyle.record.fontSize : 9.75;\n            var fontStyle = this.getFontStyle(this.gridStyle.record);\n            var font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n            if (!isNullOrUndefined(this.gridStyle.record.font)) {\n                font = this.gridStyle.record.font;\n            }\n            row.style.setFont(font);\n            var pdfColor = new PdfColor();\n            if (!isNullOrUndefined(this.gridStyle.record.fontColor)) {\n                var penBrushColor = this.hexDecToRgb(this.gridStyle.record.fontColor);\n                pdfColor = new PdfColor(penBrushColor.r, penBrushColor.g, penBrushColor.b);\n            }\n            row.style.setTextBrush(new PdfSolidBrush(pdfColor));\n        }\n        var borderRecord = this.gridStyle && this.gridStyle.record &&\n            this.gridStyle.record.border ? this.getBorderStyle(this.gridStyle.record.border) : border;\n        row.style.setBorder(borderRecord);\n        return row;\n    };\n    /**\n     * Method to perform pdf export.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    PDFExport.prototype.exportToPDF = function () {\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var eventParams = this.applyEvent();\n        var headerStyle = this.getStyle();\n        var indent = this.parent.renderModule.maxIndent ? this.parent.renderModule.maxIndent : 5;\n        var firstColumnWidth = 100 + (indent * 20);\n        var size = Math.floor((540 - firstColumnWidth) / 90) + 1;\n        /** Fill data and export */\n        var dataCollIndex = 0;\n        var pivotValues = eventParams.args.dataCollections[dataCollIndex];\n        for (var vLen = 0; eventParams.args.allowRepeatHeader && size > 1 && vLen < pivotValues.length; vLen++) {\n            for (var vCnt = size; pivotValues[vLen] && vCnt < pivotValues[vLen].length; vCnt += size) {\n                pivotValues[vLen].splice(vCnt, 0, pivotValues[vLen][0]);\n            }\n        }\n        var colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n        var integratedCnt = 0;\n        do {\n            var page = this.addPage(eventParams);\n            var pdfGrid = new PdfGrid();\n            var pageSize = size > 1 ? size : 5;\n            if (pivotValues && pivotValues.length > 0) {\n                pdfGrid.columns.add(pivotValues[0].length - integratedCnt >= pageSize ? pageSize : pivotValues[0].length - integratedCnt);\n                var rowLen = pivotValues.length;\n                var actualrCnt = 0;\n                var maxLevel = 0;\n                for (var rCnt = 0; rCnt < rowLen; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        var isColHeader = !(pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row');\n                        var colLen = pivotValues[rCnt].length > (integratedCnt + pageSize) ? (integratedCnt + pageSize) :\n                            pivotValues[rCnt].length;\n                        if (isColHeader) {\n                            pdfGrid.headers.add(1);\n                        }\n                        var pdfGridRow = !isColHeader ? pdfGrid.rows.addRow() : pdfGrid.headers.getHeader(actualrCnt);\n                        if (isColHeader) {\n                            pdfGridRow.style.setBorder(headerStyle.border);\n                            if (headerStyle.font) {\n                                pdfGridRow.style.setFont(headerStyle.font);\n                            }\n                            pdfGridRow.style.setTextBrush(headerStyle.brush);\n                        }\n                        else {\n                            this.setRecordThemeStyle(pdfGridRow, headerStyle.border);\n                        }\n                        var localCnt = 0;\n                        var isEmptyRow = true;\n                        for (var cCnt = integratedCnt; cCnt < colLen; cCnt++) {\n                            var isValueCell = false;\n                            if (pivotValues[rCnt][cCnt]) {\n                                var pivotCell = pivotValues[rCnt][cCnt];\n                                if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                    var cellValue = pivotCell.formattedText;\n                                    cellValue = pivotCell.type === 'grand sum' ? this.parent.localeObj.getConstant('grandTotal') :\n                                        (pivotCell.type === 'sum' ?\n                                            cellValue.toString().replace('Total', this.parent.localeObj.getConstant('total')) : cellValue);\n                                    if (!(pivotCell.level === -1 && !pivotCell.rowSpan)) {\n                                        pdfGridRow.cells.getCell(localCnt).columnSpan = pivotCell.colSpan ?\n                                            (pageSize - localCnt < pivotCell.colSpan ? pageSize - localCnt : pivotCell.colSpan) : 1;\n                                        if (isColHeader && pivotCell.rowSpan && pivotCell.rowSpan > 1) {\n                                            pdfGridRow.cells.getCell(localCnt).rowSpan = pivotCell.rowSpan ? pivotCell.rowSpan : 1;\n                                        }\n                                        pdfGridRow.cells.getCell(localCnt).value = cellValue ? cellValue.toString() : '';\n                                    }\n                                    if (cellValue !== '') {\n                                        isEmptyRow = false;\n                                    }\n                                }\n                                maxLevel = pivotCell.level > maxLevel ? pivotCell.level : maxLevel;\n                                isValueCell = pivotCell.axis === 'value';\n                                cCnt = cCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                localCnt = localCnt + (pdfGridRow.cells.getCell(localCnt).columnSpan ?\n                                    (pdfGridRow.cells.getCell(localCnt).columnSpan - 1) : 0);\n                                if (pivotCell.style) {\n                                    pdfGridRow = this.applyStyle(pdfGridRow, pivotCell, localCnt);\n                                }\n                                var args = {\n                                    style: (pivotCell && pivotCell.isSum) ? { bold: true } : undefined,\n                                    pivotCell: pivotCell,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                            }\n                            else {\n                                var args = {\n                                    style: undefined,\n                                    pivotCell: undefined,\n                                    cell: pdfGridRow.cells.getCell(localCnt)\n                                };\n                                this.parent.trigger(events.onPdfCellRender, args);\n                                if (args.style) {\n                                    this.processCellStyle(pdfGridRow.cells.getCell(localCnt), args);\n                                }\n                                pdfGridRow.cells.getCell(localCnt).value = '';\n                                if (cCnt === 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                                else if (cCnt !== 0 && isColHeader && this.parent.dataSourceSettings.columns &&\n                                    this.parent.dataSourceSettings.columns.length > 0 &&\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan <\n                                        Object.keys(this.engine.headerContent).length) {\n                                    pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan++;\n                                }\n                            }\n                            var stringFormat = new PdfStringFormat();\n                            if (this.parent.dataType === 'olap') {\n                                var indent_1 = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt]) ?\n                                    (this.parent.renderModule.indentCollection[pivotValues[rCnt][cCnt].rowIndex]) : 0;\n                                stringFormat.paragraphIndent = indent_1 * 15;\n                                maxLevel = maxLevel > indent_1 ? maxLevel : indent_1;\n                            }\n                            else {\n                                stringFormat.paragraphIndent = (!isColHeader && localCnt === 0 && pivotValues[rCnt][cCnt] &&\n                                    pivotValues[rCnt][cCnt].level !== -1) ?\n                                    pivotValues[rCnt][cCnt].level * 15 : 0;\n                            }\n                            stringFormat.alignment = isValueCell ? PdfTextAlignment.Right : PdfTextAlignment.Left;\n                            stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                            pdfGridRow.cells.getCell(localCnt).style.stringFormat = stringFormat;\n                            localCnt++;\n                        }\n                        if (isEmptyRow) {\n                            pdfGridRow.height = 16;\n                        }\n                        actualrCnt++;\n                    }\n                }\n                pdfGrid.columns.getColumn(0).width = 100 + (maxLevel * 20);\n            }\n            if (integratedCnt === 0 && this.parent.dataSourceSettings.columns && this.parent.dataSourceSettings.columns.length > 0) {\n                pdfGrid.headers.getHeader(0).cells.getCell(0).rowSpan--;\n            }\n            pdfGrid.draw(page, new PointF(10, 20));\n            integratedCnt = integratedCnt + pageSize;\n            if (integratedCnt >= colLength && eventParams.args.dataCollections.length > (dataCollIndex + 1)) {\n                dataCollIndex++;\n                pivotValues = eventParams.args.dataCollections[dataCollIndex];\n                colLength = pivotValues && pivotValues.length > 0 ? pivotValues[0].length : 0;\n                integratedCnt = 0;\n            }\n        } while (integratedCnt < colLength);\n        eventParams.document.save(eventParams.args.fileName + '.pdf');\n        eventParams.document.destroy();\n    };\n    PDFExport.prototype.applyStyle = function (pdfGridRow, pivotCell, localCnt) {\n        var color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.backgroundColor);\n        var brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.backgroundBrush = brush;\n        var size = Number(pivotCell.style.fontSize.split('px')[0]);\n        var font = new PdfStandardFont(PdfFontFamily.TimesRoman, size, PdfFontStyle.Regular);\n        pdfGridRow.cells.getCell(localCnt).style.font = font;\n        color = this.parent.conditionalFormattingModule.hexToRgb(pivotCell.style.color);\n        brush = new PdfSolidBrush(new PdfColor(color.r, color.g, color.b));\n        pdfGridRow.cells.getCell(localCnt).style.textBrush = brush;\n        return pdfGridRow;\n    };\n    PDFExport.prototype.getFontFamily = function (family) {\n        switch (family) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* tslint:disable-next-line:no-any */\n    PDFExport.prototype.getFont = function (theme) {\n        if (theme.style.font) {\n            return theme.style.font;\n        }\n        var fontSize = (theme.cell.cellStyle.font && theme.cell.cellStyle.font.fontSize) ? theme.cell.cellStyle.font.fontSize :\n            (!isNullOrUndefined(theme.style.fontSize)) ? (theme.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(theme.style.fontFamily)) ?\n            (this.getFontFamily(theme.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(theme.style.bold) && theme.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(theme.style.italic) && theme.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(theme.style.underline) && theme.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(theme.style.strikeout) && theme.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    PDFExport.prototype.processCellStyle = function (gridCell, arg) {\n        if (!isNullOrUndefined(arg.style.backgroundColor)) {\n            var backColor = this.hexDecToRgb(arg.style.backgroundColor);\n            gridCell.style.backgroundBrush = new PdfSolidBrush(new PdfColor(backColor.r, backColor.g, backColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textBrushColor)) {\n            var textBrushColor = this.hexDecToRgb(arg.style.textBrushColor);\n            gridCell.style.textBrush = new PdfSolidBrush(new PdfColor(textBrushColor.r, textBrushColor.g, textBrushColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.textPenColor)) {\n            var textColor = this.hexDecToRgb(arg.style.textPenColor);\n            gridCell.style.textPen = new PdfPen(new PdfColor(textColor.r, textColor.g, textColor.b));\n        }\n        if (!isNullOrUndefined(arg.style.fontFamily) || !isNullOrUndefined(arg.style.fontSize) || !isNullOrUndefined(arg.style.bold) ||\n            !isNullOrUndefined(arg.style.italic) || !isNullOrUndefined(arg.style.underline) || !isNullOrUndefined(arg.style.strikeout)) {\n            gridCell.style.font = this.getFont(arg);\n        }\n        if (!isNullOrUndefined(arg.style.border)) {\n            var border = new PdfBorders();\n            var borderWidth = arg.style.border.width;\n            // set border width\n            var width = (!isNullOrUndefined(borderWidth) && typeof borderWidth === 'number') ? (borderWidth * 0.75) : (undefined);\n            // set border color\n            var color = new PdfColor(196, 196, 196);\n            if (!isNullOrUndefined(arg.style.border.color)) {\n                var borderColor = this.hexDecToRgb(arg.style.border.color);\n                color = new PdfColor(borderColor.r, borderColor.g, borderColor.b);\n            }\n            var pen = new PdfPen(color, width);\n            // set border dashStyle 'Solid <default>, Dash, Dot, DashDot, DashDotDot'\n            if (!isNullOrUndefined(arg.style.border.dashStyle)) {\n                pen.dashStyle = this.getDashStyle(arg.style.border.dashStyle);\n            }\n            border.all = pen;\n            gridCell.style.borders = border;\n        }\n    };\n    PDFExport.prototype.applyEvent = function () {\n        /** Event trigerring */\n        var clonedValues;\n        var currentPivotValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n        if (this.parent.enableVirtualization && this.parent.dataType !== 'olap') {\n            var pageSettings = this.engine.pageSettings;\n            this.engine.pageSettings = null;\n            this.engine.generateGridData(this.parent.dataSourceSettings);\n            this.parent.applyFormatting(this.engine.pivotValues);\n            clonedValues = PivotUtil.getClonedPivotValues(this.engine.pivotValues);\n            this.engine.pivotValues = currentPivotValues;\n            this.engine.pageSettings = pageSettings;\n        }\n        else {\n            clonedValues = currentPivotValues;\n        }\n        var style;\n        var args = {\n            fileName: 'default', header: '', footer: '', dataCollections: [clonedValues], allowRepeatHeader: true, style: style\n        };\n        this.parent.trigger(events.beforeExport, args);\n        this.gridStyle = args.style;\n        var document = new PdfDocument();\n        return { document: document, args: args };\n    };\n    /**\n     * To destroy the pdf export module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PDFExport.prototype.destroy = function () {\n    };\n    return PDFExport;\n}());\nexport { PDFExport };\n","import { KeyboardEvents, closest, addClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * PivotView Keyboard interaction\n */\n/** @hidden */\nvar KeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function KeyboardInteraction(parent) {\n        this.keyConfigs = {\n            tab: 'tab',\n            enter: 'enter',\n            shiftUp: 'shift+upArrow',\n            shiftDown: 'shift+downArrow',\n            shiftLeft: 'shift+leftArrow',\n            shiftRight: 'shift+rightArrow',\n            upArrow: 'upArrow',\n            downArrow: 'downArrow',\n            leftArrow: 'leftArrow',\n            rightArrow: 'rightArrow',\n            escape: 'escape'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.pivotViewKeyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    KeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'tab':\n                this.processTab(e);\n                break;\n            case 'enter':\n                this.processEnter(e);\n                break;\n            case 'shiftUp':\n            case 'shiftDown':\n            case 'shiftLeft':\n            case 'shiftRight':\n            case 'upArrow':\n            case 'downArrow':\n            case 'leftArrow':\n            case 'rightArrow':\n                this.processSelection(e);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n        }\n    };\n    KeyboardInteraction.prototype.getNextButton = function (target) {\n        var allPivotButtons = [].slice.call(this.parent.element.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var nextElement = target;\n        if (this.parent.grid.element.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            var len = allPivotButtons.length;\n            for (var i = 0; i < len; i++) {\n                if (allPivotButtons[i].getAttribute('data-uid') === target.getAttribute('data-uid')) {\n                    nextElement = allPivotButtons[i + 1] ? allPivotButtons[i + 1] : nextElement;\n                    break;\n                }\n            }\n        }\n        return nextElement;\n    };\n    KeyboardInteraction.prototype.processTab = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n            var nextButton = this.getNextButton(target);\n            if (nextButton.getAttribute('data-uid') !== target.getAttribute('data-uid')) {\n                gridFocus.currentInfo.skipAction = true;\n                nextButton.focus();\n            }\n            else {\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n            }\n            e.preventDefault();\n            return;\n        }\n        else if (!this.parent.showGroupingBar && this.parent.showFieldList) {\n            if (target && closest(target, '.' + cls.TOGGLE_FIELD_LIST_CLASS)) {\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                gridFocus.focus();\n                var element = gridFocus.getFocusedElement();\n                addClass([element], ['e-focused', 'e-focus']);\n                element.setAttribute('tabindex', '0');\n            }\n        }\n        else if (!this.parent.showGroupingBar && !this.parent.showFieldList) {\n            if (target && closest(target, '.' + cls.PIVOT_VIEW_CLASS)) {\n                var gridElement = closest(target, '.' + cls.PIVOT_VIEW_CLASS);\n                var gridFocus = this.parent.grid.serviceLocator.getService('focus');\n                var rows = [].slice.call(gridElement.getElementsByTagName('tr'));\n                if (target.innerHTML === (rows[rows.length - 1]).lastChild.innerHTML) {\n                    gridFocus.currentInfo.skipAction = true;\n                }\n                else {\n                    gridFocus.focus();\n                    var element = gridFocus.getFocusedElement();\n                    addClass([element], ['e-focused', 'e-focus']);\n                    element.setAttribute('tabindex', '0');\n                }\n            }\n        }\n    };\n    KeyboardInteraction.prototype.processEnter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.GRID_CLASS)) {\n            if (target.querySelector('.' + cls.ICON)) {\n                target.querySelector('.' + cls.ICON).click();\n            }\n            else if (target.classList.contains('e-valuescontent')) {\n                target.dispatchEvent(new MouseEvent('dblclick', {\n                    'view': window,\n                    'bubbles': true,\n                    'cancelable': true\n                }));\n            }\n            e.preventDefault();\n            return;\n        }\n    };\n    KeyboardInteraction.prototype.clearSelection = function () {\n        var control = this.parent;\n        /* tslint:disable */\n        [].slice.call(control.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR)).forEach(function (ele) {\n            ele.classList.remove(cls.SELECTED_BGCOLOR);\n            ele.classList.remove(cls.CELL_SELECTED_BGCOLOR);\n            ele.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n        });\n        this.parent.renderModule.selected();\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.processSelection = function (e) {\n        if (this.parent.gridSettings.allowSelection && this.parent.gridSettings.selectionSettings.mode !== 'Row') {\n            var target = e.target;\n            var control_1 = this.parent;\n            var colIndex_1 = Number(e.target.getAttribute('aria-colIndex'));\n            var rowIndex_1 = Number(e.target.getAttribute('index'));\n            var ele_1;\n            /* tslint:disable */\n            if (target.nodeName === 'TH' || target.nodeName === 'TD') {\n                if (e.action === 'shiftUp' || e.action === 'upArrow') {\n                    ele_1 = (rowIndex_1 === 0 || colIndex_1 === 0 || (target.nodeName !== 'TH' &&\n                        control_1.renderModule.rowStartPos !== rowIndex_1)) ? null : this.getParentElement(control_1, ele_1, colIndex_1, rowIndex_1 - 1);\n                }\n                else if (e.action === 'shiftDown' || e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('th[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                }\n                else if (e.action === 'shiftLeft' || e.action === 'leftArrow') {\n                    ele_1 = e.target.previousSibling;\n                }\n                else {\n                    ele_1 = e.target.nextSibling;\n                }\n            }\n            if (!isNullOrUndefined(ele_1)) {\n                if (control_1.gridSettings.selectionSettings.mode === 'Both' ? !ele_1.classList.contains(cls.ROW_CELL_CLASS) : true) {\n                    colIndex_1 = Number(ele_1.getAttribute('aria-colindex'));\n                    rowIndex_1 = Number(ele_1.getAttribute('index'));\n                    var colSpan_1 = Number(ele_1.getAttribute('aria-colspan'));\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                    var selectArgs = {\n                        cancel: false,\n                        isCellClick: true,\n                        currentCell: ele_1,\n                        data: control_1.pivotValues[rowIndex_1][colIndex_1]\n                    };\n                    control_1.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                        if (!observedArgs.cancel) {\n                            control_1.applyColumnSelection(e, ele_1, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    });\n                }\n                else {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n            else {\n                if (e.action === 'upArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 - 1) + '\"]');\n                    rowIndex_1--;\n                }\n                else if (e.action === 'downArrow') {\n                    ele_1 = control_1.element.querySelector('[aria-colindex=\"' + colIndex_1 + '\"][index=\"' + (rowIndex_1 + 1) + '\"]');\n                    rowIndex_1++;\n                }\n                if (!isNullOrUndefined(ele_1)) {\n                    control_1.clearSelection(ele_1, e, colIndex_1, rowIndex_1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    KeyboardInteraction.prototype.getParentElement = function (control, ele, colIndex, rowIndex) {\n        while (!ele) {\n            ele = control.element.querySelector('[aria-colindex=\"' + colIndex + '\"][index=\"' + rowIndex + '\"]');\n            colIndex--;\n        }\n        return ele;\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    KeyboardInteraction.prototype.destroy = function () {\n        if (this.pivotViewKeyboardModule) {\n            this.pivotViewKeyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return KeyboardInteraction;\n}());\nexport { KeyboardInteraction };\n","import { createElement } from '@syncfusion/ej2-base';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { ContextMenu } from '@syncfusion/ej2-navigations';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotContextMenu = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotContextMenu(parent) {\n        this.parent = parent;\n        this.parent.contextMenuModule = this;\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    PivotContextMenu.prototype.render = function () {\n        this.renderContextMenu();\n    };\n    PivotContextMenu.prototype.renderContextMenu = function () {\n        var menuItems = [\n            { text: this.parent.localeObj.getConstant('addToFilter'), id: this.parent.element.id + '_Filters' },\n            { text: this.parent.localeObj.getConstant('addToRow'), id: this.parent.element.id + '_Rows' },\n            { text: this.parent.localeObj.getConstant('addToColumn'), id: this.parent.element.id + '_Columns' },\n            { text: this.parent.localeObj.getConstant('addToValue'), id: this.parent.element.id + '_Values' }\n        ];\n        var menuOptions = {\n            cssClass: cls.PIVOT_CONTEXT_MENU_CLASS,\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.onBeforeMenuOpen.bind(this),\n            select: this.onSelectContextMenu.bind(this)\n        };\n        var cMenu = createElement('ul', {\n            id: this.parent.element.id + '_PivotContextMenu'\n        });\n        this.parent.element.appendChild(cMenu);\n        this.menuObj = new ContextMenu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(cMenu);\n    };\n    PivotContextMenu.prototype.onBeforeMenuOpen = function (args) {\n        var items = [].slice.call(args.element.querySelectorAll('li'));\n        var fieldType = this.parent.dataType === 'olap' ? this.fieldElement.getAttribute('data-type') :\n            this.fieldElement.querySelector('.' + cls.PIVOT_BUTTON_CONTENT_CLASS).getAttribute('data-type');\n        removeClass(items, cls.MENU_DISABLE);\n        if (fieldType === 'CalculatedField' || fieldType === 'isMeasureFieldsAvail') {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (fieldType === 'isMeasureAvail') {\n            for (var _a = 0, items_2 = items; _a < items_2.length; _a++) {\n                var item = items_2[_a];\n                if (item.textContent !== this.parent.localeObj.getConstant('addToRow') &&\n                    item.textContent !== this.parent.localeObj.getConstant('addToColumn')) {\n                    addClass([item], cls.MENU_DISABLE);\n                }\n            }\n        }\n        else if (this.parent.dataType === 'olap') {\n            for (var _b = 0, items_3 = items; _b < items_3.length; _b++) {\n                var item = items_3[_b];\n                if (item.textContent === this.parent.localeObj.getConstant('addToValue')) {\n                    addClass([item], cls.MENU_DISABLE);\n                    break;\n                }\n            }\n        }\n    };\n    PivotContextMenu.prototype.onSelectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var fieldName = this.fieldElement.getAttribute('data-uid');\n            var dropClass = menu.item.id.replace(this.parent.element.id + '_', '').toLowerCase();\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n                (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.btnElement = this.fieldElement;\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, dropClass, -1);\n            this.parent.updateDataSource(true);\n            this.fieldElement = undefined;\n        }\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotContextMenu.prototype.destroy = function () {\n        if (!this.parent.isDestroyed) {\n            return;\n        }\n        if (this.menuObj && !this.menuObj.isDestroyed) {\n            this.menuObj.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotContextMenu;\n}());\nexport { PivotContextMenu };\n","import { EventHandler, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { contentReady } from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\n/**\n * `VirtualScroll` module is used to handle scrolling behavior.\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for PivotView scrolling.\n     * @hidden\n     */\n    function VirtualScroll(parent) {\n        this.previousValues = { top: 0, left: 0 };\n        this.frozenPreviousValues = { top: 0, left: 0 };\n        this.eventType = '';\n        this.parent = parent;\n        this.engineModule = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualscroll';\n    };\n    VirtualScroll.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    VirtualScroll.prototype.wireEvents = function () {\n        var mCont = this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n        var fCont = this.parent.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n        var mHdr = this.parent.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n        EventHandler.clearEvents(mCont);\n        EventHandler.clearEvents(fCont);\n        if (this.engineModule) {\n            EventHandler.add(mCont, 'scroll touchmove pointermove', this.onHorizondalScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mCont, 'scroll wheel touchmove pointermove', this.onVerticalScroll(fCont, mCont), this);\n            EventHandler.add(mCont, 'mouseup touchend', this.common(mHdr, mCont, fCont), this);\n            EventHandler.add(fCont, 'wheel', this.onWheelScroll(mCont, fCont), this);\n            EventHandler.add(fCont, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(fCont, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n            EventHandler.add(mHdr, 'touchstart pointerdown', this.setPageXY(), this);\n            EventHandler.add(mHdr, 'touchmove pointermove', this.onTouchScroll(mHdr, mCont, fCont), this);\n        }\n        this.parent.grid.isPreventScrollEvent = true;\n    };\n    VirtualScroll.prototype.onWheelScroll = function (mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            var top = element.scrollTop + (e.deltaMode === 1 ? e.deltaY * 30 : e.deltaY);\n            if (_this.frozenPreviousValues.top === top) {\n                return;\n            }\n            e.preventDefault();\n            fCont.scrollTop = top;\n            element.scrollTop = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (!(e.touches && e.touches.length)) {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        else {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        return pageXY;\n    };\n    VirtualScroll.prototype.onTouchScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        var element = mCont;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var pageXY = _this.getPointXY(e);\n            var top = element.scrollTop + (_this.pageXY.y - pageXY.y);\n            var left = element.scrollLeft + (_this.pageXY.x - pageXY.x);\n            if (_this.parent.element.querySelector('.' + cls.HEADERCONTENT).contains(e.target)) {\n                if (_this.frozenPreviousValues.left === left || left < 0) {\n                    return;\n                }\n                mHdr.scrollLeft = left;\n                element.scrollLeft = left;\n                _this.pageXY.x = pageXY.x;\n                _this.frozenPreviousValues.left = left;\n            }\n            else {\n                if (_this.frozenPreviousValues.top === top || top < 0) {\n                    return;\n                }\n                fCont.scrollTop = top;\n                element.scrollTop = top;\n                _this.pageXY.y = pageXY.y;\n                _this.frozenPreviousValues.top = top;\n            }\n            _this.eventType = e.type;\n        };\n    };\n    VirtualScroll.prototype.update = function (mHdr, mCont, top, left, e) {\n        var _this = this;\n        this.parent.isScrolling = true;\n        var engine = this.parent.dataType === 'pivot' ? this.parent.engineModule : this.parent.olapEngineModule;\n        if (isBlazor()) {\n            engine.pageSettings = this.parent.pageSettings;\n        }\n        if (this.parent.pageSettings && engine.pageSettings) {\n            if (this.direction === 'vertical') {\n                var rowValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'row' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_1 = (this.parent.pageSettings.rowSize * rowValues_1 * this.parent.gridSettings.rowHeight);\n                var section = Math.ceil(top / exactSize_1);\n                if ((this.parent.scrollPosObject.vertical === section ||\n                    engine.pageSettings.rowSize >= engine.rowCount)) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                this.parent.scrollPosObject.vertical = section;\n                engine.pageSettings.rowCurrentPage = section > 1 ? section : 1;\n                var rowStartPos_1 = 0;\n                if (this.parent.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var pivot_1 = this.parent;\n                        var ejsInterop = 'ejsInterop';\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[ejsInterop].\n                            copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[ejsInterop].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.pivotValues = engine.pivotValues;\n                            rowStartPos_1 = _this.parent.engineModule.rowStartPos;\n                            var exactPage = Math.ceil(rowStartPos_1 / (pivot_1.pageSettings.rowSize * rowValues_1));\n                            var pos = exactSize_1 * exactPage -\n                                (engine.rowFirstLvl * rowValues_1 * pivot_1.gridSettings.rowHeight);\n                            pivot_1.scrollPosObject.verticalSection = pos;\n                        });\n                    }\n                    else {\n                        this.parent.engineModule.generateGridData(this.parent.dataSourceSettings, this.parent.engineModule.headerCollection);\n                        rowStartPos_1 = this.parent.engineModule.rowStartPos;\n                    }\n                }\n                else {\n                    this.parent.olapEngineModule.scrollPage('scroll');\n                    rowStartPos_1 = this.parent.olapEngineModule.pageRowStartPos;\n                }\n                if (!(isBlazor() && this.parent.dataType === 'pivot')) {\n                    this.parent.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(rowStartPos_1 / (this.parent.pageSettings.rowSize * rowValues_1));\n                    var pos = exactSize_1 * exactPage -\n                        (engine.rowFirstLvl * rowValues_1 * this.parent.gridSettings.rowHeight);\n                    this.parent.scrollPosObject.verticalSection = pos;\n                }\n            }\n            else {\n                var colValues_1 = this.parent.dataType === 'pivot' ?\n                    (this.parent.dataSourceSettings.valueAxis === 'column' ? this.parent.dataSourceSettings.values.length : 1) : 1;\n                var exactSize_2 = (this.parent.pageSettings.columnSize *\n                    colValues_1 * this.parent.gridSettings.columnWidth);\n                var section = Math.ceil(left / exactSize_2);\n                if (this.parent.scrollPosObject.horizontal === section) {\n                    this.parent.hideWaitingPopup();\n                    return;\n                }\n                this.parent.showWaitingPopup();\n                var pivot = this.parent;\n                pivot.scrollPosObject.horizontal = section;\n                engine.pageSettings.columnCurrentPage = section > 1 ? section : 1;\n                var colStartPos_1 = 0;\n                if (pivot.dataType === 'pivot') {\n                    if (isBlazor()) {\n                        var ejsInterop = 'ejsInterop';\n                        var pivot_2 = this.parent;\n                        /* tslint:disable-next-line */\n                        var pageSettings = window[ejsInterop].\n                            copyWithoutCircularReferences([engine.pageSettings], engine.pageSettings);\n                        /* tslint:disable-next-line */\n                        var dataSourceSettings = window[ejsInterop].\n                            copyWithoutCircularReferences([pivot_2.dataSourceSettings], pivot_2.dataSourceSettings);\n                        /* tslint:disable-next-line */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'generateGridData', {\n                            'dataSourceSettings': dataSourceSettings,\n                            'pageSettings': pageSettings, 'isScrolling': true\n                        }).then(\n                        /* tslint:disable-next-line */\n                        function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            colStartPos_1 = pivot_2.engineModule.colStartPos;\n                            pivot_2.pivotValues = engine.pivotValues;\n                            var exactPage = Math.ceil(colStartPos_1 / (pivot_2.pageSettings.columnSize * colValues_1));\n                            var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                                colValues_1 * pivot_2.gridSettings.columnWidth);\n                            pivot_2.scrollPosObject.horizontalSection = pos;\n                        });\n                    }\n                    else {\n                        pivot.engineModule.generateGridData(pivot.dataSourceSettings, pivot.engineModule.headerCollection);\n                        colStartPos_1 = pivot.engineModule.colStartPos;\n                    }\n                }\n                else {\n                    pivot.olapEngineModule.scrollPage('scroll');\n                    colStartPos_1 = pivot.olapEngineModule.pageColStartPos;\n                }\n                if (!(isBlazor() && pivot.dataType === 'pivot')) {\n                    pivot.pivotValues = engine.pivotValues;\n                    var exactPage = Math.ceil(colStartPos_1 / (pivot.pageSettings.columnSize * colValues_1));\n                    var pos = exactSize_2 * exactPage - (engine.colFirstLvl *\n                        colValues_1 * pivot.gridSettings.columnWidth);\n                    pivot.scrollPosObject.horizontalSection = pos;\n                }\n            }\n        }\n    };\n    VirtualScroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    VirtualScroll.prototype.common = function (mHdr, mCont, fCont) {\n        var _this = this;\n        return function (e) {\n            _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n        };\n    };\n    VirtualScroll.prototype.onHorizondalScroll = function (mHdr, mCont, fCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var left = mCont.scrollLeft * _this.parent.horizontalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    left = e.type === 'touchmove' ? mCont.scrollLeft : left;\n                    _this.update(mHdr, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, left, e);\n                }, 300);\n            }\n            if (_this.previousValues.left === left) {\n                fCont.scrollTop = mCont.scrollTop;\n                return;\n            }\n            _this.direction = 'horizondal';\n            var horiOffset = -((left - _this.parent.scrollPosObject.horizontalSection - mCont.scrollLeft));\n            var vertiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim();\n            if (mCont.scrollLeft < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                -(_this.parent.scrollPosObject.horizontalSection - left) : ((left + mHdr.offsetWidth) -\n                (_this.parent.scrollPosObject.horizontalSection + mCont.querySelector('.e-table').offsetWidth));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.horizontalSection / _this.parent.horizontalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.horizontalSection > left ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (left > mHdr.clientWidth) {\n                    if (_this.parent.scrollPosObject.left < 1) {\n                        _this.parent.scrollPosObject.left = mHdr.clientWidth;\n                    }\n                    _this.parent.scrollPosObject.left = _this.parent.scrollPosObject.left - 50;\n                    excessMove = _this.parent.scrollPosObject.horizontalSection > left ?\n                        (excessMove - _this.parent.scrollPosObject.left) : (excessMove + _this.parent.scrollPosObject.left);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.horizontalSection;\n                }\n                horiOffset = -((left - (_this.parent.scrollPosObject.horizontalSection + excessMove) - mCont.scrollLeft));\n                var vWidth = (_this.parent.gridSettings.columnWidth * _this.engineModule.columnCount\n                    - _this.parent.grid.columns[0].width);\n                if (vWidth > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.horizontalScrollScale = vWidth / _this.parent.scrollerBrowserLimit;\n                    vWidth = _this.parent.scrollerBrowserLimit;\n                }\n                if (horiOffset > vWidth && horiOffset > left) {\n                    horiOffset = left;\n                    excessMove = 0;\n                }\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + vertiOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: 'translate(' + horiOffset + 'px,' + 0 + 'px)'\n                });\n                _this.parent.scrollPosObject.horizontalSection = _this.parent.scrollPosObject.horizontalSection + excessMove;\n            }\n            _this.previousValues.left = left;\n            _this.frozenPreviousValues.left = left;\n            _this.eventType = '';\n            mHdr.scrollLeft = mCont.scrollLeft;\n        };\n    };\n    VirtualScroll.prototype.onVerticalScroll = function (fCont, mCont) {\n        var _this = this;\n        /* tslint:disable-next-line */\n        var timeOutObj;\n        return function (e) {\n            var top = mCont.scrollTop * _this.parent.verticalScrollScale;\n            if (e.type === 'wheel' || e.type === 'touchmove' || _this.eventType === 'wheel' || _this.eventType === 'touchmove') {\n                clearTimeout(timeOutObj);\n                /* tslint:disable */\n                timeOutObj = setTimeout(function () {\n                    _this.update(null, mCont, mCont.scrollTop * _this.parent.verticalScrollScale, mCont.scrollLeft * _this.parent.horizontalScrollScale, e);\n                }, 300);\n            }\n            if (_this.previousValues.top === top) {\n                return;\n            }\n            _this.direction = 'vertical';\n            var vertiOffset = -((top - _this.parent.scrollPosObject.verticalSection - mCont.scrollTop));\n            var horiOffset = mCont.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim();\n            if (mCont.scrollTop < _this.parent.scrollerBrowserLimit) {\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n            }\n            var excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                -(_this.parent.scrollPosObject.verticalSection - top) : ((top + fCont.clientHeight) -\n                (_this.parent.scrollPosObject.verticalSection + fCont.querySelector('.e-table').offsetHeight));\n            var notLastPage = Math.ceil(_this.parent.scrollPosObject.verticalSection / _this.parent.verticalScrollScale) <\n                _this.parent.scrollerBrowserLimit;\n            if (_this.parent.scrollPosObject.verticalSection > top ? true : (excessMove > 1 && notLastPage)) {\n                //  showSpinner(this.parent.element);\n                if (top > fCont.clientHeight) {\n                    if (_this.parent.scrollPosObject.top < 1) {\n                        _this.parent.scrollPosObject.top = fCont.clientHeight;\n                    }\n                    _this.parent.scrollPosObject.top = _this.parent.scrollPosObject.top - 50;\n                    excessMove = _this.parent.scrollPosObject.verticalSection > top ?\n                        (excessMove - _this.parent.scrollPosObject.top) : (excessMove + _this.parent.scrollPosObject.top);\n                }\n                else {\n                    excessMove = -_this.parent.scrollPosObject.verticalSection;\n                }\n                var movableTable = _this.parent.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                vertiOffset = -((top - (_this.parent.scrollPosObject.verticalSection + excessMove) - mCont.scrollTop));\n                var vHeight = (_this.parent.gridSettings.rowHeight * _this.engineModule.rowCount + 0.1\n                    - movableTable.clientHeight);\n                if (vHeight > _this.parent.scrollerBrowserLimit) {\n                    _this.parent.verticalScrollScale = vHeight / _this.parent.scrollerBrowserLimit;\n                    vHeight = _this.parent.scrollerBrowserLimit;\n                }\n                if (vertiOffset > vHeight && vertiOffset > top) {\n                    vertiOffset = top;\n                    excessMove = 0;\n                }\n                setStyleAttribute(fCont.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + vertiOffset + 'px)'\n                });\n                setStyleAttribute(mCont.querySelector('.e-table'), {\n                    transform: horiOffset + ',' + vertiOffset + 'px)'\n                });\n                _this.parent.scrollPosObject.verticalSection = _this.parent.scrollPosObject.verticalSection + excessMove;\n            }\n            _this.previousValues.top = top;\n            _this.frozenPreviousValues.top = top;\n            _this.eventType = '';\n            fCont.scrollTop = mCont.scrollTop;\n            mCont.scrollTop = fCont.scrollTop;\n        };\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeInternalEvents = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(contentReady, this.wireEvents);\n    };\n    /**\n     * To destroy the virtualscrolling event listener\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeInternalEvents();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, setStyleAttribute, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Grid, Reorder, Resize, ColumnChooser, Toolbar } from '@syncfusion/ej2-grids';\nimport { VirtualScroll, Selection, Edit, Page, CommandColumn } from '@syncfusion/ej2-grids';\nimport * as events from '../../common/base/constant';\n/**\n * `DrillThroughDialog` module to create drill-through dialog.\n */\n/** @hidden */\nvar DrillThroughDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DrillThroughDialog(parent) {\n        /** @hidden */\n        this.indexString = [];\n        this.isUpdated = false;\n        this.gridIndexObjects = {};\n        this.gridData = [];\n        this.parent = parent;\n        this.engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n    }\n    /** @hidden */\n    DrillThroughDialog.prototype.showDrillThroughDialog = function (eventArgs) {\n        var _this = this;\n        this.gridData = eventArgs.rawData;\n        this.removeDrillThroughDialog();\n        var drillThroughDialog = createElement('div', {\n            id: this.parent.element.id + '_drillthrough',\n            className: cls.DRILLTHROUGH_DIALOG,\n            styles: 'visibility:hidden;'\n        });\n        this.parent.element.appendChild(drillThroughDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('details'),\n            content: this.createDrillThroughGrid(eventArgs),\n            beforeOpen: function () {\n                /* tslint:disable:align */\n                _this.drillThroughGrid.setProperties({\n                    dataSource: _this.parent.editSettings.allowEditing ?\n                        _this.dataWithPrimarykey(eventArgs) : _this.gridData,\n                    height: !_this.parent.editSettings.allowEditing ? 300 : 220\n                }, true);\n                /* tslint:enable:align */\n                _this.drillThroughGrid.enableVirtualization = !_this.parent.editSettings.allowEditing;\n            },\n            beforeClose: function () {\n                if (_this.parent.editSettings.allowEditing && _this.isUpdated) {\n                    var count = Object.keys(_this.gridIndexObjects).length;\n                    var addItems = [];\n                    /* tslint:disable:no-string-literal */\n                    for (var _i = 0, _a = _this.drillThroughGrid.dataSource; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        if (isNullOrUndefined(item['__index']) || item['__index'] === '') {\n                            for (var _b = 0, _c = _this.engine.fields; _b < _c.length; _b++) {\n                                var field = _c[_b];\n                                if (isNullOrUndefined(item[field])) {\n                                    delete item[field];\n                                }\n                            }\n                            delete item['__index'];\n                            addItems.push(item);\n                        }\n                        else if (count > 0) {\n                            delete _this.gridIndexObjects[item['__index'].toString()];\n                            count--;\n                        }\n                    }\n                    count = 0;\n                    if (isBlazor() && _this.parent.enableVirtualization) {\n                        var currModule_1 = _this;\n                        /* tslint:disable:no-any */\n                        currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'updateRawData', {\n                            'AddItem': addItems, 'RemoveItem': currModule_1.gridIndexObjects, 'ModifiedItem': currModule_1.gridData\n                        }).then(function (data) {\n                            currModule_1.parent.updateBlazorData(data, currModule_1.parent);\n                            currModule_1.parent.setProperties({ pivotValues: currModule_1.parent.engineModule.pivotValues }, true);\n                            currModule_1.isUpdated = false;\n                            currModule_1.gridIndexObjects = {};\n                        });\n                    }\n                    else {\n                        var items = [];\n                        var data = (_this.parent.allowDataCompression && _this.parent.enableVirtualization) ?\n                            _this.parent.engineModule.actualData : _this.parent.engineModule.data;\n                        for (var _d = 0, _e = data; _d < _e.length; _d++) {\n                            var item = _e[_d];\n                            delete item['__index'];\n                            if (_this.gridIndexObjects[count.toString()] === undefined) {\n                                items.push(item);\n                            }\n                            count++;\n                        }\n                        /* tslint:enable:no-string-literal */\n                        items = items.concat(addItems);\n                        _this.parent.setProperties({ dataSourceSettings: { dataSource: items } }, true);\n                        _this.engine.updateGridData(_this.parent.dataSourceSettings);\n                        _this.parent.pivotValues = _this.engine.pivotValues;\n                    }\n                }\n                if (!(isBlazor() && _this.parent.enableVirtualization)) {\n                    _this.isUpdated = false;\n                    _this.gridIndexObjects = {};\n                }\n            },\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            width: this.parent.isAdaptive ? '100%' : '60%',\n            position: { X: 'center', Y: 'center' },\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeDrillThroughDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(drillThroughDialog);\n        // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('details');\n        setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n    };\n    DrillThroughDialog.prototype.removeDrillThroughDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        var dialogElement = document.getElementById(this.parent.element.id + '_drillthrough');\n        if (dialogElement) {\n            remove(dialogElement);\n        }\n        if (document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg')) {\n            remove(document.getElementById(this.parent.element.id + '_drillthroughgrid_ccdlg'));\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    DrillThroughDialog.prototype.createDrillThroughGrid = function (eventArgs) {\n        var drillThroughBody = createElement('div', { id: this.parent.element.id + '_drillthroughbody', className: cls.DRILLTHROUGH_BODY_CLASS });\n        var drillThroughBodyHeader = createElement('div', {\n            id: this.parent.element.id +\n                '_drillthroughbodyheader', className: cls.DRILLTHROUGH_BODY_HEADER_CONTAINER_CLASS\n        });\n        if (eventArgs.rowHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' + cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                this.parent.localeObj.getConstant('row') + '</span> :<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + eventArgs.rowHeaders + '</span></span>';\n        }\n        if (eventArgs.columnHeaders !== '') {\n            drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' + this.parent.localeObj.getConstant('column') +\n                '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' +\n                eventArgs.columnHeaders + '</span></span>';\n        }\n        if (eventArgs.value !== '') {\n            var measure = eventArgs.value.split('(')[0];\n            var value = eventArgs.value.split('(')[1].split(')')[0];\n            if (value !== '0') {\n                drillThroughBodyHeader.innerHTML = drillThroughBodyHeader.innerHTML + '<span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_COMMON_CLASS + '><span class=' +\n                    cls.DRILLTHROUGH_BODY_HEADER_CLASS + '>' +\n                    measure + '</span> :<span class=' + cls.DRILLTHROUGH_BODY_HEADER_VALUE_CLASS + '>' + value + '</span></span>';\n            }\n        }\n        var toolbarItems = ['ColumnChooser'];\n        if (this.parent.editSettings.allowEditing) {\n            if (this.parent.editSettings.allowCommandColumns) {\n                toolbarItems = ['ColumnChooser', 'Add'];\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Delete', 'Update', 'Cancel'];\n            }\n            else if (this.parent.editSettings.mode === 'Dialog') {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete'];\n            }\n            else {\n                toolbarItems = ['ColumnChooser', 'Add', 'Edit', 'Delete', 'Update', 'Cancel'];\n            }\n        }\n        var drillThroughGrid = createElement('div', { id: this.parent.element.id + '_drillthroughgrid', className: cls.DRILLTHROUGH_GRID_CLASS });\n        Grid.Inject(Selection, Reorder, Resize, Toolbar, ColumnChooser);\n        this.drillThroughGrid = new Grid({\n            gridLines: 'Default',\n            allowResizing: true,\n            allowReordering: true,\n            showColumnChooser: true,\n            toolbar: toolbarItems,\n            columns: eventArgs.gridColumns,\n            locale: this.parent.locale,\n            enableRtl: this.parent.enableRtl,\n            enableVirtualization: this.parent.editSettings.allowEditing,\n            allowPaging: this.parent.editSettings.allowEditing\n        });\n        if (this.parent.dataType === 'olap') {\n            this.formatData();\n        }\n        var dialogModule = this;\n        this.parent.trigger(events.beginDrillThrough, {\n            cellInfo: eventArgs,\n            gridObj: isBlazor() ? undefined : this.drillThroughGrid,\n            type: 'editing'\n        });\n        if (this.parent.editSettings.allowEditing) {\n            Grid.Inject(Edit, Page);\n            this.drillThroughGrid.editSettings = this.parent.editSettings;\n            if (this.parent.editSettings.allowCommandColumns) {\n                this.drillThroughGrid.editSettings.mode = 'Normal';\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = false;\n                Grid.Inject(CommandColumn);\n                this.drillThroughGrid.columns.push({\n                    headerText: this.parent.localeObj.getConstant('manageRecords'), width: 160, showInColumnChooser: false,\n                    commands: [\n                        { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n                        { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n                        { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n                        { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n                    ]\n                });\n            }\n            else {\n                this.drillThroughGrid.editSettings.allowEditOnDblClick = this.parent.editSettings.allowEditOnDblClick;\n            }\n            /* tslint:disable:align */\n            this.drillThroughGrid.columns.push({\n                field: '__index', visible: false, isPrimaryKey: true, type: 'string', showInColumnChooser: false\n            });\n            /* tslint:disable-next-line:no-any */\n            this.drillThroughGrid.actionComplete = function (args) {\n                if (args.requestType === 'batchsave' || args.requestType === 'save' || args.requestType === 'delete') {\n                    dialogModule.isUpdated = true;\n                }\n                if ((dialogModule.drillThroughGrid.editSettings.mode === 'Normal' && args.requestType === 'save' &&\n                    dialogModule.drillThroughGrid.element.querySelectorAll('.e-tbar-btn:hover').length > 0 &&\n                    !dialogModule.parent.editSettings.allowCommandColumns) || args.requestType === 'batchsave') {\n                    dialogModule.dialogPopUp.hide();\n                }\n            };\n            this.drillThroughGrid.beforeBatchSave = function () {\n                dialogModule.isUpdated = true;\n            };\n            /* tslint:enable:align */\n        }\n        else {\n            Grid.Inject(VirtualScroll);\n        }\n        document.body.appendChild(drillThroughGrid);\n        this.drillThroughGrid.isStringTemplate = true;\n        this.drillThroughGrid.appendTo(drillThroughGrid);\n        drillThroughBody.appendChild(drillThroughBodyHeader);\n        drillThroughBody.appendChild(drillThroughGrid);\n        return drillThroughBody;\n    };\n    /** @hidden */\n    DrillThroughDialog.prototype.frameGridColumns = function () {\n        var keys = this.parent.dataType === 'olap' ? this.gridData[0] ? Object.keys(this.gridData[0]) : [] :\n            Object.keys(this.engine.fieldList);\n        var columns = [];\n        if (this.parent.dataType === 'olap') {\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                columns.push({\n                    field: key.replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join(''),\n                    headerText: key.replace(/_x005B_|_x005D_|_x0024_/g, '').replace(/_x0020_/g, ' ').\n                        replace('].[', '').split('.').reverse().join('.'),\n                    width: 120,\n                    visible: true,\n                    validationRules: { required: true },\n                    type: 'string'\n                });\n            }\n        }\n        else {\n            for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n                var key = keys_2[_a];\n                if (this.engine.fieldList[key].aggregateType !== 'CalculatedField') {\n                    var editType = '';\n                    if (this.engine.fieldList[key].type === 'number') {\n                        editType = 'numericedit';\n                    }\n                    else if (this.engine.fieldList[key].type === 'date') {\n                        editType = 'datepickeredit';\n                    }\n                    else {\n                        editType = 'defaultedit';\n                    }\n                    columns.push({\n                        field: key,\n                        headerText: this.engine.fieldList[key].caption,\n                        width: 120,\n                        visible: this.engine.fieldList[key].isSelected,\n                        validationRules: { required: true },\n                        editType: editType,\n                        type: 'string'\n                    });\n                }\n            }\n        }\n        return columns;\n    };\n    DrillThroughDialog.prototype.formatData = function () {\n        var index = 0;\n        while (index < this.gridData.length) {\n            var data = this.gridData[index];\n            var keys = Object.keys(this.gridData[index]);\n            var newData = {};\n            var i = 0;\n            while (i < keys.length) {\n                var key = keys[i].replace(/_x005B_|_x0020_|_x005D_|_x0024_/g, '').replace('].[', '').split('.').reverse().join('');\n                newData[key] = data[keys[i]];\n                i++;\n            }\n            this.gridData[index] = newData;\n            index++;\n        }\n    };\n    DrillThroughDialog.prototype.dataWithPrimarykey = function (eventArgs) {\n        var indexString = this.indexString.length > 0 ? this.indexString : Object.keys(eventArgs.currentCell.indexObject);\n        var rawData = this.gridData;\n        var count = 0;\n        for (var _i = 0, rawData_1 = rawData; _i < rawData_1.length; _i++) {\n            var item = rawData_1[_i];\n            /* tslint:disable-next-line:no-string-literal */\n            item['__index'] = indexString[count];\n            this.gridIndexObjects[indexString[count].toString()] = Number(indexString[count]);\n            count++;\n        }\n        return rawData;\n    };\n    return DrillThroughDialog;\n}());\nexport { DrillThroughDialog };\n","import { contentReady } from '../../common/base/constant';\nimport * as events from '../../common/base/constant';\nimport { DrillThroughDialog } from '../../common/popups/drillthrough-dialog';\nimport { EventHandler, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DrillThrough` module.\n */\nvar DrillThrough = /** @class */ (function () {\n    /**\n     * Constructor.\n     * @hidden\n     */\n    function DrillThrough(parent) {\n        this.parent = parent;\n        this.drillThroughDialog = new DrillThroughDialog(this.parent);\n        this.addInternalEvents();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    DrillThrough.prototype.getModuleName = function () {\n        return 'drillthrough';\n    };\n    DrillThrough.prototype.addInternalEvents = function () {\n        this.parent.on(contentReady, this.wireEvents, this);\n    };\n    DrillThrough.prototype.wireEvents = function () {\n        this.unWireEvents();\n        EventHandler.add(this.parent.element, 'dblclick', this.mouseClickHandler, this);\n    };\n    DrillThrough.prototype.unWireEvents = function () {\n        EventHandler.remove(this.parent.element, 'dblclick', this.mouseClickHandler);\n    };\n    DrillThrough.prototype.mouseClickHandler = function (e) {\n        var target = e.target;\n        var ele = null;\n        if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        if (ele) {\n            if (this.parent.allowDrillThrough && ele.classList.contains('e-valuescontent') || this.parent.editSettings.allowEditing) {\n                this.executeDrillThrough(ele);\n            }\n        }\n    };\n    DrillThrough.prototype.executeDrillThrough = function (ele) {\n        var colIndex = Number(ele.getAttribute('aria-colindex'));\n        var rowIndex = Number(ele.getAttribute('index'));\n        var pivotValue = this.parent.pivotValues[rowIndex][colIndex];\n        var engine = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        var valueCaption = '';\n        var aggType = '';\n        var rawData = [];\n        if (pivotValue.rowHeaders !== undefined && pivotValue.columnHeaders !== undefined && !isNullOrUndefined(pivotValue.value)) {\n            if (this.parent.dataType === 'olap') {\n                var tupleInfo = void 0;\n                if (this.parent.dataSourceSettings.valueAxis === 'row') {\n                    tupleInfo = engine.tupRowInfo[pivotValue.rowOrdinal];\n                }\n                else {\n                    tupleInfo = engine.tupColumnInfo[pivotValue.colOrdinal];\n                }\n                var measureName = tupleInfo ?\n                    engine.getUniqueName(tupleInfo.measureName) : pivotValue.actualText;\n                if (engine.fieldList[measureName] && engine.fieldList[measureName].isCalculatedField) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('drillError'));\n                    return;\n                }\n                valueCaption = engine.fieldList[measureName].caption;\n                aggType = engine.fieldList[measureName].aggregateType;\n                this.parent.olapEngineModule.getDrillThroughData(pivotValue, this.parent.maxRowsInDrillThrough);\n                try {\n                    rawData = JSON.parse(engine.gridJSON);\n                }\n                catch (exception) {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), engine.gridJSON);\n                    return;\n                }\n            }\n            else {\n                valueCaption = engine.fieldList[pivotValue.actualText.toString()] ?\n                    engine.fieldList[pivotValue.actualText.toString()].caption : pivotValue.actualText.toString();\n                aggType = engine.fieldList[pivotValue.actualText] ? engine.fieldList[pivotValue.actualText].aggregateType : '';\n                var currModule_1 = this;\n                if (isBlazor() && this.parent.enableVirtualization) {\n                    /* tslint:disable:no-any */\n                    currModule_1.parent.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'fetchRawData', { 'RowIndex': rowIndex, 'ColumnIndex': colIndex }).then(function (data) {\n                        rawData = JSON.parse(data.rawData);\n                        var parsedObj = JSON.parse(data.indexObject);\n                        var indexObject = {};\n                        for (var len = 0; len < parsedObj.length; len++) {\n                            indexObject[parsedObj[len].Key] = parsedObj[len].Value;\n                        }\n                        pivotValue.indexObject = indexObject;\n                        currModule_1.triggerDialog(valueCaption, aggType, rawData, pivotValue, ele);\n                    });\n                }\n                else {\n                    if (this.parent.enableVirtualization && this.parent.allowDataCompression) {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        this.drillThroughDialog.indexString = [];\n                        for (var _i = 0, indexArray_1 = indexArray; _i < indexArray_1.length; _i++) {\n                            var cIndex = indexArray_1[_i];\n                            for (var _a = 0, _b = this.parent.engineModule.groupRawIndex[Number(cIndex)]; _a < _b.length; _a++) {\n                                var aIndex = _b[_a];\n                                rawData.push(this.parent.engineModule.actualData[aIndex]);\n                                this.drillThroughDialog.indexString.push(aIndex.toString());\n                            }\n                        }\n                    }\n                    else {\n                        var indexArray = Object.keys(pivotValue.indexObject);\n                        for (var _c = 0, indexArray_2 = indexArray; _c < indexArray_2.length; _c++) {\n                            var index = indexArray_2[_c];\n                            rawData.push(this.parent.engineModule.data[Number(index)]);\n                        }\n                    }\n                }\n            }\n            if (!(isBlazor() && this.parent.enableVirtualization)) {\n                this.triggerDialog(valueCaption, aggType, rawData, pivotValue, ele);\n            }\n        }\n    };\n    DrillThrough.prototype.triggerDialog = function (valueCaption, aggType, rawData, pivotValue, ele) {\n        var valuetText = aggType === 'CalculatedField' ? valueCaption.toString() : aggType !== '' ?\n            (this.parent.localeObj.getConstant(aggType) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + valueCaption) :\n            valueCaption;\n        var eventArgs = {\n            currentTarget: ele,\n            currentCell: pivotValue,\n            rawData: rawData,\n            rowHeaders: pivotValue.rowHeaders === '' ? '' : pivotValue.rowHeaders.toString().split('.').join(' - '),\n            columnHeaders: pivotValue.columnHeaders === '' ? '' : pivotValue.columnHeaders.toString().split('.').join(' - '),\n            value: valuetText + '(' + pivotValue.formattedText + ')',\n            gridColumns: this.drillThroughDialog.frameGridColumns()\n        };\n        var drillThrough = this;\n        var gridColumns = eventArgs.gridColumns;\n        this.parent.trigger(events.drillThrough, eventArgs, function (observedArgs) {\n            if (isBlazor()) {\n                for (var i = 0; i < observedArgs.gridColumns.length; i++) {\n                    if (gridColumns[i].field === observedArgs.gridColumns[i].field) {\n                        gridColumns[i].field = observedArgs.gridColumns[i].field;\n                        gridColumns[i].editType = observedArgs.gridColumns[i].editType;\n                        gridColumns[i].headerText = observedArgs.gridColumns[i].headerText;\n                        gridColumns[i].type = observedArgs.gridColumns[i].type;\n                        gridColumns[i].validationRules = observedArgs.gridColumns[i].validationRules;\n                        gridColumns[i].visible = observedArgs.gridColumns[i].visible;\n                        gridColumns[i].width = observedArgs.gridColumns[i].width;\n                    }\n                }\n                observedArgs.gridColumns = gridColumns;\n            }\n            drillThrough.drillThroughDialog.showDrillThroughDialog(observedArgs);\n        });\n    };\n    return DrillThrough;\n}());\nexport { DrillThrough };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Chart, ColumnSeries, LineSeries, Legend, Tooltip, Category, AreaSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, PolarSeries, RadarSeries, MultiLevelLabel, ScrollBar, Zoom, ParetoSeries, Export, Crosshair } from '@syncfusion/ej2-charts';\nimport { createElement, remove, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../../base/util';\nvar PivotChart = /** @class */ (function () {\n    function PivotChart() {\n        this.headerColl = {};\n        this.maxLevel = 0;\n        this.columnGroupObject = {};\n        this.fieldPosition = [];\n        this.measurePos = -1;\n        this.measuresNames = {};\n    }\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotChart.prototype.getModuleName = function () {\n        return 'pivotchart';\n    };\n    /* tslint:disable */\n    PivotChart.prototype.loadChart = function (parent, chartSettings) {\n        this.parent = parent;\n        this.measuresNames = {};\n        this.engineModule = this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule;\n        this.dataSourceSettings = this.parent.dataSourceSettings;\n        this.chartSettings = chartSettings;\n        var isDataAvail = parent.dataType === 'olap' ?\n            (parent.olapEngineModule.tupColumnInfo.length > 0 && parent.olapEngineModule.tupRowInfo.length > 0 &&\n                (!isNullOrUndefined(parent.olapEngineModule.colMeasurePos) || !isNullOrUndefined(parent.olapEngineModule.rowMeasurePos)))\n            : parent.dataSourceSettings.values.length > 0;\n        if (isDataAvail) {\n            if (this.chartSettings.enableMultiAxis) {\n                this.measureList = this.dataSourceSettings.values.map(function (item) { return item.name; });\n            }\n            else {\n                this.measureList = [chartSettings.value === '' ? this.dataSourceSettings.values[0].name : chartSettings.value];\n            }\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fieldName = field.name.replace(/[^A-Z0-9]+/ig, '_');\n                this.measuresNames[field.name] = fieldName;\n                this.measuresNames[fieldName] = field.name;\n            }\n        }\n        else if (this.parent.chart) {\n            this.parent.chart.series = [];\n            this.parent.chart.rows = [];\n            this.parent.chart.primaryXAxis.title = '';\n            this.parent.chart.primaryYAxis.title = '';\n            this.parent.chart.primaryXAxis.multiLevelLabels = [];\n            this.parent.chart.primaryYAxis.multiLevelLabels = [];\n            if (this.parent.chart.axes.length > 0) {\n                this.parent.chart.axes[0].title = '';\n            }\n            this.parent.chart.primaryXAxis.zoomFactor = 1;\n            this.parent.chart.refresh();\n            return;\n        }\n        else {\n            this.parent.notify(events.contentReady, {});\n            return;\n        }\n        this.columnGroupObject = {};\n        var pivotValues = this.engineModule.pivotValues;\n        this.currentMeasure = chartSettings.enableMultiAxis ? this.measureList[0] :\n            (((chartSettings.value === '' || this.dataSourceSettings.values.filter(function (item) {\n                return item.name === chartSettings.value;\n            }).length === 0) && this.dataSourceSettings.values.length > 0) ? this.dataSourceSettings.values[0].name : chartSettings.value);\n        var totColIndex = this.getColumnTotalIndex(pivotValues);\n        var rKeys = Object.keys(pivotValues);\n        var prevLevel;\n        var firstLevelUName;\n        var levelCollection = {};\n        var prevCell;\n        var integratedLevel = 0;\n        var indexCount = -0.5;\n        this.headerColl = {};\n        this.maxLevel = 0;\n        var levelPos = {};\n        var lastHierarchy = '';\n        var lastDimension = '';\n        var memberCell;\n        if (this.parent.dataType === 'olap') {\n            levelPos = this.groupHierarchyWithLevels(pivotValues);\n            lastHierarchy = this.fieldPosition[this.fieldPosition.length - 1];\n            lastDimension = (this.measurePos === (this.fieldPosition.length - 1) && this.fieldPosition.length > 1) ?\n                this.fieldPosition[this.fieldPosition.length - 2] : lastHierarchy;\n        }\n        for (var _b = 0, rKeys_1 = rKeys; _b < rKeys_1.length; _b++) {\n            var rKey = rKeys_1[_b];\n            var rowIndex = Number(rKey);\n            if (pivotValues[rowIndex][0] && pivotValues[rowIndex][0].axis === 'row' &&\n                (this.dataSourceSettings.rows.length === 0 ? true : pivotValues[rowIndex][0].type !== 'grand sum')) {\n                var firstRowCell = pivotValues[rowIndex][0];\n                var tupInfo = this.parent.dataType === 'olap' ?\n                    this.engineModule.tupRowInfo[firstRowCell.ordinal] : undefined;\n                var fieldPos = -1;\n                var currrentLevel = firstRowCell.level;\n                if (this.parent.dataType === 'olap') {\n                    fieldPos = tupInfo.uNameCollection.split('::').length - 1;\n                    if (firstRowCell.memberType !== 3 && (tupInfo.measureName ?\n                        tupInfo.measureName === this.dataSourceSettings.values[0].name : true)) {\n                        firstLevelUName = firstLevelUName === undefined ? firstRowCell.levelUniqueName : firstLevelUName;\n                        integratedLevel = firstLevelUName === firstRowCell.levelUniqueName ? 0 : integratedLevel;\n                        levelCollection = integratedLevel === 0 ? {} : levelCollection;\n                        integratedLevel = (prevCell && firstLevelUName !== firstRowCell.levelUniqueName) ?\n                            (prevCell.hierarchy === firstRowCell.hierarchy ?\n                                (integratedLevel + (firstRowCell.level - prevCell.level)) :\n                                (isNullOrUndefined(levelCollection[firstRowCell.levelUniqueName]) ? (levelPos[firstRowCell.hierarchy].start) :\n                                    levelCollection[firstRowCell.levelUniqueName])) : integratedLevel;\n                        levelCollection[firstRowCell.levelUniqueName] = integratedLevel;\n                        currrentLevel = integratedLevel;\n                        indexCount += (prevCell && lastDimension === prevCell.hierarchy && !prevCell.isDrilled) ? 1 : 0;\n                        prevLevel = integratedLevel;\n                        prevCell = firstRowCell;\n                    }\n                }\n                else if (firstRowCell.type !== 'value') {\n                    if (!(prevLevel === undefined || prevLevel < currrentLevel)) {\n                        indexCount++;\n                    }\n                    prevLevel = currrentLevel;\n                }\n                this.maxLevel = currrentLevel > this.maxLevel ? currrentLevel : this.maxLevel;\n                var name_1 = this.parent.dataType === 'olap' ? firstRowCell.formattedText :\n                    (firstRowCell.actualText ? firstRowCell.actualText.toString() : firstRowCell.formattedText.toString());\n                var text = firstRowCell.formattedText ? firstRowCell.formattedText.toString() : name_1;\n                var caption = (firstRowCell.hasChild && !firstRowCell.isNamedSet) ?\n                    ((firstRowCell.isDrilled ? ' - ' : ' + ') + text) : text;\n                var levelName = tupInfo ? tupInfo.uNameCollection : firstRowCell.valueSort['levelName'].toString();\n                var cellInfo = {\n                    name: name_1,\n                    text: caption,\n                    hasChild: firstRowCell.hasChild,\n                    isDrilled: firstRowCell.isDrilled,\n                    levelName: levelName,\n                    level: currrentLevel,\n                    fieldName: firstRowCell.valueSort['axis'] ? firstRowCell.valueSort['axis'].toString() : '',\n                    rowIndex: rowIndex,\n                    colIndex: 0,\n                    cell: firstRowCell\n                };\n                if (this.parent.dataType === 'olap' ? firstRowCell.memberType !== 3 : firstRowCell.type !== 'value') {\n                    if (this.headerColl[indexCount]) {\n                        this.headerColl[indexCount][currrentLevel] = cellInfo;\n                    }\n                    else {\n                        this.headerColl[indexCount] = {};\n                        this.headerColl[indexCount][currrentLevel] = cellInfo;\n                    }\n                }\n                var rows = pivotValues[rowIndex];\n                var cKeys = Object.keys(rows);\n                var prevMemberCell = void 0;\n                if (this.parent.dataType === 'olap') {\n                    memberCell = firstRowCell.memberType !== 3 ? firstRowCell : memberCell;\n                }\n                else {\n                    memberCell = firstRowCell.type !== 'value' ? firstRowCell : memberCell;\n                }\n                for (var _c = 0, cKeys_1 = cKeys; _c < cKeys_1.length; _c++) {\n                    var cKey = cKeys_1[_c];\n                    var cellIndex = Number(cKey);\n                    var cell = pivotValues[rowIndex][cellIndex];\n                    var measureAllow = cell.rowHeaders === '' ? this.dataSourceSettings.rows.length === 0 : true;\n                    var actualText = (this.parent.dataType === 'olap' && tupInfo && tupInfo.measureName) ?\n                        tupInfo.measureName : cell.actualText;\n                    if (!totColIndex[cell.colIndex] && cell.axis === 'value' && firstRowCell.type !== 'header' &&\n                        actualText !== '' && (chartSettings.enableMultiAxis ? true : actualText === this.currentMeasure)) {\n                        if (this.parent.dataType === 'olap' ? (lastHierarchy === firstRowCell.hierarchy ?\n                            ((firstRowCell.memberType === 3 && prevMemberCell) ?\n                                (fieldPos === this.measurePos ? prevMemberCell.isDrilled : true) : firstRowCell.isDrilled) : true)\n                            : (((firstRowCell.type === 'value' && prevMemberCell) ?\n                                prevMemberCell.members.length > 0 : firstRowCell.members.length > 0) || !measureAllow)) {\n                            break;\n                        }\n                        var colHeaders = this.parent.dataType === 'olap' ? cell.columnHeaders.toString().split(/~~|::/).join(' - ')\n                            : cell.columnHeaders.toString().split('.').join(' - ');\n                        var rowHeaders = this.parent.dataType === 'olap' ? cell.rowHeaders.toString().split(/~~|::/).join(' - ')\n                            : cell.rowHeaders.toString().split('.').join(' - ');\n                        var columnSeries = colHeaders + ' | ' + actualText;\n                        var yValue = (this.parent.dataType === 'pivot' ? (this.engineModule.aggregatedValueMatrix[rowIndex] &&\n                            !isNullOrUndefined(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex])) ?\n                            Number(this.engineModule.aggregatedValueMatrix[rowIndex][cellIndex]) : Number(cell.value) : Number(cell.value));\n                        if (this.columnGroupObject[columnSeries]) {\n                            this.columnGroupObject[columnSeries].push({\n                                x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                y: yValue\n                            });\n                        }\n                        else {\n                            this.columnGroupObject[columnSeries] = [{\n                                    x: this.dataSourceSettings.rows.length === 0 ? firstRowCell.formattedText : rowHeaders,\n                                    y: yValue\n                                }];\n                        }\n                    }\n                    prevMemberCell = memberCell;\n                }\n            }\n        }\n        this.refreshChart();\n    };\n    /**\n     * Refreshing chart based on the updated chartSettings.\n     * @returns void\n     */\n    PivotChart.prototype.refreshChart = function () {\n        this.chartSeries = [];\n        var columnKeys = Object.keys(this.columnGroupObject);\n        this.persistSettings = JSON.parse(this.parent.getPersistData()).chartSettings;\n        for (var _i = 0, columnKeys_1 = columnKeys; _i < columnKeys_1.length; _i++) {\n            var key = columnKeys_1[_i];\n            var currentSeries = {};\n            currentSeries = this.persistSettings.chartSeries ? this.frameObjectWithKeys(this.persistSettings.chartSeries) : currentSeries;\n            currentSeries.dataSource = this.columnGroupObject[key];\n            currentSeries.xName = 'x';\n            currentSeries.yName = 'y';\n            currentSeries.name = this.chartSettings.enableMultiAxis ? key : key.split(' | ')[0];\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                var measure = key.split(' | ')[1];\n                currentSeries.yAxisName = this.measuresNames[measure] ? this.measuresNames[measure] : measure;\n            }\n            this.chartSeries = this.chartSeries.concat(currentSeries);\n        }\n        var seriesEvent = { series: this.chartSeries, cancel: false };\n        var pivotChart = this;\n        this.parent.trigger(events.chartSeriesCreated, seriesEvent, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                pivotChart.bindChart();\n            }\n            else {\n                if (pivotChart.element) {\n                    remove(pivotChart.element);\n                }\n                pivotChart.parent.notify(events.contentReady, {});\n            }\n        });\n    };\n    PivotChart.prototype.frameObjectWithKeys = function (series) {\n        var keys = Object.keys(series);\n        var keyPos = 0;\n        var framedSeries = {};\n        while (keyPos < keys.length) {\n            framedSeries[keys[keyPos]] = series[keys[keyPos]];\n            keyPos++;\n        }\n        return framedSeries;\n    };\n    PivotChart.prototype.bindChart = function () {\n        var currentXAxis = this.configXAxis();\n        var currentTooltipSettings = this.configTooltipSettings();\n        var currentLegendSettings = this.configLegendSettings();\n        var currentZoomSettings = this.configZoomSettings();\n        var axesWithRows = this.frameAxesWithRows();\n        var type = this.chartSettings.chartSeries.type;\n        if (this.parent.displayOption.view === 'Both') {\n            this.element = this.parent.displayOption.primary === 'Chart' ? (this.parent.element.insertBefore((!this.element ? (createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            })) : this.element), this.parent.element.querySelector('.' + cls.GRID_CLASS))) :\n                (this.parent.element.appendChild(!this.element ? (createElement('div', {\n                    className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n                })) : this.element));\n        }\n        else if (!this.element) {\n            this.element = this.parent.element.appendChild(createElement('div', {\n                className: cls.PIVOTCHART, id: this.parent.element.id + '_chart'\n            }));\n        }\n        if (!(this.parent.chart && this.parent.chart.element && this.parent.element.querySelector('.e-chart'))) {\n            if (this.parent.showGroupingBar) {\n                this.element.style.minWidth = '400px !important';\n            }\n            else {\n                this.element.style.minWidth = '310px !important';\n            }\n            var width = this.parent.width.toString();\n            if (this.parent.showToolbar && this.parent.grid) {\n                width = this.parent.getGridWidthAsNumber().toString();\n            }\n            var height = this.parent.getHeightAsNumber();\n            if (isNullOrUndefined(height)) {\n                height = \"auto\";\n            }\n            Chart.Inject(ColumnSeries, StackingColumnSeries, RangeColumnSeries, BarSeries, StackingBarSeries, ScatterSeries, BubbleSeries, LineSeries, StepLineSeries, SplineSeries, SplineAreaSeries, MultiColoredLineSeries, PolarSeries, RadarSeries, AreaSeries, RangeAreaSeries, StackingAreaSeries, StepAreaSeries, MultiColoredAreaSeries, ParetoSeries, Legend, Tooltip, Category, MultiLevelLabel, ScrollBar, Zoom, Export, Crosshair);\n            this.parent.chart = new Chart({\n                series: this.chartSeries.length > 0 ? this.chartSeries : [{}],\n                legendSettings: currentLegendSettings,\n                tooltip: currentTooltipSettings,\n                zoomSettings: currentZoomSettings,\n                axes: (type === 'Polar' || type === 'Radar') ? [] : axesWithRows.axes,\n                rows: (type === 'Polar' || type === 'Radar') ? [{}] :\n                    (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                        this.chartSettings.enableMultiAxis) ? [{ height: '100%' }] : axesWithRows.rows,\n                columns: (type === 'Polar' || type === 'Radar') ? [{}] :\n                    (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                        this.chartSettings.enableMultiAxis) ? axesWithRows.columns : [{ width: '100%' }],\n                primaryYAxis: (type === 'Polar' || type === 'Radar') ? axesWithRows.axes[0] : { visible: false },\n                primaryXAxis: currentXAxis,\n                width: width,\n                height: height.toString(),\n                title: this.chartSettings.title,\n                titleStyle: this.chartSettings.titleStyle,\n                subTitle: this.chartSettings.subTitle,\n                subTitleStyle: this.chartSettings.subTitleStyle,\n                margin: this.chartSettings.margin,\n                border: this.chartSettings.border,\n                background: this.chartSettings.background,\n                chartArea: this.chartSettings.chartArea,\n                palettes: this.chartSettings.palettes,\n                theme: this.chartSettings.theme,\n                crosshair: this.chartSettings.crosshair,\n                selectionMode: this.chartSettings.selectionMode,\n                isMultiSelect: this.chartSettings.isMultiSelect,\n                enableExport: this.chartSettings.enableExport,\n                selectedDataIndexes: this.chartSettings.selectedDataIndexes,\n                isTransposed: this.chartSettings.isTransposed,\n                enableAnimation: this.chartSettings.enableAnimation,\n                useGroupingSeparator: this.chartSettings.useGroupingSeparator,\n                description: this.chartSettings.description,\n                tabIndex: this.chartSettings.tabIndex,\n                locale: this.parent.locale,\n                enableSideBySidePlacement: this.chartSettings.enableSideBySidePlacement,\n                beforePrint: this.chartSettings.beforePrint ? this.chartSettings.beforePrint.bind(this) : undefined,\n                animationComplete: this.chartSettings.animationComplete ? this.chartSettings.animationComplete.bind(this) : undefined,\n                legendRender: this.chartSettings.legendRender ? this.chartSettings.legendRender.bind(this) : undefined,\n                textRender: this.chartSettings.textRender ? this.chartSettings.textRender.bind(this) : undefined,\n                pointRender: this.chartSettings.pointRender ? this.chartSettings.pointRender.bind(this) : undefined,\n                seriesRender: this.chartSettings.seriesRender ? this.chartSettings.seriesRender.bind(this) : undefined,\n                chartMouseMove: this.chartSettings.chartMouseMove ? this.chartSettings.chartMouseMove.bind(this) : undefined,\n                chartMouseClick: this.chartSettings.chartMouseClick ? this.chartSettings.chartMouseClick.bind(this) : undefined,\n                pointMove: this.chartSettings.pointMove ? this.chartSettings.pointMove.bind(this) : undefined,\n                pointClick: this.chartSettings.pointClick ? this.chartSettings.pointClick.bind(this) : undefined,\n                chartMouseLeave: this.chartSettings.chartMouseLeave ? this.chartSettings.chartMouseLeave.bind(this) : undefined,\n                chartMouseDown: this.chartSettings.chartMouseDown ? this.chartSettings.chartMouseDown.bind(this) : undefined,\n                chartMouseUp: this.chartSettings.chartMouseUp ? this.chartSettings.chartMouseUp.bind(this) : undefined,\n                dragComplete: this.chartSettings.dragComplete ? this.chartSettings.dragComplete.bind(this) : undefined,\n                zoomComplete: this.chartSettings.zoomComplete ? this.chartSettings.zoomComplete.bind(this) : undefined,\n                scrollStart: this.chartSettings.scrollStart ? this.chartSettings.scrollStart.bind(this) : undefined,\n                scrollEnd: this.chartSettings.scrollEnd ? this.chartSettings.scrollEnd.bind(this) : undefined,\n                scrollChanged: this.chartSettings.scrollChanged ? this.chartSettings.scrollChanged.bind(this) : undefined,\n                tooltipRender: this.tooltipRender.bind(this),\n                loaded: this.loaded.bind(this),\n                load: this.load.bind(this),\n                resized: this.resized.bind(this),\n                axisLabelRender: this.axisLabelRender.bind(this),\n                multiLevelLabelClick: this.multiLevelLabelClick.bind(this),\n            });\n            this.parent.chart.isStringTemplate = true;\n            this.parent.chart.appendTo('#' + this.parent.element.id + '_chart');\n        }\n        else {\n            this.parent.chart.series = this.chartSeries;\n            this.parent.chart.primaryXAxis = currentXAxis;\n            if (type === 'Polar' || type === 'Radar') {\n                this.parent.chart.primaryYAxis.visible = true;\n                this.parent.chart.primaryYAxis = axesWithRows.axes[0];\n                this.parent.chart.axes = [];\n                this.parent.chart.rows = [{}];\n            }\n            else {\n                this.parent.chart.primaryYAxis.visible = false;\n                this.parent.chart.axes = axesWithRows.axes;\n                if (type === 'Bar' || type === 'StackingBar' || type === 'StackingBar100' &&\n                    this.chartSettings.enableMultiAxis) {\n                    this.parent.chart.rows = [{ height: '100%' }];\n                    this.parent.chart.columns = axesWithRows.columns;\n                }\n                else {\n                    this.parent.chart.rows = axesWithRows.rows;\n                    this.parent.chart.columns = [{ width: '100%' }];\n                }\n            }\n            this.parent.chart.refresh();\n        }\n    };\n    PivotChart.prototype.frameAxesWithRows = function () {\n        var axes = [];\n        var rows = [];\n        var columns = [];\n        var percentChart = this.persistSettings.chartSeries && (this.persistSettings.chartSeries.type === 'StackingColumn100' ||\n            this.persistSettings.chartSeries.type === 'StackingBar100' ||\n            this.persistSettings.chartSeries.type === 'StackingArea100');\n        var percentAggregateTypes = ['PercentageOfGrandTotal', 'PercentageOfColumnTotal', 'PercentageOfRowTotal',\n            'PercentageOfDifferenceFrom', 'PercentageOfParentRowTotal', 'PercentageOfParentColumnTotal', 'PercentageOfParentTotal'];\n        if (this.chartSettings.enableMultiAxis) {\n            var valCnt = 0;\n            var divider = (100 / this.dataSourceSettings.values.length) + '%';\n            for (var _i = 0, _a = this.dataSourceSettings.values; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var measureField = this.engineModule.fieldList[item.name];\n                var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n                // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((itm: IFormatSettings) => {\n                //     return itm.name === item.name;\n                // })[0];\n                var formatSetting = void 0;\n                for (var _b = 0, _c = this.dataSourceSettings.formatSettings; _b < _c.length; _b++) {\n                    var field = _c[_b];\n                    if (field.name === item.name) {\n                        formatSetting = field;\n                        break;\n                    }\n                }\n                var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                    (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) : this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n                var resFormat = (this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar') ? true : false;\n                var currentYAxis = {};\n                currentYAxis = this.persistSettings.primaryYAxis ?\n                    this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n                currentYAxis.labelFormat = currentYAxis.labelFormat ?\n                    currentYAxis.labelFormat : (percentChart ? '' : (!resFormat ? format : 'N'));\n                currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n                currentYAxis.plotOffset = currentYAxis.plotOffset ? currentYAxis.plotOffset : (valCnt % 2 !== 0 ?\n                    this.chartSettings.chartSeries.type === 'Bar' || this.chartSettings.chartSeries.type === 'StackingBar' ||\n                        this.chartSettings.chartSeries.type === 'StackingBar100' ? 50 : 30 : 0);\n                currentYAxis.rowIndex = valCnt;\n                currentYAxis.columnIndex = valCnt;\n                if (!resFormat) {\n                    currentYAxis.name = this.measuresNames[item.name] ? this.measuresNames[item.name] : item.name;\n                }\n                axes = axes.concat(currentYAxis);\n                rows.push({ height: divider });\n                columns.push({ width: divider });\n                valCnt++;\n            }\n        }\n        else {\n            var measureField = this.engineModule.fieldList[this.currentMeasure];\n            var measureAggregatedName = (this.parent.dataType === 'olap' ? '' :\n                (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n                    this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n            // let formatSetting: IFormatSettings = this.dataSourceSettings.formatSettings.filter((item: IFormatSettings) => {\n            //     return item.name === this.currentMeasure;\n            // })[0];\n            var formatSetting = void 0;\n            for (var _d = 0, _e = this.dataSourceSettings.formatSettings; _d < _e.length; _d++) {\n                var item = _e[_d];\n                if (item.name === this.currentMeasure) {\n                    formatSetting = item;\n                    break;\n                }\n            }\n            var currentYAxis = {};\n            var format = PivotUtil.inArray(measureField.aggregateType, percentAggregateTypes) !== -1 ? 'P2' : (formatSetting ?\n                (formatSetting.format.toLowerCase().match(/n|p|c/) === null ? 'N' : formatSetting.format) :\n                this.parent.dataType === 'olap' ? this.getFormat(measureField.formatString) : 'N');\n            currentYAxis = this.persistSettings.primaryYAxis ? this.frameObjectWithKeys(this.persistSettings.primaryYAxis) : currentYAxis;\n            currentYAxis.rowIndex = 0;\n            currentYAxis.columnIndex = 0;\n            if (!(this.chartSettings.chartSeries.type === 'Polar' || this.chartSettings.chartSeries.type === 'Radar')) {\n                currentYAxis.name = this.measuresNames[this.currentMeasure] ? this.measuresNames[this.currentMeasure] : this.currentMeasure;\n            }\n            currentYAxis.labelFormat = currentYAxis.labelFormat ? currentYAxis.labelFormat : (percentChart ? '' : format);\n            currentYAxis.title = currentYAxis.title ? currentYAxis.title : measureAggregatedName;\n            axes = axes.concat(currentYAxis);\n            rows.push({ height: '100%' });\n            columns.push({ width: '100%' });\n        }\n        return { axes: axes, rows: rows, columns: columns };\n    };\n    PivotChart.prototype.getFormat = function (format) {\n        if (format === 'Currency') {\n            format = 'C';\n        }\n        else if (format === 'Percent') {\n            format = 'P';\n        }\n        else {\n            format = 'N';\n        }\n        return format;\n    };\n    PivotChart.prototype.getColumnTotalIndex = function (pivotValues) {\n        var colIndexColl = {};\n        var rKeys = Object.keys(pivotValues);\n        for (var _i = 0, rKeys_2 = rKeys; _i < rKeys_2.length; _i++) {\n            var rowIndex = rKeys_2[_i];\n            var rows = pivotValues[Number(rowIndex)];\n            var cKeys = Object.keys(rows);\n            for (var _a = 0, cKeys_2 = cKeys; _a < cKeys_2.length; _a++) {\n                var cellIndex = cKeys_2[_a];\n                var cell = rows[Number(cellIndex)];\n                if (cell.axis !== 'column') {\n                    return colIndexColl;\n                }\n                else if ((cell.type === 'sum' || (this.dataSourceSettings.columns.length === 0 ? false : cell.type === 'grand sum'))\n                    && cell.rowSpan !== -1) {\n                    colIndexColl[cell.colIndex] = cell.colIndex;\n                }\n            }\n        }\n        return colIndexColl;\n    };\n    PivotChart.prototype.groupHierarchyWithLevels = function (pivotValues) {\n        var _a, _b;\n        this.fieldPosition = [];\n        var group = {};\n        var fieldCount = 0;\n        var levelPos = {};\n        this.measurePos = this.engineModule.tupRowInfo[0].measurePosition;\n        for (var rowPos = 0; rowPos < pivotValues.length; rowPos++) {\n            var cell = pivotValues[rowPos][0];\n            if (cell && cell.axis === 'row' && cell.type !== 'grand sum') {\n                if (isNullOrUndefined(group[cell.hierarchy])) {\n                    if (cell.memberType === 3) {\n                        if (fieldCount === this.measurePos) {\n                            this.fieldPosition[this.measurePos] = cell.hierarchy;\n                            group[cell.hierarchy] = (_a = {}, _a[cell.levelUniqueName] = cell.levelUniqueName, _a);\n                        }\n                        else {\n                            fieldCount--;\n                        }\n                    }\n                    else {\n                        this.fieldPosition[fieldCount] = cell.hierarchy;\n                        group[cell.hierarchy] = (_b = {}, _b[cell.levelUniqueName] = cell.levelUniqueName, _b);\n                    }\n                    fieldCount++;\n                }\n                else {\n                    group[cell.hierarchy][cell.levelUniqueName] = cell.levelUniqueName;\n                }\n            }\n        }\n        var lastEnd = -1;\n        for (var pos = 0; pos < this.fieldPosition.length; pos++) {\n            if (this.measurePos !== pos) {\n                levelPos[this.fieldPosition[pos]] = { start: (lastEnd + 1), end: (lastEnd + Object.keys(group[this.fieldPosition[pos]]).length) };\n                lastEnd = levelPos[this.fieldPosition[pos]].end;\n            }\n        }\n        return levelPos;\n    };\n    PivotChart.prototype.frameMultiLevelLabels = function () {\n        var startKeys = Object.keys(this.headerColl);\n        var parentHeaders = this.headerColl[-0.5];\n        for (var _i = 0, startKeys_1 = startKeys; _i < startKeys_1.length; _i++) {\n            var startKey = startKeys_1[_i];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var levelPos = 0;\n            var isAvail = false;\n            while (levelPos <= this.maxLevel) {\n                if (!isAvail) {\n                    if (!headers[levelPos]) {\n                        headers[levelPos] = parentHeaders[levelPos];\n                    }\n                    else {\n                        isAvail = true;\n                    }\n                }\n                else if (!headers[levelPos]) {\n                    headers[levelPos] = {\n                        name: headers[levelPos - 1].name,\n                        // text: headers[levelPos - 1].text,\n                        text: '',\n                        hasChild: headers[levelPos - 1].hasChild,\n                        isDrilled: headers[levelPos - 1].isDrilled,\n                        levelName: headers[levelPos - 1].levelName,\n                        level: headers[levelPos - 1].level,\n                        fieldName: headers[levelPos - 1].fieldName,\n                        rowIndex: headers[levelPos - 1].rowIndex,\n                        colIndex: headers[levelPos - 1].colIndex,\n                        span: -1,\n                    };\n                    // headers[levelPos - 1].span = 0;\n                }\n                levelPos++;\n            }\n            parentHeaders = this.headerColl[sKey];\n        }\n        var gRows = {};\n        for (var _a = 0, startKeys_2 = startKeys; _a < startKeys_2.length; _a++) {\n            var startKey = startKeys_2[_a];\n            var sKey = Number(startKey);\n            var headers = this.headerColl[sKey];\n            var lKeys = Object.keys(headers);\n            for (var _b = 0, lKeys_1 = lKeys; _b < lKeys_1.length; _b++) {\n                var levelKey = lKeys_1[_b];\n                var lKey = Number(levelKey);\n                if (gRows[lKey]) {\n                    var len = gRows[lKey].length;\n                    if (headers[lKey].levelName === parentHeaders[lKey].levelName) {\n                        gRows[lKey][len - 1].end = gRows[lKey][len - 1].end + 1;\n                    }\n                    else {\n                        gRows[lKey].push({\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'), customAttributes: headers[lKey]\n                        });\n                    }\n                }\n                else {\n                    gRows[lKey] = [{\n                            start: sKey, end: sKey + 1, text: headers[lKey].text,\n                            type: (headers[lKey].span === -1 ? 'WithoutTopandBottomBorder' : 'WithoutTopBorder'), customAttributes: headers[lKey]\n                        }];\n                }\n            }\n            parentHeaders = headers;\n        }\n        var levellength = Object.keys(gRows).length;\n        var multiLevelLabels = [];\n        for (var level = levellength - 1; level > -1; level--) {\n            multiLevelLabels.push({ categories: gRows[level], border: { width: 1 }, overflow: 'Trim' });\n        }\n        return multiLevelLabels;\n    };\n    PivotChart.prototype.getZoomFactor = function () {\n        if (!isNaN(Number(this.parent.width))) {\n            this.calculatedWidth = Number(this.parent.width);\n        }\n        else if (this.parent.width.indexOf('%') > -1) {\n            this.calculatedWidth = this.parent.element.clientWidth * (parseFloat(this.parent.width) / 100);\n        }\n        else if (this.parent.width.indexOf('px') > -1) {\n            this.calculatedWidth = Number(this.parent.width.toString().split('px')[0]);\n        }\n        else {\n            this.calculatedWidth = this.parent.element.clientWidth;\n        }\n        var seriesLength = (this.chartSeries.length * 10) > 120 ? (this.chartSeries.length * 10) : 120;\n        var zoomFactor = this.chartSeries.length > 0 ?\n            (this.calculatedWidth / (Object.keys(this.chartSeries[0].dataSource).length * seriesLength)) : 1;\n        zoomFactor = (zoomFactor < 1 && zoomFactor > 0) ? zoomFactor : 1;\n        return zoomFactor;\n    };\n    PivotChart.prototype.configTooltipSettings = function () {\n        var tooltip = this.chartSettings.tooltip;\n        tooltip.enable = tooltip.enable === undefined ? true : tooltip.enable;\n        if (isBlazor()) {\n            this.parent.allowServerDataBinding = false;\n            this.parent.setProperties({ chartSettings: { tooltip: { header: tooltip.header ? tooltip.header : '' } } }, true);\n            this.parent.allowServerDataBinding = true;\n        }\n        else {\n            tooltip.header = tooltip.header ? tooltip.header : '';\n        }\n        tooltip.enableMarker = tooltip.enableMarker === undefined ? true : tooltip.enableMarker;\n        return tooltip;\n    };\n    PivotChart.prototype.configLegendSettings = function () {\n        var legendSettings = {};\n        legendSettings = this.chartSettings.legendSettings ? this.chartSettings.legendSettings : legendSettings;\n        legendSettings.padding = legendSettings.padding ? legendSettings.padding : 25;\n        legendSettings.shapePadding = legendSettings.shapePadding ? legendSettings.shapePadding : 10;\n        return legendSettings;\n    };\n    PivotChart.prototype.configXAxis = function () {\n        var currentXAxis = {};\n        currentXAxis = this.persistSettings.primaryXAxis ? this.frameObjectWithKeys(this.persistSettings.primaryXAxis) : currentXAxis;\n        currentXAxis.valueType = 'Category';\n        currentXAxis.labelIntersectAction = currentXAxis.labelIntersectAction ? currentXAxis.labelIntersectAction : 'Rotate45';\n        currentXAxis.title = currentXAxis.title ? currentXAxis.title :\n            this.dataSourceSettings.rows.map(function (args) { return args.caption || args.name; }).join(' / ');\n        currentXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            currentXAxis.zoomFactor = 1;\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            currentXAxis.multiLevelLabels = this.frameMultiLevelLabels();\n            currentXAxis.border = { width: 1, type: 'WithoutTopandBottomBorder' };\n            currentXAxis.majorTickLines = { width: 0, height: -10 };\n        }\n        return currentXAxis;\n    };\n    PivotChart.prototype.configZoomSettings = function () {\n        var zoomSettings = this.chartSettings.zoomSettings;\n        zoomSettings.enableSelectionZooming = zoomSettings.enableSelectionZooming === undefined ? true : zoomSettings.enableSelectionZooming;\n        zoomSettings.enableScrollbar = zoomSettings.enableScrollbar === undefined ? true : zoomSettings.enableScrollbar;\n        return zoomSettings;\n    };\n    PivotChart.prototype.tooltipRender = function (args) {\n        var measure = args.series.yAxisName ? (args.series.yAxisName.split('_CumulativeAxis')[0]) :\n            (this.chartSettings.enableMultiAxis ? args.series.name.split(' | ')[1] : this.measuresNames[this.currentMeasure] ?\n                this.measuresNames[this.currentMeasure] : this.currentMeasure);\n        var measureField = this.engineModule.fieldList[this.measuresNames[measure] ? this.measuresNames[measure] : measure];\n        var measureAggregatedName = (this.parent.dataType === 'olap' ? '' : (this.parent.localeObj.getConstant(measureField.aggregateType) + ' ' +\n            this.parent.localeObj.getConstant('of') + ' ')) + measureField.caption;\n        var formattedText = args.text.split('<b>')[1].split('</b>')[0];\n        var formatField = this.engineModule.formatFields[measureField.id];\n        var formattedValue = ((formatField && formatField.format && formatField.format.toLowerCase().match(/n|p|c/) !== null &&\n            this.chartSettings.useGroupingSeparator) ? this.parent.dataType === 'olap' ?\n            this.engineModule.getFormattedValue(args.point.y, measureField.id, formattedText) :\n            this.parent.engineModule.getFormattedValue(args.point.y, measureField.id).formattedText :\n            formattedText);\n        args.text = measureAggregatedName + ': ' + formattedValue +\n            (this.dataSourceSettings.columns.length === 0 ? '' :\n                (' <br/>' + this.parent.localeObj.getConstant('column') + ': ' + (args.series.name ? args.series.name.split(' | ')[0] : args.data.seriesName.split(' | ')[0]))) +\n            (this.dataSourceSettings.rows.length === 0 ? '' :\n                (' <br/>' + this.parent.localeObj.getConstant('row') + ': ' + args.point.x));\n        this.parent.trigger(events.chartTooltipRender, args);\n    };\n    PivotChart.prototype.loaded = function (args) {\n        this.parent.isChartLoaded = true;\n        if (this.parent.chart && this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.showFieldList && this.parent.currentView === 'Chart') {\n            this.parent.groupingBarModule.alignIcon();\n        }\n        if (this.chartSettings.showMultiLevelLabels) {\n            var multilabelAxisName = PivotUtil.inArray(this.chartSettings.chartSeries.type, ['Bar', 'StackingBar', 'StackingBar100']) > -1 ?\n                '_chartYAxisMultiLevelLabel0' : '_chartXAxisMultiLevelLabel0';\n            if (!isNullOrUndefined(this.parent.element.querySelector(\"#\" + this.parent.element.id + multilabelAxisName))) {\n                this.parent.element.querySelector(\"#\" + this.parent.element.id + multilabelAxisName).setAttribute('cursor', 'pointer');\n            }\n        }\n        if (this.parent.chart && this.parent.showToolbar && this.parent.element.querySelector(\".e-pivot-toolbar\")\n            && this.parent.showGroupingBar && this.parent.element.querySelector(\".e-chart-grouping-bar\")) {\n            this.parent.chart.height = (this.parent.getHeightAsNumber() - this.parent.element.querySelector(\".e-pivot-toolbar\").clientHeight -\n                this.parent.element.querySelector(\".e-chart-grouping-bar\").clientHeight).toString();\n        }\n        else if (this.parent.chart && this.parent.showToolbar && this.parent.element.querySelector(\".e-pivot-toolbar\")) {\n            this.parent.chart.height = (this.parent.getHeightAsNumber() - this.parent.element.querySelector(\".e-pivot-toolbar\").clientHeight).toString();\n        }\n        else if (this.parent.chart && this.parent.showGroupingBar && this.parent.element.querySelector(\".e-chart-grouping-bar\")) {\n            this.parent.chart.height = (this.parent.getHeightAsNumber() - this.parent.element.querySelector(\".e-chart-grouping-bar\").clientHeight).toString();\n        }\n        else if (parseInt(this.parent.chart.height) < 200) {\n            this.parent.chart.height = \"200\";\n        }\n        if (this.parent.grid && this.parent.chart && this.parent.showToolbar) {\n            if (this.parent.currentView === 'Table') {\n                this.parent.grid.element.style.display = '';\n                this.parent.chart.element.style.display = 'none';\n            }\n            else {\n                this.parent.grid.element.style.display = 'none';\n                this.parent.chart.element.style.display = '';\n            }\n        }\n        this.parent.notify(events.contentReady, {});\n        this.parent.trigger(events.chartLoaded, args);\n    };\n    PivotChart.prototype.axisLabelRender = function (args) {\n        if (this.chartSettings.showMultiLevelLabels) {\n            if (args.axis.name === 'primaryXAxis') {\n                args.text = '';\n            }\n        }\n        this.parent.trigger(events.chartAxisLabelRender, args);\n    };\n    PivotChart.prototype.multiLevelLabelClick = function (args) {\n        if (args.customAttributes && args.customAttributes.hasChild && !args.customAttributes.cell.isNamedSet) {\n            if (this.parent.dataType === 'olap') {\n                this.parent.onDrill(undefined, args.customAttributes);\n            }\n            else {\n                this.onDrill(args);\n            }\n        }\n    };\n    /** @hidden */\n    PivotChart.prototype.onDrill = function (args) {\n        var labelInfo = args.customAttributes;\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = labelInfo.fieldName;\n        var currentCell = this.engineModule.pivotValues[labelInfo.rowIndex][labelInfo.colIndex];\n        var memberUqName = currentCell.valueSort.levelName.\n            split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n        var fieldAvail = false;\n        if (this.dataSourceSettings.drilledMembers.length === 0) {\n            this.parent.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberUqName], delimiter: delimiter }] } }, true);\n        }\n        else {\n            for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                var field = this.dataSourceSettings.drilledMembers[fCnt];\n                memberUqName = memberUqName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                if (field.name === fieldName) {\n                    fieldAvail = true;\n                    var memIndex = field.items.indexOf(memberUqName);\n                    if (memIndex > -1) {\n                        field.items.splice(memIndex, 1);\n                    }\n                    else {\n                        field.items.push(memberUqName);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n            if (!fieldAvail) {\n                this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberUqName], delimiter: delimiter });\n            }\n        }\n        this.parent.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        var drilledItem = {\n            fieldName: fieldName, memberName: memberUqName, delimiter: delimiter,\n            axis: 'row',\n            action: labelInfo.isDrilled ? 'up' : 'down',\n            currentCell: currentCell\n        };\n        pivot.parent.trigger(events.drill, {\n            drillInfo: drilledItem,\n            pivotview: isBlazor() ? undefined : pivot\n        });\n        if (pivot.parent.enableVirtualization) {\n            pivot.engineModule.drilledMembers = pivot.dataSourceSettings.drilledMembers;\n            pivot.engineModule.onDrill(drilledItem);\n        }\n        else {\n            pivot.engineModule.generateGridData(pivot.dataSourceSettings);\n        }\n        pivot.parent.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n        pivot.parent.renderPivotGrid();\n        //});\n    };\n    PivotChart.prototype.load = function (args) {\n        if (args.chart.zoomModule) {\n            args.chart.zoomModule.isZoomed = true;\n        }\n        this.parent.trigger(events.chartLoad, args);\n    };\n    PivotChart.prototype.resized = function (args) {\n        if (isBlazor()) {\n            args.chart = this.parent.chart;\n        }\n        args.chart.primaryXAxis.zoomFactor = this.getZoomFactor();\n        if (!this.parent.chartSettings.zoomSettings.enableScrollbar) {\n            args.chart.primaryXAxis.zoomFactor = 1;\n        }\n        this.parent.trigger(events.chartResized, args);\n    };\n    /**\n     * To destroy the chart module\n     * @returns void\n     * @hidden\n     */\n    /* tslint:disable:no-empty */\n    PivotChart.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.chart && !this.parent.chart.isDestroyed) {\n            this.parent.chart.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return PivotChart;\n}());\nexport { PivotChart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Event, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Border, ErrorBarSettings } from '@syncfusion/ej2-charts';\nimport { DataLabelSettings } from '@syncfusion/ej2-charts';\nimport { ErrorBarCapSettings } from '@syncfusion/ej2-charts';\nimport { Trendline, EmptyPointSettings } from '@syncfusion/ej2-charts';\nimport { CornerRadius, ChartSegment, Animation } from '@syncfusion/ej2-charts';\nimport { Theme, Font, Margin } from '@syncfusion/ej2-charts';\nimport { ChartArea, CrosshairSettings } from '@syncfusion/ej2-charts';\nimport { Indexes } from '@syncfusion/ej2-charts';\nimport { MajorTickLines, MinorTickLines, MajorGridLines } from '@syncfusion/ej2-charts';\nimport { MarkerSettings } from '@syncfusion/ej2-charts';\nimport { MinorGridLines, AxisLine, StripLineSettings, LabelBorder } from '@syncfusion/ej2-charts';\nimport { ChartLocation } from '@syncfusion/ej2-charts';\nimport { CrosshairTooltip } from '@syncfusion/ej2-charts';\n/**\n *  third party configures for chart series in chart settings.\n */\nvar PivotChartSeriesBorder = /** @class */ (function () {\n    function PivotChartSeriesBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesBorder.prototype, \"width\", void 0);\n    return PivotChartSeriesBorder;\n}());\nexport { PivotChartSeriesBorder };\nvar PivotChartSeriesAnimation = /** @class */ (function () {\n    function PivotChartSeriesAnimation() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesAnimation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotChartSeriesAnimation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesAnimation.prototype, \"delay\", void 0);\n    return PivotChartSeriesAnimation;\n}());\nexport { PivotChartSeriesAnimation };\nvar PivotChartSeriesSegment = /** @class */ (function () {\n    function PivotChartSeriesSegment() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotChartSeriesSegment.prototype, \"dashArray\", void 0);\n    return PivotChartSeriesSegment;\n}());\nexport { PivotChartSeriesSegment };\nvar PivotChartSeriesMarkerSettings = /** @class */ (function () {\n    function PivotChartSeriesMarkerSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesMarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], PivotChartSeriesMarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesMarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSeriesMarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], PivotChartSeriesMarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesMarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesMarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], PivotChartSeriesMarkerSettings.prototype, \"dataLabel\", void 0);\n    return PivotChartSeriesMarkerSettings;\n}());\nexport { PivotChartSeriesMarkerSettings };\nvar PivotChartSeriesErrorSettings = /** @class */ (function () {\n    function PivotChartSeriesErrorSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSeriesErrorSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], PivotChartSeriesErrorSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSeriesErrorSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], PivotChartSeriesErrorSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesErrorSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSeriesErrorSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesErrorSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], PivotChartSeriesErrorSettings.prototype, \"errorBarCap\", void 0);\n    return PivotChartSeriesErrorSettings;\n}());\nexport { PivotChartSeriesErrorSettings };\nvar PivotChartSeriesTrendline = /** @class */ (function () {\n    function PivotChartSeriesTrendline() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('Linear')\n    ], PivotChartSeriesTrendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotChartSeriesTrendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesTrendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], PivotChartSeriesTrendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], PivotChartSeriesTrendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSeriesTrendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesTrendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSeriesTrendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSeriesTrendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotChartSeriesTrendline.prototype, \"legendShape\", void 0);\n    return PivotChartSeriesTrendline;\n}());\nexport { PivotChartSeriesTrendline };\nvar PivotChartSeriesEmptyPointSettings = /** @class */ (function () {\n    function PivotChartSeriesEmptyPointSettings() {\n    }\n    __decorate([\n        Property(null)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Gap')\n    ], PivotChartSeriesEmptyPointSettings.prototype, \"mode\", void 0);\n    return PivotChartSeriesEmptyPointSettings;\n}());\nexport { PivotChartSeriesEmptyPointSettings };\nvar PivotChartSeriesCornerRadius = /** @class */ (function () {\n    function PivotChartSeriesCornerRadius() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"topRight\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomLeft\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSeriesCornerRadius.prototype, \"bottomRight\", void 0);\n    return PivotChartSeriesCornerRadius;\n}());\nexport { PivotChartSeriesCornerRadius };\n/**\n *  third party configures for chart axis in chart settings.\n */\nvar PivotChartAxisFont = /** @class */ (function () {\n    function PivotChartAxisFont() {\n    }\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], PivotChartAxisFont.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], PivotChartAxisFont.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisFont.prototype, \"color\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartAxisFont.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], PivotChartAxisFont.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisFont.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Trim')\n    ], PivotChartAxisFont.prototype, \"textOverflow\", void 0);\n    return PivotChartAxisFont;\n}());\nexport { PivotChartAxisFont };\nvar PivotChartAxisCrosshairTooltip = /** @class */ (function () {\n    function PivotChartAxisCrosshairTooltip() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(Theme.crosshairLabelFont, Font)\n    ], PivotChartAxisCrosshairTooltip.prototype, \"textStyle\", void 0);\n    return PivotChartAxisCrosshairTooltip;\n}());\nexport { PivotChartAxisCrosshairTooltip };\nvar PivotChartAxisMajorTickLines = /** @class */ (function () {\n    function PivotChartAxisMajorTickLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMajorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorTickLines;\n}());\nexport { PivotChartAxisMajorTickLines };\nvar PivotChartAxisMajorGridLines = /** @class */ (function () {\n    function PivotChartAxisMajorGridLines() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisMajorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMajorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMajorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMajorGridLines;\n}());\nexport { PivotChartAxisMajorGridLines };\nvar PivotChartAxisMinorTickLines = /** @class */ (function () {\n    function PivotChartAxisMinorTickLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorTickLines.prototype, \"width\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartAxisMinorTickLines.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorTickLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorTickLines;\n}());\nexport { PivotChartAxisMinorTickLines };\nvar PivotChartAxisMinorGridLines = /** @class */ (function () {\n    function PivotChartAxisMinorGridLines() {\n    }\n    __decorate([\n        Property(0.7)\n    ], PivotChartAxisMinorGridLines.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisMinorGridLines.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisMinorGridLines.prototype, \"color\", void 0);\n    return PivotChartAxisMinorGridLines;\n}());\nexport { PivotChartAxisMinorGridLines };\nvar PivotChartAxisAxisLine = /** @class */ (function () {\n    function PivotChartAxisAxisLine() {\n    }\n    __decorate([\n        Property(1)\n    ], PivotChartAxisAxisLine.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisAxisLine.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisAxisLine.prototype, \"color\", void 0);\n    return PivotChartAxisAxisLine;\n}());\nexport { PivotChartAxisAxisLine };\nvar PivotChartAxisStripLineSettings = /** @class */ (function () {\n    function PivotChartAxisStripLineSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartAxisStripLineSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"startFromAxis\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"size\", void 0);\n    __decorate([\n        Property('#808080')\n    ], PivotChartAxisStripLineSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartAxisStripLineSettings.prototype, \"sizeType\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isRepeat\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatEvery\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"repeatUntil\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotChartAxisStripLineSettings.prototype, \"isSegmented\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentEnd\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"segmentAxisName\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 1 }, Border)\n    ], PivotChartAxisStripLineSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartAxisStripLineSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartAxisStripLineSettings.prototype, \"rotation\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Middle')\n    ], PivotChartAxisStripLineSettings.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex(Theme.stripLineLabelFont, Font)\n    ], PivotChartAxisStripLineSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Behind')\n    ], PivotChartAxisStripLineSettings.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisStripLineSettings.prototype, \"opacity\", void 0);\n    return PivotChartAxisStripLineSettings;\n}());\nexport { PivotChartAxisStripLineSettings };\nvar PivotChartAxisLabelBorder = /** @class */ (function () {\n    function PivotChartAxisLabelBorder() {\n    }\n    __decorate([\n        Property('')\n    ], PivotChartAxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartAxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PivotChartAxisLabelBorder.prototype, \"type\", void 0);\n    return PivotChartAxisLabelBorder;\n}());\nexport { PivotChartAxisLabelBorder };\n/**\n *  third party configures in chart settings.\n */\nvar PivotChartSettingsChartArea = /** @class */ (function () {\n    function PivotChartSettingsChartArea() {\n    }\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsChartArea.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsChartArea.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsChartArea.prototype, \"opacity\", void 0);\n    return PivotChartSettingsChartArea;\n}());\nexport { PivotChartSettingsChartArea };\nvar PivotChartSettingsCrosshairSettings = /** @class */ (function () {\n    function PivotChartSettingsCrosshairSettings() {\n    }\n    __decorate([\n        Property(false)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"dashArray\", void 0);\n    __decorate([\n        Complex({ color: null, width: 1 }, Border)\n    ], PivotChartSettingsCrosshairSettings.prototype, \"line\", void 0);\n    __decorate([\n        Property('Both')\n    ], PivotChartSettingsCrosshairSettings.prototype, \"lineType\", void 0);\n    return PivotChartSettingsCrosshairSettings;\n}());\nexport { PivotChartSettingsCrosshairSettings };\nvar PivotChartSettingsLegendSettings = /** @class */ (function () {\n    function PivotChartSettingsLegendSettings() {\n    }\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, ChartLocation)\n    ], PivotChartSettingsLegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('Auto')\n    ], PivotChartSettingsLegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(8)\n    ], PivotChartSettingsLegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property('Center')\n    ], PivotChartSettingsLegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], PivotChartSettingsLegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], PivotChartSettingsLegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], PivotChartSettingsLegendSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property(5)\n    ], PivotChartSettingsLegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property('transparent')\n    ], PivotChartSettingsLegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotChartSettingsLegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotChartSettingsLegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotChartSettingsLegendSettings.prototype, \"description\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotChartSettingsLegendSettings.prototype, \"tabIndex\", void 0);\n    return PivotChartSettingsLegendSettings;\n}());\nexport { PivotChartSettingsLegendSettings };\nvar PivotChartSettingsIndexes = /** @class */ (function () {\n    function PivotChartSettingsIndexes() {\n    }\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"series\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotChartSettingsIndexes.prototype, \"point\", void 0);\n    return PivotChartSettingsIndexes;\n}());\nexport { PivotChartSettingsIndexes };\nvar PivotChartSettingsMargin = /** @class */ (function () {\n    function PivotChartSettingsMargin() {\n    }\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], PivotChartSettingsMargin.prototype, \"bottom\", void 0);\n    return PivotChartSettingsMargin;\n}());\nexport { PivotChartSettingsMargin };\n/**\n *  Configures the series in charts.\n */\nvar PivotSeries = /** @class */ (function (_super) {\n    __extends(PivotSeries, _super);\n    function PivotSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"fill\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], PivotSeries.prototype, \"animation\", void 0);\n    __decorate([\n        Property('0')\n    ], PivotSeries.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"width\", void 0);\n    __decorate([\n        Property('X')\n    ], PivotSeries.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"isClosed\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], PivotSeries.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], PivotSeries.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"visible\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Line')\n    ], PivotSeries.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], PivotSeries.prototype, \"marker\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], PivotSeries.prototype, \"errorBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotSeries.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], PivotSeries.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property('')\n    ], PivotSeries.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], PivotSeries.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property(1)\n    ], PivotSeries.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property('Natural')\n    ], PivotSeries.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(3)\n    ], PivotSeries.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property(0.5)\n    ], PivotSeries.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotSeries.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], PivotSeries.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], PivotSeries.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotSeries.prototype, \"columnSpacing\", void 0);\n    return PivotSeries;\n}(ChildProperty));\nexport { PivotSeries };\n/**\n * Configures the axes in charts.\n */\nvar PivotAxis = /** @class */ (function (_super) {\n    __extends(PivotAxis, _super);\n    function PivotAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Rotate45')\n    ], PivotAxis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], PivotAxis.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"title\", void 0);\n    __decorate([\n        Complex({}, CrosshairTooltip)\n    ], PivotAxis.prototype, \"crosshairTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], PivotAxis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Complex(Theme.axisTitleFont, Font)\n    ], PivotAxis.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isIndexed\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"plotOffset\", void 0);\n    __decorate([\n        Property('None')\n    ], PivotAxis.prototype, \"edgeLabelPlacement\", void 0);\n    __decorate([\n        Property('BetweenTicks')\n    ], PivotAxis.prototype, \"labelPlacement\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"tickPosition\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotAxis.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Outside')\n    ], PivotAxis.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"minorTicksPerInterval\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(34)\n    ], PivotAxis.prototype, \"maximumLabelWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"interval\", void 0);\n    __decorate([\n        Complex({}, MajorTickLines)\n    ], PivotAxis.prototype, \"majorTickLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Complex({}, MajorGridLines)\n    ], PivotAxis.prototype, \"majorGridLines\", void 0);\n    __decorate([\n        Complex({}, MinorTickLines)\n    ], PivotAxis.prototype, \"minorTickLines\", void 0);\n    __decorate([\n        Complex({}, AxisLine)\n    ], PivotAxis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Complex({}, MinorGridLines)\n    ], PivotAxis.prototype, \"minorGridLines\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotAxis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotAxis.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], PivotAxis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(100)\n    ], PivotAxis.prototype, \"coefficient\", void 0);\n    __decorate([\n        Collection([], StripLineSettings)\n    ], PivotAxis.prototype, \"stripLines\", void 0);\n    __decorate([\n        Property(2)\n    ], PivotAxis.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\n    ], PivotAxis.prototype, \"border\", void 0);\n    return PivotAxis;\n}(ChildProperty));\nexport { PivotAxis };\n/**\n * Configures the ToolTips in the chart.\n */\nvar PivotTooltipSettings = /** @class */ (function (_super) {\n    __extends(PivotTooltipSettings, _super);\n    function PivotTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotTooltipSettings.prototype, \"shared\", void 0);\n    __decorate([\n        Property(0.75)\n    ], PivotTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Complex(Theme.tooltipLabelFont, Font)\n    ], PivotTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], PivotTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], PivotTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotTooltipSettings.prototype, \"enableAnimation\", void 0);\n    return PivotTooltipSettings;\n}(ChildProperty));\nexport { PivotTooltipSettings };\n/**\n * Configures the zooming behavior for the chart.\n */\nvar PivotZoomSettings = /** @class */ (function (_super) {\n    __extends(PivotZoomSettings, _super);\n    function PivotZoomSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePinchZooming\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableSelectionZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableDeferredZooming\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enableMouseWheelZooming\", void 0);\n    __decorate([\n        Property('XY')\n    ], PivotZoomSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset'])\n    ], PivotZoomSettings.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotZoomSettings.prototype, \"enableScrollbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotZoomSettings.prototype, \"enablePan\", void 0);\n    return PivotZoomSettings;\n}(ChildProperty));\nexport { PivotZoomSettings };\n/**\n *  Configures the chart settings.\n */\nvar ChartSettings = /** @class */ (function (_super) {\n    __extends(ChartSettings, _super);\n    function ChartSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, PivotSeries)\n    ], ChartSettings.prototype, \"chartSeries\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryXAxis\", void 0);\n    __decorate([\n        Complex({}, PivotAxis)\n    ], ChartSettings.prototype, \"primaryYAxis\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"enableMultiAxis\", void 0);\n    __decorate([\n        Complex(Theme.chartTitleFont, Font)\n    ], ChartSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex(Theme.chartSubTitleFont, Font)\n    ], ChartSettings.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('')\n    ], ChartSettings.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], ChartSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ChartSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ border: { color: null, width: 0.5 }, background: 'transparent' }, ChartArea)\n    ], ChartSettings.prototype, \"chartArea\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], ChartSettings.prototype, \"theme\", void 0);\n    __decorate([\n        Property([])\n    ], ChartSettings.prototype, \"palettes\", void 0);\n    __decorate([\n        Complex({}, CrosshairSettings)\n    ], ChartSettings.prototype, \"crosshair\", void 0);\n    __decorate([\n        Complex({}, PivotTooltipSettings)\n    ], ChartSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, PivotZoomSettings)\n    ], ChartSettings.prototype, \"zoomSettings\", void 0);\n    __decorate([\n        Property()\n    ], ChartSettings.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('None')\n    ], ChartSettings.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableExport\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], ChartSettings.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(false)\n    ], ChartSettings.prototype, \"isTransposed\", void 0);\n    __decorate([\n        Property(1)\n    ], ChartSettings.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSettings.prototype, \"description\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"resized\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"enableSideBySidePlacement\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"dragComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"chartMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollStart\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"zoomComplete\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollChanged\", void 0);\n    __decorate([\n        Event()\n    ], ChartSettings.prototype, \"scrollEnd\", void 0);\n    __decorate([\n        Property(true)\n    ], ChartSettings.prototype, \"showMultiLevelLabels\", void 0);\n    return ChartSettings;\n}(ChildProperty));\nexport { ChartSettings };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * This is a file to create MDX query for the provided OLAP datasource\n * @hidden\n */\n/* tslint:disable:all */\n/** @hidden */\nvar MDXQuery = /** @class */ (function () {\n    function MDXQuery() {\n    }\n    MDXQuery.getCellSets = function (dataSourceSettings, olapEngine, refPaging, drillInfo, isQueryUpdate) {\n        this.engine = olapEngine;\n        this.isMondrian = olapEngine.isMondrian;\n        this.isMeasureAvail = olapEngine.isMeasureAvail;\n        this.isPaging = olapEngine.isPaging;\n        this.pageSettings = olapEngine.pageSettings;\n        this.rows = olapEngine.rows;\n        this.columns = olapEngine.columns;\n        this.values = olapEngine.values;\n        this.filters = olapEngine.filters;\n        this.allowLabelFilter = olapEngine.allowLabelFilter;\n        this.allowValueFilter = olapEngine.allowValueFilter;\n        this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n        this.drilledMembers = olapEngine.updateDrilledItems(dataSourceSettings.drilledMembers);\n        this.calculatedFieldSettings = olapEngine.calculatedFieldSettings;\n        this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'rows' : 'columns';\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'row' ? 'rows' : 'columns';\n        }\n        this.filterMembers = extend({}, olapEngine.filterMembers, null, true);\n        this.fieldDataObj = olapEngine.fieldListObj;\n        this.fieldList = olapEngine.fieldList;\n        this.cellSetInfo = '\\nDIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var measureQuery = this.getMeasuresQuery(this.values);\n        var rowQuery = this.getDimensionsQuery(this.rows, measureQuery, 'rows', drillInfo).replace(/\\&/g, '&amp;');\n        var columnQuery = this.getDimensionsQuery(this.columns, measureQuery, 'columns', drillInfo).replace(/\\&/g, '&amp;');\n        if (this.isPaging && refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        else if (this.isPaging && !refPaging && this.pageSettings !== undefined) {\n            var pagingQuery = this.getPagingCountQuery(rowQuery, columnQuery);\n            rowQuery = pagingQuery.rowQuery;\n            columnQuery = pagingQuery.columnQuery;\n        }\n        rowQuery = (rowQuery.length > 0 ? rowQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON ROWS') : '');\n        columnQuery = (columnQuery.length > 0 ? columnQuery + (this.isPaging && !refPaging ? '' : this.cellSetInfo + ' ON COLUMNS') : '');\n        var slicerQuery = this.getSlicersQuery(this.filters, 'filters').replace(/\\&/g, '&amp;');\n        var filterQuery = this.getfilterQuery(this.filterMembers, dataSourceSettings.cube).replace(/\\&/g, '&amp;').replace(/\\>/g, '&gt;').replace(/\\</g, '&lt;');\n        var caclQuery = this.getCalculatedFieldQuery(this.calculatedFieldSettings).replace(/\\&/g, '&amp;');\n        var query = this.frameMDXQuery(rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging);\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            request: query,\n            LCID: dataSourceSettings.localeIdentifier.toString()\n        };\n        olapEngine.mdxQuery = query.replace(/\\&amp;/g, '&').replace(/\\&gt;/g, '>').replace(/\\&lt;/g, '<').replace(/%280/g, '\\\"');\n        // console.log(olapEngine.mdxQuery);\n        if (drillInfo) {\n            drillInfo.axis = drillInfo.axis === 'rows' ? 'row' : 'column';\n        }\n        if (!isQueryUpdate) {\n            this.getTableCellData(args, (this.isPaging && !refPaging ? this.engine.generatePagingData.bind(this.engine) : this.engine.generateEngine.bind(this.engine)), drillInfo ? { action: drillInfo.action, drillInfo: drillInfo } : { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    MDXQuery.getTableCellData = function (args, successMethod, customArgs) {\n        var connectionString = this.engine.getConnectionInfo(args.url, args.LCID);\n        var soapMessage = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"> <Header></Header> <Body> <Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"> <Command> <Statement>' +\n            args.request + '</Statement> </Command> <Properties> <PropertyList> <Catalog>' +\n            args.catalog + '</Catalog> <LocaleIdentifier>' + connectionString.LCID +\n            '</LocaleIdentifier> </PropertyList> </Properties></Execute> </Body> </Envelope>';\n        this.engine.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    MDXQuery.frameMDXQuery = function (rowQuery, columnQuery, slicerQuery, filterQuery, caclQuery, refPaging) {\n        var query = ((this.isPaging && !refPaging) ? caclQuery !== '' ? '' : '\\nWITH' : '\\nSelect ');\n        if (columnQuery.length > 0) {\n            query = query + columnQuery;\n        }\n        if (rowQuery.length > 0) {\n            query = query + (columnQuery.length > 0 ? this.isPaging && !refPaging ? '' : ', ' : '') + rowQuery;\n        }\n        query = caclQuery + query + (this.isPaging && !refPaging ? '\\nMEMBER [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] AS Count([e16a30d0-2174-4874-8dae-a5085a75a3e2]) ' +\n            'MEMBER [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] AS Count ([d1876d2b-e50e-4547-85fe-5b8ed9d629de])' +\n            '\\nSELECT { [Measures].[3d268ce0-664d-4092-b9cb-fece97175006] , [Measures].[8d7fe8c1-f09f-410e-b9ba-eaab75a1fc3e] } ON AXIS(0)' : '') +\n            filterQuery + slicerQuery + '\\nCELL PROPERTIES VALUE, FORMAT_STRING, FORMATTED_VALUE\\n';\n        return query;\n    };\n    MDXQuery.getPagingQuery = function (rowQuery, columnQuery) {\n        // let colCurrentPage: number = (Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage || this.pageSettings.columnCurrentPage === 0) ? ((Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) < this.pageSettings.columnCurrentPage && this.engine.columnCount > 0) ? Math.ceil(this.engine.columnCount / this.pageSettings.columnSize) : this.pageSettings.columnCurrentPage) : this.pageSettings.columnCurrentPage;\n        // let rowCurrentPage: number = (Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage || this.pageSettings.rowCurrentPage === 0) ? ((Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) < this.pageSettings.rowCurrentPage && this.engine.rowCount > 0) ? Math.ceil(this.engine.rowCount / this.pageSettings.rowSize) : this.pageSettings.rowSize) : this.pageSettings.rowCurrentPage;\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        // let axisQuery: pagingQuery = {\n        //     rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (((rowCurrentPage === 0 ? 1 : rowCurrentPage) - 1) * (this.pageSettings.rowSize)) + ',' + this.pageSettings.rowSize + ')') : '',\n        //     columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (((colCurrentPage === 0 ? 1 : colCurrentPage) - 1) * (this.pageSettings.columnSize)) + ',' + this.pageSettings.columnSize + ')') : ''\n        // }\n        var calRowPage = (this.pageSettings.rowCurrentPage - 1) * this.pageSettings.rowSize;\n        var calColPage = (this.pageSettings.columnCurrentPage - 1) * this.pageSettings.columnSize;\n        var calRowSize = this.pageSettings.rowSize * 3;\n        var calColumnSize = this.pageSettings.columnSize * 3;\n        calRowPage = (this.engine.rowCount < (calRowPage + calRowSize)) ?\n            (this.engine.rowCount > calRowSize ? (this.engine.rowCount - calRowSize) : 0) : calRowPage;\n        this.engine.pageRowStartPos = calRowPage;\n        calColPage = (this.engine.columnCount < (calColPage + calColumnSize)) ?\n            (this.engine.columnCount > calColumnSize ? (this.engine.columnCount - calColumnSize) : 0) : calColPage;\n        this.engine.pageColStartPos = calColPage;\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')},' + (calRowPage) + ',' + calRowSize + ')') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSUBSET ({ ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')},' + (calColPage) + ',' + calColumnSize + ')') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getPagingCountQuery = function (rowQuery, columnQuery) {\n        rowQuery = rowQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        columnQuery = columnQuery.replace('NON EMPTY ( ', '').slice(0, -1);\n        var rowQueryCpy = rowQuery;\n        'WITH  SET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as';\n        'SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as';\n        var axisQuery = {\n            rowQuery: rowQuery !== '' ? ('\\SET [d1876d2b-e50e-4547-85fe-5b8ed9d629de] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + rowQuery + (!this.isMondrian && columnQuery !== '' ? ',' + columnQuery : '') + ')\\n') : '',\n            columnQuery: columnQuery !== '' ? ('\\nSET [e16a30d0-2174-4874-8dae-a5085a75a3e2] as ' + (this.isMondrian ? '' : 'NONEMPTY') + ' (' + columnQuery + (!this.isMondrian && rowQueryCpy !== '' ? ',' + rowQueryCpy : '') + ')\\n') : ''\n        };\n        return axisQuery;\n    };\n    MDXQuery.getDimensionsQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        if (dimensions.length > 0) {\n            query = '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var i = 0;\n            while (i < dimensions.length) {\n                var hierarchy = '';\n                if (i === 0) {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + hierarchy;\n                    }\n                }\n                else {\n                    if (dimensions[i].name.toLowerCase() === '[measures]') {\n                        if (measureQuery !== '') {\n                            query = query + ' * ' + measureQuery;\n                        }\n                    }\n                    else {\n                        hierarchy = '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                        query = query + ' * ' + hierarchy;\n                    }\n                }\n                i++;\n            }\n            // if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n            //     query = query + ' * ' + measureQuery;\n            // }\n            var drillQueryObj = this.getDrillQuery(dimensions, measureQuery, axis, drillInfo);\n            query = (drillInfo && drillInfo.axis === axis ? '\\nNON EMPTY ( ' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '') + drillQueryObj.query : query + (drillQueryObj.query !== '' ? ',' : '') + drillQueryObj.query);\n            query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n                (this.drilledMembers.length > 0 ? '})' : '') + (this.isPaging && axis === 'columns' && drillQueryObj.query !== '' ? '-' + drillQueryObj.collection.join('-') : '') + ')';\n        }\n        // else if (!this.isMeasureAvail && measureQuery !== '' && this.valueAxis === axis) {\n        //     query = 'NON EMPTY (' + (this.drilledMembers.length > 0 ? 'HIERARCHIZE({' : '') + measureQuery;\n        //     query = (this.valueAxis !== axis ? this.updateValueSortQuery(query, this.valueSortSettings) : query) +\n        //         (this.drilledMembers.length > 0 ? '})' : '') + ') ' + this.cellSetInfo + ' ON ' + axis.toUpperCase();\n        // }\n        return query;\n    };\n    MDXQuery.getDrillQuery = function (dimensions, measureQuery, axis, drillInfo) {\n        var query = '';\n        var rawDrillQuery = [];\n        var drilledMembers = [];\n        var isOnDemandDrill = false;\n        var onDemandDrillQuery = '';\n        if (drillInfo && drillInfo.axis === axis && drillInfo.action.toLowerCase() === 'down') {\n            isOnDemandDrill = true;\n            drilledMembers = [{ name: drillInfo.fieldName, items: [drillInfo.memberName], delimiter: '~~' }];\n        }\n        else {\n            drilledMembers = this.drilledMembers;\n        }\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var field = drilledMembers_1[_i];\n            for (var _a = 0, _b = field.items; _a < _b.length; _a++) {\n                var item = _b[_a];\n                var drillQuery = [];\n                var rawQuery = [];\n                var i = 0;\n                var drillInfo_1 = item.split(field.delimiter ? field.delimiter : '~~');\n                while (i < dimensions.length) {\n                    if (drillInfo_1[i] && drillInfo_1[i].indexOf(dimensions[i].name) !== -1) {\n                        if (drillInfo_1[drillInfo_1.length - 1].indexOf(dimensions[i].name) !== -1) {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '.CHILDREN})';\n                            }\n                            else {\n                                drillQuery.push('(' + drillInfo_1[i] + '.CHILDREN)');\n                                rawQuery.push('(' + drillInfo_1[i] + ')');\n                            }\n                        }\n                        else {\n                            if (drillInfo_1[i].toLowerCase() === '[measures]' && measureQuery !== '') {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                                }\n                                else {\n                                    drillQuery.push('(' + measureQuery + ')');\n                                    rawQuery.push('(' + measureQuery + ')');\n                                }\n                            }\n                            else if (drillInfo_1[i].toLowerCase().indexOf('[measures]') !== -1) {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '})';\n                                }\n                                else {\n                                    drillQuery.push('({' + drillInfo_1[i] + '})');\n                                    rawQuery.push('({' + drillInfo_1[i] + '})');\n                                }\n                            }\n                            else {\n                                if (isOnDemandDrill) {\n                                    onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + drillInfo_1[i] + '})';\n                                }\n                                else {\n                                    drillQuery.push('(' + drillInfo_1[i] + ')');\n                                    rawQuery.push('(' + drillInfo_1[i] + ')');\n                                }\n                            }\n                        }\n                    }\n                    else if (!drillInfo_1[i] && dimensions[i]) {\n                        if (dimensions[i].name.toLowerCase() === '[measures]' && measureQuery !== '') {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '(' + measureQuery + ')';\n                            }\n                            else {\n                                drillQuery.push('(' + measureQuery + ')');\n                                rawQuery.push('(' + measureQuery + ')');\n                            }\n                        }\n                        else {\n                            if (isOnDemandDrill) {\n                                onDemandDrillQuery = onDemandDrillQuery + (onDemandDrillQuery !== '' ? ' * ' : '') + '({' + this.getDimensionQuery(dimensions[i], axis) + '})';\n                            }\n                            else {\n                                drillQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                                rawQuery.push('(' + this.getDimensionQuery(dimensions[i], axis) + ')');\n                            }\n                        }\n                    }\n                    else {\n                        drillQuery = [];\n                        break;\n                    }\n                    i++;\n                }\n                if (drillQuery.length > 0 && drillQuery.length < drillInfo_1.length) {\n                    drillQuery = [];\n                    rawQuery = [];\n                }\n                // query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString().replace(/\\&/g, \"&amp;\") + ')' : '');\n                query = query + (query !== '' && drillQuery.length > 0 ? ',' : '') + (drillQuery.length > 0 ? '(' + drillQuery.toString() + ')' : '');\n                if (rawQuery.length > 0) {\n                    rawDrillQuery.push(('(' + rawQuery.toString() + ')'));\n                }\n            }\n        }\n        // return (isOnDemandDrill ? onDemandDrillQuery.replace(/\\&/g, \"&amp;\") : query);\n        var queryCollection = {\n            query: (isOnDemandDrill ? onDemandDrillQuery : query),\n            collection: (isOnDemandDrill ? [onDemandDrillQuery] : rawDrillQuery)\n        };\n        return queryCollection;\n    };\n    MDXQuery.updateValueSortQuery = function (query, valueSortSettings) {\n        if (valueSortSettings && valueSortSettings.measure && valueSortSettings.measure !== '') {\n            var heirarchize = (this.drilledMembers.length > 0 ? 'HIERARCHIZE ({' : '');\n            var measure = (this.fieldList[valueSortSettings.measure].isCalculatedField ?\n                this.fieldList[valueSortSettings.measure].tag : valueSortSettings.measure);\n            switch (valueSortSettings.sortOrder) {\n                case 'Ascending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), ASC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BASC' : 'ASC') + ')';\n                    break;\n                case 'Descending':\n                    query = query.replace('NON EMPTY ( ' + heirarchize, 'NON EMPTY ( ' + heirarchize + ' ORDER ({');\n                    query = query + '},(' + measure + '), DESC)';\n                    // query = query + '},(' + valueSortSettings.measure + '), ' +\n                    //     (valueSortSettings.preserveHierarchy ? 'BDESC' : 'DESC') + ')';\n                    break;\n            }\n        }\n        return query;\n    };\n    MDXQuery.getSlicersQuery = function (slicers, axis) {\n        var _this = this;\n        var query = '';\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        if (slicers.length > 0) {\n            var i_1 = 0;\n            while (i_1 < slicers.length) {\n                var isCol = dataFields.filter(function (field) {\n                    var colUqName = _this.getDimensionUniqueName(field.name);\n                    var slicerUqName = _this.getDimensionUniqueName(slicers[i_1].name);\n                    var isMatch = false;\n                    isMatch = colUqName === slicerUqName &&\n                        !(_this.isMondrian && slicerUqName === '' && colUqName === '');\n                    return (isMatch);\n                }).length > 0;\n                if (!isCol) {\n                    if (slicers[i_1].name !== undefined && !this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + this.getDimensionQuery(slicers[i_1], axis) + '}';\n                    }\n                    else if (this.filterMembers[slicers[i_1].name]) {\n                        query = query + (query !== '' ? ' * ' : '') + '{' + (this.filterMembers[slicers[i_1].name].toString()) + '}';\n                    }\n                }\n                i_1++;\n            }\n            query = '\\nWHERE (' + query.replace(/DrilldownLevel/g, '') + ')';\n        }\n        return query;\n    };\n    MDXQuery.getDimensionQuery = function (dimension, axis) {\n        var query = '';\n        var name = dimension.isCalculatedField ? this.fieldList[dimension.name].tag : dimension.name;\n        var hasAllMember = this.fieldList[dimension.name].hasAllMember;\n        if (!hasAllMember && !dimension.isNamedSet && !dimension.isCalculatedField) {\n            query = '((' + name + ').levels(0).AllMembers)';\n        }\n        else {\n            query = (dimension.isNamedSet ? '{' + name + '}' : this.isPaging ? name + '.CHILDREN' :\n                'DrilldownLevel({' + name + '}' + ((axis === 'rows' || axis === 'columns') ? ',,,INCLUDE_CALC_MEMBERS' : '') + ')');\n        }\n        return query;\n    };\n    MDXQuery.getDimensionUniqueName = function (headerText) {\n        var hierarchyNode = this.fieldDataObj.hierarchy;\n        var curElement = [];\n        if (hierarchyNode) {\n            // let curElement: IOlapField[] = hierarchyNode.filter((item: IOlapField) => {\n            //     return (item.id.toLowerCase() === headerText.toLowerCase());\n            // });\n            for (var _i = 0, hierarchyNode_1 = hierarchyNode; _i < hierarchyNode_1.length; _i++) {\n                var item = hierarchyNode_1[_i];\n                if (item.id.toLowerCase() === headerText.toLowerCase()) {\n                    curElement.push(item);\n                }\n            }\n            return (curElement.length > 0 ? curElement[0].pid : '');\n        }\n        else {\n            return headerText.split('.')[0];\n        }\n    };\n    MDXQuery.getMeasuresQuery = function (measures) {\n        var query = '';\n        if (measures.length > 0) {\n            query = '{{';\n            var values = '';\n            for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n                var measure = measures_1[_i];\n                var name_1 = (measure.isCalculatedField ? this.fieldList[measure.name].tag : measure.name);\n                if (values.length > 0) {\n                    values = values + ', ' + name_1;\n                }\n                else {\n                    values = name_1;\n                }\n            }\n            query = query + values + '}}';\n        }\n        return query;\n    };\n    MDXQuery.getfilterQuery = function (filters, cube) {\n        var query = '\\nFROM [' + cube + ']';\n        var filterQuery = '\\nFROM( SELECT (';\n        var advancedFilters = [];\n        var advancedFilterQuery = [];\n        var rowFilter = [];\n        var columnFilter = [];\n        for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    rowFilter.push(filters[field.name]);\n                }\n                else {\n                    filters[field.name][1] = filters[field.name][0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _b = 0, _c = this.columns; _b < _c.length; _b++) {\n            var field = _c[_b];\n            if (filters[field.name] && filters[field.name].length > 0) {\n                if (typeof filters[field.name][0] === 'string') {\n                    columnFilter.push(filters[field.name]);\n                }\n                else {\n                    /* tslint:disable */\n                    var filter = filters[field.name];\n                    filter[1] = filter[0].type;\n                    advancedFilters.push(filters[field.name]);\n                    delete filters[field.name];\n                }\n            }\n        }\n        for (var _d = 0, _e = this.filters; _d < _e.length; _d++) {\n            var field = _e[_d];\n            var isFound = false;\n            for (var _f = 0, _g = this.columns; _f < _g.length; _f++) {\n                var column = _g[_f];\n                if (this.getDimensionUniqueName(column.name) === this.getDimensionUniqueName(field.name)) {\n                    if (filters[field.name]) {\n                        columnFilter.push(filters[field.name]);\n                        isFound = true;\n                    }\n                }\n            }\n            if (isFound) {\n                for (var _h = 0, _j = this.rows; _h < _j.length; _h++) {\n                    var row = _j[_h];\n                    if (this.getDimensionUniqueName(row.name) === this.getDimensionUniqueName(field.name)) {\n                        if (filters[field.name]) {\n                            rowFilter.push(filters[field.name]);\n                        }\n                    }\n                }\n            }\n        }\n        if ((this.allowLabelFilter || this.allowValueFilter) && advancedFilters.length > 0) {\n            var axes = ['Value', 'Label'];\n            for (var _k = 0, axes_1 = axes; _k < axes_1.length; _k++) {\n                var axis = axes_1[_k];\n                for (var _l = 0, advancedFilters_1 = advancedFilters; _l < advancedFilters_1.length; _l++) {\n                    var filterItems = advancedFilters_1[_l];\n                    if (filterItems && filterItems.length === 2 &&\n                        typeof filterItems[1] === 'string' && filterItems[1] === axis) {\n                        advancedFilterQuery.push(this.getAdvancedFilterQuery(filterItems[0], filterQuery, 'COLUMNS'));\n                    }\n                }\n            }\n        }\n        for (var i = 0, cnt = columnFilter.length; i < cnt; i++) {\n            filterQuery = i === 0 ? filterQuery + '{' + columnFilter[i].toString() + '}' : filterQuery + ',{' + columnFilter[i].toString() + '}';\n        }\n        if (columnFilter.length > 0) {\n            filterQuery = (rowFilter.length > 0) ? filterQuery + ' ) ON COLUMNS ' + ',(' : filterQuery + ' ) ON COLUMNS';\n        }\n        for (var i = 0, cnt = rowFilter.length; i < cnt; i++) {\n            filterQuery = (i > 0) ? filterQuery + ',{' + rowFilter[i].toString() + '}' : filterQuery + '{' + rowFilter[i].toString() + '}';\n        }\n        filterQuery = (columnFilter.length > 0 && rowFilter.length > 0) ?\n            filterQuery = filterQuery + ') ON ROWS ' : (columnFilter.length == 0 && rowFilter.length > 0) ?\n            filterQuery + ') ON COLUMNS ' : filterQuery;\n        var updatedFilterQuery = '';\n        if (advancedFilterQuery.length > 0) {\n            updatedFilterQuery = advancedFilterQuery.join(' ') + ' ' +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? filterQuery : '') + ' '\n                + query + Array(advancedFilterQuery.length + 1 +\n                ((columnFilter.length > 0 || rowFilter.length > 0) ? 1 : 0)).join(')');\n        }\n        query = (columnFilter.length === 0 && rowFilter.length === 0) ? query : filterQuery + query + ')';\n        return (updatedFilterQuery.length > 0) ? updatedFilterQuery : query;\n    };\n    MDXQuery.getAdvancedFilterQuery = function (filterItem, query, currentAxis) {\n        var filterQuery = '\\nFROM (SELECT Filter(' + filterItem.selectedField + '.AllMembers, ' +\n            this.getAdvancedFilterCondtions(filterItem.name, filterItem.condition, filterItem.value1, filterItem.value2, filterItem.type, filterItem.measure) +\n            \")) on \" + currentAxis;\n        return filterQuery;\n    };\n    MDXQuery.getAdvancedFilterCondtions = function (fieldName, filterOperator, value1, value2, filterType, measures) {\n        var advancedFilterQuery = '';\n        switch (filterOperator) {\n            case 'Equals':\n                advancedFilterQuery = '(' + (filterType !== 'Value' ? (fieldName + '.CurrentMember.member_caption =\\\"' + value1 + '\\\"') : (measures + ' = ' + value1));\n                break;\n            case 'DoesNotEquals':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption <>\\\"' + value1 + '\\\"') : (measures + ' <>' + value1));\n                break;\n            case 'Contains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n            case 'DoesNotContains':\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\")=0';\n                break;\n            case 'BeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotBeginWith':\n                advancedFilterQuery = '( Left (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'EndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ')=\\\"' + value1 + '\\\"';\n                break;\n            case 'DoesNotEndsWith':\n                advancedFilterQuery = '( Right (' + fieldName + '.CurrentMember.member_caption,' + value1.length + ') <>\\\"' + value1 + '\\\"';\n                break;\n            case 'GreaterThan':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption >\\\"' + value1 + '\\\"') : (measures + ' >' + value1 + ''));\n                break;\n            case 'GreaterThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"') : (measures + ' >=' + value1 + ''));\n                break;\n            case 'LessThan':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption <\\\"' + value1 + '\\\"') : (measures + ' <' + value1 + ''));\n                break;\n            case 'LessThanOrEqualTo':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption <=\\\"' + value1 + '\\\"') : (measures + ' <=' + value1 + ''));\n                break;\n            case 'Between':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"AND ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' AND ' + measures + ' <=' + value2));\n                break;\n            case 'NotBetween':\n                advancedFilterQuery = '(' + (filterType != 'Value' ? (fieldName + '.CurrentMember.member_caption >=\\\"' + value1 + '\\\"OR ' + fieldName + '.CurrentMember.member_caption <=\\\"' + value2 + '\\\"') : (measures + ' >=' + value1 + ' OR ' + measures + ' <=' + value2));\n                break;\n            default:\n                advancedFilterQuery = '( InStr (1,' + fieldName + '.CurrentMember.member_caption,\\\"' + value1 + '\\\") >0';\n                break;\n        }\n        return advancedFilterQuery;\n    };\n    MDXQuery.getCalculatedFieldQuery = function (calcMembers) {\n        var calcQuery = '';\n        if (calcMembers.length > 0) {\n            calcQuery = '\\nWITH';\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var member = calcMembers_1[_i];\n                var prefixName = (member.formula.indexOf('Measure') > -1 ? '[Measures].' : member.hierarchyUniqueName + '.');\n                var aliasName = prefixName + '[' + member.name + ']';\n                var formatString = (!isNullOrUndefined(member.formatString) ? member.formatString : null);\n                calcQuery += ('\\nMEMBER ' + aliasName + 'as (' + member.formula + ') ' + (!isNullOrUndefined(formatString) ? ', FORMAT_STRING =\\\"' + formatString.trim() + '\\\"' : ''));\n            }\n        }\n        return calcQuery;\n    };\n    return MDXQuery;\n}());\nexport { MDXQuery };\n","import { extend, Internationalization, isNullOrUndefined, Ajax } from '@syncfusion/ej2-base';\nimport { PivotUtil } from '../util';\nimport { MDXQuery } from './mdx-query';\nimport * as cls from '../../common/base/css-constant';\n/**\n * OlapEngine is used to manipulate the olap or Multi-Dimensional data as pivoting values.\n */\n/** @hidden */\nvar OlapEngine = /** @class */ (function () {\n    function OlapEngine() {\n        /** @hidden */\n        this.fieldList = {};\n        /** @hidden */\n        this.columnCount = 0;\n        /** @hidden */\n        this.rowCount = 0;\n        /** @hidden */\n        this.colFirstLvl = 0;\n        /** @hidden */\n        this.rowFirstLvl = 0;\n        /** @hidden */\n        this.pageColStartPos = 0;\n        /** @hidden */\n        this.enableSort = false;\n        /** @hidden */\n        this.enableValueSorting = false;\n        /** @hidden */\n        this.dataFields = {};\n        /** @hidden */\n        this.formatFields = {};\n        /** @hidden */\n        this.filterMembers = {};\n        /** @hidden */\n        this.drilledSets = {};\n        /** @hidden */\n        this.aggregatedValueMatrix = [];\n        /* tslint:disable-next-line:max-line-length */\n        this.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n        this.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;\n        /** @hidden */\n        this.pivotValues = [];\n        /** @hidden */\n        this.valueContent = [];\n        /** @hidden */\n        this.headerContent = [];\n        /** @hidden */\n        this.rowStartPos = 0;\n        /** @hidden */\n        this.pageRowStartPos = 0;\n        /** @hidden */\n        this.tupColumnInfo = [];\n        /** @hidden */\n        this.tupRowInfo = [];\n        /** @hidden */\n        this.gridJSON = '';\n        /** @hidden */\n        this.namedSetsPosition = {};\n        this.colDepth = 0;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        this.showRowSubTotals = true;\n        this.showColumnSubTotals = true;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        this.sortObject = {};\n    }\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.renderEngine = function (dataSourceSettings, customProperties) {\n        this.isEmptyData = false;\n        this.mdxQuery = '';\n        this.isMeasureAvail = false;\n        this.allowMemberFilter = false;\n        this.allowLabelFilter = false;\n        this.allowValueFilter = false;\n        this.isMondrian = false;\n        this.aggregatedValueMatrix = [];\n        this.measureReportItems = [];\n        this.calcChildMembers = [];\n        this.selectedItems = [];\n        this.savedFieldList = undefined;\n        this.savedFieldListData = undefined;\n        this.formatFields = {};\n        this.filterMembers = {};\n        this.dataFields = {};\n        this.valueAxis = '';\n        this.columnCount = 0;\n        this.rowCount = 0;\n        this.colFirstLvl = 0;\n        this.rowFirstLvl = 0;\n        this.pageColStartPos = 0;\n        this.enableValueSorting = false;\n        this.sortObject = {};\n        this.globalize = new Internationalization();\n        /* tslint:disable */\n        this.locale = this.globalize.getCulture();\n        /* tslint:enable */\n        this.localeObj = customProperties ? customProperties.localeObj : undefined;\n        this.enableValueSorting = customProperties ? customProperties.enableValueSorting : false;\n        if (dataSourceSettings.url) {\n            // this.isMondrian = (dataSourceSettings.providerType === 'mondrian');\n            this.dataSourceSettings = dataSourceSettings;\n            this.valueAxis = dataSourceSettings.valueAxis === 'row' ? 'row' : 'column';\n            this.getAxisFields();\n            this.formats = dataSourceSettings.formatSettings ? dataSourceSettings.formatSettings : [];\n            this.enableSort = dataSourceSettings.enableSorting === undefined ? true : dataSourceSettings.enableSorting;\n            this.valueSortSettings = dataSourceSettings.valueSortSettings ? dataSourceSettings.valueSortSettings : undefined;\n            this.filterSettings = dataSourceSettings.filterSettings ? dataSourceSettings.filterSettings : [];\n            this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n            this.allowMemberFilter = dataSourceSettings.allowMemberFilter ? true : false;\n            this.allowLabelFilter = dataSourceSettings.allowLabelFilter ? true : false;\n            this.allowValueFilter = dataSourceSettings.allowValueFilter ? true : false;\n            this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n            this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n            this.emptyCellTextContent = dataSourceSettings.emptyCellsTextContent ? dataSourceSettings.emptyCellsTextContent : '';\n            this.pageSettings = customProperties ? (customProperties.pageSettings ? customProperties.pageSettings : this.pageSettings)\n                : undefined;\n            this.isPaging = this.pageSettings ? true : false;\n            this.frameSortObject();\n            this.getFormattedFields(this.formats);\n            this.savedFieldList = customProperties ? customProperties.savedFieldList : undefined;\n            this.savedFieldListData = customProperties ? customProperties.savedFieldListData : undefined;\n            this.fieldListData = [];\n            this.fieldListObj = {};\n            this.setNamedSetsPosition();\n            if (!(this.savedFieldList && this.savedFieldListData)) {\n                this.getFieldList(dataSourceSettings);\n            }\n            else {\n                this.updateFieldlist(true);\n            }\n            this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n            this.measureReportItems = [];\n            // this.updateAllMembers(dataSourceSettings, this.filters);\n            this.updateFilterItems(this.filterSettings);\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.generateGridData = function (dataSourceSettings, action) {\n        var refPaging = (action && action === 'navPaging' &&\n            this.isPaging && this.pageSettings !== undefined ? true : false);\n        if (this.rows.length > 0 || this.columns.length > 0 || this.values.length > 0 || this.filters.length > 0) {\n            MDXQuery.getCellSets(dataSourceSettings, this, refPaging);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n            this.generateEngine(undefined, undefined, { dataSourceSettings: dataSourceSettings, action: 'loadTableElements' });\n        }\n    };\n    OlapEngine.prototype.generatePagingData = function (xmlDoc, request, customArgs) {\n        var xmlaCellSet = [].slice.call(xmlDoc.querySelectorAll('Axes, CellData'));\n        // this.rowCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')).length : 0);\n        // this.columnCount =\n        //     (xmlaCellSet.length > 0 && [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length > 0 ?\n        //         [].slice.call(xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')).length : 0);\n        var countCells = xmlaCellSet[1] ? xmlaCellSet[1].querySelectorAll('FmtValue') : null;\n        if (countCells && countCells.length > 0) {\n            this.columnCount = Number(countCells[0].textContent);\n            this.rowCount = Number(countCells[1].textContent);\n        }\n        var dataSourceSettings = customArgs.dataSourceSettings;\n        MDXQuery.getCellSets(dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.scrollPage = function (direction, newPage, prevPage) {\n        MDXQuery.getCellSets(this.dataSourceSettings, this, true);\n    };\n    OlapEngine.prototype.generateEngine = function (xmlDoc, request, customArgs) {\n        if (customArgs.action !== 'down') {\n            this.pivotValues = [];\n            this.valueContent = [];\n            this.headerContent = [];\n            this.colDepth = 0;\n            this.tupColumnInfo = [];\n            this.tupRowInfo = [];\n            this.colMeasures = {};\n            this.colMeasurePos = undefined;\n            this.rowMeasurePos = undefined;\n            this.rowStartPos = -1;\n        }\n        this.xmlDoc = xmlDoc ? xmlDoc.cloneNode(true) : undefined;\n        this.request = request;\n        this.customArgs = customArgs;\n        this.totalCollection = [];\n        this.parentObjCollection = {};\n        this.curDrillEndPos = -1;\n        this.onDemandDrillEngine = [];\n        this.getSubTotalsVisibility();\n        this.xmlaCellSet = xmlDoc ? xmlDoc.querySelectorAll('Axes, CellData') : undefined;\n        var columnTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis0\"] Tuple')) : [];\n        var rowTuples = this.xmlaCellSet && this.xmlaCellSet.length > 0 ?\n            [].slice.call(this.xmlaCellSet[0].querySelectorAll('Axis[name|=\"Axis1\"] Tuple')) : [];\n        var valCollection = this.xmlaCellSet && this.xmlaCellSet.length > 1 ?\n            [].slice.call(this.xmlaCellSet[1].querySelectorAll('Cell')) : [];\n        if (this.drilledMembers.length > 0) {\n            // let st1: number = new Date().getTime();\n            var measureInfo = this.getMeasureInfo();\n            var orderedInfo = void 0;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'column', columnTuples, valCollection, columnTuples.length);\n            columnTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            orderedInfo = this.frameMeasureOrder(measureInfo, 'row', rowTuples, valCollection, columnTuples.length);\n            rowTuples = orderedInfo.orderedHeaderTuples;\n            valCollection = orderedInfo.orderedValueTuples;\n            // let st2: number = (new Date().getTime() - st1) / 1000;\n            // console.log('over-all:' + st2);\n        }\n        if (customArgs.action === 'down') {\n            this.updateTupCollection(customArgs.drillInfo.axis === 'row' ? rowTuples.length : columnTuples.length);\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'column' : true) {\n            this.frameColumnHeader(columnTuples);\n            if (!this.isPaging) {\n                this.performColumnSorting();\n            }\n        }\n        if (customArgs.action === 'down' ? customArgs.drillInfo.axis === 'row' : true) {\n            this.frameRowHeader(rowTuples);\n            if (!this.isPaging) {\n                this.performRowSorting();\n            }\n        }\n        this.frameValues(valCollection, columnTuples.length);\n        this.performColumnSpanning();\n        if (!this.isPaging && this.enableSort) {\n            for (var i = 0; i < this.headerContent.length; i++) {\n                this.headerContent[i] = this.pivotValues[i];\n            }\n        }\n        this.isEngineUpdated = true;\n        this.isEmptyData = columnTuples.length === 0;\n        //this.append(columnTuples.length);\n    };\n    OlapEngine.prototype.getSubTotalsVisibility = function () {\n        this.showRowSubTotals = this.dataSourceSettings.showRowSubTotals && this.dataSourceSettings.showSubTotals;\n        this.showColumnSubTotals = this.dataSourceSettings.showColumnSubTotals && this.dataSourceSettings.showSubTotals;\n        this.hideRowTotalsObject = {};\n        this.hideColumnTotalsObject = {};\n        var axisCount = 1;\n        do {\n            if (axisCount === 1) {\n                if (this.showColumnSubTotals) {\n                    for (var cCnt = 0; cCnt < this.dataSourceSettings.columns.length; cCnt++) {\n                        if (this.dataSourceSettings.columns[cCnt].showSubTotals === false) {\n                            this.hideColumnTotalsObject[this.dataSourceSettings.columns[cCnt].name] = cCnt;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.showRowSubTotals) {\n                    for (var rCnt = 0; rCnt < this.dataSourceSettings.rows.length; rCnt++) {\n                        if (this.dataSourceSettings.rows[rCnt].showSubTotals === false) {\n                            this.hideRowTotalsObject[this.dataSourceSettings.rows[rCnt].name] = rCnt;\n                        }\n                    }\n                }\n            }\n            axisCount++;\n        } while (axisCount < 3);\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameRowHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var position = this.pivotValues.length;\n        var pivotValues = [];\n        var valueContent = [];\n        if (this.customArgs.action !== 'down') {\n            pivotValues = this.pivotValues;\n            valueContent = this.valueContent;\n        }\n        else {\n            position = this.customArgs.drillInfo.currentCell.rowIndex + 1;\n        }\n        this.rowStartPos = this.rowStartPos > 0 ? this.rowStartPos : position;\n        var tupPos = 0;\n        var lastAllStartPos;\n        var lastAllCount;\n        var prevUNArray = [];\n        var allType = {};\n        var rowMembers = [];\n        var availAllMember = false;\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var minLevel = [];\n        var gTotals = [{\n                axis: 'row',\n                colIndex: 0,\n                formattedText: 'Grand Total',\n                hasChild: false,\n                level: -1,\n                rowIndex: 0,\n                index: [],\n                type: 'grand sum',\n                ordinal: 0,\n                colSpan: 1,\n                rowSpan: 1,\n                memberType: 2,\n                isDrilled: false,\n                valueSort: { 'Grand Total': 1, levelName: 'Grand Total' }\n            }];\n        var maxLevel = [];\n        var measurePos;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'row') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupRowInfo, this.showRowSubTotals, this.hideRowTotalsObject, 'row');\n            tupPos++;\n        }\n        tupPos = 0;\n        var prevTupInfo;\n        var tuplesLength = tuples.length;\n        if (this.customArgs.action === 'down') {\n            var ordinal = this.customArgs.drillInfo.currentCell.ordinal + 1;\n            tupPos = ordinal;\n            tuplesLength += ordinal;\n            lastAllCount = this.tupRowInfo[ordinal - 1].allCount;\n            lastAllStartPos = this.tupRowInfo[ordinal - 1].allStartPos;\n            prevTupInfo = this.tupRowInfo[ordinal - 1];\n        }\n        var startTupPos = tupPos;\n        var pagingAllowFlag = true;\n        while (tupPos < tuplesLength && pagingAllowFlag) {\n            var members = tuples[this.customArgs.action === 'down' ?\n                (tupPos - (this.customArgs.drillInfo.currentCell.ordinal + 1)) : tupPos].querySelectorAll('Member');\n            var memPos = 0;\n            var prevParent = void 0;\n            var allCount = this.tupRowInfo[tupPos].allCount;\n            var allStartPos = this.tupRowInfo[tupPos].allStartPos;\n            var measure = this.tupRowInfo[tupPos].measure;\n            var typeColl = this.tupRowInfo[tupPos].typeCollection;\n            var drillInfo = this.tupRowInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupRowInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupRowInfo[tupPos].startDrillUniquename;\n            var drillEndPos = this.tupRowInfo[tupPos].drillEndPos;\n            var levelColl = this.tupRowInfo[tupPos].levelCollection;\n            if (tupPos === 0 || tupPos === startTupPos) {\n                var firstTupMembers = this.customArgs.action === 'down' ? this.tupRowInfo[0].members : members;\n                while (memPos < firstTupMembers.length) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                        Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0) {\n                        minLevel[memPos] = 0;\n                    }\n                    else {\n                        minLevel[memPos] = Number(firstTupMembers[memPos].querySelector('LNum').textContent);\n                    }\n                    // if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    //   (this.isPaging || Number(firstTupMembers[memPos].querySelector('LNum').textContent) === 0)) {\n                    if (firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '1') {\n                        allType[memPos] = 0;\n                        withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                        withoutAllEndPos = memPos;\n                    }\n                    else {\n                        allType[memPos] = 1;\n                        availAllMember = firstTupMembers[memPos].querySelector('MEMBER_TYPE').textContent === '3' ? availAllMember : true;\n                    }\n                    memPos++;\n                }\n                measurePos = typeColl.indexOf('3');\n            }\n            memPos = 0;\n            if (tupPos === 0 && (members.length > (allCount + (measure ? 1 : 0)) || (members.length === 1 && measure))) {\n                gTotals.pop();\n            }\n            if ((tupPos === 0 && this.isPaging) ? gTotals.length === 0 :\n                (!availAllMember || allCount === lastAllCount || allStartPos !== lastAllStartPos || (members.length === 1 && measure))) {\n                var drillAllow = drillStartPos > -1 ? (allCount > 0 ? (allStartPos > drillStartPos) : true) : true;\n                /* tslint:disable-next-line:max-line-length */\n                drillAllow = (prevTupInfo && drillAllow && drillStartPos > -1) ?\n                    (prevTupInfo.startDrillUniquename !== startDrillUniquename ? true :\n                        ((withoutAllEndPos > prevTupInfo.measurePosition ? false :\n                            prevTupInfo.measureName !== this.tupRowInfo[tupPos].measureName) &&\n                            (allStartPos === (drillStartPos + 1) || this.tupRowInfo[tupPos].measurePosition === (drillStartPos + 1))))\n                    : drillAllow;\n                var withoutAllAllow = (withoutAllStartPos > -1 && allCount > 0) ? (allStartPos > withoutAllEndPos) : true;\n                if (members.length === allCount + (measure ? 1 : 0) && measure) {\n                    var levelName = 'Grand Total.' + members[measurePos].querySelector('Caption').textContent;\n                    gTotals.push({\n                        axis: 'row',\n                        actualText: this.getUniqueName(members[measurePos].querySelector('UName').textContent),\n                        colIndex: 0,\n                        formattedText: members[measurePos].querySelector('Caption').textContent,\n                        hasChild: false,\n                        level: -1,\n                        rowIndex: position,\n                        index: [],\n                        ordinal: tupPos,\n                        colSpan: 1,\n                        rowSpan: 1,\n                        memberType: Number(typeColl[measurePos]),\n                        isDrilled: false,\n                        parentUniqueName: members[measurePos].querySelector('PARENT_UNIQUE_NAME') ?\n                            members[measurePos].querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: members[measurePos].querySelector('LName').textContent,\n                        hierarchy: members[measurePos].getAttribute('Hierarchy'),\n                        valueSort: { levelName: levelName, axis: members[measurePos].getAttribute('Hierarchy') }\n                    });\n                    gTotals[gTotals.length - 1].valueSort['Grand Total.' + members[measurePos].querySelector('Caption').textContent] = 1;\n                }\n                else if (!(allStartPos === 0 || (measurePos === 0 && allStartPos === 1)) && drillAllow && withoutAllAllow) {\n                    prevTupInfo = this.tupRowInfo[tupPos];\n                    var lastPos = position;\n                    var lastMemPos = memPos;\n                    prevParent = {};\n                    var withoutAllDrilled = false;\n                    while (memPos < members.length && pagingAllowFlag) {\n                        var member = members[memPos];\n                        if (member.querySelector('UName').textContent !== prevUNArray[memPos] && typeColl[memPos] !== '2'\n                            && ((Object.keys(prevParent).length > 0 ? prevParent.isDrilled : withoutAllDrilled) ?\n                                (typeColl[memPos] === '3' && (allType[memPos - 1] && allType[memPos + 1] !== 0)) : true)) {\n                            /* tslint:disable-next-line:max-line-length */\n                            var lvl = Number(member.querySelector('LNum').textContent) -\n                                ((allType[memPos] && typeColl[memPos] !== '3') ? 1 : minLevel[memPos]);\n                            /* tslint:disable-next-line:no-string-literal */\n                            var isNamedSet = this.namedSetsPosition['row'][memPos] ? true : false;\n                            pivotValues[position] = [{\n                                    axis: 'row',\n                                    actualText: this.getUniqueName(member.querySelector('UName').textContent),\n                                    colIndex: 0,\n                                    formattedText: member.querySelector('Caption').textContent,\n                                    hasChild: Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                                    level: lvl,\n                                    rowIndex: position,\n                                    index: [],\n                                    ordinal: tupPos,\n                                    type: 'header',\n                                    colSpan: 1,\n                                    rowSpan: 1,\n                                    memberType: Number(typeColl[memPos]),\n                                    isDrilled: this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled,\n                                    parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ?\n                                        member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                                    levelUniqueName: member.querySelector('LName').textContent,\n                                    hierarchy: member.getAttribute('Hierarchy'),\n                                    isNamedSet: isNamedSet,\n                                    valueSort: { levelName: '', axis: member.getAttribute('Hierarchy') }\n                                }];\n                            prevParent = typeColl[memPos] !== '3' ? pivotValues[position][0] : prevParent;\n                            if (!prevParent) {\n                                rowMembers.push(member.querySelector('Caption').textContent);\n                            }\n                            var levelName = this.getCaptionCollectionWithMeasure(this.tupRowInfo[tupPos]);\n                            pivotValues[position][0].valueSort.levelName = levelName;\n                            pivotValues[position][0].valueSort[levelName] = 1;\n                            valueContent[position - this.rowStartPos] = {};\n                            valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                            if (measure && measurePos > memPos) {\n                                prevUNArray[measurePos] = '';\n                            }\n                            for (var pos = memPos + 1; pos < members.length; pos++) {\n                                prevUNArray[pos] = '';\n                            }\n                            prevUNArray[memPos] = member.querySelector('UName').textContent;\n                            position++;\n                            lastMemPos = memPos;\n                        }\n                        else if (typeColl[memPos] === '2') {\n                            lastMemPos = memPos;\n                        }\n                        else {\n                            if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && allType[memPos] === 0) {\n                                withoutAllDrilled = true;\n                            }\n                        }\n                        if (this.tupRowInfo[tupPos].drillInfo[memPos].isDrilled && this.tupRowInfo[tupPos].showTotals) {\n                            this.tupRowInfo[tupPos].showTotals = !this.showRowSubTotals ? false :\n                                this.hideRowTotalsObject[this.tupRowInfo[tupPos].drillInfo[memPos].hierarchy] === undefined;\n                        }\n                        memPos++;\n                    }\n                    if (lastPos < position && lastMemPos >= (members.length - 1)) {\n                        pivotValues[position - 1][0].ordinal = tupPos;\n                        if (pivotValues[position - 1][0].type === 'header') {\n                            delete pivotValues[position - 1][0].type;\n                        }\n                    }\n                }\n                lastAllCount = allCount;\n                lastAllStartPos = allStartPos;\n            }\n            tupPos++;\n        }\n        if (gTotals.length > 1 && gTotals[0].memberType !== 3) {\n            gTotals[0].ordinal = -1;\n        }\n        // if (!(this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals)) {\n        //     for (let totPos: number = 0; totPos < gTotals.length; totPos++) {\n        //         if (this.tupRowInfo[gTotals[totPos].ordinal]) {\n        //             this.tupRowInfo[gTotals[totPos].ordinal].showTotals = false;\n        //         }\n        //     }\n        // }\n        if (this.customArgs.action !== 'down') {\n            if (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals) {\n                for (var totPos = 0; totPos < gTotals.length; totPos++) {\n                    gTotals[totPos].rowIndex = position;\n                    pivotValues[position] = [gTotals[totPos]];\n                    valueContent[position - this.rowStartPos] = {};\n                    valueContent[position - this.rowStartPos][0] = pivotValues[position][0];\n                    position++;\n                }\n            }\n        }\n        else {\n            this.updateRowEngine(pivotValues, valueContent, tuples.length);\n            this.onDemandDrillEngine = pivotValues;\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameTupCollection = function (members, maxLevel, tupPos, tupInfo, showSubTotals, hideTotalsObject, axis) {\n        var _a, _b;\n        var memPos = 0;\n        var allCount = 0;\n        var allStartPos;\n        var measure;\n        var measureName;\n        var measurePosition;\n        var typeColl = [];\n        var levelColl = [];\n        var drillState = [];\n        var uNameCollection = '';\n        var captionCollection = '';\n        var showTotals = true;\n        var hideFieldPos = -1;\n        while (memPos < members.length) {\n            var member = members[memPos];\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            /* tslint:disable */\n            if (Number(member.querySelector('MEMBER_TYPE').textContent) > 3) {\n                member.querySelector('MEMBER_TYPE').textContent = memberUName.startsWith('[Measures]') ? '3' : '1';\n            }\n            var memberType = memberUName.startsWith('[Measures]') ? '3' :\n                (Number(member.querySelector('MEMBER_TYPE').textContent) > 3 ? '1' : member.querySelector('MEMBER_TYPE').textContent);\n            /* tslint:enable */\n            var memberCaption = member.querySelector('Caption').textContent;\n            if (this.fieldList[memberCaption] && this.fieldList[memberCaption].type === 'CalculatedField') {\n                memberCaption = this.fieldList[memberCaption].caption;\n                member.querySelector('Caption').textContent = memberCaption;\n            }\n            var hierarchy = member.getAttribute('Hierarchy');\n            /* tslint:disable-next-line:max-line-length */\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (memberType === '2') {\n                allCount++;\n                allStartPos = isNullOrUndefined(allStartPos) ? memPos : allStartPos;\n            }\n            else if (memberType === '3') {\n                measure = member;\n                measureName = memberUName;\n                measurePosition = memPos;\n                if (axis === 'column') {\n                    this.colMeasures[memberUName] = member;\n                    this.colMeasurePos = memPos;\n                }\n                else {\n                    this.rowMeasurePos = memPos;\n                }\n            }\n            else {\n                hideFieldPos = hideTotalsObject[hierarchy];\n            }\n            if (memberType !== '2') {\n                if (this.headerGrouping[memPos]) {\n                    if (memberlevel > this.lastLevel[memPos]) {\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    else if (memberlevel < this.lastLevel[memPos]) {\n                        var levelPos = this.lastLevel[memPos];\n                        while (levelPos >= memberlevel) {\n                            delete this.headerGrouping[memPos].UName[levelPos];\n                            delete this.headerGrouping[memPos].Caption[levelPos];\n                            levelPos--;\n                        }\n                        this.lastLevel[memPos] = memberlevel;\n                    }\n                    this.headerGrouping[memPos].UName[memberlevel] = memberUName;\n                    this.headerGrouping[memPos].Caption[memberlevel] = memberCaption;\n                }\n                else {\n                    this.lastLevel[memPos] = memberlevel;\n                    this.headerGrouping[memPos] = { UName: (_a = {}, _a[memberlevel] = memberUName, _a), Caption: (_b = {}, _b[memberlevel] = memberCaption, _b) };\n                }\n                if (this.isPaging) {\n                    var currUName = parentUName;\n                    while (this.drilledSets[currUName]) {\n                        var currCaption = this.drilledSets[currUName].querySelector('Caption').textContent;\n                        var currLevel = Number(this.drilledSets[currUName].querySelector('LNum').textContent);\n                        this.headerGrouping[memPos].UName[currLevel] = currUName;\n                        this.headerGrouping[memPos].Caption[currLevel] = currCaption;\n                        currUName = this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME') === null ? '' :\n                            this.drilledSets[currUName].querySelector('PARENT_UNIQUE_NAME').textContent;\n                    }\n                }\n                /* tslint:disable */\n                var uNames = Object.values(this.headerGrouping[memPos].UName).join('~~');\n                uNameCollection = uNameCollection === '' ? uNames :\n                    (uNameCollection + '::' + uNames);\n                var captions = Object.values(this.headerGrouping[memPos].Caption).join('~~');\n                /* tslint:enable */\n                if (memPos !== measurePosition) {\n                    captionCollection = captionCollection === '' ? captions :\n                        (captionCollection + '::' + captions);\n                }\n            }\n            typeColl.push(memberType);\n            levelColl.push(memberlevel);\n            if (isNullOrUndefined(maxLevel[memPos]) || maxLevel[memPos] < memberlevel) {\n                maxLevel[memPos] = memberlevel;\n            }\n            drillState.push({ level: memberlevel, uName: memberUName, hierarchy: hierarchy, isDrilled: false });\n            if (tupInfo[tupPos - 1] && tupInfo[tupPos - 1].typeCollection[memPos] === '1' &&\n                drillState[memPos].level > tupInfo[tupPos - 1].drillInfo[memPos].level) {\n                var uCollection = uNameCollection.split(/[~~,::]/).filter(function (item) { return item; });\n                uCollection.pop();\n                var parentLevel = uCollection.join('~~');\n                this.setDrillInfo(parentUName, parentLevel, memPos, tupPos, tupInfo);\n            }\n            memPos++;\n        }\n        if (hideFieldPos > -1) {\n            showTotals = typeColl[hideFieldPos + 1] !== '2';\n        }\n        tupInfo[tupPos] = {\n            allCount: allCount,\n            allStartPos: allStartPos,\n            measure: measure,\n            measureName: measureName,\n            measurePosition: measurePosition,\n            members: members,\n            typeCollection: typeColl,\n            uNameCollection: uNameCollection,\n            captionCollection: captionCollection,\n            levelCollection: levelColl,\n            drillInfo: drillState,\n            drillStartPos: -1,\n            drillEndPos: -1,\n            showTotals: (!showSubTotals && allCount > 0 && allStartPos > (measurePosition === 0 ? 1 : 0)) ? false : showTotals\n        };\n        return maxLevel;\n    };\n    OlapEngine.prototype.getCaptionCollectionWithMeasure = function (tuple) {\n        var captionColection = tuple.captionCollection;\n        if (tuple.measure) {\n            var measureName = tuple.measure.querySelector('Caption').textContent;\n            var measurePosition = tuple.uNameCollection.split(/[~~,::]+/g).indexOf(tuple.measureName);\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionCollectionArray.splice(measurePosition, 0, measureName);\n            captionColection = captionCollectionArray.join('.');\n        }\n        else {\n            var captionCollectionArray = tuple.captionCollection.split(/[~~,::]+/g);\n            captionColection = captionCollectionArray.join('.');\n        }\n        return captionColection;\n    };\n    /** hidden */\n    OlapEngine.prototype.setNamedSetsPosition = function () {\n        this.namedSetsPosition = {};\n        var axis = 0;\n        do {\n            var setsPositions = {};\n            var axisFields = axis ? this.dataSourceSettings.rows : this.dataSourceSettings.columns;\n            for (var fPos = 0; fPos < axisFields.length; fPos++) {\n                if (axisFields[fPos].isNamedSet) {\n                    setsPositions[fPos] = axisFields[fPos].name;\n                }\n            }\n            this.namedSetsPosition[axis ? 'row' : 'column'] = setsPositions;\n            axis++;\n        } while (axis < 2);\n    };\n    OlapEngine.prototype.updateRowEngine = function (pivotValues, valueContent, tuplesLength) {\n        var currEngineCount = this.pivotValues.length - 1;\n        var newEngineCount = Object.keys(pivotValues).length;\n        while (currEngineCount > this.customArgs.drillInfo.currentCell.rowIndex) {\n            this.pivotValues[currEngineCount + newEngineCount] = this.pivotValues[currEngineCount];\n            this.pivotValues[currEngineCount + newEngineCount][0].ordinal += tuplesLength;\n            this.pivotValues[currEngineCount + newEngineCount][0].rowIndex += newEngineCount;\n            /* tslint:disable-next-line:max-line-length */\n            this.valueContent[(currEngineCount + newEngineCount) - this.rowStartPos] = this.valueContent[currEngineCount - this.rowStartPos];\n            currEngineCount--;\n        }\n        // for (let key in pivotValues) {\n        for (var key = 0; key < pivotValues.length; key++) {\n            this.pivotValues[key] = pivotValues[key];\n            this.valueContent[Number(key) - this.rowStartPos] = valueContent[Number(key) - this.rowStartPos];\n        }\n        this.pivotValues[this.customArgs.drillInfo.currentCell.rowIndex][0].isDrilled = true;\n    };\n    OlapEngine.prototype.updateTupCollection = function (newTuplesCount) {\n        var tupCollection = this.customArgs.drillInfo.axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTupCount = tupCollection.length - 1;\n        while (currTupCount > this.customArgs.drillInfo.currentCell.ordinal) {\n            tupCollection[currTupCount + newTuplesCount] = tupCollection[currTupCount];\n            currTupCount--;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameColumnHeader = function (tuples) {\n        this.headerGrouping = {};\n        this.lastLevel = [];\n        var tupPos = 0;\n        var maxLevel = [];\n        var allType = [];\n        var minLevel = [];\n        var withoutAllStartPos = -1;\n        var withoutAllEndPos = -1;\n        var newTupPosition = (this.customArgs.drillInfo && this.customArgs.drillInfo.axis === 'column') ?\n            (this.customArgs.drillInfo.currentCell.ordinal + 1) : 0;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            maxLevel = this.frameTupCollection(members, maxLevel, (tupPos + newTupPosition), this.tupColumnInfo, this.showColumnSubTotals, this.hideColumnTotalsObject, 'column');\n            tupPos++;\n        }\n        if (tuples.length > 0) {\n            var members = tuples[0].querySelectorAll('Member');\n            var memPos = 0;\n            while (memPos < members.length) {\n                minLevel[memPos] = (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    Number(members[memPos].querySelector('LNum').textContent) === 0) ? 0 :\n                    Number(members[memPos].querySelector('LNum').textContent);\n                if (members[memPos].querySelector('MEMBER_TYPE').textContent === '1' &&\n                    (this.isPaging || Number(members[memPos].querySelector('LNum').textContent) === 0)) {\n                    allType[memPos] = 0;\n                    withoutAllStartPos = withoutAllStartPos === -1 ? memPos : withoutAllStartPos;\n                    withoutAllEndPos = memPos;\n                }\n                else {\n                    allType[memPos] = 1;\n                }\n                memPos++;\n            }\n        }\n        /* tslint:disable */\n        var _this = this;\n        /* tslint:enable */\n        /* tslint:disable-next-line:max-line-length */\n        maxLevel.map(function (item, pos) { _this.colDepth = _this.colDepth + (allType[pos] === 0 ? (item + (1 - (minLevel[pos] > 1 ? 1 : minLevel[pos]))) : (item === 0 ? 1 : item)); });\n        tupPos = 0;\n        var position = 1;\n        var lastAllStartPos;\n        var lastSavedInfo = {};\n        var drillLastAllStartPos;\n        var lastAllCount;\n        var drillLastAllCount;\n        var isSubTotIncluded = true;\n        var withoutAllAvail = false;\n        var lastRealTup;\n        while (tupPos < tuples.length) {\n            var members = tuples[tupPos].querySelectorAll('Member');\n            var allCount = this.tupColumnInfo[tupPos].allCount;\n            var allStartPos = this.tupColumnInfo[tupPos].allStartPos;\n            var measure = this.tupColumnInfo[tupPos].measure;\n            var typeColl = this.tupColumnInfo[tupPos].typeCollection;\n            var drillInfo = this.tupColumnInfo[tupPos].drillInfo;\n            var drillStartPos = this.tupColumnInfo[tupPos].drillStartPos;\n            var startDrillUniquename = this.tupColumnInfo[tupPos].startDrillUniquename;\n            var endDrillUniquename = this.tupColumnInfo[tupPos].endDrillUniquename;\n            var drillEndPos = this.tupColumnInfo[tupPos].drillEndPos;\n            var levelColl = this.tupColumnInfo[tupPos].levelCollection;\n            var isStartCol = typeColl[0] === '2' ? false : (typeColl[0] === '3' ? typeColl[1] !== '2' : true);\n            if (tupPos === 0 && members.length > (allCount + (measure ? 1 : 0))) {\n                withoutAllAvail = true;\n                isStartCol = (allCount > 0 && isStartCol) ? (allStartPos > withoutAllStartPos) : isStartCol;\n            }\n            if (isStartCol) {\n                if (allCount === 0) {\n                    var levelComp = [-1, -1, -1];\n                    if (this.tupColumnInfo[tupPos - 1] && this.tupColumnInfo[tupPos - 1].allCount === 0) {\n                        levelComp = this.levelCompare(levelColl, this.tupColumnInfo[tupPos - 1].levelCollection);\n                    }\n                    else if (withoutAllAvail && lastRealTup) {\n                        levelComp = this.levelCompare(levelColl, lastRealTup.levelCollection);\n                    }\n                    if (this.tupColumnInfo[tupPos].drillStartPos < 0) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        this.setParentCollection(members);\n                        this.frameCommonColumnLoop(members, tupPos, position, maxLevel, allType, minLevel);\n                        if (!this.tupColumnInfo[tupPos].showTotals) {\n                            position--;\n                        }\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                        }\n                        isSubTotIncluded = false;\n                        position++;\n                        /* tslint:disable-next-line:max-line-length */\n                    }\n                    else if (lastSavedInfo.drillStartPos === drillStartPos ?\n                        (lastSavedInfo.startDrillUniquename !== startDrillUniquename ||\n                            lastSavedInfo.allCount === allCount) : true) {\n                        if (!isSubTotIncluded && levelComp[0] > -1 && levelComp[2] > -1) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo, levelComp);\n                            isSubTotIncluded = true;\n                        }\n                        this.setParentCollection(members);\n                        if (withoutAllAvail ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this.totalCollection[this.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                    lastRealTup = this.tupColumnInfo[tupPos];\n                }\n            }\n            if (allCount > 0 && (withoutAllAvail ? (isStartCol && withoutAllEndPos < allStartPos) : true)) {\n                if (allCount === lastSavedInfo.allCount || allStartPos !== lastSavedInfo.allStartPos) {\n                    /* tslint:disable-next-line:max-line-length */\n                    var endAllow = drillEndPos !== drillStartPos ? (lastSavedInfo.endDrillUniquename === endDrillUniquename) : true;\n                    /* tslint:disable-next-line:max-line-length */\n                    var allow = allStartPos !== lastSavedInfo.allStartPos ? (lastSavedInfo.startDrillUniquename !== startDrillUniquename) : endAllow;\n                    if (drillStartPos > -1 ? (allow) : true) {\n                        if (!isSubTotIncluded) {\n                            position = this.mergeTotCollection(position, allCount, maxLevel, minLevel, allType, allStartPos, drillInfo);\n                            isSubTotIncluded = true;\n                        }\n                        this.setParentCollection(members);\n                        if ((withoutAllAvail && drillStartPos > -1) ? (withoutAllEndPos <= drillStartPos) : true) {\n                            /* tslint:disable-next-line:max-line-length */\n                            this.totalCollection[this.totalCollection.length] = ({ allCount: allCount, ordinal: tupPos, members: members, allStartPos: allStartPos, drillInfo: drillInfo });\n                            lastSavedInfo.allCount = allCount;\n                            lastSavedInfo.allStartPos = allStartPos;\n                            lastSavedInfo.drillStartPos = drillStartPos;\n                            lastSavedInfo.startDrillUniquename = startDrillUniquename;\n                            lastSavedInfo.endDrillUniquename = endDrillUniquename;\n                        }\n                    }\n                }\n            }\n            tupPos++;\n        }\n        if (this.totalCollection.length > 0) {\n            if (Object.keys(this.colMeasures).length > 1) {\n                this.orderTotals(position, maxLevel, allType, minLevel);\n            }\n            else {\n                this.totalCollection = this.totalCollection.reverse();\n                for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n                    var coll = _a[_i];\n                    var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.orderTotals = function (position, maxLevel, allType, minLevel) {\n        var groupColl = {};\n        var maxCnt = 1;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            var isGrandTotal = this.tupColumnInfo[coll.ordinal].measurePosition === 0 ?\n                this.tupColumnInfo[coll.ordinal].allStartPos === 1 : this.tupColumnInfo[coll.ordinal].allStartPos === 0;\n            if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                var measureName = this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent;\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var coll = groupColl[key].coll[collLength];\n                if (coll) {\n                    this.frameCommonColumnLoop(coll.members, coll.ordinal, position, maxLevel, allType, minLevel);\n                    if (this.tupColumnInfo[coll.ordinal].showTotals) {\n                        position++;\n                    }\n                }\n            }\n            collLength--;\n        }\n    };\n    OlapEngine.prototype.setParentCollection = function (members) {\n        var memPos = 0;\n        while (members.length > memPos) {\n            var member = members[memPos];\n            var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                member.querySelector('MEMBER_TYPE').textContent;\n            var memberlevel = Number(member.querySelector('LNum').textContent);\n            var memberUName = member.querySelector('UName').textContent;\n            var parentUName = member.querySelector('PARENT_UNIQUE_NAME') ?\n                member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            var isSameParent = true;\n            var isWithoutAllMember = false;\n            if (this.parentObjCollection[memPos]) {\n                var levelCollection = Object.keys(this.parentObjCollection[memPos]);\n                var parentMember = this.parentObjCollection[memPos][memberlevel - 1];\n                isSameParent = parentMember ? parentUName === parentMember.querySelector('UName').textContent :\n                    levelCollection.length === 0;\n                isWithoutAllMember = this.tupColumnInfo[0].typeCollection[memPos] === '1';\n            }\n            if (memberType === '2') {\n                delete this.parentObjCollection[memPos];\n            }\n            else {\n                if ((this.isPaging || isWithoutAllMember) ? !isSameParent : false) {\n                    delete this.parentObjCollection[memPos];\n                }\n                if (!this.parentObjCollection[memPos]) {\n                    this.parentObjCollection[memPos] = {};\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n                else if (!this.parentObjCollection[memPos][memberlevel] ||\n                    this.parentObjCollection[memPos][memberlevel].querySelector('UName').textContent !== memberUName) {\n                    this.parentObjCollection[memPos][memberlevel] = member;\n                }\n            }\n            memPos++;\n        }\n    };\n    OlapEngine.prototype.setDrillInfo = function (pUName, parentLvlCollection, memPos, tupPos, tupInfo) {\n        tupPos--;\n        while (tupInfo[tupPos] && tupInfo[tupPos].drillInfo[memPos].uName === pUName) {\n            var prevUcollection = tupInfo[tupPos].uNameCollection.split(/[~~,::]/).filter(function (item) { return item; });\n            if (prevUcollection.join('~~').indexOf(parentLvlCollection) < 0) {\n                break;\n            }\n            tupInfo[tupPos].drillInfo[memPos].isDrilled = true;\n            if (this.curDrillEndPos <= memPos) {\n                tupInfo[tupPos].drillEndPos = this.curDrillEndPos = memPos;\n                tupInfo[tupPos].endDrillUniquename = pUName;\n            }\n            if (tupInfo[tupPos].drillStartPos > memPos || tupInfo[tupPos].drillStartPos === -1) {\n                tupInfo[tupPos].drillStartPos = memPos;\n            }\n            tupInfo[tupPos].startDrillUniquename = pUName;\n            tupPos--;\n        }\n    };\n    OlapEngine.prototype.levelCompare = function (newLevels, oldLevels) {\n        var changePos = [-1, 0];\n        for (var lPos = 0; lPos < oldLevels.length; lPos++) {\n            if (newLevels[lPos] !== oldLevels[lPos]) {\n                changePos = [lPos, newLevels[lPos], (oldLevels[lPos] - newLevels[lPos])];\n                break;\n            }\n        }\n        return changePos;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.mergeTotCollection = function (position, allCount, maxLevel, allType, minLevel, allStartPos, drillInfo, levelComp) {\n        /* tslint:disable-next-line:max-line-length */\n        var prevHdrPos = isNullOrUndefined(allStartPos) ? levelComp[0] : (allStartPos - ((this.colMeasurePos === (allStartPos - 1)) ? 2 : 1));\n        var flagLevel = drillInfo[prevHdrPos] && drillInfo[prevHdrPos].level;\n        var flagLevelString = this.getLevelsAsString(prevHdrPos - 1, drillInfo);\n        var groupColl = {};\n        var maxCnt = 1;\n        var enterFlag = false;\n        for (var _i = 0, _a = this.totalCollection; _i < _a.length; _i++) {\n            var coll = _a[_i];\n            if (enterFlag || (coll.allCount <= allCount &&\n                ((flagLevel > -1 && coll.drillInfo[prevHdrPos]) ? ((coll.drillInfo[prevHdrPos].level >= flagLevel) &&\n                    (this.getLevelsAsString(prevHdrPos - 1, coll.drillInfo)) === flagLevelString) : true))) {\n                /* tslint:disable-next-line:max-line-length */\n                var measureName = this.tupColumnInfo[coll.ordinal].measure ? this.tupColumnInfo[coll.ordinal].measure.querySelector('UName').textContent : 'measure';\n                if (groupColl[measureName]) {\n                    groupColl[measureName].coll.push(coll);\n                    groupColl[measureName].count++;\n                    maxCnt = maxCnt < groupColl[measureName].count ? groupColl[measureName].count : maxCnt;\n                }\n                else {\n                    groupColl[measureName] = { coll: [coll], count: 1 };\n                }\n                enterFlag = false;\n            }\n        }\n        var keys = Object.keys(groupColl);\n        var collLength = maxCnt - 1;\n        while (collLength > -1) {\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var key = keys_2[_b];\n                var coll1 = groupColl[key].coll[collLength];\n                if (coll1) {\n                    var isGrandTotal = this.tupColumnInfo[coll1.ordinal].measurePosition === 0 ?\n                        this.tupColumnInfo[coll1.ordinal].allStartPos === 1 : this.tupColumnInfo[coll1.ordinal].allStartPos === 0;\n                    if (isGrandTotal ? (this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showColumnGrandTotals) : true) {\n                        this.frameCommonColumnLoop(coll1.members, coll1.ordinal, position, maxLevel, minLevel, allType);\n                        if (this.tupColumnInfo[coll1.ordinal].showTotals) {\n                            position++;\n                        }\n                    }\n                    this.totalCollection.pop();\n                }\n            }\n            collLength--;\n        }\n        return position;\n    };\n    OlapEngine.prototype.getLevelsAsString = function (prevHdrPos, drillInfo) {\n        var lvlCollection = [];\n        for (var pos = 0; pos < prevHdrPos; pos++) {\n            lvlCollection[pos] = drillInfo[pos].level;\n        }\n        return lvlCollection.length > 0 ? lvlCollection.toString() : '';\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.frameCommonColumnLoop = function (members, tupPos, position, maxLevel, minLevel, allType) {\n        var _a;\n        var drillMemberPosition = -1;\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memberPos = 0;\n            var memberDepth = 0;\n            while (memberPos < members.length) {\n                memberDepth += (allType[memberPos] > 0 && this.tupColumnInfo[tupPos].measurePosition !== memberPos) ?\n                    maxLevel[memberPos] :\n                    (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                if (this.tupColumnInfo[tupPos].drillInfo[memberPos].isDrilled && this.tupColumnInfo[tupPos].showTotals) {\n                    this.tupColumnInfo[tupPos].showTotals = !this.showColumnSubTotals ? false :\n                        this.hideColumnTotalsObject[this.tupColumnInfo[tupPos].drillInfo[memberPos].hierarchy] === undefined;\n                    memberDepth -= maxLevel[memberPos] -\n                        this.tupColumnInfo[tupPos].levelCollection[memberPos];\n                    drillMemberPosition = this.tupColumnInfo[tupPos].showTotals ? -1 : (memberDepth - 1);\n                }\n                memberPos++;\n            }\n        }\n        if (this.tupColumnInfo[tupPos].showTotals) {\n            var memPos = 0;\n            var spanMemPos = 0;\n            var colMembers = {};\n            while (memPos < members.length) {\n                var member = members[memPos];\n                var memberType = Number(member.querySelector('MEMBER_TYPE').textContent) > 2 ? '3' :\n                    member.querySelector('MEMBER_TYPE').textContent;\n                var memDup = 0;\n                for (var rowDepthPos = memberType !== '2' ? (allType[memPos] ? 1 : minLevel[memPos]) : 1; rowDepthPos <= (memberType === '3' ? 1 : maxLevel[memPos]); rowDepthPos++) {\n                    var isDrilled = false;\n                    if (!this.pivotValues[spanMemPos]) {\n                        this.pivotValues[spanMemPos] = [];\n                    }\n                    if (Number(members[memPos].querySelector('LNum').textContent) > rowDepthPos && memberType !== '2') {\n                        if (!this.parentObjCollection[memPos][rowDepthPos]) {\n                            this.getDrilledParent(members[memPos], rowDepthPos, this.parentObjCollection[memPos]);\n                        }\n                        if (this.parentObjCollection[memPos][rowDepthPos]) {\n                            member = this.parentObjCollection[memPos][rowDepthPos];\n                        }\n                        isDrilled = true;\n                    }\n                    else {\n                        member = members[memPos];\n                        memDup++;\n                    }\n                    if (memberType !== '2') {\n                        colMembers[member.querySelector('UName').textContent] = member.querySelector('Caption').textContent;\n                    }\n                    /* tslint:disable */\n                    var levelName = Object.values(colMembers).join('.');\n                    var isNamedSet = this.namedSetsPosition['column'][memPos] ? true : false;\n                    this.pivotValues[spanMemPos][position] = {\n                        axis: 'column',\n                        actualText: this.getUniqueName(member.querySelector('UName').textContent),\n                        colIndex: position,\n                        formattedText: member.querySelector('Caption').textContent,\n                        hasChild: Number(member.querySelector('CHILDREN_CARDINALITY').textContent) > 0 ? true : false,\n                        /* tslint:disable-next-line:max-line-length */\n                        level: memDup > 1 ? -1 : (Number(member.querySelector('LNum').textContent) - ((allType[memPos] && memberType !== '3') ? 1 : 0)),\n                        rowIndex: spanMemPos,\n                        ordinal: tupPos,\n                        memberType: Number(memberType),\n                        isDrilled: isDrilled || this.tupColumnInfo[tupPos].drillInfo[memPos].isDrilled,\n                        /* tslint:disable-next-line:max-line-length */\n                        parentUniqueName: member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : undefined,\n                        levelUniqueName: member.querySelector('LName').textContent,\n                        hierarchy: member.getAttribute('Hierarchy'),\n                        isNamedSet: isNamedSet,\n                        valueSort: (_a = { levelName: levelName }, _a[levelName] = 1, _a.axis = member.getAttribute('Hierarchy'), _a)\n                        /* tslint:enable */\n                    };\n                    if (!this.headerContent[spanMemPos]) {\n                        this.headerContent[spanMemPos] = {};\n                    }\n                    this.headerContent[spanMemPos][position] = this.pivotValues[spanMemPos][position];\n                    spanMemPos++;\n                }\n                memPos++;\n            }\n        }\n        else {\n            if (drillMemberPosition > -1) {\n                this.pivotValues[drillMemberPosition][position - 1].ordinal = tupPos;\n            }\n            else if (this.tupColumnInfo[tupPos].allCount > 0) {\n                var memberPos = 0;\n                var memberDepth = 0;\n                while (memberPos < this.tupColumnInfo[tupPos].allStartPos) {\n                    memberDepth += (allType[memberPos] > 0 && this.tupColumnInfo[tupPos].measurePosition !== memberPos) ?\n                        maxLevel[memberPos] :\n                        (maxLevel[memberPos] + (1 - minLevel[memberPos]));\n                    memberPos++;\n                }\n                if (this.tupColumnInfo[tupPos].allStartPos === (this.tupColumnInfo[tupPos].measurePosition + 1)) {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 2] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 2] + 1;\n                }\n                else {\n                    memberDepth -= maxLevel[this.tupColumnInfo[tupPos].allStartPos - 1] -\n                        this.tupColumnInfo[tupPos].levelCollection[this.tupColumnInfo[tupPos].allStartPos - 1];\n                }\n                this.pivotValues[memberDepth - 1][position - 1].ordinal = tupPos;\n            }\n        }\n    };\n    OlapEngine.prototype.getDrilledParent = function (childMember, parentLevel, savedCollection) {\n        var childlevel = Number(childMember.querySelector('LNum').textContent);\n        var currentChild = childMember;\n        for (var lvl = childlevel - 1; lvl >= parentLevel; lvl--) {\n            var currentParent = this.drilledSets[currentChild.querySelector('PARENT_UNIQUE_NAME').textContent];\n            if (currentParent) {\n                savedCollection[lvl] = currentParent;\n                currentChild = currentParent;\n            }\n            else {\n                break;\n            }\n        }\n    };\n    /* tslint:disable */\n    OlapEngine.prototype.performRowSorting = function () {\n        var _a;\n        if (this.enableSort && this.tupRowInfo.length > 0) {\n            var rowCount = this.pivotValues.length;\n            var lvlGrouping = {};\n            var measureObjects = {};\n            var gSumGrouping = [];\n            var gSumFlag = false;\n            var withoutAllLastPos = this.tupRowInfo[0].typeCollection.lastIndexOf('1');\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var currentCell = this.pivotValues[rPos][0];\n                var currentTuple = this.tupRowInfo[currentCell.ordinal];\n                var uniqueName = currentTuple ? currentTuple.uNameCollection : '';\n                if (uniqueName !== '') {\n                    if (withoutAllLastPos > -1) {\n                        uniqueName = this.frameUniqueName(uniqueName, currentCell, currentTuple);\n                    }\n                    var level = uniqueName.split(/[~~,::]/).length;\n                    if (currentCell.memberType === 3 && this.tupRowInfo[0].measurePosition > 0) {\n                        var parentUName = this.getParentUname(uniqueName, currentCell, true, true);\n                        if (measureObjects[parentUName]) {\n                            measureObjects[parentUName].push(currentCell);\n                        }\n                        else {\n                            measureObjects[parentUName] = [currentCell];\n                        }\n                    }\n                    else if (lvlGrouping[level]) {\n                        lvlGrouping[level][uniqueName] = [currentCell];\n                    }\n                    else {\n                        lvlGrouping[level] = (_a = {}, _a[uniqueName] = [currentCell], _a);\n                    }\n                }\n                if (gSumFlag) {\n                    gSumGrouping.push(currentCell);\n                }\n                if (currentCell.type === 'grand sum') {\n                    gSumFlag = true;\n                }\n            }\n            var isMeasureAvail = Object.keys(measureObjects).length > 0 && this.tupRowInfo[0].measurePosition > 0;\n            var levels = Object.keys(lvlGrouping).map(function (item) {\n                return Number(item);\n            }).sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n            var sortLvlGrouping = {};\n            for (var lPos = levels.length - 1; lPos >= 0; lPos--) {\n                var parentGrouping = {};\n                var objCollection = lvlGrouping[levels[lPos]];\n                var objKeys = Object.keys(objCollection);\n                for (var oPos = 0; oPos < objKeys.length; oPos++) {\n                    var parentUName = lPos === 0 ? 'parent' :\n                        this.getParentUname(objKeys[oPos], objCollection[objKeys[oPos]][0], isMeasureAvail, false);\n                    if (parentGrouping[parentUName]) {\n                        parentGrouping[parentUName].push(objCollection[objKeys[oPos]][0]);\n                    }\n                    else {\n                        parentGrouping[parentUName] = [objCollection[objKeys[oPos]]][0];\n                    }\n                }\n                var pKeys = Object.keys(parentGrouping);\n                /* tslint:disable:typedef */\n                for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                    parentGrouping[pKeys[kPos]] = this.sortRowHeaders(parentGrouping[pKeys[kPos]]);\n                }\n                /* tslint:enable:typedef */\n                if (sortLvlGrouping[levels[lPos + 1]]) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var groupSets = [];\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            var tupInfo = this.tupRowInfo[axisSets[aPos].ordinal];\n                            var uName = tupInfo.uNameCollection;\n                            groupSets.push(axisSets[aPos]);\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], tupInfo);\n                            }\n                            var isMembersIncluded = false;\n                            if (isMeasureAvail) {\n                                var parentUName = this.getParentUname(uName, axisSets[aPos], isMeasureAvail, true);\n                                if (measureObjects[parentUName]) {\n                                    measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                    var isLastMeasure = uName.lastIndexOf('::') === uName.indexOf('::[Measures]');\n                                    var isFullLength = uName.split('::').length - 1 === tupInfo.measurePosition;\n                                    var isLastNotDrilledMember = !tupInfo.drillInfo[tupInfo.measurePosition - 1].isDrilled;\n                                    var isActualLastMember = tupInfo.members.length > (tupInfo.measurePosition + 1);\n                                    if (isLastMeasure && isFullLength && isLastNotDrilledMember && isActualLastMember) {\n                                        isMembersIncluded = true;\n                                        for (var mPos = 0; mPos < measureObjects[parentUName].length; mPos++) {\n                                            groupSets.push(measureObjects[parentUName][mPos]);\n                                            var matchParent = (uName.substring(0, uName.indexOf('::[Measures]')) + '::' + measureObjects[parentUName][mPos].actualText);\n                                            if (sortLvlGrouping[levels[lPos + 1]][matchParent]) {\n                                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][matchParent]);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        groupSets = groupSets.concat(measureObjects[parentUName]);\n                                    }\n                                }\n                            }\n                            if (!isMembersIncluded &&\n                                sortLvlGrouping[levels[lPos + 1]][uName]) {\n                                /* tslint:disable-next-line:max-line-length */\n                                groupSets = groupSets.concat(sortLvlGrouping[levels[lPos + 1]][uName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                else if (isMeasureAvail) {\n                    for (var kPos = 0; kPos < pKeys.length; kPos++) {\n                        var axisSets = parentGrouping[pKeys[kPos]];\n                        var groupSets = [];\n                        for (var aPos = 0; aPos < axisSets.length; aPos++) {\n                            groupSets.push(axisSets[aPos]);\n                            var uName = this.tupRowInfo[axisSets[aPos].ordinal].uNameCollection;\n                            if (withoutAllLastPos > -1) {\n                                uName = this.frameUniqueName(uName, axisSets[aPos], this.tupRowInfo[axisSets[aPos].ordinal]);\n                            }\n                            var parentUName = this.getParentUname(uName, axisSets[aPos], true, true);\n                            if (measureObjects[parentUName]) {\n                                measureObjects[parentUName] = this.sortRowHeaders(measureObjects[parentUName]);\n                                groupSets = groupSets.concat(measureObjects[parentUName]);\n                            }\n                        }\n                        parentGrouping[pKeys[kPos]] = groupSets;\n                    }\n                }\n                sortLvlGrouping[levels[lPos]] = parentGrouping;\n            }\n            var newPos = 0;\n            var totPos = 0;\n            gSumFlag = false;\n            gSumGrouping = this.sortRowHeaders(gSumGrouping);\n            for (var rPos = this.colDepth; rPos < rowCount; rPos++) {\n                var cell = gSumFlag ? gSumGrouping : sortLvlGrouping[levels[0]]['parent'];\n                var currPos = gSumFlag ? (newPos - totPos) : newPos;\n                if (cell[currPos]) {\n                    this.pivotValues[rPos] = [cell[currPos]];\n                    this.pivotValues[rPos][0].rowIndex = rPos;\n                    this.valueContent[newPos][0] = this.pivotValues[rPos][0];\n                }\n                newPos++;\n                if (this.pivotValues[rPos][0].type === 'grand sum') {\n                    gSumFlag = true;\n                    totPos = newPos;\n                }\n            }\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.performColumnSorting = function () {\n        if (this.enableSort) {\n            for (var i = 0; i < this.dataSourceSettings.columns.length; i++) {\n                var temporary = [];\n                var index = 0;\n                var grandTotal = [];\n                for (var j = 0; j < this.pivotValues.length; j++) {\n                    var header = this.pivotValues[j];\n                    var key = void 0;\n                    var keys = void 0;\n                    var arrange = {};\n                    var value = 1;\n                    grandTotal[index] = [];\n                    temporary[index] = [];\n                    var k = 1;\n                    for (k = k; k < header.length; k++) {\n                        if (!header[k].isNamedSet) {\n                            if (header[k].memberType != 2 && header[k].hierarchy\n                                != '[Measures]' && header[k].level != -1) {\n                                isNullOrUndefined(arrange[header[k].formattedText]) ?\n                                    arrange[header[k].formattedText] = [] : arrange[k];\n                                arrange[header[k].formattedText][header[k].colIndex] = header[k];\n                            }\n                            else if (Object.keys(arrange).length > 0) {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                                key = Object.keys(arrange);\n                                /* tslint:disable:typedef */\n                                key = this.sortColumnHeaders(key, this.sortObject[header[k - 1].levelUniqueName] ||\n                                    this.sortObject[header[k].hierarchy]);\n                                isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                                for (var l = 0; l < key.length; l++) {\n                                    var length_1 = Object.keys(arrange[key[l]]).length;\n                                    for (var q = 0; q < length_1; q++) {\n                                        value = temporary[index].length == 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            arrange[key[l]][Number(Object.keys(arrange[key[l]])[q])];\n                                    }\n                                }\n                            }\n                            else if ((header[k].level === -1 || header[k].level === 0) &&\n                                Object.keys(arrange).length >= 0 && header[k].hierarchy != '[Measures]') {\n                                grandTotal[index][grandTotal[index].length + value] = header[k];\n                            }\n                            if (header[k].level != -1 && Object.keys(arrange).length === 1 &&\n                                header[k].hierarchy != '[Measures]' && !isNullOrUndefined(header[k + 1]) &&\n                                header[k + 1].level === -1) {\n                                var height = Object.keys(arrange[header[k].formattedText]).length;\n                                var weight = Object.keys(arrange[header[k].formattedText]);\n                                if (height > 1) {\n                                    for (var hgt = 0; hgt < height; hgt++) {\n                                        value = grandTotal[index].length == 0 ? 1 : 0;\n                                        grandTotal[index][grandTotal[index].length + value] =\n                                            arrange[header[k].formattedText][Number(weight[hgt])];\n                                    }\n                                }\n                                else {\n                                    grandTotal[index][grandTotal[index].length + value] = header[k];\n                                }\n                            }\n                            if (Object.keys(grandTotal[index]).length > 0) {\n                                value = temporary[index].length == 0 ? 1 : 0;\n                                var height1 = grandTotal[index].length;\n                                if (height1 > 2) {\n                                    for (var hgt1 = 1; hgt1 < height1; hgt1++) {\n                                        value = temporary[index].length == 0 ? 1 : 0;\n                                        temporary[index][temporary[index].length + value] =\n                                            grandTotal[index][hgt1];\n                                    }\n                                }\n                                else {\n                                    temporary[index][temporary[index].length + value] =\n                                        grandTotal[index][1] || grandTotal[index][0];\n                                }\n                                arrange = {};\n                                grandTotal[index] = [];\n                            }\n                        }\n                    }\n                    if (Object.keys(arrange).length > 0) {\n                        grandTotal[index][grandTotal[index].length + value] = header[k];\n                        keys = Object.keys(arrange);\n                        /* tslint:disable:typedef */\n                        var order = this.sortObject[header[k - 1].levelUniqueName] || this.sortObject[header[k - 1].hierarchy];\n                        key = this.sortColumnHeaders(keys, order);\n                        isNullOrUndefined(temporary[index]) ? temporary[index] = [] : temporary[index];\n                        for (var len = 0; len < keys.length; len++) {\n                            var leng = Object.keys(arrange[keys[len]]).length;\n                            for (var q = 0; q < leng; q++) {\n                                value = temporary[index].length == 0 ? 1 : 0;\n                                temporary[index][temporary[index].length + value] =\n                                    arrange[key[len]][Number(Object.keys(arrange[keys[len]])[q])];\n                            }\n                        }\n                    }\n                    for (var m = 1; m < temporary[index].length; m++) {\n                        this.pivotValues[index][m] = temporary[index][m];\n                    }\n                    for (var n = j; n < this.pivotValues.length; n++) {\n                        var pElement = extend({}, this.pivotValues[n + 1], null, true);\n                        var cElement = extend({}, this.pivotValues[n], null, true);\n                        if (Object.keys(pElement).length === Object.keys(cElement).length && Object.keys(pElement).length > 2) {\n                            for (var o = 1; o < this.pivotValues[j].length; o++) {\n                                if (Object.keys(pElement).length > 0 && cElement[o].colIndex\n                                    != pElement[o].colIndex) {\n                                    this.pivotValues[n + 1][o] = pElement[cElement[o].colIndex];\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    index++;\n                    arrange = {};\n                }\n                for (var i_1 = 0; i_1 < this.pivotValues.length; i_1++) {\n                    var header = this.pivotValues[i_1];\n                    for (var j = 1; j < header.length; j++) {\n                        header[j].colIndex = j;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.frameUniqueName = function (uniqueName, currentCell, currentTuple) {\n        var hasLastMeasure = uniqueName.indexOf(currentCell.actualText.toString() + '::[Measures]') > -1;\n        uniqueName = uniqueName.substring(0, uniqueName.indexOf(currentCell.actualText.toString())) +\n            currentCell.actualText.toString();\n        var measureAvail = uniqueName.split('::').length <= currentTuple.measurePosition;\n        uniqueName = uniqueName + ((hasLastMeasure || measureAvail) ? ('::' + currentTuple.measureName) : '');\n        return uniqueName;\n    };\n    OlapEngine.prototype.sortRowHeaders = function (headers) {\n        if (headers.length > 0 && headers[0].memberType !== 3 && !headers[0].isNamedSet) {\n            var order = (this.sortObject[headers[0].hierarchy] || this.sortObject[headers[0].levelUniqueName]);\n            if (order === 'Ascending' || order === undefined) {\n                headers == headers.sort(function (a, b) { return (a.formattedText > b.formattedText) ? 1 :\n                    ((b.formattedText > a.formattedText) ? -1 : 0); });\n            }\n            else if (order === 'Descending') {\n                headers == headers.sort(function (a, b) { return (a.formattedText < b.formattedText) ? 1 :\n                    ((b.formattedText < a.formattedText) ? -1 : 0); });\n            }\n            else {\n                headers;\n            }\n        }\n        return headers;\n    };\n    OlapEngine.prototype.sortColumnHeaders = function (keys, order) {\n        if (order === 'Ascending' || order === undefined) {\n            keys.sort(function (a, b) { return (a > b) ? 1 : ((b > a) ? -1 : 0); });\n        }\n        else if (order === 'Descending') {\n            keys.sort(function (a, b) { return (a < b) ? 1 : ((b < a) ? -1 : 0); });\n        }\n        return keys;\n    };\n    OlapEngine.prototype.frameSortObject = function () {\n        if (this.enableSort) {\n            for (var fPos = 0; fPos < this.sortSettings.length; fPos++) {\n                this.sortObject[this.sortSettings[fPos].name] = this.sortSettings[fPos].order;\n            }\n        }\n    };\n    /* tslint:enable */\n    OlapEngine.prototype.getParentUname = function (uniqueNameColl, cell, isMeasureAvail, isLastMeasure) {\n        var parentString = '';\n        if (isMeasureAvail && !isLastMeasure) {\n            var tuple = this.tupRowInfo[cell.ordinal];\n            var sepPos = [];\n            var sepObjects = {};\n            for (var i = 0; i < uniqueNameColl.length; i++) {\n                if (uniqueNameColl[i] === '~' || uniqueNameColl[i] === ':') {\n                    sepPos.push(i);\n                    sepObjects[i] = uniqueNameColl[i] + uniqueNameColl[i];\n                    i++;\n                }\n            }\n            if (tuple.measurePosition >= (uniqueNameColl.split('::').length - 1)) {\n                if (sepPos[sepPos.length - 2] > -1) {\n                    parentString = uniqueNameColl.substring(0, sepPos[sepPos.length - 2]) + sepObjects[sepPos[sepPos.length - 1]] +\n                        tuple.measureName;\n                }\n                else {\n                    parentString = 'parent';\n                }\n            }\n            else {\n                var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::') ?\n                    uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::');\n                parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n            }\n        }\n        else {\n            var lastPosition = uniqueNameColl.lastIndexOf('~~') > uniqueNameColl.lastIndexOf('::') ?\n                uniqueNameColl.lastIndexOf('~~') : uniqueNameColl.lastIndexOf('::');\n            parentString = lastPosition > -1 ? uniqueNameColl.substring(0, lastPosition) : 'parent';\n        }\n        return parentString;\n    };\n    OlapEngine.prototype.performColumnSpanning = function () {\n        var spanCollection = {};\n        var rowPos = this.rowStartPos - 1;\n        var colMeasureCount = Object.keys(this.colMeasures).length;\n        while (rowPos > -1) {\n            spanCollection[rowPos] = {};\n            var colPos = this.pivotValues[rowPos].length - 1;\n            while (colPos > 0) {\n                spanCollection[rowPos][colPos] = 1;\n                var nextColCell = this.pivotValues[rowPos][colPos + 1];\n                /* tslint:disable-next-line:max-line-length */\n                var nextRowCell = (this.pivotValues[rowPos + 1] && this.rowStartPos - rowPos > 1) ? this.pivotValues[rowPos + 1][colPos] : undefined;\n                var currCell = this.pivotValues[rowPos][colPos];\n                var colflag = false;\n                var rowflag = false;\n                var tupColInfo = this.tupColumnInfo[currCell.ordinal];\n                var isSubTot = tupColInfo.allStartPos > (tupColInfo.typeCollection[0] === '3' ? 1 : 0);\n                if (nextRowCell && nextColCell && ((currCell.memberType === 2 || currCell.level === -1) ?\n                    (nextColCell.actualText === currCell.actualText) :\n                    ((currCell.memberType === 3 && currCell.actualText === nextColCell.actualText) ||\n                        nextColCell.valueSort.levelName === currCell.valueSort.levelName))) {\n                    if (currCell.memberType === 2) {\n                        if (isSubTot ? nextColCell.type === 'sum' : true) {\n                            currCell.colSpan = (nextColCell.colSpan + 1) >\n                                (tupColInfo.measurePosition > rowPos ? colMeasureCount : 0) ? 1 : (nextColCell.colSpan + 1);\n                        }\n                        else {\n                            currCell.colSpan = 1;\n                        }\n                    }\n                    else {\n                        currCell.colSpan = nextColCell.colSpan + 1;\n                        currCell.ordinal = nextColCell.ordinal;\n                    }\n                    colflag = true;\n                }\n                if (currCell.memberType === 2) {\n                    if (isSubTot) {\n                        currCell.type = 'sum';\n                        /* tslint:disable-next-line:max-line-length */\n                        //currCell.formattedText = (this.pivotValues[tupColInfo.allStartPos - 1] as IAxisSet[])[colPos].formattedText + ' Total';\n                        currCell.formattedText = 'Total';\n                        currCell.valueSort.levelName = currCell.valueSort.levelName;\n                        currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                    }\n                    else {\n                        var levelName = 'Grand Total';\n                        if (nextRowCell && colMeasureCount > 0) {\n                            levelName = nextRowCell.memberType === 3 ? ('Grand Total.' + nextRowCell.formattedText) :\n                                nextRowCell.valueSort.levelName;\n                        }\n                        currCell.type = 'grand sum';\n                        currCell.formattedText = 'Grand Total';\n                        currCell.valueSort.levelName = levelName;\n                        currCell.valueSort[levelName.toString()] = 1;\n                    }\n                    currCell.hasChild = false;\n                }\n                else if (currCell.level === -1) {\n                    currCell.type = 'sum';\n                    //currCell.formattedText = currCell.formattedText + ' Total';\n                    currCell.formattedText = 'Total';\n                    currCell.hasChild = false;\n                    currCell.valueSort.levelName = currCell.valueSort.levelName;\n                    currCell.valueSort[currCell.valueSort.levelName.toString()] = 1;\n                }\n                if (nextRowCell) {\n                    if ((currCell.memberType === 2 && nextRowCell.memberType === 2) || nextRowCell.actualText === currCell.actualText) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        /* tslint:disable-next-line:max-line-length */\n                        if (rowPos === 0 || (currCell.memberType === 1 && currCell.level > -1 && nextRowCell.memberType === 1 && nextRowCell.level === -1)) {\n                            currCell.rowSpan = currCell.isDrilled ? 1 : (spanCollection[rowPos + 1][colPos] + 1);\n                            /* tslint:disable-next-line:max-line-length */\n                            nextRowCell.rowSpan = (nextRowCell.isDrilled && nextRowCell.level === -1) ? spanCollection[rowPos + 1][colPos] : nextRowCell.rowSpan;\n                        }\n                        else {\n                            if (currCell.memberType === 3) {\n                                currCell.rowSpan = 1;\n                            }\n                            else {\n                                currCell.rowSpan = -1;\n                            }\n                        }\n                        rowflag = true;\n                    }\n                    else if (currCell.isDrilled && currCell.level === -1 && nextRowCell.memberType === 2) {\n                        spanCollection[rowPos][colPos] = spanCollection[rowPos + 1] ? (spanCollection[rowPos + 1][colPos] + 1) : 1;\n                        currCell.rowSpan = -1;\n                        rowflag = true;\n                    }\n                    else {\n                        currCell.rowSpan = rowPos === 0 ? spanCollection[rowPos][colPos] : -1;\n                        /* tslint:disable-next-line:max-line-length */\n                        nextRowCell.rowSpan = ((nextRowCell.level > -1 && !nextRowCell.isDrilled) || (currCell.memberType !== 2 && nextRowCell.memberType === 2)) ? spanCollection[rowPos + 1][colPos] : 1;\n                    }\n                }\n                else {\n                    currCell.rowSpan = (currCell.level > -1 || this.rowStartPos === 1) ? spanCollection[rowPos][colPos] : -1;\n                }\n                if (!colflag) {\n                    currCell.colSpan = 1;\n                }\n                if (!rowflag) {\n                    spanCollection[rowPos][colPos] = 1;\n                }\n                colPos--;\n            }\n            rowPos--;\n        }\n    };\n    OlapEngine.prototype.frameValues = function (tuples, colLength) {\n        var rowStartPos = this.colDepth;\n        var rowEndPos = this.pivotValues.length;\n        var startRowOrdinal = 0;\n        if (this.customArgs.action === 'down') {\n            var keys = Object.keys(this.onDemandDrillEngine);\n            rowStartPos = Number(keys[0]);\n            rowEndPos = Number(keys[keys.length - 1]) + 1;\n            startRowOrdinal = this.onDemandDrillEngine[rowStartPos][0].ordinal;\n        }\n        var valCollection = {};\n        for (var colPos = 0; colPos < tuples.length; colPos++) {\n            valCollection[Number(tuples[colPos].getAttribute('CellOrdinal'))] = tuples[colPos];\n        }\n        for (var rowPos = rowStartPos; rowPos < rowEndPos; rowPos++) {\n            var columns = this.pivotValues[rowPos];\n            var rowOrdinal = columns[0].ordinal;\n            for (var colPos = 1; colPos < this.pivotValues[0].length; colPos++) {\n                var colOrdinal = this.pivotValues[this.colDepth - 1][colPos].ordinal;\n                var lastColCell = this.pivotValues[this.colDepth - 1][colPos];\n                var measure = columns[0].memberType === 3 ? columns[0].actualText.toString() :\n                    ((this.tupColumnInfo[lastColCell.ordinal] && this.tupColumnInfo[lastColCell.ordinal].measure) ?\n                        this.tupColumnInfo[lastColCell.ordinal].measure.querySelector('UName').textContent :\n                        columns[0].actualText);\n                if (columns[0].type === 'header') {\n                    columns[colPos] = {\n                        axis: 'value',\n                        actualText: this.getUniqueName(measure),\n                        formattedText: '',\n                        value: 0,\n                        colIndex: colPos,\n                        rowIndex: rowPos\n                    };\n                }\n                else {\n                    var valElement = void 0;\n                    var formattedText = void 0;\n                    var value = '0';\n                    var measureName = this.getUniqueName(measure);\n                    var showTotals = true;\n                    if (this.tupRowInfo[rowOrdinal]) {\n                        showTotals = this.tupRowInfo[rowOrdinal].showTotals;\n                    }\n                    else {\n                        showTotals = this.dataSourceSettings.showGrandTotals && this.dataSourceSettings.showRowGrandTotals;\n                    }\n                    valElement = valCollection[(rowOrdinal - startRowOrdinal) * colLength + colOrdinal];\n                    /* tslint:disable:max-line-length */\n                    formattedText = !showTotals ? '' :\n                        ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('FmtValue'))) ?\n                            valElement.querySelector('FmtValue').textContent : this.emptyCellTextContent);\n                    value = !showTotals ? '0' :\n                        ((!isNullOrUndefined(valElement) && !isNullOrUndefined(valElement.querySelector('Value'))) ?\n                            valElement.querySelector('Value').textContent : null);\n                    formattedText = showTotals && !isNullOrUndefined(value) ?\n                        this.getFormattedValue(Number(value), measureName, (formattedText !== '' ? formattedText : value)) :\n                        formattedText;\n                    var isSum = (this.tupColumnInfo[colOrdinal] ? (this.tupColumnInfo[colOrdinal].allCount > 0 ||\n                        this.tupColumnInfo[colOrdinal].drillStartPos > -1) : true) ||\n                        (this.tupRowInfo[rowOrdinal] ? (this.tupRowInfo[rowOrdinal].allCount > 0 ||\n                            this.tupRowInfo[rowOrdinal].drillStartPos > -1) : true);\n                    columns[colPos] = {\n                        axis: 'value',\n                        actualText: measureName,\n                        formattedText: formattedText,\n                        colOrdinal: colOrdinal,\n                        rowOrdinal: rowOrdinal,\n                        columnHeaders: this.tupColumnInfo[colOrdinal] ? this.tupColumnInfo[colOrdinal].captionCollection : '',\n                        rowHeaders: this.tupRowInfo[rowOrdinal] ? this.tupRowInfo[rowOrdinal].captionCollection : '',\n                        value: !isNullOrUndefined(value) ? Number(value) : null,\n                        colIndex: colPos,\n                        rowIndex: rowPos,\n                        isSum: isSum\n                    };\n                }\n                this.valueContent[rowPos - this.rowStartPos][colPos] = columns[colPos];\n            }\n        }\n    };\n    /** hidden */\n    OlapEngine.prototype.getFormattedValue = function (value, fieldName, formattedText) {\n        var formattedValue = formattedText;\n        if (this.formatFields[fieldName] && !isNullOrUndefined(value)) {\n            var formatField = (this.formatFields[fieldName].properties ?\n                this.formatFields[fieldName].properties : this.formatFields[fieldName]);\n            var formatObj = extend({}, formatField, null, true);\n            delete formatObj.name;\n            if (!formatObj.minimumSignificantDigits && formatObj.minimumSignificantDigits < 1) {\n                delete formatObj.minimumSignificantDigits;\n            }\n            if (!formatObj.maximumSignificantDigits && formatObj.maximumSignificantDigits < 1) {\n                delete formatObj.maximumSignificantDigits;\n            }\n            if (formatObj.type) {\n                formattedValue = this.globalize.formatDate(new Date(value.toString()), formatObj);\n            }\n            else {\n                delete formatObj.type;\n                if ((formatObj.format) && !(this.formatRegex.test(formatObj.format))) {\n                    var pattern = formatObj.format.match(this.customRegex);\n                    var integerPart = pattern[6];\n                    formatObj.useGrouping = integerPart.indexOf(',') !== -1;\n                }\n                formattedValue = this.globalize.formatNumber(value, formatObj);\n            }\n        }\n        return formattedValue;\n    };\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    OlapEngine.prototype.getMeasureInfo = function () {\n        var mAxis = 'column';\n        var mIndex;\n        var values = [];\n        for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n            var field = _a[_i];\n            values[values.length] = (field.isCalculatedField ? this.fieldList[field.name].tag : field.name);\n        }\n        if (values.length > 1) {\n            if (this.isMeasureAvail) {\n                var isAvail = false;\n                for (var i = 0, cnt = this.rows.length; i < cnt; i++) {\n                    if (this.rows[i].name.toLowerCase() === '[measures]') {\n                        mAxis = 'row';\n                        mIndex = i;\n                        isAvail = true;\n                        break;\n                    }\n                }\n                if (!isAvail) {\n                    for (var i = 0, cnt = this.columns.length; i < cnt; i++) {\n                        if (this.columns[i].name.toLowerCase() === '[measures]') {\n                            mAxis = 'column';\n                            mIndex = i;\n                            isAvail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                mAxis = this.valueAxis;\n                mIndex = mAxis === 'row' ? this.rows.length - 1 : this.columns.length - 1;\n            }\n            return { measureAxis: mAxis, measureIndex: mIndex, valueInfo: values };\n        }\n        else {\n            return { measureAxis: mAxis, measureIndex: -1, valueInfo: [] };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.frameMeasureOrder = function (measureInfo, axis, tuples, vTuples, cLen) {\n        var orderedTuples = [];\n        var orderedVTuples = [];\n        var orderedIndex = [];\n        var levels = {};\n        var cLevels = [];\n        var measureAxis = measureInfo.measureAxis;\n        var measureIndex = measureInfo.measureIndex;\n        var values = measureInfo.valueInfo;\n        if (measureAxis === axis && values.length > 0) {\n            var levelCollection = {};\n            var uniqueLevels = [];\n            for (var j = 0, lnt = tuples.length; j < lnt; j++) {\n                var node = tuples[j];\n                var members = [].slice.call(node.querySelectorAll('Member'));\n                var level = '';\n                var cLevel = '';\n                var i = 0;\n                while (i < members.length) {\n                    level = level + (level !== '' ? '~~' : '') + members[i].querySelector('UName').textContent;\n                    if (i === measureIndex && measureIndex === 0) {\n                        cLevel = level;\n                    }\n                    else if (i === (measureIndex - 1)) {\n                        cLevel = level;\n                    }\n                    i++;\n                }\n                if (levelCollection[cLevel]) {\n                    levelCollection[cLevel][levelCollection[cLevel].length] = level;\n                }\n                else {\n                    levelCollection[cLevel] = [level];\n                    uniqueLevels[uniqueLevels.length] = cLevel;\n                }\n                levels[level] = { index: j, node: node };\n                cLevels[cLevels.length] = level;\n            }\n            if (cLevels.length > 0) {\n                if (uniqueLevels.length > 0) {\n                    if (measureIndex === 0) {\n                        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                            var name_1 = values_1[_i];\n                            for (var _a = 0, uniqueLevels_1 = uniqueLevels; _a < uniqueLevels_1.length; _a++) {\n                                var key = uniqueLevels_1[_a];\n                                if (key === name_1) {\n                                    for (var _b = 0, _c = levelCollection[key]; _b < _c.length; _b++) {\n                                        var level = _c[_b];\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (var _d = 0, uniqueLevels_2 = uniqueLevels; _d < uniqueLevels_2.length; _d++) {\n                            var key = uniqueLevels_2[_d];\n                            for (var _e = 0, values_2 = values; _e < values_2.length; _e++) {\n                                var name_2 = values_2[_e];\n                                for (var _f = 0, _g = levelCollection[key]; _f < _g.length; _f++) {\n                                    var level = _g[_f];\n                                    var levelInfo = level.split('~~');\n                                    if (levelInfo[measureIndex] === name_2) {\n                                        orderedIndex[orderedIndex.length] = levels[level].index;\n                                        orderedTuples[orderedTuples.length] = levels[level].node;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (vTuples.length > 0) {\n                var valueIndex = [];\n                var vOrdinalIndex = [];\n                var len = 0;\n                var cRow = 0;\n                for (var j = 0, cnt = vTuples.length; j < cnt; j++) {\n                    if (len > (cLen - 1)) {\n                        cRow++;\n                        len = 0;\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    else {\n                        if (!valueIndex[cRow]) {\n                            valueIndex[cRow] = [];\n                        }\n                        valueIndex[cRow][len] = j;\n                        len++;\n                    }\n                    vOrdinalIndex[vOrdinalIndex.length] = Number(vTuples[j].getAttribute('CellOrdinal'));\n                }\n                if (measureAxis === 'column') {\n                    if (valueIndex.length > 0 && valueIndex[0].length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex.length) {\n                                var index = (j * cLen) + i;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[j][orderedIndex[i]])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[index] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (valueIndex.length === orderedIndex.length) {\n                        for (var i = 0, cnt = orderedIndex.length; i < cnt; i++) {\n                            var j = 0;\n                            while (j < valueIndex[orderedIndex[i]].length) {\n                                var index = (i * cLen) + j;\n                                var ordinalValue = vOrdinalIndex[index].toString();\n                                var tuple = vTuples[Number(valueIndex[orderedIndex[i]][j])];\n                                tuple.setAttribute('CellOrdinal', ordinalValue.toString());\n                                orderedVTuples[orderedVTuples.length] = tuple;\n                                j++;\n                            }\n                        }\n                    }\n                }\n            }\n            return { orderedHeaderTuples: orderedTuples, orderedValueTuples: orderedVTuples };\n        }\n        else {\n            return { orderedHeaderTuples: tuples, orderedValueTuples: vTuples };\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    OlapEngine.prototype.getDrilledSets = function (uNameCollection, currentCell, fieldPos, axis) {\n        var levels = [];\n        var memberName = currentCell.actualText.toString();\n        var tupCollection = axis === 'row' ? this.tupRowInfo : this.tupColumnInfo;\n        var currTuple = tupCollection[currentCell.ordinal];\n        var measurePos = tupCollection[0].typeCollection.indexOf('3');\n        var allStartPos = measurePos === 0 ? 1 : 0;\n        var tupPos = 0;\n        var isWithoutAllMember = tupCollection[0].typeCollection[fieldPos] === '1';\n        while (tupPos < tupCollection.length) {\n            /* tslint:disable-next-line:max-line-length */\n            if (isNullOrUndefined(tupCollection[tupPos].allStartPos) || tupCollection[tupPos].allStartPos > allStartPos) {\n                levels[levels.length] = tupCollection[tupPos].uNameCollection;\n            }\n            tupPos++;\n        }\n        var memberArray = uNameCollection.split('::');\n        var joinArray = [];\n        for (var memPos = 0; memPos <= fieldPos; memPos++) {\n            if ((isWithoutAllMember || this.isPaging) && memPos === fieldPos) {\n                var splitLevels = memberArray[memPos].split('~~');\n                var drillLevel = splitLevels.indexOf(memberName);\n                var cropLevels = [];\n                for (var lPos = 0; lPos <= drillLevel; lPos++) {\n                    cropLevels.push(splitLevels[lPos]);\n                }\n                joinArray[joinArray.length] = cropLevels.length > 0 ? cropLevels.join('~~') : memberArray[memPos];\n            }\n            else {\n                joinArray[joinArray.length] = memberArray[memPos];\n            }\n        }\n        uNameCollection = joinArray.join('::');\n        var childSets = [];\n        var memberObj = {};\n        for (var _i = 0, levels_1 = levels; _i < levels_1.length; _i++) {\n            var item = levels_1[_i];\n            if (item.indexOf(uNameCollection) === 0) {\n                childSets.push(item);\n                if (this.isPaging) {\n                    var drillField = item.split('::')[fieldPos];\n                    var drillFieldSep = drillField.split('~~');\n                    for (var fPos = drillFieldSep.indexOf(memberName); fPos < drillFieldSep.length; fPos++) {\n                        memberObj[drillFieldSep[fPos]] = drillFieldSep[fPos];\n                    }\n                }\n            }\n        }\n        if (this.isPaging) {\n            var fieldSep = currTuple.uNameCollection.split('::');\n            var cropArray = [];\n            for (var fPos = 0; fPos < fieldSep.length; fPos++) {\n                if (fPos !== fieldPos) {\n                    cropArray[fPos] = fieldSep[fPos];\n                }\n            }\n            var drillFieldSep = Object.keys(memberObj);\n            for (var fPos = 0; fPos < drillFieldSep.length; fPos++) {\n                cropArray[fieldPos] = drillFieldSep[fPos];\n                childSets.push(cropArray.join('::'));\n            }\n        }\n        var drillSets = {};\n        for (var _a = 0, childSets_1 = childSets; _a < childSets_1.length; _a++) {\n            var level = childSets_1[_a];\n            var fields = level.split('::');\n            var set = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                set = set + (set !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            drillSets[set] = set;\n        }\n        return drillSets;\n    };\n    OlapEngine.prototype.updateDrilledInfo = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.drilledMembers = dataSourceSettings.drilledMembers ? this.updateDrilledItems(dataSourceSettings.drilledMembers) : [];\n        // MDXQuery.getCellSets(this.dataSourceSettings as IDataOptions, this);\n        this.generateGridData(dataSourceSettings);\n    };\n    OlapEngine.prototype.updateCalcFields = function (dataSourceSettings, lastcalcInfo) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.calculatedFieldSettings = dataSourceSettings.calculatedFieldSettings ? dataSourceSettings.calculatedFieldSettings : [];\n        this.getAxisFields();\n        this.updateFieldlist();\n        this.loadCalculatedMemberElements(this.calculatedFieldSettings);\n        if (this.dataFields[lastcalcInfo.name]) {\n            this.generateGridData(dataSourceSettings);\n        }\n        else {\n            MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        }\n    };\n    OlapEngine.prototype.onSort = function (dataSourceSettings) {\n        this.dataSourceSettings = dataSourceSettings;\n        this.sortSettings = dataSourceSettings.sortSettings ? dataSourceSettings.sortSettings : [];\n        this.getAxisFields();\n        this.frameSortObject();\n        this.updateFieldlist();\n        if (this.xmlaCellSet.length > 0 && this.xmlDoc) {\n            this.generateEngine(this.xmlDoc, this.request, this.customArgs);\n        }\n        else {\n            this.generateGridData(dataSourceSettings);\n        }\n    };\n    OlapEngine.prototype.updateFieldlist = function (isInit) {\n        var i = 0;\n        while (i < this.savedFieldListData.length) {\n            var fieldName = this.savedFieldListData[i].id;\n            var parentID = this.savedFieldListData[i].pid;\n            // let aggregateType: string = this.getAggregateType(fieldName);\n            // this.savedFieldListData[i].aggregateType = aggregateType;\n            if (this.savedFieldList[fieldName]) {\n                var sortOrder = (this.enableSort ? this.sortObject[fieldName] ? this.sortObject[fieldName] : 'Ascending' : 'None');\n                this.savedFieldList[fieldName].isSelected = false;\n                this.savedFieldList[fieldName].isExcelFilter = false;\n                // this.savedFieldList[fieldName].aggregateType = aggregateType;\n                this.savedFieldList[fieldName].sort = sortOrder;\n                this.savedFieldListData[i].sort = sortOrder;\n                if (isInit) {\n                    this.savedFieldList[fieldName].filter = [];\n                    this.savedFieldList[fieldName].actualFilter = [];\n                }\n            }\n            if (this.dataFields[fieldName] && this.savedFieldList[fieldName] && this.selectedItems.indexOf(fieldName) > -1) {\n                this.savedFieldList[fieldName].isSelected = true;\n                this.savedFieldListData[i].isSelected = true;\n            }\n            else {\n                if (this.dataFields[parentID] && this.savedFieldList[parentID] && this.selectedItems.indexOf(parentID) > -1) {\n                    this.savedFieldListData[i].isSelected = true;\n                }\n                else {\n                    this.savedFieldListData[i].isSelected = false;\n                }\n            }\n            if ((this.savedFieldList[fieldName] && this.savedFieldList[fieldName].isCalculatedField) ||\n                fieldName.toLowerCase() === '[calculated members].[_0]') {\n                var isAvail = false;\n                for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n                    var field = _a[_i];\n                    if (fieldName === field.name) {\n                        var expression = field.formula;\n                        var formatString = field.formatString;\n                        this.savedFieldListData[i].formula = expression;\n                        this.savedFieldListData[i].formatString = formatString;\n                        this.savedFieldListData[i].parentHierarchy = (expression.toLowerCase().indexOf('measure') > -1 ?\n                            undefined : field.hierarchyUniqueName);\n                        this.savedFieldList[fieldName].formula = expression;\n                        this.savedFieldList[fieldName].formatString = formatString;\n                        this.savedFieldList[fieldName].parentHierarchy = this.savedFieldListData[i].parentHierarchy;\n                        isAvail = true;\n                    }\n                }\n                if (!isAvail || (fieldName.toLowerCase() === '[calculated members].[_0]' &&\n                    this.calculatedFieldSettings.length === 0)) {\n                    this.savedFieldListData.splice(i, 1);\n                    i--;\n                    if (this.savedFieldList[fieldName]) {\n                        delete this.savedFieldList[fieldName];\n                    }\n                }\n            }\n            i++;\n        }\n        this.fieldList = this.savedFieldList;\n        this.fieldListData = this.savedFieldListData;\n    };\n    OlapEngine.prototype.updateFieldlistData = function (name, isSelect) {\n        for (var _i = 0, _a = this.fieldListData; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === name) {\n                item.isSelected = isSelect ? true : false;\n                break;\n            }\n        }\n    };\n    OlapEngine.prototype.getFormattedFields = function (formats) {\n        this.formatFields = {};\n        var cnt = formats.length;\n        while (cnt--) {\n            this.formatFields[formats[cnt].name] = formats[cnt];\n        }\n    };\n    OlapEngine.prototype.getFieldList = function (dataSourceSettings) {\n        var args = {\n            catalog: dataSourceSettings.catalog,\n            cube: dataSourceSettings.cube,\n            url: dataSourceSettings.url,\n            LCID: dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_HIERARCHIES'\n        };\n        this.getTreeData(args, this.getFieldListItems.bind(this), { dataSourceSettings: dataSourceSettings, action: 'loadFieldElements' });\n    };\n    OlapEngine.prototype.getTreeData = function (args, successMethod, customArgs) {\n        var connectionString = this.getConnectionInfo(args.url, args.LCID);\n        /* tslint:disable-next-line:max-line-length */\n        var soapMessage = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"><Header/><Body><Discover xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><RequestType>' +\n            args.request + '</RequestType><Restrictions><RestrictionList><CATALOG_NAME>' + args.catalog +\n            /* tslint:disable-next-line:max-line-length */\n            '</CATALOG_NAME><CUBE_NAME>' + args.cube + '</CUBE_NAME></RestrictionList></Restrictions><Properties><PropertyList><Catalog>' + args.catalog +\n            /* tslint:disable-next-line:max-line-length */\n            '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList></Properties></Discover></Body></Envelope>';\n        this.doAjaxPost('POST', connectionString.url, soapMessage, successMethod, customArgs);\n    };\n    OlapEngine.prototype.getAxisFields = function () {\n        this.rows = this.dataSourceSettings.rows ? this.dataSourceSettings.rows : [];\n        this.columns = this.dataSourceSettings.columns ? this.dataSourceSettings.columns : [];\n        this.filters = this.dataSourceSettings.filters ? this.dataSourceSettings.filters : [];\n        this.values = this.dataSourceSettings.values ? this.dataSourceSettings.values : [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.values, this.filters);\n        var len = dataFields.length;\n        while (len--) {\n            this.dataFields[dataFields[len].name] = dataFields[len];\n            if (dataFields[len].name.toLowerCase() === '[measures]') {\n                this.isMeasureAvail = true;\n            }\n            else {\n                this.selectedItems.push(dataFields[len].name);\n            }\n        }\n        if (!this.isMeasureAvail && this.values.length > 0) {\n            var measureField = { name: '[Measures]', caption: 'Measures' };\n            if (this.valueAxis === 'row') {\n                this.rows.push(measureField);\n            }\n            else {\n                this.columns.push(measureField);\n            }\n            this.isMeasureAvail = true;\n        }\n    };\n    OlapEngine.prototype.getAggregateType = function (fieldName, aggregateType) {\n        var type;\n        switch (aggregateType) {\n            case '1':\n                type = 'Sum';\n                break;\n            case '2':\n                type = 'Count';\n                break;\n            case '3':\n                type = 'Min';\n                break;\n            case '4':\n                type = 'Max';\n                break;\n            case '5':\n                type = 'Avg';\n                break;\n            case '8':\n                type = 'DistinctCount';\n                break;\n            case '127':\n                type = 'CalculatedField';\n                break;\n            default:\n                type = undefined;\n                break;\n        }\n        // if (this.dataFields[fieldName]) {\n        //     return this.dataFields[fieldName].type;\n        // } else {\n        //     return undefined;\n        // }\n        if (type) {\n            return type;\n        }\n        else {\n            return undefined;\n        }\n    };\n    OlapEngine.prototype.getUniqueName = function (name) {\n        var uName = name;\n        for (var _i = 0, _a = this.calculatedFieldSettings; _i < _a.length; _i++) {\n            var item = _a[_i];\n            var expression = item.formula;\n            var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' : item.hierarchyUniqueName + '.');\n            var uniqueName = prefixName + '[' + item.name + ']';\n            if (name === uniqueName) {\n                uName = item.name;\n                break;\n            }\n        }\n        return uName;\n    };\n    OlapEngine.prototype.updateFilterItems = function (filterItems) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var filter = filterItems_1[_i];\n            if (filter.type === 'Include' && this.allowMemberFilter) {\n                var members = this.fieldList[filter.name].members;\n                var isMembersAvail = (members && Object.keys(members).length > 0);\n                this.fieldList[filter.name].actualFilter = filter.items.slice();\n                var selectedElements = extend([], filter.items, null, true);\n                if (isMembersAvail) {\n                    var i = 0;\n                    while (i < selectedElements.length) {\n                        var parentNodes = [];\n                        parentNodes = this.getParentNode(selectedElements[i], members, parentNodes);\n                        for (var _a = 0, parentNodes_1 = parentNodes; _a < parentNodes_1.length; _a++) {\n                            var node = parentNodes_1[_a];\n                            var index = PivotUtil.inArray(node, filter.items);\n                            if (index !== -1) {\n                                filter.items.splice(index, 1);\n                            }\n                        }\n                        i++;\n                    }\n                }\n                var currentItems = [];\n                for (var _b = 0, _c = filter.items; _b < _c.length; _b++) {\n                    var selectedElement = _c[_b];\n                    // currentItems.push(selectedElement.replace(/\\&/g, '&amp;'));\n                    currentItems.push(selectedElement);\n                    if (isMembersAvail) {\n                        this.fieldList[filter.name].filter.push(members[selectedElement].caption);\n                    }\n                    else {\n                        this.fieldList[filter.name].filter.push(selectedElement);\n                    }\n                }\n                this.filterMembers[filter.name] = currentItems;\n                this.fieldList[filter.name].isExcelFilter = false;\n            }\n            else if ((this.allowValueFilter || this.allowLabelFilter) &&\n                ['Date', 'Label', 'Number', 'Value'].indexOf(filter.type) !== -1) {\n                for (var _d = 0, dataFields_1 = dataFields; _d < dataFields_1.length; _d++) {\n                    var item = dataFields_1[_d];\n                    if (item.name === filter.name) {\n                        var filterMembers = this.filterMembers[filter.name];\n                        if (filterMembers && (typeof filterMembers[0] === 'object' && filterMembers[0].type === filter.type)) {\n                            filterMembers[filterMembers.length] = filter;\n                        }\n                        else {\n                            this.filterMembers[filter.name] = [filter];\n                        }\n                        this.fieldList[filter.name].isExcelFilter = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    OlapEngine.prototype.getParentNode = function (name, members, items) {\n        if (members[name].parent && name !== members[name].parent) {\n            var parentItem = members[name].parent;\n            items.push(parentItem);\n            this.getParentNode(parentItem, members, items);\n        }\n        return items;\n    };\n    OlapEngine.prototype.updateDrilledItems = function (drilledMembers) {\n        var drilledItems = [];\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns);\n        for (var _i = 0, drilledMembers_1 = drilledMembers; _i < drilledMembers_1.length; _i++) {\n            var item = drilledMembers_1[_i];\n            for (var _a = 0, dataFields_2 = dataFields; _a < dataFields_2.length; _a++) {\n                var field = dataFields_2[_a];\n                if (item.name === field.name) {\n                    drilledItems.push(item);\n                    break;\n                }\n            }\n        }\n        return drilledItems;\n    };\n    // private updateAllMembers(dataSourceSettings: IDataOptions, slicers: IFieldOptions[]): void {\n    //     let query: string = '';\n    //     for (let field of slicers) {\n    //         let fieldList: IOlapField = this.fieldList[field.name];\n    //         if (!(fieldList && fieldList.hasAllMember && fieldList.allMember)) {\n    //             query = query + (query !== '' ? ' * ' : '') + '{' + field.name + '}';\n    //         } else {\n    //             continue;\n    //         }\n    //     }\n    //     if (query !== '') {\n    //         this.getAllMember(dataSourceSettings, query);\n    //     } else {\n    //         return;\n    //     }\n    // }\n    // private getAllMember(dataSourceSettings: IDataOptions, query: string): void {\n    //     let dimProp: string = 'DIMENSION PROPERTIES HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY';\n    //     let mdxQuery: string = 'SELECT (' + query + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n    //     let xmla: string = this.getSoapMsg(dataSourceSettings, mdxQuery);\n    //     let connectionString: ConnectionInfo = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n    //     /* tslint:disable-next-line:max-line-length */\n    //     this.doAjaxPost('POST', connectionString.url, xmla, this.generateAllMembers.bind(this), \n    // { dataSourceSettings: dataSourceSettings, action: 'fetchAllMembers' });\n    // }\n    /**\n     * @hidden\n     */\n    OlapEngine.prototype.getDrillThroughData = function (pivotValue, maxRows) {\n        var column = this.tupColumnInfo[pivotValue.colOrdinal] &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection &&\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection !== '' ?\n            this.tupColumnInfo[pivotValue.colOrdinal].uNameCollection.split('::') : [];\n        var row = this.tupRowInfo[pivotValue.rowOrdinal] &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection &&\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection !== '' ?\n            this.tupRowInfo[pivotValue.rowOrdinal].uNameCollection.split('::') : [];\n        var columnQuery = '';\n        var rowQuery = '';\n        for (var i = 0; i < column.length; i++) {\n            columnQuery = (columnQuery.length > 0 ? (columnQuery + ',') : '') + (column[i].split('~~').length > 1 ?\n                column[i].split('~~')[column[i].split('~~').length - 1] : column[i]);\n        }\n        for (var i = 0; i < row.length; i++) {\n            rowQuery = (rowQuery.length > 0 ? (rowQuery + ',') : '') + (row[i].split('~~').length > 1 ?\n                row[i].split('~~')[row[i].split('~~').length - 1] : row[i]);\n        }\n        var drillQuery = 'DRILLTHROUGH MAXROWS ' + maxRows + ' Select(' + (columnQuery.length > 0 ? columnQuery : '') +\n            (columnQuery.length > 0 && rowQuery.length > 0 ? ',' : '') + (rowQuery.length > 0 ? rowQuery : '') + ') on 0 from [' +\n            this.dataSourceSettings.cube + ']';\n        drillQuery = drillQuery.replace(/&/g, '&amp;');\n        var xmla = this.getSoapMsg(this.dataSourceSettings, drillQuery);\n        var connectionString = this.getConnectionInfo(this.dataSourceSettings.url, this.dataSourceSettings.localeIdentifier);\n        this.doAjaxPost('POST', connectionString.url, xmla, this.drillThroughSuccess.bind(this), { dataSourceSettings: this.dataSourceSettings, action: 'drillThrough' });\n    };\n    OlapEngine.prototype.drillThroughSuccess = function (xmlDoc) {\n        var tag = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var gridJSON = '';\n        if (tag.length > 0) {\n            var json = [];\n            var i = 0;\n            while (i < tag.length) {\n                var child = [].slice.call(tag[i].children);\n                var j = 0;\n                while (j < child.length) {\n                    json.push('\"' + child[j].tagName + '\"' + ':' + '\"' + child[j].textContent + '\"');\n                    j++;\n                }\n                i++;\n            }\n            var value = json[0];\n            var k = 0;\n            while (k < json.length) {\n                if (Object.keys(JSON.parse('[{' + json[k] + '}]')[0])[0] === Object.keys(JSON.parse('[{' + value + '}]')[0])[0]) {\n                    gridJSON += gridJSON === '' ? '[{' + json[k] : '}, {' + json[k];\n                    k++;\n                    continue;\n                }\n                gridJSON += ',' + json[k];\n                k++;\n            }\n            gridJSON += '}]';\n        }\n        else {\n            var tag_1 = [].slice.call(xmlDoc.querySelectorAll('faultstring'));\n            var i = 0;\n            while (i < tag_1.length) {\n                gridJSON += tag_1[i].textContent;\n                i++;\n            }\n        }\n        this.gridJSON = gridJSON;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.getFilterMembers = function (dataSourceSettings, fieldName, levelCount, isSearchFilter, loadLevelMember) {\n        // let dimProp: string = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE';\n        var levels = this.fieldList[fieldName].levels;\n        var cLevel = this.fieldList[fieldName].levelCount;\n        var filterQuery;\n        if (loadLevelMember) {\n            filterQuery = 'Descendants({' + levels[cLevel].id + '}, ' +\n                levels[levelCount - 1].id + ', ' + ((levelCount - cLevel) === 1 ? 'SELF)' : 'SELF_AND_BEFORE)');\n        }\n        else {\n            filterQuery = fieldName + ', Descendants({' + levels[0].id + '}, ' + levels[levelCount - 1].id + ', SELF_AND_BEFORE)';\n        }\n        this.fieldList[fieldName].levelCount = levelCount;\n        if (!isSearchFilter) {\n            this.getMembers(dataSourceSettings, fieldName, false, filterQuery, loadLevelMember);\n        }\n        return filterQuery;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.getMembers = function (dataSourceSettings, fieldName, isAllFilterData, filterParentQuery, loadLevelMember) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        /* tslint:disable-next-line:max-line-length */\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery;\n        var hasAllMember = this.fieldList[fieldName].hasAllMember;\n        var hierarchy = (hasAllMember ? fieldName : fieldName + '.LEVELS(0)').replace(/\\&/g, '&amp;');\n        if (!isAllFilterData) {\n            mdxQuery = 'SELECT ({' + (filterParentQuery ?\n                filterParentQuery : (hasAllMember ? hierarchy + ', ' + hierarchy + '.CHILDREN' : hierarchy + '.ALLMEMBERS')) + '})' +\n                dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        else {\n            mdxQuery = 'SELECT ({' + hierarchy + '.ALLMEMBERS})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        }\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (!loadLevelMember) {\n            this.fieldList[fieldName].filterMembers = [];\n            this.fieldList[fieldName].childMembers = [];\n            this.fieldList[fieldName].searchMembers = [];\n            // this.fieldList[fieldName].isHierarchy = true;\n            this.fieldList[fieldName].members = {};\n            this.fieldList[fieldName].currrentMembers = {};\n            /* tslint:disable-next-line:max-line-length */\n        }\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, loadLevelMembers: loadLevelMember, action: 'fetchMembers' });\n    };\n    OlapEngine.prototype.getChildMembers = function (dataSourceSettings, memberUQName, fieldName) {\n        // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n        /* tslint:disable-next-line:max-line-length */\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        /* tslint:disable-next-line:max-line-length */\n        // var mdxQuery = 'SELECT SUBSET({' + memberUQName + '.CHILDREN}, 0, 5000)' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        /* tslint:disable-next-line:max-line-length */\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.CHILDREN})' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        /* tslint:disable-next-line:max-line-length */\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchChildMembers' });\n    };\n    OlapEngine.prototype.getCalcChildMembers = function (dataSourceSettings, memberUQName) {\n        this.calcChildMembers = [];\n        /* tslint:disable-next-line:max-line-length */\n        var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n        var mdxQuery = 'SELECT ({' + memberUQName.replace(/\\&/g, '&amp;') + '.MEMBERS})' +\n            dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n        /* tslint:disable-next-line:max-line-length */\n        this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, action: 'fetchCalcChildMembers' });\n    };\n    /* tslint:disable-next-line:max-line-length */\n    OlapEngine.prototype.getSearchMembers = function (dataSourceSettings, fieldName, searchString, maxNodeLimit, isAllFilterData, levelCount) {\n        this.fieldList[fieldName].searchMembers = [];\n        this.fieldList[fieldName].currrentMembers = {};\n        if (searchString !== '') {\n            // dimProp = \"dimension properties CHILDREN_CARDINALITY, MEMBER_TYPE\";\n            /* tslint:disable-next-line:max-line-length */\n            var dimProp = 'DIMENSION PROPERTIES PARENT_UNIQUE_NAME, HIERARCHY_UNIQUE_NAME, CHILDREN_CARDINALITY, MEMBER_TYPE, MEMBER_VALUE';\n            var hierarchy = fieldName.replace(/\\&/g, '&amp;');\n            var mdxQuery = 'WITH SET [SearchMembersSet] AS &#39;FILTER(' + (isAllFilterData ? hierarchy + '.ALLMEMBERS, ' :\n                '{' + (levelCount > 1 ? this.getFilterMembers(dataSourceSettings, fieldName, levelCount, true) :\n                    hierarchy + ', ' + hierarchy + '.CHILDREN') + '},') +\n                '(INSTR(1, ' + hierarchy + '.CurrentMember.member_caption, \"' + searchString + '\") > 0))&#39;' +\n                'SET [SearchParentsSet] AS &#39;GENERATE([SearchMembersSet], ASCENDANTS([SearchMembersSet].Current))&#39;' +\n                'SET [SearchSet] AS &#39;HIERARCHIZE(DISTINCT({[SearchMembersSet], [SearchParentsSet]}))&#39;' +\n                'SELECT SUBSET([SearchSet], 0, ' + maxNodeLimit + ')' + dimProp + ' ON 0 FROM [' + dataSourceSettings.cube + ']';\n            var xmla = this.getSoapMsg(dataSourceSettings, mdxQuery);\n            var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n            /* tslint:disable-next-line:max-line-length */\n            this.doAjaxPost('POST', connectionString.url, xmla, this.generateMembers.bind(this), { dataSourceSettings: dataSourceSettings, fieldName: fieldName, action: 'fetchSearchMembers' });\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.generateMembers = function (xmlDoc, request, customArgs) {\n        var fields = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Tuple'));\n        var fieldName = customArgs.fieldName;\n        var allMember;\n        var filterMembers = {};\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var field = fields_1[_i];\n            // let hierarchyUqName: string = fields[0].querySelector('Member HIERARCHY_UNIQUE_NAME').textContent;\n            var member = field.querySelector('Member');\n            var memberType = member.querySelector('MEMBER_TYPE').textContent;\n            var memberUqName = member.querySelector('UName').textContent;\n            var caption = member.querySelector('Caption').textContent;\n            var nodeAttr = { 'data-fieldName': fieldName };\n            /* tslint:disable-next-line:max-line-length */\n            var parentUqName = member.querySelector('PARENT_UNIQUE_NAME') ? member.querySelector('PARENT_UNIQUE_NAME').textContent : '';\n            if (parentUqName === '' && memberType === '1') {\n                filterMembers = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                    isSelected: false,\n                    id: memberUqName,\n                    tag: memberUqName,\n                    name: caption,\n                    caption: caption,\n                    htmlAttributes: nodeAttr\n                };\n                if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].filterMembers.push(filterMembers);\n                    this.fieldList[fieldName].childMembers.push(filterMembers);\n                }\n                else if (customArgs.action === 'fetchSearchMembers') {\n                    /* tslint:disable-next-line:max-line-length */\n                    this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    this.fieldList[fieldName].searchMembers.push(filterMembers);\n                    filterMembers.expanded = true;\n                }\n                else {\n                    this.calcChildMembers.push(filterMembers);\n                }\n            }\n            else if (parentUqName !== '' && memberType === '1') {\n                if (parentUqName === allMember && memberType === '1') {\n                    filterMembers = {\n                        /* tslint:disable-next-line:max-line-length */\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        id: memberUqName,\n                        name: caption,\n                        isSelected: false,\n                        caption: caption,\n                        htmlAttributes: nodeAttr,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        filterMembers.expanded = true;\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: undefined, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n                else {\n                    if (customArgs.action === 'fetchMembers' && this.fieldList[fieldName].members[memberUqName]) {\n                        continue;\n                    }\n                    /* tslint:disable-next-line:max-line-length */\n                    var nodeSelect = (customArgs.loadLevelMembers ? this.fieldList[fieldName].members[parentUqName].isSelected : false);\n                    filterMembers = {\n                        /* tslint:disable-next-line:max-line-length */\n                        hasChildren: (field.querySelector('CHILDREN_CARDINALITY') ? (field.querySelector('CHILDREN_CARDINALITY').textContent !== '0') ? true : false : false),\n                        htmlAttributes: nodeAttr,\n                        isSelected: false,\n                        id: memberUqName,\n                        pid: parentUqName,\n                        name: caption,\n                        caption: caption,\n                        tag: memberUqName\n                    };\n                    if (customArgs.action === 'fetchMembers' || customArgs.action === 'fetchChildMembers') {\n                        this.fieldList[fieldName].isHierarchy = false;\n                        this.fieldList[fieldName].filterMembers.push(filterMembers);\n                        this.fieldList[fieldName].childMembers.push(filterMembers);\n                        /* tslint:disable-next-line:max-line-length */\n                        this.fieldList[fieldName].members[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: nodeSelect };\n                    }\n                    else if (customArgs.action === 'fetchSearchMembers') {\n                        this.fieldList[fieldName].searchMembers.push(filterMembers);\n                        filterMembers.expanded = true;\n                        /* tslint:disable-next-line:max-line-length */\n                        this.fieldList[fieldName].currrentMembers[memberUqName] = { name: memberUqName, caption: caption, parent: parentUqName, isNodeExpand: false, isSelected: false };\n                    }\n                    else {\n                        this.calcChildMembers.push(filterMembers);\n                    }\n                }\n            }\n            else if (memberType === '2') {\n                allMember = memberUqName;\n            }\n        }\n    };\n    // private generateAllMembers(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let members: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('Axis[name=\"Axis0\"] Member'));\n    //     for (let member of members) {\n    //         let caption: string = member.querySelector('Caption').textContent;\n    //         let fieldName: string = member.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n    //         this.fieldList[fieldName].allMember = caption;\n    //     }\n    // }\n    OlapEngine.prototype.getFieldListItems = function (xmlDoc, request, customArgs) {\n        var fieldDate = {};\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_2 = fields; _i < fields_2.length; _i++) {\n            var field = fields_2[_i];\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            hierarchyElements.push({\n                pid: field.querySelector('DIMENSION_UNIQUE_NAME').textContent,\n                id: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                tag: field.querySelector('HIERARCHY_UNIQUE_NAME').textContent,\n                hasAllMember: isAllMemberAvail,\n                allMember: (isAllMemberAvail ? field.querySelectorAll('ALL_MEMBER')[0].textContent : undefined),\n                // aggregateType: this.getAggregateType(field.querySelector('HIERARCHY_UNIQUE_NAME').textContent),\n                type: 'string'\n            });\n        }\n        fieldDate = {\n            hierarchy: hierarchyElements,\n            hierarchySuccess: xmlDoc,\n            measures: []\n        };\n        this.fieldListObj = fieldDate;\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_DIMENSIONS'\n        };\n        this.getTreeData(args, this.loadDimensionElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadCalculatedMemberElements = function (calcMembers) {\n        if (calcMembers.length > 0) {\n            var fieldListElements = this.fieldListData;\n            // let calcElements: IOlapField[] = [];\n            var calcObj = {\n                hasChildren: true,\n                isSelected: false,\n                id: '[Calculated Members].[_0]',\n                name: '[Calculated Members].[_0]',\n                caption: 'Calculated Members',\n                spriteCssClass: 'e-calcMemberGroupCDB' + ' ' + cls.ICON,\n                tag: '[Calculated Members].[_0]',\n                //aggregateType: this.getAggregateType(dimensionName),\n                type: 'string'\n            };\n            if (fieldListElements.length > 0 && fieldListElements[0].id.toLowerCase() === '[measures]') {\n                fieldListElements.splice(0, 0, calcObj);\n            }\n            for (var _i = 0, calcMembers_1 = calcMembers; _i < calcMembers_1.length; _i++) {\n                var field = calcMembers_1[_i];\n                if (!this.fieldList[field.name]) {\n                    var expression = field.formula;\n                    var prefixName = (expression.toLowerCase().indexOf('measure') > -1 ? '[Measures].' :\n                        field.hierarchyUniqueName + '.');\n                    var uniqueName = prefixName + '[' + field.name + ']';\n                    var caption = (this.dataFields[field.name] && this.dataFields[field.name].caption ?\n                        this.dataFields[field.name].caption : field.name);\n                    var formatString = field.formatString;\n                    var calcField = {\n                        hasChildren: false,\n                        isSelected: false,\n                        id: field.name,\n                        pid: '[Calculated Members].[_0]',\n                        name: field.name,\n                        caption: caption,\n                        spriteCssClass: 'e-calc-member' + ' ' + (expression.toLowerCase().indexOf('measure') > -1 ?\n                            'e-calc-measure-icon' : 'e-calc-dimension-icon') + ' ' + cls.ICON,\n                        tag: uniqueName,\n                        formula: expression,\n                        formatString: formatString,\n                        aggregateType: undefined,\n                        type: 'CalculatedField',\n                        filter: [],\n                        dateMember: [],\n                        sort: 'Ascending',\n                        actualFilter: [],\n                        filterMembers: [],\n                        childMembers: [],\n                        searchMembers: [],\n                        members: {},\n                        currrentMembers: {},\n                        isHierarchy: true,\n                        isExcelFilter: false,\n                        isCalculatedField: true,\n                        fieldType: (expression.toLowerCase().indexOf('measure') > -1 ? 'Measure' : 'Dimension'),\n                        parentHierarchy: (expression.toLowerCase().indexOf('measure') > -1 ? undefined : field.hierarchyUniqueName),\n                    };\n                    fieldListElements.push(calcField);\n                    this.fieldList[calcField.id] = calcField;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    OlapEngine.prototype.loadDimensionElements = function (xmlDoc, request, customArgs) {\n        var hierarchyElements = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        var measure = {};\n        for (var _i = 0, fields_3 = fields; _i < fields_3.length; _i++) {\n            var field = fields_3[_i];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var dimensionCaption = field.querySelector('DIMENSION_CAPTION').textContent;\n            if (dimensionName.toLowerCase().indexOf('[measure') >= 0) {\n                measure = {\n                    hasChildren: true,\n                    isSelected: false,\n                    id: dimensionName,\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: dimensionName.toLowerCase() === '[measures]' ? 'e-measureGroupCDB-icon' + ' ' + cls.ICON : 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                };\n            }\n            else if (isNullOrUndefined(fields[0].querySelector('HIERARCHY_CAPTION'))) {\n                hierarchyElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    id: (this.isMondrian ? dimensionName + '~#^Dim' : dimensionName),\n                    name: dimensionName,\n                    caption: dimensionCaption,\n                    spriteCssClass: 'e-dimensionCDB-icon' + ' ' + cls.ICON,\n                    tag: dimensionName,\n                    defaultHierarchy: field.querySelector('DEFAULT_HIERARCHY').textContent,\n                    // aggregateType: this.getAggregateType(dimensionName),\n                    type: 'string'\n                });\n            }\n        }\n        hierarchyElements.splice(0, 0, measure);\n        this.fieldListData = hierarchyElements;\n        // customArgs.hierarchy = this.fieldListData;\n        // customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        // this.loadHierarchyElements(customArgs);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_SETS'\n        };\n        this.getTreeData(args, this.loadNamedSetElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadNamedSetElements = function (xmlDoc, request, customArgs) {\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var dimensionElements = this.fieldListData;\n        var reportElement = [];\n        for (var _i = 0, dataFields_3 = dataFields; _i < dataFields_3.length; _i++) {\n            var field = dataFields_3[_i];\n            reportElement.push(field.name);\n        }\n        var measureGroupItems = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_4 = fields; _a < fields_4.length; _a++) {\n            var field = fields_4[_a];\n            if (!(measureGroupItems.indexOf(field.querySelector('DIMENSIONS').textContent.split('.')[0]) >= 0)) {\n                dimensionElements.push({\n                    hasChildren: true,\n                    isSelected: false,\n                    pid: field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    /* tslint:disable-next-line:max-line-length */\n                    id: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                    name: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON + ' ' + 'namedSets',\n                    caption: field.querySelector('SET_DISPLAY_FOLDER').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    // aggregateType: this.getAggregateType(field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0]),\n                    type: 'string'\n                });\n                measureGroupItems.push(field.querySelector('DIMENSIONS').textContent.split('.')[0]);\n            }\n            var id = '[' + field.querySelector('SET_NAME').textContent.trim() + ']';\n            var fieldObj = {\n                hasChildren: true,\n                isNamedSets: true,\n                isSelected: (reportElement.indexOf('[' + field.querySelector('SET_NAME').textContent + ']') >= 0),\n                /* tslint:disable-next-line:max-line-length */\n                pid: field.querySelector('SET_DISPLAY_FOLDER').textContent + '_' + field.querySelector('DIMENSIONS').textContent.split('.')[0],\n                id: id,\n                name: field.querySelector('SET_CAPTION').textContent,\n                caption: field.querySelector('SET_CAPTION').textContent,\n                spriteCssClass: 'e-namedSetCDB-icon' + ' ' + cls.ICON,\n                tag: field.querySelector('EXPRESSION').textContent,\n                // aggregateType: this.getAggregateType(id),\n                type: 'string',\n                filter: [],\n                dateMember: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                isHierarchy: true,\n                isExcelFilter: false\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[id] = fieldObj;\n        }\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_SETS'\n        // };\n        // this.getTreeData(args, this.loadHierarchyElements.bind(this), customArgs);\n        customArgs.hierarchy = this.fieldListData;\n        customArgs.hierarchySuccess = this.fieldListObj.hierarchySuccess;\n        this.loadHierarchyElements(customArgs);\n    };\n    OlapEngine.prototype.loadHierarchyElements = function (customArgs) {\n        var data = customArgs.hierarchySuccess;\n        var dimensionElements = customArgs.hierarchy;\n        var dataFields = extend([], this.rows, null, true);\n        dataFields = dataFields.concat(this.columns, this.filters);\n        var reportElement = [];\n        for (var _i = 0, dataFields_4 = dataFields; _i < dataFields_4.length; _i++) {\n            var field = dataFields_4[_i];\n            reportElement.push(field.name);\n        }\n        var fields = [].slice.call(data.querySelectorAll('row'));\n        for (var _a = 0, fields_5 = fields; _a < fields_5.length; _a++) {\n            var field = fields_5[_a];\n            var dimensionName = field.querySelector('DIMENSION_UNIQUE_NAME').textContent;\n            var hierarchyName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n            var isAllMemberAvail = [].slice.call(field.querySelectorAll('ALL_MEMBER')).length > 0;\n            var allMember = void 0;\n            if (isAllMemberAvail) {\n                var stringCollection = field.querySelectorAll('ALL_MEMBER')[0].textContent.replace(/[\\[\\]\\&']+/g, '').split('.');\n                allMember = stringCollection[stringCollection.length - 1].trim();\n            }\n            else {\n                allMember = undefined;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            var hierarchyFolderName = ((field.querySelector('HIERARCHY_DISPLAY_FOLDER')) ? (field.querySelector('HIERARCHY_DISPLAY_FOLDER').textContent) : '');\n            var curElement = [];\n            for (var _b = 0, dimensionElements_1 = dimensionElements; _b < dimensionElements_1.length; _b++) {\n                var item = dimensionElements_1[_b];\n                if (item.tag === dimensionName) {\n                    curElement.push(item);\n                }\n            }\n            if (curElement.length > 0 && (dimensionName !== hierarchyName || this.isMondrian)) {\n                var parentID = dimensionName + (this.isMondrian ? '~#^Dim' : '');\n                if (hierarchyFolderName !== '') {\n                    var folderName = dimensionName + (this.isMondrian ? '~#^Dim' : '') + '_' + hierarchyFolderName;\n                    var curParentElement = [];\n                    for (var _c = 0, dimensionElements_2 = dimensionElements; _c < dimensionElements_2.length; _c++) {\n                        var item = dimensionElements_2[_c];\n                        if (item.tag === folderName && item.pid === parentID) {\n                            curParentElement.push(item);\n                        }\n                    }\n                    if (curParentElement.length === 0) {\n                        var fieldObj_1 = {\n                            hasChildren: true,\n                            isSelected: false,\n                            pid: dimensionName + (this.isMondrian ? '~#^Dim' : ''),\n                            id: folderName,\n                            name: hierarchyFolderName,\n                            spriteCssClass: 'e-folderCDB-icon' + ' ' + cls.ICON,\n                            tag: folderName,\n                            caption: hierarchyFolderName,\n                            // aggregateType: this.getAggregateType(hierarchyFolderName),\n                            type: 'string'\n                        };\n                        dimensionElements.push(fieldObj_1);\n                    }\n                    parentID = folderName;\n                }\n                var fieldObj = {\n                    /* tslint:disable-next-line:max-line-length */\n                    hasChildren: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? true : false : true),\n                    // hasChildren: true,\n                    isSelected: (reportElement.indexOf(hierarchyName) >= 0),\n                    pid: parentID,\n                    id: hierarchyName,\n                    name: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? 'e-hierarchyCDB-icon' : 'e-attributeCDB-icon' : 'e-hierarchyCDB-icon') + ' ' + cls.ICON,\n                    hasAllMember: isAllMemberAvail,\n                    allMember: allMember,\n                    tag: hierarchyName,\n                    caption: field.querySelector('HIERARCHY_CAPTION').textContent,\n                    // aggregateType: this.getAggregateType(hierarchyName),\n                    type: 'string',\n                    filter: [],\n                    dateMember: [],\n                    sort: (this.enableSort ? this.sortObject[hierarchyName] ? this.sortObject[hierarchyName] : 'Ascending' : 'None'),\n                    actualFilter: [],\n                    filterMembers: [],\n                    childMembers: [],\n                    searchMembers: [],\n                    members: {},\n                    currrentMembers: {},\n                    levels: [],\n                    levelCount: 1,\n                    /* tslint:disable-next-line:max-line-length */\n                    isHierarchy: (field.querySelector('HIERARCHY_ORIGIN') ? ((field.querySelector('HIERARCHY_ORIGIN').textContent !== '2') && field.querySelector('HIERARCHY_ORIGIN').textContent !== '6') ? false : true : false),\n                    isExcelFilter: false\n                };\n                dimensionElements.push(fieldObj);\n                this.fieldList[hierarchyName] = fieldObj;\n            }\n        }\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_LEVELS'\n        };\n        this.getTreeData(args, this.loadLevelElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadLevelElements = function (xmlDoc, request, customArgs) {\n        var newDataSource = [];\n        var dimensionElements = this.fieldListData;\n        newDataSource = [];\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _i = 0, fields_6 = fields; _i < fields_6.length; _i++) {\n            var field = fields_6[_i];\n            /* tslint:disable-next-line:max-line-length */\n            if (parseInt(field.querySelector('LEVEL_TYPE').textContent, 10) !== 1 && field.querySelector('HIERARCHY_UNIQUE_NAME').textContent.toLowerCase() !== '[measures]') {\n                var dimensionName = field.querySelector('HIERARCHY_UNIQUE_NAME').textContent;\n                var levelName = field.querySelector('LEVEL_UNIQUE_NAME').textContent;\n                var levelCaption = field.querySelector('LEVEL_CAPTION').textContent;\n                var levelObj = {\n                    hasChildren: false,\n                    isChecked: false,\n                    isSelected: this.fieldList[dimensionName].isSelected,\n                    pid: dimensionName,\n                    id: levelName,\n                    name: levelCaption,\n                    tag: levelName,\n                    /* tslint:disable-next-line:max-line-length */\n                    spriteCssClass: 'e-level-members e-hierarchy-level-' + parseInt(field.querySelector('LEVEL_NUMBER').textContent, 10) + '-icon' + ' ' + cls.ICON,\n                    caption: levelCaption,\n                    // aggregateType: this.getAggregateType(levelName),\n                    type: 'string'\n                };\n                newDataSource.push(levelObj);\n                if (this.fieldList[dimensionName] && this.fieldList[dimensionName].spriteCssClass &&\n                    this.fieldList[dimensionName].spriteCssClass.indexOf('e-attributeCDB-icon') === -1) {\n                    this.fieldList[dimensionName].levels.push(levelObj);\n                    this.fieldList[dimensionName].isHierarchy = false;\n                }\n                else {\n                    this.fieldList[dimensionName].isHierarchy = true;\n                }\n            }\n        }\n        this.fieldListData = dimensionElements = dimensionElements.concat(newDataSource);\n        var args = {\n            catalog: customArgs.dataSourceSettings.catalog,\n            cube: customArgs.dataSourceSettings.cube,\n            url: customArgs.dataSourceSettings.url,\n            LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n            request: 'MDSCHEMA_MEASURES'\n        };\n        this.getTreeData(args, this.loadMeasureElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureElements = function (xmlDoc, request, customArgs) {\n        var dimensionElements = this.fieldListData;\n        var measureGroupItems = [];\n        var caption;\n        var dataFields = extend([], this.values, null, true);\n        var reportElement = [];\n        for (var _i = 0, dataFields_5 = dataFields; _i < dataFields_5.length; _i++) {\n            var field = dataFields_5[_i];\n            reportElement.push(field.name);\n        }\n        if (this.locale !== 'en-US') {\n            var args = {\n                catalog: customArgs.dataSourceSettings.catalog,\n                cube: customArgs.dataSourceSettings.cube,\n                url: customArgs.dataSourceSettings.url,\n                LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n                request: 'MDSCHEMA_MEASUREGROUPS'\n            };\n            this.getTreeData(args, this.loadMeasureGroups.bind(this), customArgs);\n        }\n        var fields = [].slice.call(xmlDoc.querySelectorAll('row'));\n        for (var _a = 0, fields_7 = fields; _a < fields_7.length; _a++) {\n            var field = fields_7[_a];\n            /* tslint:disable-next-line:max-line-length */\n            var measureGRPName = isNullOrUndefined(field.querySelector('MEASUREGROUP_NAME')) ? '' : field.querySelector('MEASUREGROUP_NAME').textContent;\n            var measureName = field.querySelector('MEASURE_UNIQUE_NAME').textContent;\n            var formatString = field.querySelector('DEFAULT_FORMAT_STRING') ?\n                field.querySelector('DEFAULT_FORMAT_STRING').textContent : '#,#';\n            var aggregateType = field.querySelector('MEASURE_AGGREGATOR') ?\n                field.querySelector('MEASURE_AGGREGATOR').textContent : '1';\n            if (!(measureGroupItems.indexOf(measureGRPName) >= 0)) {\n                if (this.locale !== 'en-US') {\n                    var measureInfo = [];\n                    for (var _b = 0, _c = this.fieldListObj.measuresGroups; _b < _c.length; _b++) {\n                        var item = _c[_b];\n                        if (item.querySelector('MEASUREGROUP_NAME').textContent === measureGRPName) {\n                            measureInfo.push(item);\n                        }\n                    }\n                    caption = measureInfo.length > 0 ? measureInfo[0].querySelector('MEASUREGROUP_CAPTION').textContent : measureGRPName;\n                }\n                else {\n                    caption = measureGRPName;\n                }\n                if (measureGRPName !== '') {\n                    dimensionElements.push({\n                        hasChildren: true,\n                        isChecked: false,\n                        isSelected: false,\n                        pid: '[Measures]',\n                        id: measureGRPName,\n                        name: caption,\n                        spriteCssClass: 'e-measureCDB e-folderCDB-icon' + ' ' + cls.ICON,\n                        tag: measureGRPName,\n                        caption: caption,\n                        aggregateType: this.getAggregateType(measureGRPName, aggregateType),\n                        type: 'string'\n                    });\n                    measureGroupItems.push(measureGRPName);\n                }\n            }\n            var fieldObj = {\n                hasChildren: false,\n                isSelected: (reportElement.indexOf(measureName) >= 0),\n                pid: measureGRPName === '' ? '[Measures]' : measureGRPName,\n                id: measureName,\n                name: field.querySelector('MEASURE_CAPTION').textContent,\n                spriteCssClass: 'e-measure-icon' + ' ' + cls.ICON,\n                tag: measureName,\n                caption: field.querySelector('MEASURE_CAPTION').textContent,\n                aggregateType: this.getAggregateType(measureName, aggregateType),\n                type: 'number',\n                filter: [],\n                // sort: 'Ascending',\n                actualFilter: [],\n                filterMembers: [],\n                childMembers: [],\n                searchMembers: [],\n                members: {},\n                currrentMembers: {},\n                formatString: formatString\n            };\n            dimensionElements.push(fieldObj);\n            this.fieldList[measureName] = fieldObj;\n            if ((reportElement.indexOf(measureName) >= 0)) {\n                reportElement.splice(reportElement.indexOf(measureName), 1);\n            }\n        }\n        this.measureReportItems = reportElement;\n        // let args: ConnectionInfo = {\n        //     catalog: customArgs.dataSourceSettings.catalog,\n        //     cube: customArgs.dataSourceSettings.cube,\n        //     url: customArgs.dataSourceSettings.url,\n        //     LCID: customArgs.dataSourceSettings.localeIdentifier.toString(),\n        //     request: 'MDSCHEMA_KPIS'\n        // };\n        // customArgs.reportElement = this.measureReportItems;\n        // this.getTreeData(args, this.loadKPIElements.bind(this), customArgs);\n    };\n    OlapEngine.prototype.loadMeasureGroups = function (xmlDoc, request, customArgs) {\n        if (isNullOrUndefined(this.fieldListObj)) {\n            this.fieldListObj = {};\n        }\n        this.fieldListObj.measuresGroups = [].slice.call(xmlDoc.querySelectorAll('row'));\n    };\n    // private loadKPIElements(xmlDoc: Document, request: Ajax, customArgs: FieldData): void {\n    //     let dimensionElements: IOlapField[] = this.fieldListData;\n    //     let parser = new DOMParser();\n    //     let measureGroupItems: string[] = [];\n    //     let fields: HTMLElement[] = [].slice.call(xmlDoc.querySelectorAll('row'));\n    //     dimensionElements.splice(1, 0, {\n    //         hasChildren: true,\n    //         isChecked: false,\n    //         id: 'folderStruct',\n    //         name: 'KPI',\n    //         spriteCssClass: 'kpiCDB e-kpiCDB-icon' + ' ' +  cls.ICON,\n    //         tag: '',\n    //         caption: 'KPI',\n    //         aggregateType: this.getAggregateType('folderStruct'),\n    //         type: 'string'\n    //     });\n    //     for (let field of fields) {\n    //         let kpiName: string = field.querySelector('KPI_CAPTION').textContent;\n    //         let kpiGoal: string = field.querySelector('KPI_GOAL').textContent;\n    //         let kpiStatus: string = field.querySelector('KPI_STATUS').textContent;\n    //         let kpiTrend: string = field.querySelector('KPI_TREND').textContent;\n    //         let kpiValue: string = field.querySelector('KPI_VALUE').textContent;\n    //         if (!(measureGroupItems.indexOf(field.querySelector('KPI_NAME').textContent) >= 0)) {\n    //             dimensionElements.push({\n    //                 hasChildren: true,\n    //                 isChecked: false,\n    //                 pid: 'folderStruct',\n    //                 id: kpiName,\n    //                 name: kpiName,\n    //                 spriteCssClass: 'e-folderCDB-icon' + ' ' +  cls.ICON,\n    //                 tag: kpiName,\n    //                 caption: kpiName,\n    //                 aggregateType: this.getAggregateType(kpiName),\n    //                 type: 'string'\n    //             });\n    //             measureGroupItems.push(kpiName);\n    //         }\n    //         let kpiCollection: { [key: string]: string } = {\n    //             'kpiGoal': kpiGoal,\n    //             'kpiStatus': kpiStatus,\n    //             'kpiTrend': kpiTrend,\n    //             'kpiValue': kpiValue\n    //         };\n    //         let i: number = 0;\n    //         for (let kpi of Object.keys(kpiCollection)) {\n    //             let id: string = kpiCollection[kpi];\n    //             let name: string = (kpi).split('kpi')[1];\n    //             let cssClass: string = 'e-' + kpi + '-icon';\n    //             let fieldObj: IOlapField = {\n    //                 hasChildren: true,\n    //                 isSelected: (customArgs.reportElement.indexOf(id) >= 0),\n    //                 id: id,\n    //                 pid: kpiName,\n    //                 name: name,\n    //                 spriteCssClass: cssClass + ' ' +  cls.ICON,\n    //                 tag: id,\n    //                 caption: name,\n    //                 aggregateType: this.getAggregateType(id),\n    //                 type: 'number',\n    //                 filter: [],\n    //                 sort: 'Ascending',\n    //                 filterMembers: [],\n    //                 searchMembers: [],\n    //                 members: {},\n    //                 currrentMembers: {}\n    //             };\n    //             dimensionElements.push(fieldObj);\n    //             this.fieldList[id] = fieldObj;\n    //         }\n    //     }\n    // }\n    OlapEngine.prototype.doAjaxPost = function (type, url, data, success, customArgs) {\n        var ajax = new Ajax({\n            mode: false,\n            contentType: 'text/xml',\n            url: url,\n            data: data,\n            dataType: 'xml',\n            type: type,\n            onSuccess: function (args, request) {\n                var parser = new DOMParser();\n                // parsing string type result as XML\n                var xmlDoc = parser.parseFromString(args, 'text/xml');\n                success(xmlDoc, request, customArgs);\n            },\n            onFailure: function (e) {\n                return e;\n            }\n        });\n        ajax.send();\n    };\n    OlapEngine.prototype.getSoapMsg = function (dataSourceSettings, query) {\n        var xmlMsg = '';\n        var sourceInfo = '';\n        var connectionString = this.getConnectionInfo(dataSourceSettings.url, dataSourceSettings.localeIdentifier);\n        if (this.isMondrian) {\n            sourceInfo = '';\n            /* tslint:disable-next-line:max-line-length */\n            xmlMsg = '<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" SOAP-ENV:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><SOAP-ENV:Body><Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"><Command><Statement><![CDATA[' +\n                query + ']]></Statement></Command><Properties><PropertyList><DataSourceInfo>' + sourceInfo +\n                /* tslint:disable-next-line:max-line-length */\n                '</DataSourceInfo><Catalog>' + dataSourceSettings.catalog + '</Catalog><AxisFormat>TupleFormat</AxisFormat><Content>Data</Content><Format>Multidimensional</Format></PropertyList></Properties></Execute></SOAP-ENV:Body></SOAP-ENV:Envelope>';\n        }\n        else {\n            /* tslint:disable-next-line:max-line-length */\n            xmlMsg = '<Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> <Header></Header> <Body> <Execute xmlns=\\\"urn:schemas-microsoft-com:xml-analysis\\\"> <Command> <Statement> ' +\n                query + ' </Statement> </Command> <Properties> <PropertyList> <Catalog>' + dataSourceSettings.catalog +\n                /* tslint:disable-next-line:max-line-length */\n                '</Catalog> <LocaleIdentifier>' + connectionString.LCID + '</LocaleIdentifier></PropertyList> </Properties> </Execute> </Body> </Envelope>';\n        }\n        return xmlMsg;\n    };\n    OlapEngine.prototype.getConnectionInfo = function (connectionString, locale) {\n        var connectionInfo = { url: '', LCID: '1033' };\n        if (connectionString !== '') {\n            for (var _i = 0, _a = connectionString.split(';'); _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.toLowerCase().indexOf('locale') < 0 && connectionInfo.url.length === 0) {\n                    connectionInfo.url = obj;\n                }\n                else if (obj.toLowerCase().indexOf('locale') >= 0) {\n                    connectionInfo.LCID = obj.replace(/ /g, '').split('=')[1];\n                }\n                else if (!isNullOrUndefined(locale)) {\n                    connectionInfo.LCID = locale.toString();\n                }\n            }\n        }\n        return connectionInfo;\n    };\n    OlapEngine.prototype.getMDXQuery = function (dataSourceSettings) {\n        MDXQuery.getCellSets(dataSourceSettings, this, true, undefined, true);\n        return this.mdxQuery;\n    };\n    return OlapEngine;\n}());\nexport { OlapEngine };\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Browser, Component, createElement, setStyleAttribute, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Complex, extend, ChildProperty, Collection, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { Internationalization, L10n, NotifyPropertyChanges, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { removeClass, addClass, Event, setValue } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { PivotEngine } from '../../base/engine';\nimport { Tooltip, createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { Render } from '../renderer/render';\nimport { DataSourceSettings } from '../model/datasourcesettings';\nimport { GridSettings } from '../model/gridsettings';\nimport { Grid, Reorder, Resize, getObject } from '@syncfusion/ej2-grids';\nimport { ExcelExport } from '../actions/excel-export';\nimport { PDFExport } from '../actions/pdf-export';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { PivotContextMenu } from '../../common/popups/context-menu';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { VirtualScroll } from '../actions/virtualscroll';\nimport { DrillThrough } from '../actions/drill-through';\nimport { PivotUtil } from '../../base/util';\nimport { PivotChart } from '../../pivotchart/index';\nimport { ChartSettings } from '../model/chartsettings';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * It holds the settings of Grouping Bar.\n */\nvar GroupingBarSettings = /** @class */ (function (_super) {\n    __extends(GroupingBarSettings, _super);\n    function GroupingBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showFilterIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showSortIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showRemoveIcon\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"showValueTypeIcon\", void 0);\n    __decorate([\n        Property('Both')\n    ], GroupingBarSettings.prototype, \"displayMode\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupingBarSettings.prototype, \"allowDragAndDrop\", void 0);\n    return GroupingBarSettings;\n}(ChildProperty));\nexport { GroupingBarSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar CellEditSettings = /** @class */ (function (_super) {\n    __extends(CellEditSettings, _super);\n    function CellEditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"allowCommandColumns\", void 0);\n    __decorate([\n        Property('Normal')\n    ], CellEditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], CellEditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], CellEditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    return CellEditSettings;\n}(ChildProperty));\nexport { CellEditSettings };\n/**\n * Configures the conditional based hyper link settings.\n */\nvar ConditionalSettings = /** @class */ (function (_super) {\n    __extends(ConditionalSettings, _super);\n    function ConditionalSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"measure\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"label\", void 0);\n    __decorate([\n        Property('NotEquals')\n    ], ConditionalSettings.prototype, \"conditions\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value1\", void 0);\n    __decorate([\n        Property()\n    ], ConditionalSettings.prototype, \"value2\", void 0);\n    return ConditionalSettings;\n}(ChildProperty));\nexport { ConditionalSettings };\n/**\n * It holds the settings of Hyperlink.\n */\nvar HyperlinkSettings = /** @class */ (function (_super) {\n    __extends(HyperlinkSettings, _super);\n    function HyperlinkSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showRowHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showColumnHeaderHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showValueCellHyperlink\", void 0);\n    __decorate([\n        Property(false)\n    ], HyperlinkSettings.prototype, \"showSummaryCellHyperlink\", void 0);\n    __decorate([\n        Collection([], ConditionalSettings)\n    ], HyperlinkSettings.prototype, \"conditionalSettings\", void 0);\n    __decorate([\n        Property()\n    ], HyperlinkSettings.prototype, \"headerText\", void 0);\n    __decorate([\n        Property('')\n    ], HyperlinkSettings.prototype, \"cssClass\", void 0);\n    return HyperlinkSettings;\n}(ChildProperty));\nexport { HyperlinkSettings };\n/**\n * It holds the option for configure the chart and grid view.\n */\nvar DisplayOption = /** @class */ (function (_super) {\n    __extends(DisplayOption, _super);\n    function DisplayOption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"view\", void 0);\n    __decorate([\n        Property('Table')\n    ], DisplayOption.prototype, \"primary\", void 0);\n    return DisplayOption;\n}(ChildProperty));\nexport { DisplayOption };\n/**\n * Represents the PivotView component.\n * ```html\n * <div id=\"PivotView\"></div>\n * <script>\n *  var pivotviewObj = new PivotView({ enableGroupingBar: true });\n *  pivotviewObj.appendTo(\"#pivotview\");\n * </script>\n * ```\n */\nvar PivotView = /** @class */ (function (_super) {\n    __extends(PivotView, _super);\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotViewModel} options?\n     * @param  {string|HTMLElement} element?\n     */\n    function PivotView(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this_1.verticalScrollScale = 1;\n        /** @hidden */\n        _this_1.horizontalScrollScale = 1;\n        /** @hidden */\n        _this_1.scrollerBrowserLimit = 500000;\n        /** @hidden */\n        _this_1.lastSortInfo = {};\n        /** @hidden */\n        _this_1.lastFilterInfo = {};\n        /** @hidden */\n        _this_1.lastAggregationInfo = {};\n        /** @hidden */\n        _this_1.lastCalcFieldInfo = {};\n        /** @hidden */\n        _this_1.isScrolling = false;\n        _this_1.shiftLockedPos = [];\n        _this_1.savedSelectedCellsPos = [];\n        _this_1.isPopupClicked = false;\n        _this_1.isMouseDown = false;\n        _this_1.isMouseUp = false;\n        _this_1.fieldsType = {};\n        _this_1.defaultItems = {};\n        _this_1.isCellBoxMultiSelection = false;\n        /** @hidden */\n        _this_1.gridHeaderCellInfo = [];\n        /** @hidden */\n        _this_1.gridCellCollection = {};\n        /** @hidden */\n        _this_1.rowRangeSelection = { enable: false, startIndex: 0, endIndex: 0 };\n        /** @hidden */\n        _this_1.resizeInfo = {};\n        /** @hidden */\n        _this_1.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        /** @hidden */\n        _this_1.pivotColumns = [];\n        /** @hidden */\n        _this_1.totColWidth = 0;\n        /** @hidden */\n        _this_1.posCount = 0;\n        /** @hidden */\n        _this_1.isModified = false;\n        _this_1.needsID = true;\n        _this_1.pivotRefresh = Component.prototype.refresh;\n        _this_1.pivotView = _this_1;\n        setValue('mergePersistData', _this_1.mergePersistPivotData, _this_1);\n        return _this_1;\n    }\n    PivotView_1 = PivotView;\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotView.prototype.requiredModules = function () {\n        var modules = [];\n        var isCommonRequire;\n        isCommonRequire = true;\n        modules.push({ args: [this], member: 'groupingbar' });\n        if (this.allowConditionalFormatting) {\n            modules.push({ args: [this], member: 'conditionalformatting' });\n        }\n        if (this.allowNumberFormatting) {\n            isCommonRequire = true;\n            modules.push({ args: [this], member: 'numberformatting' });\n        }\n        if (this.allowCalculatedField) {\n            isCommonRequire = true;\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        // if (this.showGroupingBar || !this.showGroupingBar) {\n        //     isCommonRequire = true;\n        //     modules.push({ args: [this], member: 'grouping' });\n        // }\n        if (this.showToolbar && this.toolbar.length > 0) {\n            isCommonRequire = true;\n            modules.push({ args: [this], member: 'toolbar' });\n        }\n        if (this.showFieldList) {\n            isCommonRequire = true;\n            modules.push({ args: [this], member: 'fieldlist' });\n        }\n        if (this.allowExcelExport) {\n            modules.push({ args: [this], member: 'excelExport' });\n        }\n        if (this.allowPdfExport) {\n            modules.push({ args: [this], member: 'pdfExport' });\n        }\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualscroll' });\n        }\n        if (this.allowGrouping) {\n            isCommonRequire = true;\n            modules.push({ args: [this], member: 'grouping' });\n        }\n        if (this.gridSettings) {\n            if (this.gridSettings.contextMenuItems) {\n                isCommonRequire = true;\n            }\n        }\n        if (isCommonRequire) {\n            modules.push({ args: [this], member: 'common' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initializing internal properties;\n     * @private\n     */\n    PivotView.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.dataType = 'olap';\n            this.olapEngineModule = new OlapEngine();\n        }\n        else {\n            this.dataType = 'pivot';\n            this.engineModule = new PivotEngine();\n        }\n        this.initProperties();\n        this.isAdaptive = Browser.isDevice;\n        this.renderToolTip();\n        this.keyboardModule = new KeyboardInteraction(this);\n        this.contextMenuModule = new PivotContextMenu(this);\n        this.globalize = new Internationalization(this.locale);\n        this.defaultLocale = {\n            grandTotal: 'Grand Total',\n            total: 'Total',\n            value: 'Value',\n            noValue: 'No value',\n            row: 'Row',\n            column: 'Column',\n            collapse: 'Collapse',\n            expand: 'Expand',\n            rowAxisPrompt: 'Drop row here',\n            columnAxisPrompt: 'Drop column here',\n            valueAxisPrompt: 'Drop value here',\n            filterAxisPrompt: 'Drop filter here',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            search: 'Search',\n            drag: 'Drag',\n            remove: 'Remove',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            addToRow: 'Add to Row',\n            addToColumn: 'Add to Column',\n            addToValue: 'Add to Value',\n            addToFilter: 'Add to Filter',\n            emptyData: 'No records to display',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            MoreOption: 'More...',\n            /* tslint:enable */\n            NotEquals: 'Not Equals',\n            AllValues: 'All Values',\n            conditionalFormating: 'Conditional Formatting',\n            apply: 'APPLY',\n            condition: 'Add Condition',\n            formatLabel: 'Format',\n            valueFieldSettings: 'Value field settings',\n            baseField: 'Base field :',\n            baseItem: 'Base item :',\n            summarizeValuesBy: 'Summarize values by :',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption :',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            details: 'Details',\n            manageRecords: 'Manage Records',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            save: 'Save a report',\n            new: 'Create a new report',\n            load: 'Load',\n            saveAs: 'Save as current report',\n            rename: 'Rename a current report',\n            deleteReport: 'Delete a current report',\n            export: 'Export',\n            subTotals: 'Sub totals',\n            grandTotals: 'Grand totals',\n            reportName: 'Report Name :',\n            pdf: 'PDF',\n            excel: 'Excel',\n            csv: 'CSV',\n            png: 'PNG',\n            jpeg: 'JPEG',\n            svg: 'SVG',\n            mdxQuery: 'MDX Query',\n            showSubTotals: 'Show sub totals',\n            doNotShowSubTotals: 'Do not show sub totals',\n            showSubTotalsRowsOnly: 'Show sub totals rows only',\n            showSubTotalsColumnsOnly: 'Show sub totals columns only',\n            showGrandTotals: 'Show grand totals',\n            doNotShowGrandTotals: 'Do not show grand totals',\n            showGrandTotalsRowsOnly: 'Show grand totals rows only',\n            showGrandTotalsColumnsOnly: 'Show grand totals columns only',\n            fieldList: 'Show fieldlist',\n            grid: 'Show table',\n            toolbarFormatting: 'Conditional formatting',\n            chart: 'Chart',\n            reportMsg: 'Please enter vaild report name!!!',\n            reportList: 'Report list',\n            removeConfirm: 'Are you sure want to delete this report?',\n            emptyReport: 'No reports found!!',\n            bar: 'Bar',\n            line: 'Line',\n            area: 'Area',\n            scatter: 'Scatter',\n            polar: 'Polar',\n            of: 'of',\n            emptyFormat: 'No format found!!!',\n            emptyInput: 'Enter a value',\n            newReportConfirm: 'Want to save changes to report?',\n            emptyReportName: 'Enter a report name',\n            qtr: 'Qtr',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            aggregate: 'Aggregate',\n            drillThrough: 'Drill Through',\n            ascending: 'Ascending',\n            descending: 'Descending',\n            number: 'Number',\n            currency: 'Currency',\n            percentage: 'Percentage',\n            formatType: 'Format Type',\n            customText: 'Currency Symbol',\n            symbolPosition: 'Symbol Position',\n            left: 'Left',\n            right: 'Right',\n            grouping: 'Grouping',\n            true: 'True',\n            false: 'False',\n            decimalPlaces: 'Decimal Places',\n            numberFormat: 'Number Formatting',\n            memberType: 'Field Type',\n            formatString: 'Format String',\n            expressionField: 'Expression',\n            customFormat: 'Enter custom format string',\n            selectedHierarchy: 'Parent Hierarchy',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            Percent: 'Percent',\n            Currency: 'Currency',\n            Custom: 'Custom',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing the calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            drillError: 'Cannot show the raw items of calculated fields.',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            defaultReport: 'Default report',\n            customFormatString: 'Custom Format',\n            invalidFormat: 'Invalid Format.',\n            group: 'Group',\n            unGroup: 'Ungroup',\n            invalidSelection: 'Cannot group that selection.',\n            groupName: 'Enter the caption to display in header',\n            captionName: 'Enter the caption for group field',\n            selectedItems: 'Selected items',\n            groupFieldCaption: 'Field caption',\n            groupTitle: 'Group name',\n            startAt: 'Starting at',\n            endAt: 'Ending at',\n            groupBy: 'Interval by',\n            selectGroup: 'Select groups'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.renderContextMenu();\n        this.isDragging = false;\n        this.addInternalEvents();\n        //setCurrencyCode(this.currencyCode);\n    };\n    PivotView.prototype.onBeforeTooltipOpen = function (args) {\n        args.element.classList.add('e-pivottooltipwrap');\n    };\n    PivotView.prototype.renderToolTip = function () {\n        if (this.showTooltip) {\n            this.tooltip = new Tooltip({\n                target: 'td.e-valuescontent',\n                showTipPointer: false,\n                enableRtl: this.enableRtl,\n                beforeRender: this.setToolTip.bind(this),\n                beforeOpen: this.onBeforeTooltipOpen\n            });\n            this.tooltip.isStringTemplate = true;\n            this.tooltip.appendTo(this.element);\n        }\n        else if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.renderContextMenu = function () {\n        if (this.gridSettings.contextMenuItems || (this.allowGrouping && this.dataType === 'pivot')) {\n            var conmenuItems = [];\n            var groupItems = [];\n            var customItems = [];\n            var exportItems = [];\n            var aggItems = [];\n            var expItems = [];\n            var aggregateItems = [];\n            if (this.gridSettings.contextMenuItems) {\n                for (var _i = 0, _a = this.gridSettings.contextMenuItems; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (typeof item === 'string' && this.getDefaultItems().indexOf(item) !== -1) {\n                        if (item.toString().toLowerCase().indexOf('aggregate') !== -1) {\n                            aggregateItems = [\n                                { text: this.localeObj.getConstant('Sum'), id: this.element.id + '_AggSum' },\n                                { text: this.localeObj.getConstant('DistinctCount'), id: this.element.id + '_AggDistinctCount' },\n                                { text: this.localeObj.getConstant('Count'), id: this.element.id + '_AggCount' },\n                                { text: this.localeObj.getConstant('Product'), id: this.element.id + '_AggProduct' },\n                                { text: this.localeObj.getConstant('Avg'), id: this.element.id + '_AggAvg' },\n                                { text: this.localeObj.getConstant('Max'), id: this.element.id + '_AggMax' },\n                                { text: this.localeObj.getConstant('Min'), id: this.element.id + '_AggMin' },\n                                { text: this.localeObj.getConstant('MoreOption'), id: this.element.id + '_AggMoreOption' }\n                            ];\n                        }\n                        else if (item.toString().toLowerCase().indexOf('export') !== -1) {\n                            exportItems.push(this.buildDefaultItems(item));\n                        }\n                        else {\n                            conmenuItems.push(this.buildDefaultItems(item));\n                        }\n                    }\n                    else if (typeof item !== 'string') {\n                        customItems.push(item);\n                    }\n                }\n            }\n            if (this.allowGrouping && this.dataType === 'pivot') {\n                groupItems.push(this.buildDefaultItems('Group'));\n                groupItems.push(this.buildDefaultItems('Ungroup'));\n            }\n            if (aggregateItems.length > 0) {\n                var aggregateGroup = this.buildDefaultItems('Aggregate');\n                aggregateGroup.items = aggregateItems;\n                aggItems.push(aggregateGroup);\n            }\n            if (exportItems.length > 0) {\n                var exportGroupItems = this.buildDefaultItems('export');\n                exportGroupItems.items = exportItems;\n                expItems.push(exportGroupItems);\n            }\n            this.gridSettings.contextMenuItems = [];\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, aggItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, conmenuItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, groupItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, expItems);\n            Array.prototype.push.apply(this.gridSettings.contextMenuItems, customItems);\n        }\n    };\n    PivotView.prototype.getDefaultItems = function () {\n        return ['Drillthrough', 'Expand',\n            'Collapse', 'Pdf Export', 'Excel Export', 'Csv Export', 'Sort Ascending', 'Sort Descending',\n            'Aggregate', 'CalculatedField'];\n    };\n    PivotView.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'Aggregate':\n                menuItem = {\n                    text: this.localeObj.getConstant('aggregate'), target: 'th.e-valuesheader,td.e-valuescontent,.e-stot',\n                    id: this.element.id + '_aggregate'\n                };\n                break;\n            case 'CalculatedField':\n                menuItem = {\n                    text: this.localeObj.getConstant('CalculatedField'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_CalculatedField'\n                };\n                break;\n            case 'Drillthrough':\n                menuItem = {\n                    text: this.localeObj.getConstant('drillThrough'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_drillthrough_menu', iconCss: cls.PIVOTVIEW_GRID + ' ' + cls.ICON\n                };\n                break;\n            case 'export':\n                menuItem = {\n                    text: this.localeObj.getConstant('export'), target: 'td.e-valuescontent',\n                    id: this.element.id + '_exporting', iconCss: cls.PIVOTVIEW_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Pdf Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('pdf'), id: this.element.id + '_pdf',\n                    iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Excel Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('excel'), id: this.element.id + '_excel',\n                    iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON\n                };\n                break;\n            case 'Csv Export':\n                menuItem = {\n                    text: this.localeObj.getConstant('csv'), id: this.element.id + '_csv',\n                    iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                };\n                break;\n            case 'Expand':\n                menuItem = {\n                    text: this.localeObj.getConstant('expand'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_expand', iconCss: cls.PIVOTVIEW_EXPAND + ' ' + cls.ICON\n                };\n                break;\n            case 'Collapse':\n                menuItem = {\n                    text: this.localeObj.getConstant('collapse'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_collapse', iconCss: cls.PIVOTVIEW_COLLAPSE + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Ascending':\n                menuItem = {\n                    text: this.localeObj.getConstant('ascending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortasc', iconCss: cls.ICON_ASC + ' ' + cls.ICON\n                };\n                break;\n            case 'Sort Descending':\n                menuItem = {\n                    text: this.localeObj.getConstant('descending'), target: 'th.e-valuesheader,.e-stot',\n                    id: this.element.id + '_sortdesc', iconCss: cls.ICON_DESC + ' ' + cls.ICON\n                };\n                break;\n            case 'Group':\n                menuItem = {\n                    text: this.localeObj.getConstant('group'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_group', iconCss: cls.PIVOTVIEW_GROUP + ' ' + cls.ICON\n                };\n                break;\n            case 'Ungroup':\n                menuItem = {\n                    text: this.localeObj.getConstant('unGroup'), target: 'td.e-rowsheader,.e-columnsheader',\n                    id: this.element.id + '_custom_ungroup', iconCss: cls.PIVOTVIEW_UN_GROUP + ' ' + cls.ICON\n                };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: menuItem.text, id: menuItem.id,\n            target: menuItem.target, iconCss: menuItem.iconCss\n        };\n        return this.defaultItems[item];\n    };\n    /* tslint:disable:align */\n    PivotView.prototype.initProperties = function () {\n        this.pivotRefresh = Component.prototype.refresh;\n        this.isScrolling = false;\n        this.setProperties({ pivotValues: [] }, true);\n        this.scrollPosObject = {\n            vertical: 0, horizontal: 0, verticalSection: 0,\n            horizontalSection: 0, top: 0, left: 0, scrollDirection: { direction: '', position: 0 }\n        };\n        this.queryCellInfo = this.gridSettings.queryCellInfo ? this.gridSettings.queryCellInfo.bind(this) : undefined;\n        this.headerCellInfo = this.gridSettings.headerCellInfo ? this.gridSettings.headerCellInfo.bind(this) : undefined;\n        this.resizing = this.gridSettings.resizing ? this.gridSettings.resizing.bind(this) : undefined;\n        this.resizeStop = this.gridSettings.resizeStop ? this.gridSettings.resizeStop.bind(this) : undefined;\n        this.pdfHeaderQueryCellInfo = this.gridSettings.pdfHeaderQueryCellInfo ?\n            this.gridSettings.pdfHeaderQueryCellInfo.bind(this) : undefined;\n        this.pdfQueryCellInfo = this.gridSettings.pdfQueryCellInfo ? this.gridSettings.pdfQueryCellInfo.bind(this) : undefined;\n        this.excelHeaderQueryCellInfo = this.gridSettings.excelHeaderQueryCellInfo ?\n            this.gridSettings.excelHeaderQueryCellInfo.bind(this) : undefined;\n        this.excelQueryCellInfo = this.gridSettings.excelQueryCellInfo ?\n            this.gridSettings.excelQueryCellInfo.bind(this) : undefined;\n        this.columnDragStart = this.gridSettings.columnDragStart ? this.gridSettings.columnDragStart.bind(this) : undefined;\n        this.columnDrag = this.gridSettings.columnDrag ? this.gridSettings.columnDrag.bind(this) : undefined;\n        this.columnDrop = this.gridSettings.columnDrop ? this.gridSettings.columnDrop.bind(this) : undefined;\n        this.beforeColumnsRender = this.gridSettings.columnRender ? this.gridSettings.columnRender : undefined;\n        this.selected = this.gridSettings.cellSelected ? this.gridSettings.cellSelected : undefined;\n        this.cellDeselected = this.gridSettings.cellDeselected ? this.gridSettings.cellDeselected : undefined;\n        this.rowSelected = this.gridSettings.rowSelected ? this.gridSettings.rowSelected : undefined;\n        this.rowDeselected = this.gridSettings.rowDeselected ? this.gridSettings.rowDeselected : undefined;\n        this.chartTooltipRender = this.chartSettings.tooltipRender ? this.chartSettings.tooltipRender : undefined;\n        this.chartLoaded = this.chartSettings.loaded ? this.chartSettings.loaded : undefined;\n        this.chartLoad = this.chartSettings.load ? this.chartSettings.load : undefined;\n        this.chartResized = this.chartSettings.resized ? this.chartSettings.resized : undefined;\n        this.chartAxisLabelRender = this.chartSettings.axisLabelRender ? this.chartSettings.axisLabelRender : undefined;\n        this.contextMenuClick = this.gridSettings.contextMenuClick ? this.gridSettings.contextMenuClick : undefined;\n        this.contextMenuOpen = this.gridSettings.contextMenuOpen ? this.gridSettings.contextMenuOpen : undefined;\n        this.beforePdfExport = this.gridSettings.beforePdfExport ? this.gridSettings.beforePdfExport.bind(this) : undefined;\n        this.beforeExcelExport = this.gridSettings.beforeExcelExport ? this.gridSettings.beforeExcelExport.bind(this) : undefined;\n        if (this.gridSettings.rowHeight === null) {\n            this.setProperties({ gridSettings: { rowHeight: this.isAdaptive ? 48 : 36 } }, true);\n        }\n        this.element.style.height = '100%';\n        if (this.enableVirtualization) {\n            this.updatePageSettings(true);\n            if (this.allowExcelExport) {\n                PivotView_1.Inject(ExcelExport);\n            }\n            if (this.allowPdfExport) {\n                PivotView_1.Inject(PDFExport);\n            }\n            if (this.editSettings.allowEditing) {\n                PivotView_1.Inject(DrillThrough);\n            }\n        }\n        this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n            this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n            this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n        if (this.allowGrouping && !this.isCellBoxMultiSelection) {\n            this.isCellBoxMultiSelection = true;\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n        }\n        if (this.displayOption.view !== 'Table') {\n            this.chartModule = new PivotChart();\n        }\n        this.currentView = this.currentView ? this.currentView : (this.displayOption.view === 'Both' ?\n            this.displayOption.primary : this.displayOption.view);\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.updatePageSettings = function (isInit) {\n        if (this.enableVirtualization) {\n            var colValues = 1;\n            var rowValues = 1;\n            if (this.dataSourceSettings.values.length > 1 && this.dataType === 'pivot') {\n                if (this.dataSourceSettings.valueAxis === 'row') {\n                    rowValues = this.dataSourceSettings.values.length;\n                }\n                else {\n                    colValues = this.dataSourceSettings.values.length;\n                }\n            }\n            var heightAsNumber = this.getHeightAsNumber();\n            if (isNaN(heightAsNumber)) {\n                heightAsNumber = this.element.offsetHeight;\n            }\n            this.pageSettings = {\n                columnCurrentPage: isInit ? 1 : this.pageSettings.columnCurrentPage,\n                rowCurrentPage: isInit ? 1 : this.pageSettings.rowCurrentPage,\n                columnSize: Math.ceil((Math.floor((this.getWidthAsNumber()) /\n                    this.gridSettings.columnWidth) - 1) / colValues),\n                rowSize: Math.ceil(Math.floor((heightAsNumber) / this.gridSettings.rowHeight) / rowValues),\n                allowDataCompression: this.allowDataCompression\n            };\n        }\n    };\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.render = function () {\n        var _this_1 = this;\n        this.cellTemplateFn = this.templateParser(this.cellTemplate);\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.element, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.element }, this.createElement);\n        }\n        var loadArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotview: isBlazor() ? undefined : this,\n            fieldsType: {}\n        };\n        this.trigger(events.load, loadArgs, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this_1.dataSourceSettings.dataSource;\n            }\n            _this_1.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this_1.fieldsType = observedArgs.fieldsType;\n            _this_1.updateClass();\n            _this_1.notify(events.initSubComponent, {});\n            _this_1.notify(events.initialLoad, {});\n            if (_this_1.isAdaptive) {\n                _this_1.contextMenuModule.render();\n            }\n            _this_1.notify(events.initToolbar, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.addInternalEvents = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.renderPivotGrid, this);\n        this.on(events.contentReady, this.onContentReady, this);\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.removeInternalEvents = function () {\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.renderPivotGrid);\n        this.off(events.contentReady, this.onContentReady);\n    };\n    /**\n     * Get the Pivot widget properties to be maintained in the persisted state.\n     * @returns {string}\n     */\n    PivotView.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings', 'pivotValues', 'gridSettings', 'chartSettings', 'displayOption'];\n        /* tslint:disable */\n        this.chartSettings['tooltipRender'] = undefined;\n        this.chartSettings['resized'] = undefined;\n        this.chartSettings['loaded'] = undefined;\n        this.chartSettings['beforePrint'] = undefined;\n        this.chartSettings['animationComplete'] = undefined;\n        this.chartSettings['load'] = undefined;\n        this.chartSettings['textRender'] = undefined;\n        this.chartSettings['legendRender'] = undefined;\n        this.chartSettings['seriesRender'] = undefined;\n        this.chartSettings['pointRender'] = undefined;\n        this.chartSettings['axisLabelRender'] = undefined;\n        this.chartSettings['chartMouseClick'] = undefined;\n        this.chartSettings['chartMouseMove'] = undefined;\n        this.chartSettings['pointMove'] = undefined;\n        this.chartSettings['pointClick'] = undefined;\n        this.chartSettings['chartMouseDown'] = undefined;\n        this.chartSettings['chartMouseLeave'] = undefined;\n        this.chartSettings['dragComplete'] = undefined;\n        this.chartSettings['chartMouseUp'] = undefined;\n        this.chartSettings['scrollStart'] = undefined;\n        this.chartSettings['zoomComplete'] = undefined;\n        this.chartSettings['scrollChanged'] = undefined;\n        this.chartSettings['scrollEnd'] = undefined;\n        /* tslint:enable */\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Loads pivot Layout\n     * @param {string} persistData - Specifies the persist data to be loaded to pivot.\n     * @returns {void}\n     */\n    PivotView.prototype.loadPersistData = function (persistData) {\n        var pivotData;\n        /* tslint:disable */\n        if (isBlazor()) {\n            pivotData = persistData;\n            pivotData.dataSourceSettings.dataSource = this.dataSourceSettings.dataSource;\n        }\n        else {\n            pivotData = JSON.parse(persistData);\n        }\n        this.setProperties({\n            gridSettings: pivotData.gridSettings,\n            pivotValues: pivotData.pivotValues,\n            chartSettings: pivotData.chartSettings,\n            displayOption: pivotData.displayOption\n        }, true);\n        /* tslint:enable */\n        this.dataSourceSettings = pivotData.dataSourceSettings;\n    };\n    PivotView.prototype.mergePersistPivotData = function () {\n        var blazdataSource;\n        if (isBlazor()) {\n            blazdataSource = this.dataSourceSettings.dataSource;\n        }\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n        if (this.dataSourceSettings.dataSource instanceof Object && isBlazor()) {\n            this.setProperties({ dataSourceSettings: { dataSource: blazdataSource } }, true);\n        }\n    };\n    /**\n     * Method to open conditional formatting dialog\n     */\n    PivotView.prototype.showConditionalFormattingDialog = function () {\n        if (this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.showConditionalFormattingDialog();\n        }\n    };\n    /**\n     * Method to open calculated field dialog\n     */\n    PivotView.prototype.createCalculatedFieldDialog = function () {\n        if (this.calculatedFieldModule) {\n            this.calculatedFieldModule.createCalculatedFieldDialog();\n        }\n    };\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    PivotView.prototype.getModuleName = function () {\n        return 'pivotview';\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     * @hidden\n     */\n    PivotView.prototype.copy = function (withHeader) {\n        this.grid.copy(withHeader);\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-pivotgrid.html#printmode-string).\n     * @returns {void}\n     * @hidden\n     */\n    // public print(): void {\n    //     this.grid.print();\n    // }\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Called internally if any of the property value changed.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSourceSettings':\n                case 'hyperlinkSettings':\n                case 'allowDrillThrough':\n                case 'editSettings':\n                case 'allowDataCompression':\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && newProp.dataSourceSettings.groupSettings && this.dataType === 'pivot') {\n                        this.updateGroupingReport(newProp.dataSourceSettings.groupSettings, 'Date');\n                    }\n                    if (newProp.dataSourceSettings && Object.keys(newProp.dataSourceSettings).length === 1\n                        && Object.keys(newProp.dataSourceSettings)[0] === 'dataSource') {\n                        if (!(isBlazor() && this.enableVirtualization)) {\n                            this.engineModule.fieldList = null;\n                            this.refreshData();\n                        }\n                    }\n                    else {\n                        this.notify(events.initialLoad, {});\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.layoutRefresh();\n                    break;\n                case 'pivotValues':\n                case 'displayOption':\n                    if (!this.showToolbar && newProp.displayOption && Object.keys(newProp.displayOption).length === 1 &&\n                        newProp.displayOption.view) {\n                        this.currentView = (newProp.displayOption.view === 'Both' ?\n                            this.displayOption.primary : newProp.displayOption.view);\n                        if (this.showGroupingBar || this.showFieldList) {\n                            if (this.showFieldList && this.pivotFieldListModule) {\n                                this.pivotFieldListModule.destroy();\n                            }\n                            if (this.showGroupingBar && this.groupingBarModule) {\n                                this.groupingBarModule.destroy();\n                            }\n                            this.notify(events.initSubComponent, this);\n                        }\n                        if (!this.grid && newProp.displayOption.view !== 'Chart') {\n                            this.renderEmptyGrid();\n                            if (newProp.displayOption.view === 'Table') {\n                                if (this.chartModule) {\n                                    this.chartModule.destroy();\n                                    this.chart = undefined;\n                                    this.chartModule = undefined;\n                                }\n                            }\n                        }\n                        else if (!this.chartModule && this.displayOption.view !== 'Table') {\n                            this.chartModule = new PivotChart();\n                        }\n                    }\n                    this.notify(events.dataReady, {});\n                    break;\n                case 'gridSettings':\n                    this.lastGridSettings = newProp.gridSettings;\n                    this.isCellBoxMultiSelection = this.gridSettings.allowSelection &&\n                        this.gridSettings.selectionSettings.cellSelectionMode === 'Box' &&\n                        this.gridSettings.selectionSettings.mode === 'Cell' && this.gridSettings.selectionSettings.type === 'Multiple';\n                    if (this.allowGrouping && this.groupingModule && !this.isCellBoxMultiSelection) {\n                        /* tslint:disable-next-line:max-line-length */\n                        this.setProperties({ gridSettings: { allowSelection: true, selectionSettings: { cellSelectionMode: 'Box', mode: 'Cell', type: 'Multiple' } } }, true);\n                        this.isCellBoxMultiSelection = true;\n                    }\n                    this.renderModule.updateGridSettings();\n                    break;\n                case 'chartSettings':\n                    this.chartModule.loadChart(this, this.chartSettings);\n                    this.notify(events.uiUpdate, this);\n                    break;\n                case 'locale':\n                case 'currencyCode':\n                case 'enableRtl':\n                    if (this.tooltip) {\n                        this.tooltip.destroy();\n                    }\n                    _super.prototype.refresh.call(this);\n                    this.updateClass();\n                    break;\n                case 'enableValueSorting':\n                    this.enableValueSorting = newProp.enableValueSorting;\n                    this.updateDataSource();\n                    break;\n                case 'showGroupingBar':\n                    if (this.element.querySelector('.e-grouping-bar')) {\n                        this.element.querySelector('.e-grouping-bar').remove();\n                    }\n                    this.renderPivotGrid();\n                    break;\n                case 'groupingBarSettings':\n                    this.axisFieldModule.render();\n                    break;\n                case 'showTooltip':\n                    this.renderToolTip();\n                    break;\n                case 'toolbar':\n                    if (this.toolbarModule) {\n                        this.toolbarModule.refreshToolbar();\n                    }\n                    break;\n            }\n        }\n    };\n    PivotView.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    PivotView.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.appendHtml = function (node, innerHtml) {\n        var tempElement = document.createElement('div');\n        tempElement.innerHTML = innerHtml;\n        if (!isNullOrUndefined(tempElement.firstChild)) {\n            node.appendChild(tempElement.firstChild);\n        }\n        return node;\n    };\n    /**\n     * Render the UI section of PivotView.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.renderPivotGrid = function () {\n        if (this.currentView === 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        if (this.chartModule) {\n            this.chartModule.engineModule = this.engineModule;\n            this.chartModule.loadChart(this, this.chartSettings);\n            if (this.enableRtl && this.chart) {\n                addClass([this.chart.element], cls.PIVOTCHART_LTR);\n            }\n        }\n        if (this.showFieldList || this.showGroupingBar) {\n            this.notify(events.uiUpdate, this);\n            if (this.pivotFieldListModule && this.allowDeferLayoutUpdate) {\n                this.pivotFieldListModule.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            }\n        }\n        if (this.enableVirtualization) {\n            this.virtualscrollModule = new VirtualScroll(this);\n        }\n        if (this.displayOption.view !== 'Chart') {\n            if (this.hyperlinkSettings) {\n                this.isRowCellHyperlink = (this.hyperlinkSettings.showRowHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isColumnCellHyperlink = (this.hyperlinkSettings.showColumnHeaderHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isValueCellHyperlink = (this.hyperlinkSettings.showValueCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.isSummaryCellHyperlink = (this.hyperlinkSettings.showSummaryCellHyperlink ?\n                    true : this.hyperlinkSettings.showHyperlink ? true : false);\n                this.applyHyperlinkSettings();\n            }\n            if (this.allowDrillThrough || this.editSettings.allowEditing) {\n                this.drillThroughModule = new DrillThrough(this);\n            }\n            this.renderModule = new Render(this);\n            this.renderModule.render();\n        }\n        else if (this.grid) {\n            remove(this.grid.element);\n        }\n        this.trigger(events.dataBound);\n        if (this.allowConditionalFormatting) {\n            this.applyFormatting(this.pivotValues);\n        }\n        if (this.showToolbar) {\n            if (this.displayOption.view === 'Both' && this.chart && this.grid) {\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n                if (this.toolbarModule && this.toolbarModule.toolbar) {\n                    this.toolbarModule.toolbar.width = this.getGridWidthAsNumber() - 2;\n                }\n                this.chart.element.style.width = formatUnit(this.getGridWidthAsNumber());\n                this.chart.width = formatUnit(this.getGridWidthAsNumber());\n                if (this.currentView === 'Table') {\n                    this.grid.element.style.display = '';\n                    this.chart.element.style.display = 'none';\n                }\n                else {\n                    this.grid.element.style.display = 'none';\n                    this.chart.element.style.display = '';\n                }\n            }\n        }\n        if (this.toolbarModule) {\n            if (this.showFieldList && this.element.querySelector('#' + this.element.id + '_PivotFieldList')) {\n                this.element.querySelector('#' + this.element.id + '_PivotFieldList').style.display = 'none';\n            }\n            if (this.toolbarModule && this.toolbarModule.action !== 'New' && this.toolbarModule.action !== 'Load'\n                && this.toolbarModule.action !== 'Remove') {\n                this.isModified = true;\n            }\n            else {\n                this.toolbarModule.action = '';\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.showWaitingPopup = function () {\n        if (this.grid && this.grid.element) {\n            showSpinner(this.grid.element);\n        }\n        else {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * @hidden\n     */\n    PivotView.prototype.hideWaitingPopup = function () {\n        if (this.grid && this.grid.element) {\n            hideSpinner(this.grid.element);\n        }\n        else {\n            hideSpinner(this.element);\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot View component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotView.prototype.updateDataSource = function (isRefreshGrid) {\n        this.showWaitingPopup();\n        var pivot = this;\n        //setTimeout(() => {\n        /* tslint:disable:align */\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n            }\n            pivot.updatePageSettings(false);\n            if (pivot.dataType === 'pivot' && pivot.enableVirtualization && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                /* tslint:disable-next-line:no-any */\n                var interopArguments = {};\n                if (isSorted) {\n                    pivot.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                    if (isBlazor()) {\n                        var ejsInterop = 'ejsInterop';\n                        var sortInfo = {\n                            name: pivot.lastSortInfo.name,\n                            order: pivot.lastSortInfo.order\n                        };\n                        /* tslint:disable-next-line */\n                        var sortArgs = window[ejsInterop].copyWithoutCircularReferences([pivot.lastSortInfo], pivot.lastSortInfo);\n                        interopArguments = { 'key': 'onSort', 'arg': sortArgs };\n                    }\n                    else {\n                        pivot.engineModule.onSort(pivot.lastSortInfo);\n                    }\n                    pivot.lastSortInfo = {};\n                }\n                if (isAggChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var ejsInterop = 'ejsInterop';\n                        var aggregateArgs = window[ejsInterop].copyWithoutCircularReferences([pivot.lastAggregationInfo], pivot.lastAggregationInfo);\n                        interopArguments = { 'key': 'onAggregation', 'arg': aggregateArgs };\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                    }\n                    pivot.lastAggregationInfo = {};\n                }\n                if (isCalcChange) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var dataSourceSettings = window['ejsInterop'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                        interopArguments = {\n                            'key': 'onCalcOperation',\n                            'arg': {\n                                lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                values: dataSourceSettings.values,\n                                calculatedFieldSettings: dataSourceSettings.calculatedFieldSettings\n                            }\n                        };\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                    }\n                    pivot.lastCalcFieldInfo = {};\n                }\n                if (isFiltered) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var filterArgs = window['ejsInterop'].copyWithoutCircularReferences([pivot.lastFilterInfo], pivot.lastFilterInfo);\n                        var filterSettings = window['ejsInterop'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                        interopArguments = {\n                            'key': 'onFilter',\n                            'arg': { 'lastFilterInfo': filterArgs, 'filterSettings': filterSettings }\n                        };\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                    }\n                    pivot.lastFilterInfo = {};\n                }\n                if (isBlazor()) {\n                    /* tslint:disable */\n                    pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', interopArguments['key'], interopArguments['arg']).then(function (data) {\n                        pivot.updateBlazorData(data, pivot);\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                            pivot.calculatedFieldModule.endDialog();\n                            pivot.calculatedFieldModule.isRequireUpdate = false;\n                        }\n                    });\n                    /* tslint:enable */\n                }\n                else {\n                    pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n            }\n            else {\n                if (pivot.dataType === 'olap') {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.olapEngineModule.fieldList,\n                        savedFieldListData: pivot.olapEngineModule.fieldListData,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj\n                    };\n                    if (isCalcChange || isSorted) {\n                        pivot.olapEngineModule.savedFieldList = pivot.olapEngineModule.fieldList;\n                        pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n                        if (isCalcChange) {\n                            pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        else {\n                            pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n                            pivot.lastSortInfo = {};\n                        }\n                    }\n                    else {\n                        pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n                    }\n                    pivot.setProperties({ pivotValues: pivot.olapEngineModule.pivotValues }, true);\n                    pivot.enginePopulatedEventMethod('updateDataSource');\n                }\n                else {\n                    /* tslint:disable:align */\n                    var customProperties = {\n                        mode: '',\n                        savedFieldList: pivot.engineModule.fieldList,\n                        pageSettings: pivot.pageSettings,\n                        enableValueSorting: pivot.enableValueSorting,\n                        isDrillThrough: (pivot.allowDrillThrough || pivot.editSettings.allowEditing),\n                        localeObj: pivot.localeObj,\n                        fieldsType: pivot.fieldsType\n                    };\n                    if (isBlazor() && pivot.enableVirtualization) {\n                        /* tslint:disable */\n                        var ejsInterop = 'ejsInterop';\n                        var customArgs = window[ejsInterop].copyWithoutCircularReferences([customProperties], customProperties);\n                        var datasourceSettings = window[ejsInterop].copyWithoutCircularReferences([pivot.dataSourceSettings], pivot.dataSourceSettings);\n                        pivot.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                            pivot.updateBlazorData(data, pivot);\n                            pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                            pivot.enginePopulatedEventMethod('updateDataSource', pivot);\n                        });\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        pivot.setProperties({ pivotValues: pivot.engineModule.pivotValues }, true);\n                        pivot.enginePopulatedEventMethod('updateDataSource');\n                    }\n                }\n            }\n        });\n        //});\n    };\n    /**\n     * Export Pivot widget data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('Excel');\n        }\n        else {\n            this.grid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export PivotGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    /* tslint:disable-next-line:no-any */\n    PivotView.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        if (this.enableVirtualization) {\n            this.excelExportModule.exportToExcel('CSV');\n        }\n        else {\n            this.grid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n    };\n    /**\n     * Export Pivot widget data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns void\n     */\n    PivotView.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.enableVirtualization) {\n            this.pdfExportModule.exportToPDF();\n        }\n        else {\n            this.grid.pdfExport(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n    };\n    /**\n     * Export method for the chart.\n     * @param type - Defines the export type.\n     * @param fileName - Defines file name of export document.\n     * @param orientation - Defines the page orientation on pdf export(0 for Portrait mode, 1 for Landscape mode).\n     * @param width - Defines width of the export document.\n     * @param height - Defines height of the export document.\n     */\n    PivotView.prototype.chartExport = function (type, fileName, orientation, width, height) {\n        if (this.chart && this.chart.enableExport) {\n            this.chart.exportModule.export(type, fileName, orientation, null, width, height);\n        }\n    };\n    /**\n     * Print method for the chart.\n     */\n    PivotView.prototype.printChart = function () {\n        if (this.chart) {\n            this.chart.print();\n        }\n    };\n    /** @hidden */\n    /* tslint:disable:max-func-body-length */\n    PivotView.prototype.onDrill = function (target, chartDrillInfo) {\n        var delimiter = (this.dataSourceSettings.drilledMembers[0] && this.dataSourceSettings.drilledMembers[0].delimiter) ?\n            this.dataSourceSettings.drilledMembers[0].delimiter : '**';\n        var fieldName = '';\n        var axis = '';\n        var action = '';\n        if (chartDrillInfo) {\n            fieldName = chartDrillInfo.fieldName;\n            axis = chartDrillInfo.cell.axis;\n            action = chartDrillInfo.isDrilled ? 'up' : 'down';\n        }\n        else {\n            fieldName = target.parentElement.getAttribute('fieldname');\n            axis = target.parentElement.classList.contains(cls.ROWSHEADER) ? 'row' : 'column';\n            action = target.classList.contains(cls.COLLAPSE) ? 'up' : 'down';\n        }\n        if (this.dataType === 'pivot') {\n            var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n                this.engineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n            var memberName = currentCell.valueSort.levelName.\n                split(this.engineModule.valueSortSettings.headerDelimiter).join(delimiter);\n            var fieldAvail = false;\n            if (this.dataSourceSettings.drilledMembers.length === 0) {\n                /* tslint:disable-next-line:max-line-length */\n                this.setProperties({ dataSourceSettings: { drilledMembers: [{ name: fieldName, items: [memberName], delimiter: delimiter }] } }, true);\n            }\n            else {\n                for (var fCnt = 0; fCnt < this.dataSourceSettings.drilledMembers.length; fCnt++) {\n                    var field = this.dataSourceSettings.drilledMembers[fCnt];\n                    memberName = memberName.split(delimiter).join(field.delimiter ? field.delimiter : delimiter);\n                    delimiter = field.delimiter = field.delimiter ? field.delimiter : delimiter;\n                    if (field.name === fieldName) {\n                        fieldAvail = true;\n                        var memIndex = field.items.indexOf(memberName);\n                        if (memIndex > -1) {\n                            field.items.splice(memIndex, 1);\n                        }\n                        else {\n                            field.items.push(memberName);\n                        }\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                if (!fieldAvail) {\n                    this.dataSourceSettings.drilledMembers.push({ name: fieldName, items: [memberName], delimiter: delimiter });\n                }\n            }\n            this.showWaitingPopup();\n            var pivot_1 = this;\n            //setTimeout(() => {\n            var drilledItem_1 = {\n                fieldName: fieldName, memberName: memberName, delimiter: delimiter,\n                axis: axis,\n                action: action,\n                currentCell: currentCell\n            };\n            var drillArgs_1 = {\n                drillInfo: drilledItem_1,\n                pivotview: isBlazor() ? undefined : pivot_1\n            };\n            pivot_1.trigger(events.drill, drillArgs_1, function (observedArgs) {\n                if (pivot_1.enableVirtualization) {\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        var ejsInterop = 'ejsInterop';\n                        var dataSourceSettings = window[ejsInterop].copyWithoutCircularReferences([pivot_1.dataSourceSettings], pivot_1.dataSourceSettings);\n                        var drillItem = window[ejsInterop].copyWithoutCircularReferences([drilledItem_1], drilledItem_1);\n                        var args = window[ejsInterop].copyWithoutCircularReferences([drillArgs_1], drillArgs_1);\n                        pivot_1.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'onDrill', { 'dataSourceSettings': dataSourceSettings, 'drilledItem': drillItem }).then(function (data) {\n                            pivot_1.updateBlazorData(data, pivot_1);\n                            pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                            pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                            pivot_1.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot_1.engineModule.drilledMembers = pivot_1.dataSourceSettings.drilledMembers;\n                        pivot_1.engineModule.onDrill(drilledItem_1);\n                    }\n                }\n                else {\n                    pivot_1.engineModule.generateGridData(pivot_1.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_1.enableVirtualization)) {\n                    pivot_1.setProperties({ pivotValues: pivot_1.engineModule.pivotValues }, true);\n                    pivot_1.renderPivotGrid();\n                }\n            });\n        }\n        else {\n            this.onOlapDrill(fieldName, axis, action, delimiter, target, chartDrillInfo);\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotView.prototype.onOlapDrill = function (fieldName, axis, action, delimiter, target, chartDrillInfo) {\n        var currentCell = chartDrillInfo ? chartDrillInfo.cell :\n            this.olapEngineModule.pivotValues[Number(target.parentElement.getAttribute('index'))][Number(target.parentElement.getAttribute('aria-colindex'))];\n        var tupInfo = axis === 'row' ? this.olapEngineModule.tupRowInfo[currentCell.ordinal] :\n            this.olapEngineModule.tupColumnInfo[currentCell.ordinal];\n        var drillInfo = {\n            axis: axis,\n            action: action,\n            fieldName: fieldName,\n            delimiter: delimiter,\n            memberName: tupInfo.uNameCollection,\n            currentCell: currentCell\n        };\n        /* tslint:disable-next-line:max-line-length */\n        var fieldPos = tupInfo.drillInfo.map(function (item) { return item.hierarchy; }).indexOf(currentCell.hierarchy.toString());\n        if (drillInfo && drillInfo.action === 'down') {\n            this.olapEngineModule.drilledSets[currentCell.actualText] = tupInfo.members[fieldPos];\n            var fields = drillInfo.memberName.split('::');\n            var member = '';\n            for (var pos = 0; pos <= fieldPos; pos++) {\n                var field = fields[pos];\n                var members = field.split('~~');\n                member = member + (member !== '' ? '~~' : '') + members[members.length - 1];\n            }\n            drillInfo.memberName = member;\n            var drillItem = [];\n            for (var _i = 0, _a = this.dataSourceSettings.drilledMembers; _i < _a.length; _i++) {\n                var field = _a[_i];\n                if (field.name === drillInfo.fieldName) {\n                    drillItem.push(field);\n                }\n            }\n            if (drillItem.length > 0) {\n                if (drillItem[0].delimiter) {\n                    member = member.replace(/~~/g, drillItem[0].delimiter);\n                }\n                var index = PivotUtil.inArray(member, drillItem[0].items);\n                if (index === -1) {\n                    drillItem[0].items.push(member);\n                }\n            }\n            else {\n                var drilledMember = { name: drillInfo.fieldName, items: [member], delimiter: '~~' };\n                if (!this.dataSourceSettings.drilledMembers) {\n                    this.dataSourceSettings.drilledMembers = [drilledMember];\n                }\n                else {\n                    this.dataSourceSettings.drilledMembers.push(drilledMember);\n                }\n            }\n            this.olapEngineModule.updateDrilledInfo(this.dataSourceSettings);\n        }\n        else {\n            delete this.olapEngineModule.drilledSets[currentCell.actualText];\n            var drillSets = this.olapEngineModule.getDrilledSets(drillInfo.memberName, currentCell, fieldPos, axis);\n            var keys = Object.keys(drillSets);\n            for (var _b = 0, keys_1 = keys; _b < keys_1.length; _b++) {\n                var key = keys_1[_b];\n                var drillSet = drillSets[key];\n                for (var i = 0, cnt = this.dataSourceSettings.drilledMembers.length; i < cnt; i++) {\n                    var drillItem = this.dataSourceSettings.drilledMembers[i];\n                    var member = drillSet;\n                    if (drillItem.delimiter) {\n                        member = drillSet.replace(/~~/g, drillItem.delimiter);\n                    }\n                    var items = [];\n                    for (var itemPos = 0; itemPos < drillItem.items.length; itemPos++) {\n                        if (drillItem.items[itemPos].indexOf(member) !== 0) {\n                            items[items.length] = drillItem.items[itemPos];\n                        }\n                    }\n                    drillItem.items = items;\n                }\n            }\n            var drilledMembers = [];\n            for (var _c = 0, _d = this.dataSourceSettings.drilledMembers; _c < _d.length; _c++) {\n                var fields = _d[_c];\n                if (fields.items.length > 0) {\n                    drilledMembers.push(fields);\n                }\n            }\n            this.setProperties({ dataSourceSettings: { drilledMembers: drilledMembers } }, true);\n            this.olapEngineModule.updateDrilledInfo(this.dataSourceSettings);\n        }\n        this.setProperties({ pivotValues: this.olapEngineModule.pivotValues }, true);\n        this.renderPivotGrid();\n    };\n    PivotView.prototype.onContentReady = function () {\n        if (this.currentView !== 'Table') {\n            /* tslint:disable-next-line */\n            if (this.cellTemplate && isBlazor()) {\n                resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n            }\n        }\n        this.isPopupClicked = false;\n        if (this.showFieldList) {\n            hideSpinner(this.pivotFieldListModule.fieldListSpinnerElement);\n        }\n        else if (this.fieldListSpinnerElement) {\n            hideSpinner(this.fieldListSpinnerElement);\n        }\n        if (!this.isEmptyGrid) {\n            this.hideWaitingPopup();\n            this.trigger(events.dataBound);\n        }\n        else {\n            this.isEmptyGrid = false;\n        }\n        if (this.grid) {\n            var engine = this.dataType === 'pivot' ? this.engineModule : this.olapEngineModule;\n            if (this.enableVirtualization && engine) {\n                if (this.element.querySelector('.' + cls.MOVABLECONTENT_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).appendChild(this.virtualDiv);\n                }\n                if (this.element.querySelector('.' + cls.MOVABLEHEADER_DIV) &&\n                    !this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV)) {\n                    this.virtualHeaderDiv = createElement('div', { className: cls.VIRTUALTRACK_DIV });\n                    this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).appendChild(this.virtualHeaderDiv);\n                }\n                else {\n                    this.virtualHeaderDiv =\n                        this.element.querySelector('.' + cls.MOVABLEHEADER_DIV).querySelector('.' + cls.VIRTUALTRACK_DIV);\n                }\n                var movableTable = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV).querySelector('.e-table');\n                var vHeight = (this.gridSettings.rowHeight * engine.rowCount + 0.1 - movableTable.clientHeight);\n                if (vHeight > this.scrollerBrowserLimit) {\n                    this.verticalScrollScale = vHeight / this.scrollerBrowserLimit;\n                    vHeight = this.scrollerBrowserLimit;\n                }\n                var vWidth = (this.gridSettings.columnWidth * engine.columnCount\n                    - this.grid.columns[0].width);\n                if (vWidth > this.scrollerBrowserLimit) {\n                    this.horizontalScrollScale = vWidth / this.scrollerBrowserLimit;\n                    vWidth = this.scrollerBrowserLimit;\n                }\n                setStyleAttribute(this.virtualDiv, {\n                    height: (vHeight > 0.1 ? vHeight : 0.1) + 'px',\n                    width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                setStyleAttribute(this.virtualHeaderDiv, {\n                    height: 0, width: (vWidth > 0.1 ? vWidth : 0.1) + 'px'\n                });\n                var mCnt = this.element.querySelector('.' + cls.MOVABLECONTENT_DIV);\n                var fCnt = this.element.querySelector('.' + cls.FROZENCONTENT_DIV);\n                var mHdr = this.element.querySelector('.' + cls.MOVABLEHEADER_DIV);\n                var verOffset = (mCnt.scrollTop > this.scrollerBrowserLimit) ?\n                    mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[1].trim() :\n                    -(((mCnt.scrollTop * this.verticalScrollScale) - this.scrollPosObject.verticalSection - mCnt.scrollTop)) + 'px)';\n                var horiOffset = (mCnt.scrollLeft > this.scrollerBrowserLimit) ?\n                    (mCnt.querySelector('.' + cls.TABLE).style.transform.split(',')[0].trim() + ',') :\n                    'translate(' + -(((mCnt.scrollLeft * this.horizontalScrollScale) -\n                        this.scrollPosObject.horizontalSection - mCnt.scrollLeft)) + 'px,';\n                setStyleAttribute(fCnt.querySelector('.e-table'), {\n                    transform: 'translate(' + 0 + 'px,' + verOffset\n                });\n                setStyleAttribute(mCnt.querySelector('.e-table'), {\n                    transform: horiOffset + verOffset\n                });\n                setStyleAttribute(mHdr.querySelector('.e-table'), {\n                    transform: horiOffset + 0 + 'px)'\n                });\n            }\n            if (this.showGroupingBar) {\n                this.element.style.minWidth = '400px';\n                this.grid.element.style.minWidth = '400px';\n            }\n            else {\n                this.element.style.minWidth = '310px';\n                this.grid.element.style.minWidth = '310px';\n            }\n        }\n        this.unwireEvents();\n        this.wireEvents();\n        this.isChartLoaded = false;\n        if (this.cellTemplate && isBlazor()) {\n            var gridCells = Object.keys(this.gridCellCollection);\n            if (gridCells.length > 0) {\n                for (var _i = 0, gridCells_1 = gridCells; _i < gridCells_1.length; _i++) {\n                    var cell = gridCells_1[_i];\n                    /* tslint:disable-next-line */\n                    var templateObject = {};\n                    var tCell = this.gridCellCollection[cell];\n                    var colIndex = Number(tCell.getAttribute('aria-colindex'));\n                    var rowIndex = Number(tCell.getAttribute('index'));\n                    var pivotCell = this.pivotValues[rowIndex][colIndex];\n                    templateObject.axis = pivotCell.axis;\n                    if (templateObject.axis === 'column' || templateObject.axis === 'row') {\n                        templateObject.fieldName = pivotCell.valueSort.axis;\n                        templateObject.formattedText = pivotCell.formattedText;\n                    }\n                    else {\n                        templateObject.fieldName = pivotCell.actualText;\n                        templateObject.formattedText = pivotCell.formattedText;\n                        templateObject.value = pivotCell.value;\n                    }\n                    /* tslint:disable-next-line */\n                    var element = this.getCellTemplate()(templateObject, this, 'cellTemplate', this.element.id + '_cellTemplate');\n                    if (element && element !== '' && element.length > 0) {\n                        if (this.enableHtmlSanitizer) {\n                            this.appendHtml(tCell, SanitizeHtmlHelper.sanitize(element[0].outerHTML));\n                        }\n                        else {\n                            this.appendHtml(tCell, element[0].outerHTML);\n                        }\n                    }\n                }\n                updateBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate', this);\n            }\n        }\n    };\n    PivotView.prototype.setToolTip = function (args) {\n        var colIndex = Number(args.target.getAttribute('aria-colindex'));\n        var rowIndex = Number(args.target.getAttribute('index'));\n        var cell = this.pivotValues[rowIndex][colIndex];\n        this.tooltip.content = '';\n        var aggregateType;\n        var caption;\n        var hasField = false;\n        if (cell && this.dataType === 'olap') {\n            if (this.olapEngineModule.fieldList[cell.actualText]) {\n                var field = this.olapEngineModule.fieldList[cell.actualText];\n                aggregateType = field.isCalculatedField ? field.type : field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        else {\n            if (cell && this.engineModule.fieldList[cell.actualText]) {\n                var field = this.engineModule.fieldList[cell.actualText];\n                aggregateType = field.aggregateType;\n                caption = field.caption;\n                hasField = true;\n            }\n        }\n        if (cell && hasField) {\n            this.tooltip.content = '<div class=' + cls.PIVOTTOOLTIP + '><p class=' + cls.TOOLTIP_HEADER + '>' +\n                this.localeObj.getConstant('row') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                this.getRowText(rowIndex, 0) +\n                '</p></br><p class=' + cls.TOOLTIP_HEADER + '>' +\n                this.localeObj.getConstant('column') + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                this.getColText(0, colIndex, rowIndex) + '</p></br>' + (cell.actualText !== '' ? ('<p class=' + cls.TOOLTIP_HEADER + '>' +\n                (this.dataType === 'olap' ? '' :\n                    (this.localeObj.getConstant(aggregateType) + ' ' + this.localeObj.getConstant('of') + ' ')) +\n                caption + ':</p><p class=' + cls.TOOLTIP_CONTENT + '>' +\n                (((cell.formattedText === '0' || cell.formattedText === '') ?\n                    this.localeObj.getConstant('noValue') : cell.formattedText)) + '</p></div>') : '');\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    PivotView.prototype.getRowText = function (rowIndex, colIndex) {\n        var cell = this.pivotValues[rowIndex][colIndex];\n        var level = cell.level;\n        var rowText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (level > 0 || cell.index === undefined) {\n            rowIndex--;\n            cell = this.pivotValues[rowIndex][colIndex];\n            if (cell.index !== undefined) {\n                if (level > cell.level) {\n                    rowText = rowText + ' - ' + cell.formattedText;\n                    level = level - 1;\n                }\n            }\n        }\n        return rowText.split(' - ').reverse().join(' - ');\n    };\n    PivotView.prototype.getColText = function (rowIndex, colIndex, limit) {\n        var cell = this.pivotValues[0][colIndex];\n        var axis = cell.axis;\n        var colText = cell.type === 'grand sum' ? this.localeObj.getConstant('grandTotal') : cell.formattedText;\n        while (axis !== 'value' && limit > rowIndex) {\n            rowIndex++;\n            if (this.pivotValues[rowIndex]) {\n                cell = this.pivotValues[rowIndex][colIndex];\n                axis = cell.axis;\n                if (cell.type !== 'sum' && cell.type !== 'grand sum' && axis !== 'value') {\n                    colText = colText + ' - ' + cell.formattedText;\n                }\n            }\n        }\n        return colText;\n    };\n    PivotView.prototype.updateClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], cls.RTL);\n        }\n        else {\n            removeClass([this.element], cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClass([this.element], cls.DEVICE);\n        }\n        else {\n            removeClass([this.element], cls.DEVICE);\n        }\n    };\n    PivotView.prototype.mouseRclickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        this.lastCellClicked = e.target;\n    };\n    PivotView.prototype.mouseDownHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = true;\n            this.isMouseUp = false;\n            var parent_1 = this.parentAt(e.target, 'TH');\n            this.clearSelection(parent_1, e, Number(parent_1.getAttribute('aria-colindex')), Number(parent_1.getAttribute('index')));\n            this.lastSelectedElement = undefined;\n        }\n    };\n    PivotView.prototype.mouseMoveHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            e.preventDefault();\n            if (this.isMouseDown && e.target) {\n                var ele = e.target;\n                var parentElement = this.parentAt(ele, 'TH');\n                if (this.lastSelectedElement && this.lastSelectedElement !== parentElement &&\n                    parentElement.classList.contains(cls.SELECTED_BGCOLOR)) {\n                    this.lastSelectedElement.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    this.lastSelectedElement.classList.remove(cls.SELECTED_BGCOLOR);\n                    this.lastSelectedElement = parentElement;\n                }\n                else {\n                    this.lastSelectedElement = parentElement;\n                    parentElement.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                    parentElement.classList.add(cls.SELECTED_BGCOLOR);\n                }\n                this.renderModule.selected();\n            }\n        }\n    };\n    PivotView.prototype.mouseUpHandler = function (e) {\n        if (this.isCellBoxMultiSelection) {\n            this.isMouseDown = false;\n            this.isMouseUp = true;\n        }\n    };\n    PivotView.prototype.parentAt = function (target, tagName) {\n        while (target.tagName !== tagName) {\n            if (target.parentElement) {\n                target = target.parentElement;\n            }\n            else {\n                break;\n            }\n        }\n        return target;\n    };\n    PivotView.prototype.mouseClickHandler = function (e) {\n        if (e.which === 3) {\n            this.lastCellClicked = e.target;\n        }\n        else if (e.which === 0) {\n            this.lastCellClicked = e.target;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-headercell') ||\n            target.classList.contains('e-headercelldiv') ||\n            target.classList.contains('e-rowsheader') ||\n            target.classList.contains('e-rowcell') ||\n            target.classList.contains('e-stackedheadercelldiv') ||\n            target.classList.contains('e-headertext') ||\n            target.classList.contains('e-ascending') ||\n            target.classList.contains('e-descending')) && this.enableValueSorting && this.dataType === 'pivot') {\n            var ele = null;\n            if (target.classList.contains('e-headercell') || target.classList.contains('e-rowsheader')\n                || target.classList.contains('e-rowcell')) {\n                ele = target;\n            }\n            else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-headercelldiv') ||\n                target.classList.contains('e-ascending') || target.classList.contains('e-descending')) {\n                ele = target.parentElement;\n            }\n            else if (target.classList.contains('e-headertext')) {\n                ele = target.parentElement.parentElement;\n            }\n            this.CellClicked(target, e);\n            if ((ele.parentElement.parentElement.parentElement.parentElement.classList.contains('e-movableheader')\n                && this.dataSourceSettings.valueAxis === 'column') || (ele.parentElement.classList.contains('e-row') &&\n                this.dataSourceSettings.valueAxis === 'row') && (ele.classList.contains('e-rowsheader') ||\n                ele.classList.contains('e-stot'))) {\n                /* tslint:disable */\n                var colIndex = Number(ele.getAttribute('aria-colindex'));\n                var rowIndex = Number(ele.getAttribute('index'));\n                if (this.dataSourceSettings.valueAxis === 'row' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    rowIndex = this.pivotValues[rowIndex][colIndex].type === 'value' ? rowIndex : (rowIndex + 1);\n                }\n                else if (this.dataSourceSettings.valueAxis === 'column' && (this.dataSourceSettings.values.length > 1 || this.dataSourceSettings.alwaysShowValueHeader)) {\n                    colIndex = (Number(ele.getAttribute('aria-colindex')) + Number(ele.getAttribute('aria-colspan')) - 1);\n                    rowIndex = this.engineModule.headerContent.length - 1;\n                }\n                this.setProperties({\n                    dataSourceSettings: {\n                        valueSortSettings: {\n                            columnIndex: (Number(ele.getAttribute('aria-colindex')) +\n                                Number(ele.getAttribute('aria-colspan')) - 1),\n                            sortOrder: this.dataSourceSettings.valueSortSettings.sortOrder === 'Descending' ? 'Ascending' : 'Descending',\n                            headerText: this.pivotValues[rowIndex][colIndex].valueSort.levelName,\n                            headerDelimiter: this.dataSourceSettings.valueSortSettings.headerDelimiter ?\n                                this.dataSourceSettings.valueSortSettings.headerDelimiter : '.'\n                        }\n                    }\n                }, true);\n                /* tslint:enable */\n                this.showWaitingPopup();\n                var pivot_2 = this;\n                //setTimeout(() => {\n                pivot_2.engineModule.enableValueSorting = true;\n                if (pivot_2.enableVirtualization) {\n                    if (pivot_2.dataSourceSettings.enableSorting) {\n                        for (var _i = 0, _a = Object.keys(pivot_2.engineModule.fieldList); _i < _a.length; _i++) {\n                            var key = _a[_i];\n                            pivot_2.engineModule.fieldList[key].sort = 'Ascending';\n                        }\n                        pivot_2.setProperties({ dataSourceSettings: { sortSettings: [] } }, true);\n                    }\n                    if (isBlazor()) {\n                        /* tslint:disable */\n                        pivot_2.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'applyValueSorting', { 'valueSortSettings': pivot_2.dataSourceSettings.valueSortSettings.properties }).then(function (data) {\n                            pivot_2.updateBlazorData(data, pivot_2);\n                            pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                            pivot_2.renderPivotGrid();\n                        });\n                        /* tslint:enable */\n                    }\n                    else {\n                        pivot_2.engineModule.rMembers = pivot_2.engineModule.headerCollection.rowHeaders;\n                        pivot_2.engineModule.cMembers = pivot_2.engineModule.headerCollection.columnHeaders;\n                        pivot_2.engineModule.applyValueSorting();\n                        pivot_2.engineModule.updateEngine();\n                    }\n                }\n                else {\n                    pivot_2.engineModule.generateGridData(pivot_2.dataSourceSettings);\n                }\n                if (!(isBlazor() && pivot_2.enableVirtualization)) {\n                    pivot_2.setProperties({ pivotValues: pivot_2.engineModule.pivotValues }, true);\n                    pivot_2.renderPivotGrid();\n                }\n            }\n        }\n        else if (target.classList.contains(cls.COLLAPSE) || target.classList.contains(cls.EXPAND)) {\n            this.onDrill(target);\n        }\n        else {\n            this.CellClicked(target, e);\n            return;\n        }\n    };\n    PivotView.prototype.framePivotColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_1 = gridcolumns; _i < gridcolumns_1.length; _i++) {\n            var column = gridcolumns_1[_i];\n            if (column.columns && column.columns.length > 0) {\n                this.framePivotColumns(column.columns);\n            }\n            else {\n                /* tslint:disable */\n                var levelName = column.field === '0.formattedText' ? '' :\n                    (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                var width = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                    levelName, Number(column.width === 'auto' ? column.minWidth : column.width));\n                this.pivotColumns.push({\n                    allowReordering: column.allowReordering,\n                    allowResizing: column.allowResizing,\n                    headerText: levelName,\n                    width: width\n                });\n                this.totColWidth = this.totColWidth + Number(width);\n                /* tslint:enable */\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.setGridColumns = function (gridcolumns) {\n        if (this.element.offsetWidth < this.totColWidth) {\n            for (var _i = 0, gridcolumns_2 = gridcolumns; _i < gridcolumns_2.length; _i++) {\n                var column = gridcolumns_2[_i];\n                if (column.columns && column.columns.length > 0) {\n                    this.setGridColumns(column.columns);\n                }\n                else {\n                    /* tslint:disable */\n                    var levelName = column.field === '0.formattedText' ? '' :\n                        (column.customAttributes ? column.customAttributes.cell.valueSort.levelName : '');\n                    column.allowReordering = this.pivotColumns[this.posCount].allowReordering;\n                    column.allowResizing = this.pivotColumns[this.posCount].allowResizing;\n                    var calcWidth = this.renderModule.setSavedWidth(column.field === '0.formattedText' ? column.field :\n                        levelName, Number(this.pivotColumns[this.posCount].width));\n                    if (column.width !== 'auto') {\n                        column.width = calcWidth;\n                    }\n                    else {\n                        column.minWidth = calcWidth;\n                    }\n                    this.posCount++;\n                    if (column.allowReordering) {\n                        this.gridSettings.allowReordering = true;\n                    }\n                    if (column.allowResizing) {\n                        this.gridSettings.allowResizing = true;\n                    }\n                }\n            }\n            if (this.gridSettings.allowReordering) {\n                Grid.Inject(Reorder);\n            }\n            if (this.gridSettings.allowResizing) {\n                Grid.Inject(Resize);\n            }\n            /* tslint:enable */\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.fillGridColumns = function (gridcolumns) {\n        for (var _i = 0, gridcolumns_3 = gridcolumns; _i < gridcolumns_3.length; _i++) {\n            var column = gridcolumns_3[_i];\n            column.allowReordering = this.gridSettings.allowReordering;\n            column.allowResizing = this.gridSettings.allowResizing;\n            this.posCount++;\n            if (column.columns && column.columns.length > 0) {\n                this.fillGridColumns(column.columns);\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.triggerColumnRenderEvent = function (gridcolumns) {\n        this.pivotColumns = [];\n        this.totColWidth = 0;\n        this.framePivotColumns(gridcolumns);\n        var firstColWidth = this.pivotColumns[0].width;\n        var eventArgs = {\n            columns: this.pivotColumns,\n            dataSourceSettings: this.dataSourceSettings\n        };\n        this.trigger(events.beforeColumnsRender, eventArgs);\n        if (firstColWidth !== this.pivotColumns[0].width && this.element.offsetWidth < this.totColWidth) {\n            this.firstColWidth = this.pivotColumns[0].width;\n        }\n        this.posCount = 0;\n        this.setGridColumns(gridcolumns);\n    };\n    /** @hidden */\n    PivotView.prototype.setCommonColumnsWidth = function (columns, width) {\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.field !== '0.formattedText') {\n                if (column.columns) {\n                    this.setCommonColumnsWidth(column.columns, width);\n                }\n                else {\n                    if (column.width !== 'auto') {\n                        column.width = width;\n                    }\n                    else {\n                        column.minWidth = width;\n                    }\n                }\n            }\n            else {\n                column.width = !this.firstColWidth ? column.width : this.firstColWidth;\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.getHeightAsNumber = function () {\n        var height;\n        if (isNaN(this.height)) {\n            if (this.height.toString().indexOf('%') > -1) {\n                height = (parseFloat(this.height.toString()) / 100) * this.element.offsetHeight;\n            }\n            else if (this.height.toString().indexOf('px') > -1) {\n                height = Number(this.height.toString().split('px')[0]);\n            }\n        }\n        else {\n            height = Number(this.height);\n        }\n        if (height < this.gridSettings.rowHeight) {\n            height = this.gridSettings.rowHeight;\n        }\n        return height;\n    };\n    /** @hidden */\n    PivotView.prototype.getWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.width)) {\n            if (this.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.width.toString().indexOf('px') > -1) {\n                width = Number(this.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.width);\n        }\n        if (width < 400) {\n            width = 400;\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.getGridWidthAsNumber = function () {\n        var width;\n        if (isNaN(this.grid.width)) {\n            if (this.grid.width.toString().indexOf('%') > -1) {\n                width = (parseFloat(this.grid.width.toString()) / 100) * this.element.offsetWidth;\n            }\n            else if (this.grid.width.toString().indexOf('px') > -1) {\n                width = Number(this.grid.width.toString().split('px')[0]);\n            }\n            if (isNaN(width)) {\n                width = this.element.offsetWidth;\n            }\n        }\n        else {\n            width = Number(this.grid.width);\n        }\n        return width;\n    };\n    /** @hidden */\n    PivotView.prototype.onWindowResize = function () {\n        /* tslint:disable */\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(this.layoutRefresh.bind(this), 500);\n        /* tslint:enable */\n    };\n    /**\n     * Refreshes the Pivot Table for blazor layoutRefresh is called for other base refresh is called\n     */\n    PivotView.prototype.refresh = function () {\n        if (isBlazor()) {\n            this.layoutRefresh();\n        }\n        else {\n            this.pivotRefresh();\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.layoutRefresh = function () {\n        if (this.element && this.element.classList.contains('e-pivotview') &&\n            (this.dataType === 'olap' ? (this.olapEngineModule && this.olapEngineModule.pivotValues) :\n                this.engineModule && this.engineModule.pivotValues)) {\n            if (this.grid) {\n                var colLength = (this.dataType === 'olap' && this.olapEngineModule.pivotValues.length > 0) ?\n                    this.olapEngineModule.pivotValues[0].length : (this.dataSourceSettings.values.length > 0 &&\n                    this.engineModule.pivotValues.length > 0 ? this.engineModule.pivotValues[0].length : 2);\n                var colWidth = this.renderModule.resizeColWidth(colLength);\n                this.grid.width = this.renderModule.calculateGridWidth();\n                this.renderModule.calculateGridHeight(true);\n                this.setCommonColumnsWidth(this.grid.columns, colWidth);\n                this.posCount = 0;\n                if (!this.showGroupingBar) {\n                    this.setGridColumns(this.grid.columns);\n                }\n                if (this.currentView === 'Table') {\n                    /* tslint:disable-next-line */\n                    if (this.cellTemplate && isBlazor()) {\n                        resetBlazorTemplate(this.element.id + '_cellTemplate', 'CellTemplate');\n                    }\n                }\n                this.grid.refreshColumns();\n                if (this.showGroupingBar && this.groupingBarModule && this.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.setGridRowWidth();\n                }\n            }\n            if (this.showToolbar && this.toolbarModule && this.toolbarModule.toolbar) {\n                this.toolbarModule.toolbar.width = this.grid ? (this.getGridWidthAsNumber() - 2) : (this.getWidthAsNumber() - 2);\n            }\n            if (this.chart) {\n                this.chart.width = (this.showToolbar && this.grid) ? this.getGridWidthAsNumber().toString() :\n                    this.getWidthAsNumber().toString();\n                if (this.displayOption.view === 'Chart' && this.showGroupingBar && this.groupingBarModule &&\n                    this.element.querySelector('.' + cls.CHART_GROUPING_BAR_CLASS)) {\n                    this.groupingBarModule.refreshUI();\n                }\n            }\n        }\n    };\n    PivotView.prototype.CellClicked = function (target, e) {\n        var _this_1 = this;\n        var ele = null;\n        if (target.classList.contains('e-headercell') || target.classList.contains('e-rowcell')) {\n            ele = target;\n        }\n        else if (target.classList.contains('e-stackedheadercelldiv') || target.classList.contains('e-cellvalue') ||\n            target.classList.contains('e-headercelldiv')) {\n            ele = target.parentElement;\n        }\n        else if (target.classList.contains('e-headertext')) {\n            ele = target.parentElement.parentElement;\n        }\n        else if (target.classList.contains(cls.ROW_SELECT)) {\n            if (target.classList.contains(cls.SPAN_CLICKED)) {\n                this.isPopupClicked = false;\n            }\n            else {\n                this.isPopupClicked = true;\n            }\n        }\n        /* tslint:disable */\n        if (ele) {\n            var colIndex_1 = Number(ele.getAttribute('aria-colindex'));\n            var rowIndex_1 = Number(ele.getAttribute('index'));\n            var colSpan_1 = Number(ele.getAttribute('aria-colspan'));\n            // let selectArgs: PivotCellSelectedEventArgs = { isCellClick: true, currentCell: target };\n            var selectArgs = {\n                cancel: false,\n                isCellClick: true,\n                currentCell: ele,\n                data: this.pivotValues[rowIndex_1][colIndex_1]\n            };\n            this.trigger(events.cellSelecting, selectArgs, function (observedArgs) {\n                if (_this_1.gridSettings.allowSelection) {\n                    if (_this_1.gridSettings.selectionSettings.mode === 'Both' ? !ele.classList.contains(cls.ROW_CELL_CLASS) :\n                        _this_1.gridSettings.selectionSettings.mode !== 'Row') {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                        if (!observedArgs.cancel) {\n                            _this_1.applyColumnSelection(e, ele, colIndex_1, colIndex_1 + (colSpan_1 > 0 ? (colSpan_1 - 1) : 0), rowIndex_1);\n                        }\n                    }\n                    else {\n                        _this_1.clearSelection(ele, e, colIndex_1, rowIndex_1);\n                    }\n                    if (_this_1.gridSettings.selectionSettings.type === 'Multiple' &&\n                        (_this_1.gridSettings.selectionSettings.mode === 'Row' || _this_1.gridSettings.selectionSettings.mode === 'Both')) {\n                        _this_1.applyRowSelection(0, rowIndex_1, e);\n                    }\n                }\n                if (_this_1.cellClick && observedArgs.isCellClick) {\n                    _this_1.trigger(events.cellClick, {\n                        currentCell: ele,\n                        data: _this_1.pivotValues[rowIndex_1][colIndex_1]\n                    });\n                }\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.clearSelection = function (ele, e, colIndex, rowIndex) {\n        if ((!e.shiftKey && !e.ctrlKey) || this.gridSettings.selectionSettings.type === 'Single') {\n            if (this.gridSettings.selectionSettings.mode === 'Cell') {\n                if (ele.classList.contains(cls.COLUMNSHEADER)) {\n                    [].slice.call(this.element.querySelectorAll(('.' + cls.ROW_CELL_CLASS + '.') + cls.CELL_SELECTED_BGCOLOR)).forEach(function (ele) {\n                        ele.classList.remove(cls.CELL_SELECTED_BGCOLOR);\n                    });\n                }\n                else {\n                    [].slice.call(this.element.querySelectorAll(('.' + cls.COLUMNSHEADER + '.') + cls.CELL_ACTIVE_BGCOLOR)).forEach(function (ele) {\n                        ele.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                        ele.classList.remove(cls.SELECTED_BGCOLOR);\n                    });\n                }\n            }\n            else if (this.gridSettings.selectionSettings.mode === 'Both') {\n                if (ele.classList.contains(cls.ROW_CELL_CLASS)) {\n                    [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)).forEach(function (ele) {\n                        if (Number(ele.getAttribute('index')) !== rowIndex) {\n                            ele.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                            ele.classList.remove(cls.SELECTED_BGCOLOR);\n                        }\n                    });\n                }\n                else {\n                    [].slice.call(this.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR)).forEach(function (ele) {\n                        ele.classList.remove(cls.CELL_SELECTED_BGCOLOR);\n                    });\n                }\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyRowSelection = function (colIndex, rowIndex, e) {\n        var pivotValue = this.engineModule.pivotValues[rowIndex][colIndex];\n        if (!e.ctrlKey && !e.shiftKey && pivotValue && pivotValue.members && pivotValue.members.length > 0) {\n            var parentLevel = pivotValue.level;\n            var rCount = rowIndex;\n            do {\n                rCount++;\n                pivotValue = this.engineModule.pivotValues[rCount][colIndex];\n            } while (pivotValue && parentLevel < pivotValue.level);\n            var _this = this;\n            if (this.isAdaptive) {\n                this.rowRangeSelection = {\n                    enable: true,\n                    startIndex: rowIndex - _this.renderModule.rowStartPos,\n                    endIndex: rCount - (1 + _this.renderModule.rowStartPos)\n                };\n            }\n            else {\n                _this.grid.selectionModule.selectRowsByRange(rowIndex -\n                    _this.renderModule.rowStartPos, rCount - (1 + _this.renderModule.rowStartPos));\n            }\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.applyColumnSelection = function (e, target, colStart, colEnd, rowStart) {\n        if (!target.classList.contains(cls.ROWSHEADER) &&\n            (this.gridSettings.selectionSettings.mode === 'Cell' ? target.classList.contains(cls.COLUMNSHEADER) : true)) {\n            var isCtrl_1 = e.ctrlKey;\n            if (this.isAdaptive && this.gridSettings.selectionSettings.type === 'Multiple') {\n                this.grid.selectionModule.showPopup(e);\n                if (this.isPopupClicked) {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.add(cls.SPAN_CLICKED);\n                    isCtrl_1 = true;\n                }\n                else {\n                    this.element.querySelector('.' + cls.ROW_SELECT).classList.remove(cls.SPAN_CLICKED);\n                    isCtrl_1 = false;\n                }\n            }\n            var queryStringArray = [];\n            var type = this.gridSettings.selectionSettings.type;\n            var isToggle_1 = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n            var activeColumns_1 = [];\n            var actColPos_1 = {};\n            for (var cCnt = colStart; cCnt <= colEnd; cCnt++) {\n                activeColumns_1.push(cCnt.toString());\n            }\n            if (!isCtrl_1 || type === 'Single') {\n                [].slice.call(this.element.querySelectorAll('.' + cls.CELL_ACTIVE_BGCOLOR)).forEach(function (ele) {\n                    ele.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                    ele.classList.remove(cls.SELECTED_BGCOLOR);\n                    if (activeColumns_1.indexOf(ele.getAttribute('aria-colindex')) === -1) {\n                        isToggle_1 = false;\n                    }\n                    var colIndex = Number(ele.getAttribute('aria-colindex'));\n                    actColPos_1[colIndex] = colIndex;\n                });\n                /* tslint:disable-next-line:no-any */\n                activeColumns_1 = Object.keys(actColPos_1).length > 0 ? Object.keys(actColPos_1).sort(function (a, b) {\n                    return a - b;\n                }) : activeColumns_1;\n            }\n            else {\n                isToggle_1 = false;\n            }\n            if (type === 'Multiple' && e.shiftKey) {\n                this.shiftLockedPos = this.shiftLockedPos.length === 0 ? activeColumns_1 : this.shiftLockedPos;\n                if (Number(this.shiftLockedPos[0]) <= colStart) {\n                    colStart = Number(this.shiftLockedPos[0]);\n                }\n                else {\n                    colEnd = colEnd < Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) ?\n                        Number(this.shiftLockedPos[this.shiftLockedPos.length - 1]) : colEnd;\n                }\n            }\n            else {\n                this.shiftLockedPos = [];\n            }\n            var rowSelectedList_1 = [];\n            if (e.ctrlKey && this.gridSettings.selectionSettings.mode === 'Both' && type === 'Multiple' && !target.classList.contains(cls.ROWSHEADER)) {\n                [].slice.call(this.element.querySelectorAll('.' + cls.ROWSHEADER + '.' + cls.CELL_SELECTED_BGCOLOR)).forEach(function (ele) {\n                    rowSelectedList_1.push(ele.getAttribute('index'));\n                });\n            }\n            var count = colStart;\n            while (count <= colEnd) {\n                queryStringArray.push('[aria-colindex=\"' + count + '\"]' + (this.gridSettings.selectionSettings.mode === 'Cell' ?\n                    '[index=\"' + rowStart + '\"]' : \"\") + '');\n                count++;\n            }\n            if (!isToggle_1) {\n                rowStart = target.classList.contains('e-headercell') ? rowStart : (this.renderModule.rowStartPos - 1);\n                var isTargetSelected_1 = target.classList.contains(cls.CELL_ACTIVE_BGCOLOR);\n                [].slice.call(this.element.querySelectorAll(queryStringArray.toString())).forEach(function (ele) {\n                    if (Number(ele.getAttribute('index')) >= rowStart) {\n                        if (isTargetSelected_1 && isCtrl_1 && (rowSelectedList_1.indexOf(ele.getAttribute('index')) === -1)) {\n                            ele.classList.remove(cls.CELL_ACTIVE_BGCOLOR);\n                            ele.classList.remove(cls.SELECTED_BGCOLOR);\n                        }\n                        else {\n                            ele.classList.add(cls.CELL_ACTIVE_BGCOLOR);\n                            ele.classList.add(cls.SELECTED_BGCOLOR);\n                        }\n                    }\n                });\n            }\n            this.renderModule.selected();\n        }\n    };\n    PivotView.prototype.getSelectedCellsPos = function () {\n        var control = this;\n        control.savedSelectedCellsPos = [];\n        [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_BGCOLOR)).forEach(function (ele) {\n            control.savedSelectedCellsPos.push({ rowIndex: ele.getAttribute('index'), colIndex: ele.getAttribute('aria-colindex') });\n        });\n    };\n    PivotView.prototype.setSavedSelectedCells = function () {\n        var control = this;\n        [].slice.call(this.savedSelectedCellsPos).forEach(function (item) {\n            var query = '[aria-colindex=\"' + item.colIndex + '\"][index=\"' + item.rowIndex + '\"]';\n            control.element.querySelector(query).classList.add(cls.CELL_ACTIVE_BGCOLOR);\n            control.element.querySelector(query).classList.add(cls.SELECTED_BGCOLOR);\n        });\n    };\n    /* tslint:enable */\n    PivotView.prototype.renderEmptyGrid = function () {\n        var _this_1 = this;\n        this.isEmptyGrid = true;\n        this.renderModule = new Render(this);\n        if (this.grid && this.grid.element && this.element.querySelector('.e-grid')) {\n            /* tslint:disable */\n            this.grid.setProperties({\n                columns: this.renderModule.frameEmptyColumns(),\n                dataSource: this.renderModule.frameEmptyData()\n            }, true);\n            /* tslint:enable */\n            this.grid.notify('datasource-modified', {});\n            this.grid.refreshColumns();\n        }\n        else {\n            if (this.element.querySelector('.' + cls.GRID_CLASS)) {\n                remove(this.element.querySelector('.' + cls.GRID_CLASS));\n            }\n            this.renderModule.bindGrid(this, true);\n            /* tslint:disable:no-empty */\n            this.grid.showSpinner = function () { };\n            this.grid.hideSpinner = function () { };\n            /* tslint:enable:no-empty */\n            this.element.appendChild(createElement('div', { id: this.element.id + '_grid' }));\n            this.grid.isStringTemplate = true;\n            this.grid.appendTo('#' + this.element.id + '_grid');\n            /* tslint:disable-next-line:no-any */\n            this.grid.off('data-ready', this.grid.dataReady);\n            this.grid.on('data-ready', function () {\n                _this_1.grid.scrollModule.setWidth();\n                _this_1.grid.scrollModule.setHeight();\n                _this_1.grid.element.querySelector('.e-movablecontent').style.overflowY = 'auto';\n            });\n        }\n    };\n    /* tslint:disable */\n    PivotView.prototype.initEngine = function () {\n        var _this_1 = this;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this_1, observedArgs.dataSourceSettings);\n            _this_1.updatePageSettings(false);\n            /* tslint:disable:align */\n            var customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: _this_1.pageSettings,\n                enableValueSorting: _this_1.enableValueSorting,\n                isDrillThrough: (_this_1.allowDrillThrough || _this_1.editSettings.allowEditing),\n                localeObj: _this_1.localeObj,\n                fieldsType: _this_1.fieldsType\n            };\n            if (_this_1.dataType === 'pivot') {\n                if (_this_1.dataSourceSettings.groupSettings && _this_1.dataSourceSettings.groupSettings.length > 0) {\n                    var dataSet = _this_1.engineModule.data;\n                    _this_1.clonedDataSet = (_this_1.clonedDataSet ? _this_1.clonedDataSet : PivotUtil.getClonedData(dataSet));\n                    _this_1.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                    _this_1.clonedReport = _this_1.clonedReport ? _this_1.clonedReport : extend({}, _this_1.dataSourceSettings, null, true);\n                    _this_1.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n                }\n                if (isBlazor() && _this_1.enableVirtualization) {\n                    var pivot_3 = _this_1;\n                    var ejsInterop = 'ejsInterop';\n                    var customArgs = window[ejsInterop].copyWithoutCircularReferences([customProperties], customProperties);\n                    var datasourceSettings = window[ejsInterop].copyWithoutCircularReferences([pivot_3.dataSourceSettings], pivot_3.dataSourceSettings);\n                    pivot_3.interopAdaptor.invokeMethodAsync('PivotInteropMethod', 'renderEngine', { 'dataSourceSettings': datasourceSettings, 'customProperties': customArgs }).then(function (data) {\n                        pivot_3.updateBlazorData(data, pivot_3);\n                        PivotUtil.setPivotProperties(pivot_3, { pivotValues: pivot_3.engineModule.pivotValues });\n                        pivot_3.enginePopulatedEventMethod('initEngine', pivot_3);\n                    });\n                }\n                else {\n                    _this_1.engineModule.renderEngine(_this_1.dataSourceSettings, customProperties, _this_1.getValueCellInfo.bind(_this_1));\n                    _this_1.setProperties({ pivotValues: _this_1.engineModule.pivotValues }, true);\n                    _this_1.enginePopulatedEventMethod('initEngine');\n                }\n            }\n            else if (_this_1.dataSourceSettings.providerType === 'SSAS' && _this_1.dataType === 'olap') {\n                customProperties.savedFieldList = _this_1.olapEngineModule.fieldList;\n                customProperties.savedFieldListData = _this_1.olapEngineModule.fieldListData;\n                _this_1.olapEngineModule.renderEngine(_this_1.dataSourceSettings, customProperties);\n                _this_1.setProperties({ pivotValues: _this_1.olapEngineModule.pivotValues }, true);\n                _this_1.enginePopulatedEventMethod('initEngine');\n            }\n        });\n    };\n    PivotView.prototype.enginePopulatedEventMethod = function (action, control) {\n        var _this_1 = this;\n        if (action === 'initEngine') {\n            var this$_1 = control ? control : this;\n            this.trigger(events.enginePopulated, { pivotValues: this.pivotValues }, function (observedArgs) {\n                if (this$_1.dataType === 'olap') {\n                    this$_1.olapEngineModule.pivotValues = isBlazor() ? _this_1.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.olapEngineModule.pivotValues;\n                }\n                else {\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this_1.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.pivotValues = this$_1.engineModule.pivotValues;\n                }\n                this$_1.notify(events.dataReady, {});\n                this$_1.isEmptyGrid = false;\n            });\n        }\n        else {\n            var pivot_4 = control ? control : this;\n            var eventArgs = {\n                dataSourceSettings: pivot_4.dataSourceSettings,\n                pivotValues: isBlazor() ? pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule.pivotValues :\n                    pivot_4.engineModule.pivotValues : pivot_4.pivotValues\n            };\n            pivot_4.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                var dataSource = pivot_4.dataSourceSettings.dataSource;\n                if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                    observedArgs.dataSourceSettings.dataSource = dataSource;\n                }\n                pivot_4.dataSourceSettings = observedArgs.dataSourceSettings;\n                if (pivot_4.dataType === 'olap') {\n                    pivot_4.olapEngineModule.pivotValues = isBlazor() ? pivot_4.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.setProperties({ pivotValues: pivot_4.olapEngineModule.pivotValues }, true);\n                }\n                else {\n                    pivot_4.engineModule.pivotValues = isBlazor() ? pivot_4.engineModule.pivotValues : observedArgs.pivotValues;\n                    pivot_4.setProperties({ pivotValues: pivot_4.engineModule.pivotValues }, true);\n                }\n                pivot_4.pivotCommon.engineModule = pivot_4.dataType === 'olap' ? pivot_4.olapEngineModule : pivot_4.engineModule;\n                pivot_4.pivotCommon.dataSourceSettings = pivot_4.dataSourceSettings;\n                pivot_4.renderPivotGrid();\n            });\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateBlazorData = function (data, control) {\n        control.allowServerDataBinding = false;\n        var pivVal;\n        var pivotFL;\n        var pivotFields;\n        var valueSort;\n        var blazPivot = control;\n        var valContent = [];\n        var headContent = [];\n        pivotFL = JSON.parse(data[\"fieldList\"]);\n        pivVal = JSON.parse(data[\"pivotValue\"]);\n        pivotFields = JSON.parse(data[\"fields\"]);\n        valueSort = JSON.parse(data[\"valueSortSettings\"]);\n        var len = pivVal.length;\n        var pvalues = JSON.parse(pivVal[0]);\n        var pvalLen = pvalues.length;\n        var blazPivotValues = new Array(len);\n        for (i = 0; i < len; i++) {\n            blazPivotValues[i] = new Array(pvalLen);\n        }\n        for (var i = 0; i < len; i++) {\n            if (pivVal[i] != null) {\n                var values = JSON.parse(pivVal[i]);\n                var valLen = values.length;\n                for (var j = 0; j < valLen; j++) {\n                    blazPivotValues[i][j] = values[j];\n                }\n            }\n            else {\n                blazPivotValues[i] = undefined;\n                //headContent[i] = undefined;\n            }\n        }\n        var pivotValues = blazPivotValues;\n        var rowPos;\n        for (var rCnt = 0; rCnt < pivotValues.length; rCnt++) {\n            if (pivotValues[rCnt] && pivotValues[rCnt][0] && pivotValues[rCnt][0].axis === 'row') {\n                rowPos = rCnt;\n                break;\n            }\n        }\n        blazPivot.pivotValues = blazPivotValues;\n        valContent = blazPivot.frameContent(blazPivotValues, 'value', rowPos, blazPivot);\n        headContent = blazPivot.frameContent(blazPivotValues, 'header', rowPos, blazPivot);\n        this.engineModule.pivotValues = blazPivotValues;\n        this.engineModule.fieldList = pivotFL;\n        this.engineModule.fields = pivotFields;\n        this.engineModule.valueSortSettings = valueSort;\n        this.engineModule.valueContent = valContent;\n        this.engineModule.headerContent = headContent;\n        this.engineModule.isEngineUpdated = JSON.parse(data[\"isEngineUpdated\"]);\n        this.engineModule.isEmptyData = JSON.parse(data[\"isEmptyData\"]);\n        this.engineModule.rowCount = JSON.parse(data[\"rowCount\"]);\n        this.engineModule.columnCount = JSON.parse(data[\"columnCount\"]);\n        this.engineModule.rowStartPos = JSON.parse(data[\"rowStartPos\"]);\n        this.engineModule.colStartPos = JSON.parse(data[\"colStartPos\"]);\n        this.engineModule.rowFirstLvl = JSON.parse(data[\"rowFirstLvl\"]);\n        this.engineModule.colFirstLvl = JSON.parse(data[\"colFirstLvl\"]);\n        control.allowServerDataBinding = true;\n    };\n    /** @hidden */\n    PivotView.prototype.frameContent = function (pivotValues, type, rowPosition, control) {\n        var dataContent = [];\n        var pivot = control;\n        if (pivot.dataSourceSettings.values.length > 0 && !pivot.engineModule.isEmptyData) {\n            if ((pivot.enableValueSorting) || !pivot.engineModule.isEngineUpdated) {\n                var rowCnt = 0;\n                var start = type === 'value' ? rowPosition : 0;\n                var end = type === 'value' ? pivotValues.length : rowPosition;\n                for (var rCnt = start; rCnt < end; rCnt++) {\n                    if (pivotValues[rCnt]) {\n                        rowCnt = type === 'header' ? rCnt : rowCnt;\n                        dataContent[rowCnt] = {};\n                        for (var cCnt = 0; cCnt < pivotValues[rCnt].length; cCnt++) {\n                            if (pivotValues[rCnt][cCnt]) {\n                                dataContent[rowCnt][cCnt] = pivotValues[rCnt][cCnt];\n                            }\n                        }\n                        rowCnt++;\n                    }\n                }\n            }\n        }\n        return dataContent;\n    };\n    /* tslint:enable */\n    PivotView.prototype.generateData = function () {\n        if (this.displayOption.view !== 'Chart') {\n            this.renderEmptyGrid();\n        }\n        this.refreshData();\n    };\n    PivotView.prototype.refreshData = function () {\n        this.showWaitingPopup();\n        var pivot = this;\n        if (isBlazor()) {\n            if (pivot.dataType === 'olap') {\n                if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                    pivot.dataSourceSettings.dataSource = undefined;\n                }\n            }\n        }\n        if (pivot.dataSourceSettings && (pivot.dataSourceSettings.dataSource || pivot.dataSourceSettings.url)) {\n            if (pivot.dataSourceSettings.dataSource instanceof DataManager) {\n                if (isBlazor() && pivot.enableVirtualization) {\n                    if (!pivot.element.querySelector('.e-spinner-pane')) {\n                        this.showWaitingPopup();\n                    }\n                    pivot.initEngine();\n                }\n                else {\n                    setTimeout(pivot.getData.bind(pivot), 100);\n                }\n            }\n            else if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                pivot.dataSourceSettings.dataSource.length > 0) {\n                if (pivot.dataType === 'pivot') {\n                    this.hideWaitingPopup();\n                    pivot.engineModule.data = pivot.dataSourceSettings.dataSource;\n                }\n                pivot.initEngine();\n            }\n            else {\n                this.hideWaitingPopup();\n            }\n        }\n        else {\n            this.hideWaitingPopup();\n        }\n    };\n    PivotView.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    /**\n     * De-Register the internal events.\n     * @returns void\n     * @hidden\n     */\n    PivotView.prototype.bindTriggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    PivotView.prototype.getData = function () {\n        if (isBlazor()) {\n            this.dataSourceSettings.dataSource.\n                executeQuery(new Query().requiresCount()).then(this.executeQuery.bind(this));\n        }\n        else {\n            this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n        }\n    };\n    PivotView.prototype.executeQuery = function (e) {\n        if (!this.element.querySelector('.e-spinner-pane')) {\n            this.showWaitingPopup();\n        }\n        var pivot = this;\n        //setTimeout(() => {\n        pivot.engineModule.data = e.result;\n        pivot.initEngine();\n        //});\n    };\n    /** @hidden */\n    PivotView.prototype.applyFormatting = function (pivotValues) {\n        if (pivotValues) {\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            for (var i = 0; i < pivotValues.length; i++) {\n                for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                    if (pivotValues[i][j].axis === 'value' && pivotValues[i][j].formattedText !== '') {\n                        pivotValues[i][j].style = undefined;\n                        pivotValues[i][j].cssClass = undefined;\n                        var format_1 = this.dataSourceSettings.conditionalFormatSettings;\n                        for (var k = 0; k < format_1.length; k++) {\n                            if ((format_1[k].applyGrandTotals === true || isNullOrUndefined(format_1[k].applyGrandTotals)) ? true :\n                                pivotValues[i][j].rowHeaders !== '' &&\n                                    pivotValues[i][j].columnHeaders !== '') {\n                                if (this.checkCondition(pivotValues[i][j].value, format_1[k].conditions, format_1[k].value1, format_1[k].value2)) {\n                                    // let ilen: number =\n                                    //     (this.dataSourceSettings.valueAxis === 'row' ? i : this.engineModule.headerContent.length - 1);\n                                    // let jlen: number = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!format_1[k].measure || pivotValues[i][j].actualText === format_1[k].measure) &&\n                                        (format_1[k].measure === undefined || format_1[k].measure !== '') && (format_1[k].label === undefined ||\n                                        format_1[k].label !== '') && ((!format_1[k].label ||\n                                        (pivotValues[i][0].valueSort.levelName\n                                            .indexOf(format_1[k].label)) > -1) || (pivotValues[i][j]\n                                        .rowHeaders.indexOf(format_1[k].label) > -1) ||\n                                        (pivotValues[i][j].columnHeaders\n                                            .indexOf(format_1[k].label) > -1))) {\n                                        if (format_1[k].style && format_1[k].style.backgroundColor) {\n                                            format_1[k].style.backgroundColor = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.backgroundColor.substr(1)) ? format_1[k].style.backgroundColor :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.backgroundColor);\n                                        }\n                                        if (format_1[k].style && format_1[k].style.color) {\n                                            format_1[k].style.color = this.conditionalFormattingModule\n                                                .isHex(format_1[k].style.color.substr(1)) ? format_1[k].style.color :\n                                                this.conditionalFormattingModule.colourNameToHex(format_1[k].style.color);\n                                        }\n                                        pivotValues[i][j].style = format_1[k].style;\n                                        pivotValues[i][j].cssClass = 'format' + this.element.id + k;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var format = this.dataSourceSettings.conditionalFormatSettings;\n            for (var k = 0; k < format.length; k++) {\n                var sheet = (this.createStyleSheet.bind(this))();\n                var str = 'color: ' + format[k].style.color + '!important;background-color: ' + format[k].style.backgroundColor +\n                    '!important;font-size: ' + format[k].style.fontSize + '!important;font-family: ' + format[k].style.fontFamily +\n                    ' !important;';\n                sheet.insertRule('.format' + this.element.id + k + '{' + str + '}', 0);\n            }\n        }\n    };\n    PivotView.prototype.createStyleSheet = function () {\n        var style = document.createElement('style');\n        style.appendChild(document.createTextNode(''));\n        document.head.appendChild(style);\n        return style.sheet;\n    };\n    PivotView.prototype.applyHyperlinkSettings = function () {\n        if (this.pivotValues) {\n            var pivotValues = this.pivotValues;\n            var colIndex = [];\n            for (var len = pivotValues.length, i = 0; i < len; i++) {\n                if (pivotValues[i] !== undefined && pivotValues[i][0] === undefined) {\n                    colIndex.push(i);\n                }\n            }\n            if (this.hyperlinkSettings.conditionalSettings.length > 0) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            pivotValues[i][j].enableHyperlink = false;\n                            var collection = this.hyperlinkSettings.conditionalSettings;\n                            for (var k = 0; k < collection.length; k++) {\n                                if (this.checkCondition(pivotValues[i][j].value, collection[k].conditions, collection[k].value1, collection[k].value2)) {\n                                    var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                        i : (this.dataType === 'pivot' ?\n                                        this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                                    var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                                    if ((!collection[k].measure || this.dataSourceSettings.values.length === 1 ||\n                                        (pivotValues[ilen][jlen].valueSort &&\n                                            (pivotValues[ilen][jlen].actualText === collection[k].measure))) &&\n                                        (!collection[k].label || ((pivotValues[colIndex[collection[k].label.split('.').length - 1]] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j] &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].valueSort &&\n                                            pivotValues[colIndex[collection[k].label.split('.').length - 1]][j].\n                                                valueSort[collection[k].label]) || (pivotValues[i][0].\n                                            valueSort.levelName.indexOf(collection[k].label) > -1)))) {\n                                        pivotValues[i][j].enableHyperlink = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(this.hyperlinkSettings.headerText)) {\n                for (var i = 0; i < pivotValues.length; i++) {\n                    for (var j = 1; (pivotValues[i] && j < pivotValues[i].length); j++) {\n                        if (pivotValues[i][j].axis === 'value') {\n                            // (pivotValues[i][j] as IAxisSet).enableHyperlink = false;\n                            var label = this.hyperlinkSettings.headerText;\n                            var ilen = (this.dataSourceSettings.valueAxis === 'row' ?\n                                i : (this.dataType === 'pivot' ?\n                                this.engineModule.headerContent.length - 1 : this.olapEngineModule.headerContent.length - 1));\n                            var jlen = (this.dataSourceSettings.valueAxis === 'row' ? 0 : j);\n                            if ((pivotValues[colIndex[label.split('.').length - 1]] &&\n                                pivotValues[colIndex[label.split('.').length - 1]][j] &&\n                                pivotValues[colIndex[label.split('.').length - 1]][j].\n                                    valueSort && pivotValues[colIndex[label.split('.').length - 1]][j].\n                                valueSort[label])) {\n                                for (var _i = 0, colIndex_2 = colIndex; _i < colIndex_2.length; _i++) {\n                                    var index = colIndex_2[_i];\n                                    if (pivotValues[index][j] &&\n                                        pivotValues[index][j].axis === 'column' &&\n                                        (pivotValues[index][j].valueSort.levelName.indexOf(label) > -1)) {\n                                        pivotValues[index][j].enableHyperlink = true;\n                                    }\n                                }\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                            else if (pivotValues[i][0].valueSort.levelName.indexOf(label) > -1) {\n                                pivotValues[i][0].enableHyperlink = true;\n                                pivotValues[i][j].enableHyperlink = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n    };\n    PivotView.prototype.checkCondition = function (cellValue, conditions, conditionalValue1, conditionalValue2) {\n        switch (conditions) {\n            case 'LessThan':\n                return cellValue < conditionalValue1;\n            case 'LessThanOrEqualTo':\n                return cellValue <= conditionalValue1;\n            case 'GreaterThan':\n                return cellValue > conditionalValue1;\n            case 'GreaterThanOrEqualTo':\n                return cellValue >= conditionalValue1;\n            case 'Equals':\n                return cellValue === conditionalValue1;\n            case 'NotEquals':\n                return cellValue !== conditionalValue1;\n            case 'Between':\n                return (conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2);\n            case 'NotBetween':\n                return !((conditionalValue1 < conditionalValue2 && cellValue >= conditionalValue1 && cellValue <= conditionalValue2) ||\n                    (conditionalValue1 > conditionalValue2 && cellValue <= conditionalValue1 && cellValue >= conditionalValue2));\n            default:\n                return false;\n        }\n    };\n    /** @hidden */\n    PivotView.prototype.updateGroupingReport = function (newGroupSettings, updateGroupType) {\n        if (!this.clonedDataSet && !this.clonedReport) {\n            var dataSet = this.engineModule.data;\n            this.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.clonedReport = PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings);\n            this.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        /* tslint:disable-next-line:max-line-length */\n        var dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        var data = PivotUtil.getClonedData(this.clonedDataSet);\n        var dataSource = this.dataSourceSettings;\n        var clonedReport = this.clonedReport.properties ?\n            this.clonedReport.properties : this.clonedReport;\n        var axisFields = [dataSource.rows, dataSource.columns, dataSource.values, dataSource.filters];\n        var fieldSettings = [dataSource.filterSettings, dataSource.sortSettings, dataSource.formatSettings, dataSource.drilledMembers];\n        var clonedAxisFields = clonedReport.rows;\n        clonedAxisFields = clonedAxisFields.concat(clonedReport.columns, clonedReport.values, clonedReport.filters);\n        if (newGroupSettings.length === 0 || newGroupSettings.length > 0) {\n            this.engineModule.groupingFields = {};\n            /* tslint:disable-next-line:max-line-length */\n            this.setProperties({ dataSourceSettings: { dataSource: data, groupSettings: newGroupSettings.length > 0 ? dataSource.groupSettings : [] } }, true);\n            var isDateGroupUpdated = updateGroupType === 'Date';\n            var fields = [];\n            for (var i = 0, cnt = axisFields.length; i < cnt; i++) {\n                for (var j = 0, len = axisFields[i].length; j < len; j++) {\n                    var fieldName = axisFields[i][j].name;\n                    if (fields.indexOf(fieldName) === -1) {\n                        fields.push(fieldName);\n                    }\n                    var index = fields.indexOf(fieldName);\n                    var group = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n                    if ((!isNullOrUndefined(fieldName.match(dateGroup)) &&\n                        isDateGroupUpdated) || (fieldName.indexOf('_custom_group') !== -1 &&\n                        /* tslint:disable-next-line:max-line-length */\n                        !PivotUtil.getFieldByName(fieldName.replace('_custom_group', ''), dataSource.groupSettings))) {\n                        axisFields[i].splice(j, 1);\n                        fields.splice(index, 1);\n                        j--;\n                        len--;\n                    }\n                    else {\n                        var fieldObj = PivotUtil.getFieldByName(fieldName, clonedAxisFields);\n                        if (fieldObj) {\n                            axisFields[i].splice(j, 1, fieldObj);\n                        }\n                    }\n                }\n            }\n            for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n                var fieldName = fields_1[_i];\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, clonedReport.filterSettings);\n                var sortObj = PivotUtil.getFieldByName(fieldName, clonedReport.sortSettings);\n                var formatObj = PivotUtil.getFieldByName(fieldName, clonedReport.formatSettings);\n                var drillObj = PivotUtil.getFieldByName(fieldName, clonedReport.drilledMembers);\n                var settingsObj = [filterObj, sortObj, formatObj, drillObj];\n                for (var i = 0, cnt = fieldSettings.length; i < cnt; i++) {\n                    var isExists = false;\n                    for (var j = 0, len = fieldSettings[i].length; j < len; j++) {\n                        var name_1 = fieldSettings[i][j].name;\n                        /* tslint:disable-next-line:max-line-length */\n                        if ((!isNullOrUndefined(name_1.match(dateGroup)) && isDateGroupUpdated) || (name_1.indexOf('_custom_group') !== -1 &&\n                            !PivotUtil.getFieldByName(name_1.replace('_custom_group', ''), dataSource.groupSettings))) {\n                            fieldSettings[i].splice(j, 1);\n                            j--;\n                            len--;\n                        }\n                        else if (fieldName === fieldSettings[i][j].name) {\n                            isExists = true;\n                            if (settingsObj[i]) {\n                                fieldSettings[i].splice(j, 1, settingsObj[i]);\n                            }\n                            else {\n                                fieldSettings[i].splice(j, 1);\n                                j--;\n                                len--;\n                            }\n                            break;\n                        }\n                    }\n                    if (!isExists && i === 0 && filterObj) {\n                        fieldSettings[i].push(filterObj);\n                    }\n                    if (!isExists && i === 1 && sortObj) {\n                        fieldSettings[i].push(sortObj);\n                    }\n                    if (!isExists && i === 2 && formatObj) {\n                        fieldSettings[i].push(formatObj);\n                    }\n                    if (!isExists && i === 3 && drillObj) {\n                        fieldSettings[i].push(drillObj);\n                    }\n                }\n            }\n        }\n    };\n    PivotView.prototype.wireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler, this);\n            EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n            EventHandler.add(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler, this);\n            EventHandler.add(this.element, 'mouseup', this.mouseUpHandler, this);\n            EventHandler.add(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler, this);\n        }\n        window.addEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    PivotView.prototype.unwireEvents = function () {\n        if (this.displayOption.view !== 'Chart') {\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'click', this.mouseClickHandler);\n            EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n            if (this.element.querySelector('.' + cls.GRID_HEADER)) {\n                EventHandler.remove(this.element.querySelector('.' + cls.GRID_HEADER), 'mousemove', this.mouseMoveHandler);\n            }\n            EventHandler.remove(this.element, 'mouseup', this.mouseUpHandler);\n            EventHandler.remove(this.element, this.isAdaptive ? 'touchend' : 'contextmenu', this.mouseRclickHandler);\n        }\n        window.removeEventListener('resize', this.onWindowResize.bind(this), true);\n    };\n    /**\n     * To destroy the PivotView elements.\n     * @returns void\n     */\n    PivotView.prototype.destroy = function () {\n        this.removeInternalEvents();\n        if (this.showGroupingBar && this.groupingBarModule) {\n            this.groupingBarModule.destroy();\n        }\n        if (this.allowGrouping && this.groupingModule) {\n            this.groupingModule.destroy();\n        }\n        if (this.showToolbar && this.toolbarModule) {\n            this.toolbarModule.destroy();\n        }\n        if (this.enableVirtualization && this.virtualscrollModule) {\n            this.virtualscrollModule.destroy();\n        }\n        if (this.allowConditionalFormatting && this.conditionalFormattingModule) {\n            this.conditionalFormattingModule.destroy();\n        }\n        if (this.allowNumberFormatting && this.numberFormattingModule) {\n            this.numberFormattingModule.destroy();\n        }\n        if (this.isAdaptive && this.contextMenuModule) {\n            this.contextMenuModule.destroy();\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.chart) {\n            this.chart.destroy();\n        }\n        this.unwireEvents();\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    var PivotView_1;\n    __decorate([\n        Property('USD')\n    ], PivotView.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showFieldList\", void 0);\n    __decorate([\n        Complex({}, GridSettings)\n    ], PivotView.prototype, \"gridSettings\", void 0);\n    __decorate([\n        Complex({}, ChartSettings)\n    ], PivotView.prototype, \"chartSettings\", void 0);\n    __decorate([\n        Complex({}, GroupingBarSettings)\n    ], PivotView.prototype, \"groupingBarSettings\", void 0);\n    __decorate([\n        Complex({}, HyperlinkSettings)\n    ], PivotView.prototype, \"hyperlinkSettings\", void 0);\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotView.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Complex({}, CellEditSettings)\n    ], PivotView.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, DisplayOption)\n    ], PivotView.prototype, \"displayOption\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"pivotValues\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showGroupingBar\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showToolbar\", void 0);\n    __decorate([\n        Property([])\n    ], PivotView.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableValueSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowConditionalFormatting\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowNumberFormatting\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], PivotView.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDrillThrough\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowDataCompression\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotView.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(10000)\n    ], PivotView.prototype, \"maxRowsInDrillThrough\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property()\n    ], PivotView.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotView.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeColumnsRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"selected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoaded\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartLoad\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartResized\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartAxisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onPdfCellRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"saveReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fetchReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"loadReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"renameReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"removeReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"newReport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarRender\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"conditionalFormatting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"beginDrillThrough\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"hyperlinkCellClick\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"drill\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"chartSeriesCreated\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotView.prototype, \"fieldListRefreshed\", void 0);\n    PivotView = PivotView_1 = __decorate([\n        NotifyPropertyChanges\n    ], PivotView);\n    return PivotView;\n}(Component));\nexport { PivotView };\n","import { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * Keyboard interaction\n */\n/** @hidden */\nvar CommonKeyboardInteraction = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CommonKeyboardInteraction(parent) {\n        this.keyConfigs = {\n            shiftF: 'shift+F',\n            shiftS: 'shift+S',\n            delete: 'delete',\n            enter: 'enter'\n        };\n        this.parent = parent;\n        this.parent.element.tabIndex = this.parent.element.tabIndex === -1 ? 0 : this.parent.element.tabIndex;\n        this.keyboardModule = new KeyboardEvents(this.parent.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    }\n    CommonKeyboardInteraction.prototype.keyActionHandler = function (e) {\n        switch (e.action) {\n            case 'shiftF':\n                this.processFilter(e);\n                break;\n            case 'shiftS':\n                this.processSort(e);\n                break;\n            case 'delete':\n                this.processDelete(e);\n                break;\n            case 'enter':\n                this.processOpenContextMenu(e);\n                break;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processOpenContextMenu = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) &&\n            closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.AXISFIELD_ICON_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processSort = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) &&\n            !closest(target, '.' + cls.VALUE_AXIS_CLASS) && !closest(target, '.' + cls.AXIS_FILTER_CLASS)) {\n            target.querySelector('.' + cls.SORT_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processFilter = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS) && !closest(target, '.' + cls.VALUE_AXIS_CLASS)) {\n            target.querySelector('.' + cls.FILTER_COMMON_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    CommonKeyboardInteraction.prototype.processDelete = function (e) {\n        var target = e.target;\n        if (target && closest(target, '.' + cls.PIVOT_BUTTON_CLASS)) {\n            target.querySelector('.' + cls.REMOVE_CLASS).click();\n            e.preventDefault();\n            return;\n        }\n    };\n    /**\n     * To destroy the keyboard module.\n     * @return {void}\n     * @private\n     */\n    CommonKeyboardInteraction.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return CommonKeyboardInteraction;\n}());\nexport { CommonKeyboardInteraction };\n","import { isNullOrUndefined, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { PivotUtil } from '../../base/util';\n/**\n * `EventBase` for active fields action.\n */\n/** @hidden */\nvar EventBase = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function EventBase(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateSorting\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if (this.parent.filterDialog.dialogPopUp) {\n                this.parent.filterDialog.dialogPopUp.close();\n            }\n            var target = args.target;\n            var fieldName = void 0;\n            var checkisDescending = void 0;\n            var isDescending = void 0;\n            if (target.id) {\n                fieldName = target.id;\n                checkisDescending = [].slice.call(target.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            else {\n                fieldName = target.parentElement.id;\n                checkisDescending = [].slice.call(target.parentElement.querySelectorAll('.' + cls.SORT_DESCEND_CLASS));\n            }\n            if (checkisDescending.length === 0) {\n                isDescending = false;\n            }\n            else {\n                isDescending = true;\n            }\n            //isDescending = (target.querySelectorAll(cls.SORT_DESCEND_CLASS));\n            var sortObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.sortSettings);\n            if (!isNullOrUndefined(sortObj)) {\n                for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.sortSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                // let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending' };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            else {\n                var newSortObj = { name: fieldName, order: isDescending ? 'Ascending' : 'Descending' };\n                //let newSortObj: ISort = { name: fieldName, order: isNone ? 'Ascending' : isDescending ? 'None' : 'Descending'  };\n                this.parent.dataSourceSettings.sortSettings.push(newSortObj);\n            }\n            this.parent.control.lastSortInfo =\n                this.parent.dataSourceSettings.sortSettings[this.parent.dataSourceSettings.sortSettings.length - 1];\n            isDescending ? removeClass([target], cls.SORT_DESCEND_CLASS) : addClass([target], cls.SORT_DESCEND_CLASS);\n            // if (isDescending) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     addClass([target], cls.SORTING);\n            // } else if (!isDescending && !isNone) {\n            //     addClass([target], cls.SORT_DESCEND_CLASS);\n            // } else if (isNone) {\n            //     removeClass([target], cls.SORTING);\n            // } else if (!isNone) {\n            //     removeClass([target], cls.SORT_DESCEND_CLASS);\n            //     removeClass([target], cls.SORTING);\n            //    //addClass([target], cls.SORT_CLASS);\n            // }\n        }\n    };\n    /**\n     * Updates sorting order for the selected field.\n     * @method updateFiltering\n     * @param  {Event} args - Contains clicked element information to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    EventBase.prototype.updateFiltering = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        var fieldCaption = target.parentElement.textContent;\n        var isInclude = false;\n        var filterItems = [];\n        var treeData = [];\n        if (this.parent.dataSourceSettings.allowMemberFilter) {\n            if (this.parent.dataType === 'olap') {\n                treeData = this.getOlapData(fieldName, isInclude);\n            }\n            else {\n                /* tslint:disable:typedef */\n                this.parent.engineModule.fieldList[fieldName].dateMember =\n                    this.parent.engineModule.fieldList[fieldName].sort === 'Ascending' ?\n                        (this.parent.engineModule.fieldList[fieldName].dateMember.sort(function (a, b) { return (a.actualText > b.actualText) ? 1 :\n                            ((b.actualText > a.actualText) ? -1 : 0); })) :\n                        this.parent.engineModule.fieldList[fieldName].sort === 'Descending' ?\n                            (this.parent.engineModule.fieldList[fieldName].dateMember.sort(function (a, b) { return (a.actualText < b.actualText) ? 1 :\n                                ((b.actualText < a.actualText) ? -1 : 0); })) :\n                            this.parent.engineModule.fieldList[fieldName].dateMember;\n                /* tslint:enable:typedef */\n                var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n                if (!isNullOrUndefined(filterObj)) {\n                    isInclude = this.isValidFilterItemsAvail(fieldName, filterObj) && filterObj.type === 'Include' ? true : false;\n                    filterItems = filterObj.items ? filterObj.items : [];\n                }\n                treeData =\n                    this.getTreeData(isInclude, this.parent.engineModule.fieldList[fieldName].dateMember, filterItems, fieldName);\n            }\n        }\n        if (this.parent.filterDialog.dialogPopUp) {\n            this.parent.filterDialog.dialogPopUp.close();\n        }\n        var popupTarget;\n        popupTarget = this.parent.moduleName !== 'pivotfieldlist' ?\n            popupTarget = this.parent.element : popupTarget = document.getElementById(this.parent.parentID + '_Wrapper');\n        this.parent.filterDialog.createFilterDialog(treeData, fieldName, fieldCaption, popupTarget);\n    };\n    /**\n     * Returns boolean by checing the valid filter members from the selected filter settings.\n     * @method isValidFilterItemsAvail\n     * @param  {string} fieldName - Gets filter members for the given field name.\n     * @return {boolean}\n     * @hidden\n     */\n    EventBase.prototype.isValidFilterItemsAvail = function (fieldName, filterObj) {\n        var isItemAvail = false;\n        var filterTypes = ['Include', 'Exclude'];\n        if (filterObj && filterTypes.indexOf(filterObj.type) >= 0) {\n            var engineModule = this.parent.engineModule;\n            var field = engineModule.fieldList[fieldName];\n            var members = (engineModule.formatFields[fieldName] &&\n                (['date', 'dateTime', 'time'].indexOf(engineModule.formatFields[fieldName].type) > -1)) ?\n                field.formattedMembers : field.members;\n            for (var _i = 0, _a = filterObj.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (members[item]) {\n                    isItemAvail = true;\n                    break;\n                }\n            }\n        }\n        return isItemAvail;\n    };\n    EventBase.prototype.getOlapData = function (fieldName, isInclude) {\n        var treeData = [];\n        var filterItems = [];\n        this.parent.filterDialog.isSearchEnabled = false;\n        var updatedTreeData = [];\n        var engineModule = this.parent.engineModule;\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (engineModule.fieldList[fieldName].filterMembers.length === 0) {\n            if (!this.parent.control.loadOnDemandInMemberEditor) {\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName, true);\n            }\n            else if (filterObj && filterObj.levelCount > 1 && engineModule.fieldList[fieldName].levels.length > 1) {\n                engineModule.getFilterMembers(this.parent.dataSourceSettings, fieldName, filterObj.levelCount);\n            }\n            else {\n                engineModule.fieldList[fieldName].levelCount = 1;\n                engineModule.getMembers(this.parent.dataSourceSettings, fieldName);\n            }\n        }\n        else {\n            engineModule.fieldList[fieldName].currrentMembers = {};\n            engineModule.fieldList[fieldName].searchMembers = [];\n        }\n        var isHierarchy = engineModule.fieldList[fieldName].isHierarchy;\n        treeData = engineModule.fieldList[fieldName].filterMembers;\n        if (!isNullOrUndefined(filterObj)) {\n            isInclude = filterObj.type ? filterObj.type === 'Include' ? true : false : true;\n            filterItems = filterObj.items ? filterObj.items : [];\n        }\n        var filterItemObj = {};\n        var dummyfilterItems = {};\n        var memberObject = engineModule.fieldList[fieldName].members;\n        for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n            var item = filterItems_1[_i];\n            filterItemObj[item] = item;\n            dummyfilterItems[item] = item;\n            if (memberObject[item]) {\n                dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n            }\n        }\n        treeData = this.getFilteredTreeNodes(fieldName, treeData, dummyfilterItems, updatedTreeData, isHierarchy);\n        treeData = this.getOlapTreeData(isInclude, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy);\n        treeData = this.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n        return treeData;\n    };\n    /**\n     * Gets sorted filter members for the selected field.\n     * @method sortFilterData\n     * @param  {{ [key: string]: Object }[]} treeData - Gets filter members for the given field name.\n     * @return {{ [key: string]: Object }[]}\n     * @hidden\n     */\n    EventBase.prototype.sortOlapFilterData = function (treeData, order) {\n        if (treeData.length > 0) {\n            /* tslint:disable:typedef */\n            treeData = order === 'Ascending' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 :\n                    ((b.caption > a.caption) ? -1 : 0); })) : order === 'Descending' ?\n                (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 :\n                    ((b.caption < a.caption) ? -1 : 0); })) : treeData;\n            /* tslint:enable:typedef */\n        }\n        return treeData;\n    };\n    EventBase.prototype.getParentIDs = function (treeObj, id, parent) {\n        var data = treeObj.fields.dataSource;\n        var pid;\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var li = data_1[_i];\n            if (li.id === id) {\n                pid = li.pid;\n                break;\n            }\n        }\n        if (pid) {\n            parent.push(pid);\n            this.getParentIDs(treeObj, pid, parent);\n        }\n        return parent;\n    };\n    EventBase.prototype.getChildIDs = function (treeObj, id, children) {\n        var data = treeObj.fields.dataSource;\n        var cID;\n        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n            var li = data_2[_i];\n            if (li.pid === id) {\n                cID = li.id;\n                break;\n            }\n        }\n        if (cID) {\n            children.push(cID);\n            this.getParentIDs(treeObj, cID, children);\n        }\n        return children;\n    };\n    /**\n     * show tree nodes using search text.\n     * @hidden\n     */\n    /* tslint:disable:max-func-body-length */\n    EventBase.prototype.searchTreeNodes = function (args, treeObj, isFieldCollection, isHierarchy) {\n        if (isFieldCollection) {\n            var searchList = [];\n            var nonSearchList = [];\n            var list = [].slice.call(treeObj.element.querySelectorAll('li'));\n            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                var element = list_1[_i];\n                if ((element.querySelector('.e-list-text').textContent.toLowerCase()).indexOf(args.value.toLowerCase()) > -1) {\n                    searchList.push(element);\n                }\n                else {\n                    nonSearchList.push(element);\n                }\n            }\n            treeObj.enableNodes(searchList);\n            removeClass(searchList, cls.ICON_DISABLE);\n            treeObj.disableNodes(nonSearchList);\n            addClass(nonSearchList, cls.ICON_DISABLE);\n            if (searchList.length > 0 && nonSearchList.length > 0) {\n                for (var _a = 0, searchList_1 = searchList; _a < searchList_1.length; _a++) {\n                    var currentNode = searchList_1[_a];\n                    var id = currentNode.getAttribute('data-uid');\n                    var parentIDs = this.getParentIDs(treeObj, id, []);\n                    var childIDs = this.getChildIDs(treeObj, id, []);\n                    var pNodes = [];\n                    if (parentIDs.length > 0) {\n                        for (var _b = 0, nonSearchList_1 = nonSearchList; _b < nonSearchList_1.length; _b++) {\n                            var li = nonSearchList_1[_b];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), parentIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    if (childIDs.length > 0) {\n                        for (var _c = 0, nonSearchList_2 = nonSearchList; _c < nonSearchList_2.length; _c++) {\n                            var li = nonSearchList_2[_c];\n                            if (PivotUtil.inArray(li.getAttribute('data-uid'), childIDs) !== -1) {\n                                pNodes.push(li);\n                            }\n                        }\n                    }\n                    treeObj.enableNodes(pNodes);\n                    removeClass(pNodes, cls.ICON_DISABLE);\n                }\n            }\n            if ([].slice.call(treeObj.element.querySelectorAll('li.' + cls.ICON_DISABLE)).length === 0) {\n                treeObj.collapseAll();\n            }\n            else {\n                treeObj.expandAll(undefined, undefined, true);\n            }\n        }\n        else {\n            this.parent.searchTreeItems = [];\n            if (this.parent.dataType === 'olap' && !isHierarchy) {\n                this.updateOlapSearchTree(args, treeObj, isHierarchy);\n            }\n            else {\n                var searchList = [];\n                var memberCount = 0;\n                memberCount = 1;\n                for (var _d = 0, _e = this.parent.currentTreeItems; _d < _e.length; _d++) {\n                    var item = _e[_d];\n                    if (item.name.toLowerCase().indexOf(args.value.toLowerCase()) > -1) {\n                        this.parent.searchTreeItems.push(item);\n                        if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                            searchList.push(item);\n                        }\n                        memberCount++;\n                    }\n                }\n                memberCount--;\n                if (memberCount > this.parent.control.maxNodeLimitInMemberEditor) {\n                    this.parent.editorLabelElement.innerText = (memberCount - this.parent.control.maxNodeLimitInMemberEditor) +\n                        this.parent.control.localeObj.getConstant('editorDataLimitMsg');\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '440px' : '400px');\n                    this.parent.isDataOverflow = true;\n                }\n                else {\n                    this.parent.editorLabelElement.innerText = '';\n                    this.parent.filterDialog.dialogPopUp.height = (this.parent.filterDialog.allowExcelLikeFilter ? '400px' : '350px');\n                    this.parent.isDataOverflow = false;\n                }\n                this.parent.isDataOverflow = (memberCount > this.parent.control.maxNodeLimitInMemberEditor);\n                this.parent.editorLabelElement.parentElement.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n                treeObj.fields = { dataSource: searchList, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n                treeObj.dataBind();\n            }\n        }\n    };\n    EventBase.prototype.updateOlapSearchTree = function (args, treeObj, isHierarchy) {\n        var treeData = [];\n        var filterDialog = this.parent.filterDialog.dialogPopUp.element;\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        if (args.value.toLowerCase() === '') {\n            this.parent.filterDialog.isSearchEnabled = false;\n            this.parent.engineModule.fieldList[fieldName].searchMembers = [];\n            // (this.parent.engineModule.fieldList[fieldName] as IOlapField).currrentMembers = {};\n            var updatedTreeData = [];\n            var filterItemObj = {};\n            var dummyfilterItems = {};\n            var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n            var members = Object.keys(memberObject);\n            var filterItems = [];\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var item = members_1[_i];\n                if (memberObject[item].isSelected) {\n                    if (!(memberObject[item].parent && memberObject[memberObject[item].parent].isSelected)) {\n                        filterItems.push(item);\n                    }\n                }\n            }\n            for (var _a = 0, filterItems_2 = filterItems; _a < filterItems_2.length; _a++) {\n                var item = filterItems_2[_a];\n                filterItemObj[item] = item;\n                dummyfilterItems[item] = item;\n                if (memberObject[item]) {\n                    dummyfilterItems = this.getParentNode(fieldName, item, dummyfilterItems);\n                }\n            }\n            var searchData = this.parent.engineModule.fieldList[fieldName].filterMembers;\n            treeData = this.getFilteredTreeNodes(fieldName, searchData, dummyfilterItems, updatedTreeData, isHierarchy);\n            treeData = this.getOlapTreeData(true, PivotUtil.getClonedData(treeData), filterItemObj, fieldName, isHierarchy, true);\n        }\n        else {\n            this.parent.filterDialog.isSearchEnabled = true;\n            var searchData = this.parent.engineModule.fieldList[fieldName].searchMembers;\n            treeData = PivotUtil.getClonedData(searchData);\n            treeData = this.getOlapSearchTreeData(true, treeData, fieldName);\n        }\n        treeObj.fields = { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' };\n        treeObj.dataBind();\n    };\n    EventBase.prototype.getTreeData = function (isInclude, members, filterItems, fieldName) {\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        this.parent.savedTreeFilterPos = {};\n        var engineModule = this.parent.engineModule;\n        this.parent.isDateField = engineModule.formatFields[fieldName] &&\n            ((['date', 'dateTime', 'time']).indexOf(engineModule.formatFields[fieldName].type) > -1);\n        var list = [];\n        var memberCount = 1;\n        var filterObj = {};\n        for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n            var item = filterItems_3[_i];\n            filterObj[item] = item;\n        }\n        for (var _a = 0, members_2 = members; _a < members_2.length; _a++) {\n            var member = members_2[_a];\n            var memberName = this.parent.isDateField ? member.formattedText : member.actualText.toString();\n            /* tslint:disable */\n            var obj = {\n                id: member.actualText.toString(),\n                name: memberName,\n                isSelected: isInclude ? false : true\n            };\n            /* tslint:disable */\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            if (!obj.isSelected) {\n                this.parent.savedTreeFilterPos[memberCount - 1] = memberName;\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[member.actualText] = memberCount - 1;\n            memberCount++;\n        }\n        this.parent.isDataOverflow = ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor);\n        return list;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapTreeData = function (isInclude, members, filterObj, fieldName, isHierarchy, isSearchRender) {\n        var engineModule = this.parent.engineModule;\n        var fieldList = engineModule.fieldList[fieldName];\n        this.parent.currentTreeItems = [];\n        this.parent.searchTreeItems = [];\n        this.parent.currentTreeItemsPos = {};\n        var list = [];\n        var memberCount = 1;\n        for (var _i = 0, members_3 = members; _i < members_3.length; _i++) {\n            var member = members_3[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            if (!isSearchRender) {\n                obj.isSelected = isInclude ? false : true;\n            }\n            if (filterObj[memberName] !== undefined) {\n                obj.isSelected = isInclude ? true : false;\n            }\n            if (!isSearchRender && member.hasChildren) {\n                this.updateChildNodeStates(fieldList.filterMembers, fieldName, member.id, obj.isSelected);\n            }\n            fieldList.members[memberName].isSelected = obj.isSelected;\n            if (fieldList.currrentMembers && fieldList.currrentMembers[memberName]) {\n                fieldList.currrentMembers[memberName].isSelected = obj.isSelected;\n            }\n            if (memberCount <= this.parent.control.maxNodeLimitInMemberEditor && isHierarchy) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = memberCount - 1;\n            memberCount++;\n        }\n        this.parent.isDataOverflow = isHierarchy ? ((memberCount - 1) > this.parent.control.maxNodeLimitInMemberEditor) : false;\n        return isHierarchy ? list : members;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getOlapSearchTreeData = function (isInclude, members, fieldName) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        for (var _i = 0, members_4 = members; _i < members_4.length; _i++) {\n            var member = members_4[_i];\n            var memberName = member.id.toString();\n            if (cMembers[memberName]) {\n                member.isSelected = cMembers[memberName].isSelected;\n            }\n            this.parent.searchTreeItems.push(member);\n        }\n        return members;\n    };\n    EventBase.prototype.updateChildNodeStates = function (members, fieldName, node, state) {\n        var cMembers = this.parent.engineModule.fieldList[fieldName].members;\n        var sMembers = this.parent.engineModule.fieldList[fieldName].currrentMembers;\n        for (var _i = 0, members_5 = members; _i < members_5.length; _i++) {\n            var member = members_5[_i];\n            if (member.pid && member.pid.toString() === node) {\n                cMembers[member.id].isSelected = state;\n                if (sMembers && sMembers[member.id]) {\n                    sMembers[member.id].isSelected = state;\n                }\n                if (member.hasChildren) {\n                    this.updateChildNodeStates(members, fieldName, member.id, state);\n                }\n            }\n        }\n    };\n    /**\n     * get the parent node of particular filter members.\n     * @hidden\n     */\n    EventBase.prototype.getParentNode = function (fieldName, item, filterObj) {\n        var members = this.parent.engineModule.fieldList[fieldName].members;\n        if (members[item].parent && item !== members[item].parent) {\n            var parentItem = members[item].parent;\n            filterObj[parentItem] = parentItem;\n            this.getParentNode(fieldName, parentItem, filterObj);\n        }\n        return filterObj;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    EventBase.prototype.getFilteredTreeNodes = function (fieldName, members, filterObj, treeData, isHierarchy) {\n        var parentNodes = [];\n        var memberObject = this.parent.engineModule.fieldList[fieldName].members;\n        var selectedNodes = filterObj ? Object.keys(filterObj) : [];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var node = selectedNodes_1[_i];\n            var parent_1 = memberObject[node].parent;\n            if (parent_1 !== undefined && PivotUtil.inArray(parent_1, parentNodes) === -1) {\n                parentNodes.push(parent_1);\n            }\n        }\n        for (var _a = 0, members_6 = members; _a < members_6.length; _a++) {\n            var member = members_6[_a];\n            if (isNullOrUndefined(member.pid) || PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                treeData.push(member);\n                if (isNullOrUndefined(member.pid) && PivotUtil.inArray(member.id, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = true;\n                }\n                else if (!isNullOrUndefined(member.pid) && PivotUtil.inArray(member.pid, parentNodes) !== -1) {\n                    memberObject[member.id].isNodeExpand = false;\n                    memberObject[member.pid].isNodeExpand = true;\n                }\n                else {\n                    memberObject[member.id].isNodeExpand = false;\n                }\n            }\n            else {\n                memberObject[member.id].isNodeExpand = false;\n            }\n        }\n        return treeData;\n    };\n    return EventBase;\n}());\nexport { EventBase };\n","import { isNullOrUndefined, closest, isBlazor } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\n/**\n * `DialogAction` module is used to handle field list dialog related behaviour.\n */\n/** @hidden */\nvar NodeStateModified = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function NodeStateModified(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by drag and drop the selected field from either field list or axis table with dropped target position.\n     * @method onStateModified\n     * @param  {DragEventArgs & DragAndDropEventArgs} args -  Contains both pivot button and field list drag and drop information.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @return {void}\n     * @hidden\n     */\n    NodeStateModified.prototype.onStateModified = function (args, fieldName) {\n        var droppedClass = '';\n        var nodeDropped = true;\n        var target = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n        var droppedPosition = -1;\n        this.parent.dataSourceUpdate.btnElement = args.element ? args.element.parentElement : undefined;\n        if (target) {\n            droppedClass = target.classList[1] === cls.ROW_AXIS_CLASS ?\n                'rows' : target.classList[1] === cls.COLUMN_AXIS_CLASS ? 'columns' : target.classList[1] === cls.VALUE_AXIS_CLASS ?\n                'values' : target.classList[1] === cls.FILTER_AXIS_CLASS ? 'filters' : '';\n        }\n        if (this.parent.dataType === 'olap') {\n            var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n            if (args.cancel && droppedClass === '') {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            else if ((this.parent.dataSourceUpdate.btnElement &&\n                (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                        (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 &&\n                        this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets &&\n                        (droppedClass === 'filters' || droppedClass === 'values'))) ||\n                (this.parent.dataSourceUpdate.btnElement &&\n                    (this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'false' &&\n                        actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values'))) {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        else {\n            if ((args.cancel && droppedClass === '') ||\n                (this.parent.dataSourceUpdate.btnElement && this.parent.dataSourceUpdate.btnElement.getAttribute('isValue') === 'true' &&\n                    ((droppedClass === 'filters' || droppedClass === 'values') ||\n                        droppedClass.indexOf(this.parent.dataSourceSettings.valueAxis) > -1))) {\n                nodeDropped = false;\n                return nodeDropped;\n            }\n        }\n        if (droppedClass !== '') {\n            if (this.parent.dataType === 'olap') {\n                var actualFieldName = (this.parent.engineModule.fieldList[fieldName] &&\n                    this.parent.engineModule.fieldList[fieldName].isCalculatedField ?\n                    this.parent.engineModule.fieldList[fieldName].tag : fieldName);\n                if ((actualFieldName.toLowerCase().indexOf('[measures].') > -1 &&\n                    (droppedClass === 'filters' || droppedClass === 'rows' || droppedClass === 'columns')) ||\n                    (this.parent.engineModule.fieldList[fieldName] &&\n                        this.parent.engineModule.fieldList[fieldName].isNamedSets && droppedClass === 'filters') ||\n                    (actualFieldName.toLowerCase().indexOf('[measures].') === -1 && droppedClass === 'values')) {\n                    var title = this.parent.localeObj.getConstant('warning');\n                    var description = this.parent.localeObj.getConstant('fieldDropErrorAction');\n                    this.parent.errorDialog.createErrorDialog(title, description);\n                    nodeDropped = false;\n                    return nodeDropped;\n                }\n            }\n            if (this.parent.dataType === 'pivot' && this.parent.engineModule.fieldList[fieldName] &&\n                this.parent.engineModule.fieldList[fieldName].aggregateType === 'CalculatedField' && droppedClass !== 'values') {\n                var title = this.parent.localeObj.getConstant('warning');\n                var description = this.parent.localeObj.getConstant('dropAction');\n                this.parent.errorDialog.createErrorDialog(title, description);\n                nodeDropped = false;\n                return nodeDropped;\n            }\n            droppedPosition = this.getButtonPosition(args.target, droppedClass);\n        }\n        else if (this.parent.engineModule.fieldList[fieldName]) {\n            this.parent.engineModule.fieldList[fieldName].isSelected = false;\n            if (this.parent.dataType === 'olap') {\n                this.parent.engineModule.updateFieldlistData(fieldName);\n            }\n        }\n        this.parent.dataSourceUpdate.updateDataSource(fieldName, droppedClass, droppedPosition);\n        return isBlazor() ? false : nodeDropped;\n    };\n    NodeStateModified.prototype.getButtonPosition = function (target, droppedClass) {\n        var droppedPosition = -1;\n        var targetBtn = closest(target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n        if (!isNullOrUndefined(targetBtn)) {\n            targetBtn = targetBtn.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n            var axisPanel = this.parent.element.querySelector('.e-' + droppedClass);\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === targetBtn.id) {\n                    droppedPosition = i;\n                    break;\n                }\n            }\n        }\n        return droppedPosition;\n    };\n    return NodeStateModified;\n}());\nexport { NodeStateModified };\n","import * as events from '../../common/base/constant';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * `DataSourceUpdate` module is used to update the dataSource.\n */\n/** @hidden */\nvar DataSourceUpdate = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function DataSourceUpdate(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Updates the dataSource by adding the given field along with field dropped position to the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to update dataSource.\n     * @param  {string} droppedClass -  Defines dropped field axis name to update dataSource.\n     * @param  {number} fieldCaption - Defines dropped position to the axis based on field position.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.updateDataSource = function (fieldName, droppedClass, droppedPosition) {\n        var _this = this;\n        var dataSourceItem;\n        if (this.control && this.btnElement && this.btnElement.getAttribute('isvalue') === 'true') {\n            switch (droppedClass) {\n                case '':\n                    this.control.setProperties({ dataSourceSettings: { values: [] } }, true);\n                    break;\n                case 'rows':\n                    this.control.setProperties({ dataSourceSettings: { valueAxis: 'row' } }, true);\n                    break;\n                case 'columns':\n                    this.control.setProperties({ dataSourceSettings: { valueAxis: 'column' } }, true);\n                    break;\n            }\n        }\n        else {\n            dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n            dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n            if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                droppedClass = 'values';\n            }\n        }\n        if (this.parent.dataType === 'olap') {\n            dataSourceItem = this.removeFieldFromReport(fieldName.toString());\n            dataSourceItem = dataSourceItem ? dataSourceItem : this.getNewField(fieldName.toString());\n            if (this.parent.dataSourceSettings.values.length === 0) {\n                this.removeFieldFromReport('[measures]');\n            }\n            if (dataSourceItem.type === 'CalculatedField' && droppedClass !== '') {\n                droppedClass = 'values';\n            }\n        }\n        if (this.control) {\n            var eventArgs_1 = {\n                'droppedField': dataSourceItem, 'dataSourceSettings': this.parent.dataSourceSettings, 'droppedAxis': droppedClass\n            };\n            /* tslint:disable */\n            var dataSourceUpdate_1 = this;\n            this.control.trigger(events.onFieldDropped, eventArgs_1, function (observedArgs) {\n                eventArgs_1 = observedArgs;\n                if (dataSourceItem) {\n                    dataSourceItem = observedArgs.droppedField;\n                    switch (droppedClass) {\n                        case 'filters':\n                            droppedPosition !== -1 ?\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.filters.splice(droppedPosition, 0, dataSourceItem)) :\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.filters.push(dataSourceItem) : _this.parent.dataSourceSettings.filters.push(dataSourceItem));\n                            break;\n                        case 'rows':\n                            droppedPosition !== -1 ?\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.rows.splice(droppedPosition, 0, dataSourceItem)) :\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.rows.push(dataSourceItem) : _this.parent.dataSourceSettings.rows.push(dataSourceItem));\n                            break;\n                        case 'columns':\n                            droppedPosition !== -1 ?\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.columns.splice(droppedPosition, 0, dataSourceItem)) :\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.columns.push(dataSourceItem) : _this.parent.dataSourceSettings.columns.push(dataSourceItem));\n                            break;\n                        case 'values':\n                            droppedPosition !== -1 ?\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem) : _this.parent.dataSourceSettings.values.splice(droppedPosition, 0, dataSourceItem)) :\n                                (isBlazor() ? dataSourceUpdate_1.parent.dataSourceSettings.values.push(dataSourceItem) : _this.parent.dataSourceSettings.values.push(dataSourceItem));\n                            if (isBlazor()) {\n                                if (dataSourceUpdate_1.parent.dataType === 'olap' && !dataSourceUpdate_1.parent.engineModule.isMeasureAvail) {\n                                    var measureField = {\n                                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined\n                                    };\n                                    var fieldAxis = dataSourceUpdate_1.parent.dataSourceSettings.valueAxis === 'row' ?\n                                        dataSourceUpdate_1.parent.dataSourceSettings.rows : dataSourceUpdate_1.parent.dataSourceSettings.columns;\n                                    fieldAxis.push(measureField);\n                                }\n                            }\n                            else {\n                                if (_this.parent.dataType === 'olap' && !_this.parent.engineModule.isMeasureAvail) {\n                                    var measureField = {\n                                        name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined\n                                    };\n                                    var fieldAxis = _this.parent.dataSourceSettings.valueAxis === 'row' ?\n                                        _this.parent.dataSourceSettings.rows : _this.parent.dataSourceSettings.columns;\n                                    fieldAxis.push(measureField);\n                                }\n                            }\n                            break;\n                    }\n                    if (isBlazor()) {\n                        dataSourceUpdate_1.parent.control.pivotButtonModule.updateDataSource();\n                        dataSourceUpdate_1.parent.control.axisFieldModule.render();\n                    }\n                }\n            });\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Updates the dataSource by removing the given field from the dataSource.\n     * @param  {string} fieldName - Defines dropped field name to remove dataSource.\n     * @method removeFieldFromReport\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.removeFieldFromReport = function (fieldName) {\n        var dataSourceItem;\n        var isDataSource = false;\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var field = this.parent.engineModule.fieldList[fieldName];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (!isDataSource && fields[len]) {\n                for (var i = 0, n = fields[len].length; i < n; i++) {\n                    if (fields[len][i].name === fieldName || (this.parent.dataType === 'olap' &&\n                        fields[len][i].name.toLowerCase() === '[measures]' && fields[len][i].name.toLowerCase() === fieldName)) {\n                        dataSourceItem = fields[len][i].properties ?\n                            fields[len][i].properties : fields[len][i];\n                        dataSourceItem.type = (field && field.type === 'number') ? dataSourceItem.type :\n                            'Count';\n                        fields[len].splice(i, 1);\n                        if (this.parent.dataType === 'olap') {\n                            var engineModule = this.parent.engineModule;\n                            if (engineModule && engineModule.fieldList[fieldName]) {\n                                engineModule.fieldList[fieldName].currrentMembers = {};\n                                engineModule.fieldList[fieldName].searchMembers = [];\n                            }\n                        }\n                        isDataSource = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return dataSourceItem;\n    };\n    /**\n     * Creates new field object given field name from the field list data.\n     * @param  {string} fieldName - Defines dropped field name to add dataSource.\n     * @method getNewField\n     * @return {void}\n     * @hidden\n     */\n    DataSourceUpdate.prototype.getNewField = function (fieldName) {\n        var newField;\n        if (this.parent.dataType === 'olap') {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldName,\n                caption: field.caption,\n                isNamedSet: field.isNamedSets,\n                isCalculatedField: field.isCalculatedField,\n                type: (field.aggregateType === undefined ? field.type === 'number' ? 'Sum' :\n                    'Count' : field.aggregateType),\n            };\n        }\n        else {\n            var field = this.parent.engineModule.fieldList[fieldName];\n            newField = {\n                name: fieldName,\n                caption: field.caption,\n                type: ((field.aggregateType === undefined || field.aggregateType === null) ?\n                    field.type === 'number' ? 'Sum' :\n                        'Count' : field.aggregateType),\n                showNoDataItems: field.showNoDataItems,\n                baseField: field.baseField,\n                baseItem: field.baseItem,\n            };\n        }\n        return newField;\n    };\n    return DataSourceUpdate;\n}());\nexport { DataSourceUpdate };\n","import { createElement, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * `ErrorDialog` module to create error dialog.\n */\n/** @hidden */\nvar ErrorDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function ErrorDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createErrorDialog\n     * @return {void}\n     * @hidden\n     */\n    ErrorDialog.prototype.createErrorDialog = function (title, description, target) {\n        var errorDialog = createElement('div', {\n            id: this.parent.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        var zIndex = target ? Number(target.style.zIndex) + 1 : (this.parent.moduleName === 'pivotfieldlist' &&\n            this.parent.renderMode === 'Popup' && this.parent.control ?\n            this.parent.control.dialogRenderer.fieldListDialog.zIndex + 1 : 1000001);\n        this.errorPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: zIndex,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.closeErrorDialog.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                }\n            ],\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this)\n        });\n        this.errorPopUp.isStringTemplate = true;\n        this.errorPopUp.appendTo(errorDialog);\n    };\n    ErrorDialog.prototype.closeErrorDialog = function () {\n        this.errorPopUp.close();\n    };\n    ErrorDialog.prototype.removeErrorDialog = function () {\n        if (this.errorPopUp && !this.errorPopUp.isDestroyed) {\n            this.errorPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parent.parentID + '_ErrorDialog'));\n        }\n    };\n    return ErrorDialog;\n}());\nexport { ErrorDialog };\n","import { createElement, removeClass, addClass, remove, isNullOrUndefined, setStyleAttribute } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constant';\nimport { TreeView, Tab } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { setStyleAndAttributes } from '@syncfusion/ej2-grids';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { PivotUtil } from '../../base/util';\n/**\n * `FilterDialog` module to create filter dialog.\n */\n/** @hidden */\nvar FilterDialog = /** @class */ (function () {\n    /**\n     * Constructor for the dialog action.\n     * @hidden\n     */\n    function FilterDialog(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Creates the member filter dialog for the selected field.\n     * @method createFilterDialog\n     * @return {void}\n     * @hidden\n     */\n    FilterDialog.prototype.createFilterDialog = function (treeData, fieldName, fieldCaption, target) {\n        var editorDialog = createElement('div', {\n            id: this.parent.parentID + '_EditorTreeView',\n            className: cls.MEMBER_EDITOR_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n            attrs: { 'data-fieldName': fieldName, 'aria-label': fieldCaption },\n            styles: 'visibility:hidden;'\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var headerTemplate = this.parent.localeObj.getConstant('filter') + ' ' +\n            '\"' + fieldCaption + '\"' + ' ' + this.parent.localeObj.getConstant('by');\n        this.filterObject = this.getFilterObject(fieldName);\n        this.isSearchEnabled = false;\n        this.allowExcelLikeFilter = this.isExcelFilter(fieldName);\n        this.parent.element.appendChild(editorDialog);\n        this.dialogPopUp = new Dialog({\n            animationSettings: { effect: (this.allowExcelLikeFilter ? 'None' : 'Fade') },\n            allowDragging: false,\n            header: (this.allowExcelLikeFilter ? headerTemplate : filterCaption),\n            content: (this.allowExcelLikeFilter ? '' : this.createTreeView(treeData, fieldCaption, fieldName)),\n            isModal: this.parent.renderMode === 'Popup' ? true : this.parent.isAdaptive ? true : false,\n            visible: true,\n            showCloseIcon: this.allowExcelLikeFilter ? true : false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: this.parent.isDataOverflow ? (this.allowExcelLikeFilter ? '440px' : '400px') :\n                (this.allowExcelLikeFilter ? '400px' : '350px'),\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    buttonModel: {\n                        cssClass: 'e-clear-filter-button' + (this.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                        iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                        content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.filterObject ? false : true)\n                    }\n                },\n                {\n                    click: this.closeFilterDialog.bind(this),\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: target,\n            close: this.removeFilterDialog.bind(this)\n        });\n        this.dialogPopUp.isStringTemplate = true;\n        this.dialogPopUp.appendTo(editorDialog);\n        // this.dialogPopUp.element.querySelector('.e-dlg-header').innerHTML = (this.allowExcelLikeFilter ? headerTemplate : filterCaption);\n        if (this.allowExcelLikeFilter) {\n            this.createTabMenu(treeData, fieldCaption, fieldName);\n            addClass([this.dialogPopUp.element], 'e-excel-filter');\n            this.updateCheckedState(fieldCaption);\n        }\n        else {\n            this.updateCheckedState(fieldCaption);\n        }\n        setStyleAttribute(this.dialogPopUp.element, { 'visibility': 'visible' });\n        if (this.allowExcelLikeFilter) {\n            this.dialogPopUp.element.querySelector('.e-dlg-closeicon-btn').focus();\n        }\n        else {\n            return;\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createTreeView = function (treeData, fieldCaption, fieldName) {\n        var _this = this;\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.parentID + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS + (this.allowExcelLikeFilter ? ' e-excelfilter' : '')\n        });\n        var levelWrapper = createElement('button', {\n            id: this.parent.parentID + '_LevelDiv',\n            className: 'e-level-wrapper-class'\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.parentID + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var filterCaption = this.parent.engineModule.fieldList[fieldName].caption;\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        var nodeLimitText = this.parent.isDataOverflow ?\n            ((this.parent.currentTreeItems.length - this.parent.control.maxNodeLimitInMemberEditor) +\n                this.parent.control.localeObj.getConstant('editorDataLimitMsg')) : '';\n        var labelWrapper = createElement('div', {\n            id: this.parent.parentID + '_LabelDiv',\n            attrs: { 'tabindex': '-1', 'title': nodeLimitText },\n            className: cls.EDITOR_LABEL_WRAPPER_CLASS\n        });\n        this.parent.editorLabelElement = createElement('label', { className: cls.EDITOR_LABEL_CLASS });\n        this.parent.editorLabelElement.innerText = nodeLimitText;\n        labelWrapper.style.display = this.parent.isDataOverflow ? 'block' : 'none';\n        labelWrapper.appendChild(this.parent.editorLabelElement);\n        searchWrapper.appendChild(editorSearch);\n        searchWrapper.appendChild(levelWrapper);\n        var selectAllWrapper = createElement('div', {\n            id: this.parent.parentID + '_AllDiv', attrs: { 'tabindex': '-1' },\n            className: cls.SELECT_ALL_WRAPPER_CLASS\n        });\n        var selectAllContainer = createElement('div', { className: cls.SELECT_ALL_CLASS });\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS });\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        if (this.parent.dataType === 'olap' && this.parent.control.loadOnDemandInMemberEditor &&\n            !this.parent.engineModule.fieldList[fieldName].isHierarchy &&\n            !this.parent.engineModule.fieldList[fieldName].isNamedSets) {\n            this.createLevelWrapper(levelWrapper, fieldName);\n        }\n        else {\n            levelWrapper.style.display = 'none';\n        }\n        selectAllWrapper.appendChild(selectAllContainer);\n        editorTreeWrapper.appendChild(searchWrapper);\n        editorTreeWrapper.appendChild(selectAllWrapper);\n        editorTreeWrapper.appendChild(promptDiv);\n        this.editorSearch = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('search') + ' ' + '\"' + filterCaption + '\"',\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            showClearButton: true,\n            change: function (e) {\n                if (_this.parent.dataType === 'olap') {\n                    _this.searchOlapTreeView(e, promptDiv, fieldCaption);\n                }\n                else {\n                    _this.parent.eventBase.searchTreeNodes(e, _this.memberTreeView, false);\n                    var filterDialog = _this.dialogPopUp.element;\n                    var liList = [].slice.call(_this.memberTreeView.element.querySelectorAll('li'));\n                    if (liList.length === 0) {\n                        _this.allMemberSelect.disableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                        removeClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    else {\n                        _this.allMemberSelect.enableNodes([_this.allMemberSelect.element.querySelector('li')]);\n                        filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                        addClass([promptDiv], cls.ICON_DISABLE);\n                    }\n                    _this.updateCheckedState(fieldCaption);\n                }\n            }\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var nodeAttr = { 'data-fieldName': fieldName };\n        var data = [{ id: 'all', name: 'All', isSelected: true, htmlAttributes: nodeAttr }];\n        this.allMemberSelect = new TreeView({\n            fields: { dataSource: data, id: 'id', text: 'name', isChecked: 'isSelected' },\n            showCheckBox: true,\n            expandOn: 'None',\n            enableRtl: this.parent.enableRtl,\n            nodeClicked: this.nodeCheck.bind(this, true),\n            keyPress: this.nodeCheck.bind(this, true)\n        });\n        this.allMemberSelect.isStringTemplate = true;\n        this.allMemberSelect.appendTo(selectAllContainer);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.memberTreeView = new TreeView({\n            fields: { dataSource: treeData, id: 'id', text: 'name', isChecked: 'isSelected', parentID: 'pid' },\n            showCheckBox: true,\n            enableRtl: this.parent.enableRtl,\n            nodeChecking: this.validateTreeNode.bind(this),\n            nodeClicked: this.nodeCheck.bind(this, false),\n            keyPress: this.nodeCheck.bind(this, false),\n            nodeExpanding: this.updateChildNodes.bind(this),\n            expandOn: 'None'\n        });\n        this.memberTreeView.isStringTemplate = true;\n        this.memberTreeView.appendTo(treeViewContainer);\n        editorTreeWrapper.appendChild(labelWrapper);\n        return editorTreeWrapper;\n    };\n    FilterDialog.prototype.createLevelWrapper = function (levelWrapper, fieldName) {\n        var _this = this;\n        var engineModule = this.parent.engineModule;\n        var levels = engineModule.fieldList[fieldName].levels;\n        var levelCount = engineModule.fieldList[fieldName].levelCount;\n        var items = [];\n        for (var i = 0, cnt = levels.length; i < cnt; i++) {\n            items.push({ id: levels[i].id, text: levels[i].name });\n        }\n        this.dropMenu = new DropDownButton({\n            cssClass: 'e-level-drop',\n            items: items, iconCss: 'e-icons e-dropdown-icon',\n            disabled: (levelCount === levels.length),\n            beforeOpen: function (args) {\n                var items = [].slice.call(args.element.querySelectorAll('li'));\n                var engineModule = _this.parent.engineModule;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                removeClass(items, cls.MENU_DISABLE);\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (i < levelCount) {\n                        addClass([items[i]], cls.MENU_DISABLE);\n                    }\n                }\n            },\n            select: function (args) {\n                var fieldName = _this.dialogPopUp.element.getAttribute('data-fieldname');\n                var engineModule = _this.parent.engineModule;\n                var selectedLevel;\n                for (var i = 0, cnt = items.length; i < cnt; i++) {\n                    if (items[i].id === args.item.id) {\n                        selectedLevel = i;\n                    }\n                }\n                engineModule.getFilterMembers(_this.parent.dataSourceSettings, fieldName, selectedLevel + 1, false, true);\n            },\n            close: function () {\n                var engineModule = _this.parent.engineModule;\n                var levels = engineModule.fieldList[fieldName].levels;\n                var levelCount = engineModule.fieldList[fieldName].levelCount;\n                if (levelCount === levels.length) {\n                    _this.dropMenu.disabled = true;\n                    _this.dropMenu.dataBind();\n                }\n                else {\n                    _this.dropMenu.disabled = false;\n                }\n            }\n        });\n        this.dropMenu.appendTo(levelWrapper);\n    };\n    FilterDialog.prototype.searchOlapTreeView = function (e, promptDiv, fieldCaption) {\n        var popupInstance = this;\n        clearTimeout(this.timeOutObj);\n        this.timeOutObj = setTimeout(function () {\n            var engineModule = popupInstance.parent.engineModule;\n            var filterDialog = popupInstance.dialogPopUp.element;\n            var fieldName = filterDialog.getAttribute('data-fieldname');\n            var nodeLimit = popupInstance.parent.control.maxNodeLimitInMemberEditor ?\n                popupInstance.parent.control.maxNodeLimitInMemberEditor : 5000;\n            if (!engineModule.fieldList[fieldName].isHierarchy) {\n                if (popupInstance.dropMenu && e.value !== '') {\n                    popupInstance.dropMenu.disabled = true;\n                }\n                else {\n                    popupInstance.dropMenu.disabled = false;\n                }\n                if (!popupInstance.parent.control.loadOnDemandInMemberEditor) {\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, true);\n                }\n                else {\n                    var levelCount = engineModule.fieldList[fieldName].levelCount ? engineModule.fieldList[fieldName].levelCount : 1;\n                    engineModule.getSearchMembers(popupInstance.parent.dataSourceSettings, fieldName, e.value.toLowerCase(), nodeLimit, false, levelCount);\n                }\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, false);\n            }\n            else {\n                popupInstance.parent.eventBase.searchTreeNodes(e, popupInstance.memberTreeView, false, true);\n            }\n            var liList = [].slice.call(popupInstance.memberTreeView.element.querySelectorAll('li'));\n            // for (let element of liList) {\n            //     if (element.querySelector('.interaction')) {\n            //         setStyleAttribute(element.querySelector('.interaction'), { display: 'none' });\n            //     }\n            // }\n            if (liList.length === 0) {\n                popupInstance.allMemberSelect.disableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                removeClass([promptDiv], cls.ICON_DISABLE);\n            }\n            else {\n                popupInstance.allMemberSelect.enableNodes([popupInstance.allMemberSelect.element.querySelector('li')]);\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                addClass([promptDiv], cls.ICON_DISABLE);\n            }\n            popupInstance.updateCheckedState(fieldCaption);\n        }, 500);\n    };\n    /* tslint:enable */\n    /* tslint:disable:no-any */\n    FilterDialog.prototype.nodeCheck = function (isAllMember, args) {\n        var checkedNode = [args.node];\n        if (args.event.target.classList.contains('e-fullrow') || args.event.key === 'Enter') {\n            var memberObj = isAllMember ? this.allMemberSelect : this.memberTreeView;\n            var getNodeDetails = memberObj.getNode(args.node);\n            if (getNodeDetails.isChecked === 'true') {\n                memberObj.uncheckAll(checkedNode);\n            }\n            else {\n                memberObj.checkAll(checkedNode);\n            }\n        }\n    };\n    FilterDialog.prototype.updateChildNodes = function (args) {\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var fieldName = args.node.getAttribute('data-fieldname');\n            var fieldList = engineModule.fieldList[fieldName];\n            var filterItems = [];\n            if (fieldList && fieldList.filterMembers.length > 0 && !this.isSearchEnabled &&\n                !fieldList.members[args.nodeData.id].isNodeExpand) {\n                var childNodes = [];\n                for (var _i = 0, _a = fieldList.filterMembers; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.pid === args.nodeData.id.toString()) {\n                        childNodes.push(item);\n                    }\n                }\n                if (childNodes.length === 0) {\n                    fieldList.childMembers = [];\n                    engineModule.getChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString(), fieldName);\n                    childNodes = fieldList.childMembers;\n                    fieldList.childMembers = [];\n                }\n                var treeData = PivotUtil.getClonedData(childNodes);\n                var curTreeData = this.memberTreeView.fields.dataSource;\n                var isInclude = false;\n                if (!isNullOrUndefined(this.filterObject)) {\n                    isInclude = this.filterObject.type === 'Include' ? true : false;\n                    filterItems = this.filterObject.items ? this.filterObject.items : [];\n                }\n                treeData = this.updateChildData(isInclude, treeData, filterItems, fieldName, args.nodeData);\n                treeData = this.parent.eventBase.sortOlapFilterData(treeData, engineModule.fieldList[fieldName].sort);\n                for (var _b = 0, treeData_1 = treeData; _b < treeData_1.length; _b++) {\n                    var node = treeData_1[_b];\n                    curTreeData.push(node);\n                }\n                fieldList.members[args.nodeData.id].isNodeExpand = true;\n                this.memberTreeView.addNodes(treeData, args.node);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    FilterDialog.prototype.updateChildData = function (isInclude, members, filterItems, fieldName, parentNode) {\n        var memberCount = Object.keys(this.parent.currentTreeItemsPos).length;\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var list = [];\n        var childMemberCount = 1;\n        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n            var member = members_1[_i];\n            var obj = member;\n            var memberName = member.id.toString();\n            fieldList.members[memberName].isNodeExpand = false;\n            member.isSelected = (parentNode.isChecked === 'true');\n            if (childMemberCount <= this.parent.control.maxNodeLimitInMemberEditor) {\n                list.push(obj);\n            }\n            this.parent.currentTreeItems.push(obj);\n            this.parent.searchTreeItems.push(obj);\n            this.parent.currentTreeItemsPos[memberName] = memberCount;\n            memberCount++;\n            childMemberCount++;\n        }\n        this.parent.isDataOverflow = false;\n        return list;\n    };\n    FilterDialog.prototype.createTabMenu = function (treeData, fieldCaption, fieldName) {\n        var wrapper = createElement('div', {\n            className: 'e-filter-tab-wrapper'\n        });\n        this.dialogPopUp.content = wrapper;\n        this.dialogPopUp.dataBind();\n        var types = ['Label', 'Value', 'Include', 'Exclude'];\n        var regx = '((-|\\\\+)?[0-9]+(\\\\.[0-9]+)?)+';\n        var member = Object.keys(this.parent.engineModule.fieldList[fieldName].members)[0];\n        var fieldType = this.parent.engineModule.fieldList[fieldName].type;\n        var formatObj = PivotUtil.getFieldByName(fieldName, this.parent.dataSourceSettings.formatSettings);\n        var items = [\n            {\n                header: {\n                    text: this.parent.localeObj.getConstant('member'),\n                    iconCss: (this.filterObject && types.indexOf(this.filterObject.type) > 1 ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                },\n                content: this.createTreeView(treeData, fieldCaption, fieldName)\n            }\n        ];\n        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n            var type = types_1[_i];\n            if (((type === 'Label') && this.parent.dataSourceSettings.allowLabelFilter) ||\n                (type === 'Value' && this.parent.dataSourceSettings.allowValueFilter)) {\n                var filterType = (type === 'Label' && member && ((member).match(regx) &&\n                    (member).match(regx)[0].length === (member).length) && fieldType === 'number') ? 'Number' :\n                    (type === 'Label' && member && (new Date(member).toString() !== 'Invalid Date') &&\n                        ((formatObj && formatObj.type) || (this.filterObject && this.filterObject.type === 'Date'))) ? 'Date' : type;\n                var item = {\n                    header: {\n                        text: (filterType === 'Number' ? this.parent.localeObj.getConstant('label') :\n                            this.parent.localeObj.getConstant(filterType.toLowerCase())),\n                        iconCss: (this.filterObject && this.filterObject.type === filterType ? cls.SELECTED_OPTION_ICON_CLASS : '')\n                    },\n                    /* tslint:disable-next-line:max-line-length */\n                    content: this.createCustomFilter(fieldName, (this.filterObject && this.filterObject.type === filterType ? this.filterObject : undefined), filterType.toLowerCase())\n                };\n                items.push(item);\n            }\n        }\n        var selectedIndex = (this.filterObject ? (['Label', 'Date', 'Number'].indexOf(this.filterObject.type) >= 0) ?\n            1 : this.filterObject.type === 'Value' ?\n            (this.parent.dataSourceSettings.allowLabelFilter && this.parent.dataSourceSettings.allowValueFilter) ? 2 : 1 : 0 : 0);\n        selectedIndex = (!this.parent.dataSourceSettings.allowMemberFilter && selectedIndex === 0) ? 1 : selectedIndex;\n        this.tabObj = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            selectedItem: selectedIndex,\n            enableRtl: this.parent.enableRtl\n        });\n        this.tabObj.isStringTemplate = true;\n        this.tabObj.appendTo(wrapper);\n        if (!this.parent.dataSourceSettings.allowMemberFilter) {\n            this.tabObj.hideTab(0);\n        }\n        if (selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n    };\n    /* tslint:disable */\n    FilterDialog.prototype.createCustomFilter = function (fieldName, filterObject, type) {\n        var dataSource = [];\n        var valueOptions = [];\n        var levelOptions = [];\n        var measures = this.parent.dataSourceSettings.values;\n        var selectedOption = 'DoesNotEquals';\n        var selectedValueIndex = 0;\n        var selectedLevelIndex = 0;\n        var options = {\n            label: ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n                'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n                'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'],\n            date: ['Equals', 'DoesNotEquals', 'Before', 'BeforeOrEqualTo', 'After', 'AfterOrEqualTo',\n                'Between', 'NotBetween'],\n            value: ['Equals', 'DoesNotEquals', 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan',\n                'LessThanOrEqualTo', 'Between', 'NotBetween']\n        };\n        var betweenOperators = ['Between', 'NotBetween'];\n        var operatorCollection = (type === 'label' ? options.label : type === 'date' ? options.date : options.value);\n        for (var _i = 0, operatorCollection_1 = operatorCollection; _i < operatorCollection_1.length; _i++) {\n            var operator = operatorCollection_1[_i];\n            selectedOption = ((filterObject && operator === filterObject.condition) ?\n                operatorCollection.indexOf(filterObject.condition) >= 0 ?\n                    filterObject.condition : operatorCollection[0] : selectedOption);\n            dataSource.push({ value: operator, text: this.parent.localeObj.getConstant(operator) });\n        }\n        var len = measures.length;\n        while (len--) {\n            valueOptions.unshift({ value: measures[len].name, text: (measures[len].caption ? measures[len].caption : measures[len].name) });\n            selectedValueIndex = filterObject && filterObject.type === 'Value' &&\n                filterObject.measure === measures[len].name &&\n                filterObject.condition === selectedOption ? len : selectedValueIndex;\n        }\n        if (this.parent.dataType === 'olap') {\n            var engineModule = this.parent.engineModule;\n            var levels = engineModule.fieldList[fieldName].levels;\n            if (this.parent.engineModule.fieldList[fieldName].isHierarchy) {\n                var levelObj = void 0;\n                var fieldlistData = this.parent.engineModule.fieldListData;\n                for (var _a = 0, fieldlistData_1 = fieldlistData; _a < fieldlistData_1.length; _a++) {\n                    var item = fieldlistData_1[_a];\n                    if (item && item.pid === fieldName) {\n                        levelObj = item;\n                        break;\n                    }\n                }\n                levelOptions.push({\n                    value: levelObj ? levelObj.id : fieldName,\n                    text: levelObj ? levelObj.caption : engineModule.fieldList[fieldName].name\n                });\n                selectedLevelIndex = 0;\n                if (filterObject && filterObject.name === fieldName && filterObject.type.toLowerCase() === type) {\n                    levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                }\n            }\n            else {\n                for (var i = 0, cnt = levels.length; i < cnt; i++) {\n                    selectedLevelIndex = (filterObject &&\n                        filterObject.selectedField === levels[i].id ? i : selectedLevelIndex);\n                    levelOptions.push({ value: levels[i].id, text: levels[i].name });\n                    for (var _b = 0, _c = this.parent.dataSourceSettings.filterSettings; _b < _c.length; _b++) {\n                        var field = _c[_b];\n                        if (field.name === fieldName && field.selectedField === levels[i].id && field.type.toLowerCase() === type) {\n                            levelOptions[levelOptions.length - 1]['iconClass'] = cls.ICON + ' ' + cls.SELECTED_LEVEL_ICON_CLASS;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        var mainDiv = createElement('div', {\n            className: cls.FILTER_DIV_CONTENT_CLASS + ' e-' + ((['date', 'number']).indexOf(type) >= 0 ? 'label' : type) + '-filter',\n            id: this.parent.parentID + '_' + type + '_filter_div_content',\n            attrs: {\n                'data-type': type, 'data-fieldName': fieldName, 'data-operator': selectedOption,\n                'data-selectedField': (this.parent.dataType === 'olap' &&\n                    levelOptions.length > 0 ? levelOptions[selectedLevelIndex].value.toString() : ''),\n                'data-measure': (this.parent.dataSourceSettings.values.length > 0 ?\n                    this.parent.dataSourceSettings.values[selectedValueIndex].name : ''),\n                'data-value1': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value1 ? filterObject.value1.toString() : '' : ''),\n                'data-value2': (filterObject && selectedOption === filterObject.condition ?\n                    filterObject.value2 ? filterObject.value2.toString() : '' : '')\n            }\n        });\n        var textContentdiv = createElement('div', {\n            className: cls.FILTER_TEXT_DIV_CLASS,\n            innerHTML: this.parent.localeObj.getConstant(type + 'TextContent')\n        });\n        var betweenTextContentdiv = createElement('div', {\n            className: cls.BETWEEN_TEXT_DIV_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : ''),\n            innerHTML: this.parent.localeObj.getConstant('And')\n        });\n        var separatordiv = createElement('div', { className: cls.SEPARATOR_DIV_CLASS });\n        var filterWrapperDiv1 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_1_CLASS });\n        var levelWrapperDiv = createElement('div', {\n            className: 'e-level-option-wrapper' + ' ' +\n                (this.parent.dataType === 'olap' ? '' : cls.ICON_DISABLE),\n        });\n        var optionWrapperDiv1 = createElement('div', {\n            className: 'e-measure-option-wrapper' + ' ' + (((['label', 'date', 'number']).indexOf(type) >= 0) ? cls.ICON_DISABLE : ''),\n        });\n        var optionWrapperDiv2 = createElement('div', { className: 'e-condition-option-wrapper' });\n        var filterWrapperDiv2 = createElement('div', { className: cls.FILTER_OPTION_WRAPPER_2_CLASS });\n        var levelDropOption = createElement('div', { id: this.parent.parentID + '_' + type + '_level_option_wrapper' });\n        var dropOptionDiv1 = createElement('div', { id: this.parent.parentID + '_' + type + '_measure_option_wrapper' });\n        var dropOptionDiv2 = createElement('div', { id: this.parent.parentID + '_' + type + '_contition_option_wrapper' });\n        var inputDiv1 = createElement('div', { className: cls.FILTER_INPUT_DIV_1_CLASS });\n        var inputDiv2 = createElement('div', {\n            className: cls.FILTER_INPUT_DIV_2_CLASS + ' ' +\n                (betweenOperators.indexOf(selectedOption) === -1 ? cls.ICON_DISABLE : '')\n        });\n        var inputField1 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_1', attrs: { 'type': 'text' }\n        });\n        var inputField2 = createElement('input', {\n            id: this.parent.parentID + '_' + type + '_input_option_2', attrs: { 'type': 'text' }\n        });\n        inputDiv1.appendChild(inputField1);\n        inputDiv2.appendChild(inputField2);\n        levelWrapperDiv.appendChild(levelDropOption);\n        levelWrapperDiv.appendChild(separatordiv.cloneNode(true));\n        optionWrapperDiv1.appendChild(dropOptionDiv1);\n        optionWrapperDiv1.appendChild(separatordiv);\n        optionWrapperDiv2.appendChild(dropOptionDiv2);\n        filterWrapperDiv1.appendChild(levelWrapperDiv);\n        filterWrapperDiv1.appendChild(optionWrapperDiv1);\n        filterWrapperDiv1.appendChild(optionWrapperDiv2);\n        filterWrapperDiv2.appendChild(inputDiv1);\n        filterWrapperDiv2.appendChild(betweenTextContentdiv);\n        filterWrapperDiv2.appendChild(inputDiv2);\n        /* tslint:disable-next-line:max-line-length */\n        this.createElements(filterObject, betweenOperators, dropOptionDiv1, dropOptionDiv2, inputField1, inputField2, valueOptions, dataSource, selectedValueIndex, selectedOption, type, levelDropOption, levelOptions, selectedLevelIndex);\n        mainDiv.appendChild(textContentdiv);\n        mainDiv.appendChild(filterWrapperDiv1);\n        mainDiv.appendChild(filterWrapperDiv2);\n        return mainDiv;\n    };\n    FilterDialog.prototype.createElements = function (filterObj, operators, optionDiv1, optionDiv2, inputDiv1, inputDiv2, vDataSource, oDataSource, valueIndex, option, type, levelDropOption, lDataSource, levelIndex) {\n        var popupInstance = this;\n        if (this.parent.dataType === 'olap') {\n            var levelWrapper = new DropDownList({\n                dataSource: lDataSource, enableRtl: this.parent.enableRtl,\n                fields: { value: 'value', text: 'text', iconCss: 'iconClass' },\n                index: levelIndex,\n                cssClass: cls.LEVEL_OPTIONS_CLASS, width: '100%',\n                change: function (args) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    var fieldName = element.getAttribute('data-fieldName');\n                    var type = element.getAttribute('data-type');\n                    if (!isNullOrUndefined(element)) {\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                        setStyleAndAttributes(element, { 'data-selectedField': args.value });\n                        var filterObj_1;\n                        for (var _i = 0, _a = popupInstance.parent.dataSourceSettings.filterSettings; _i < _a.length; _i++) {\n                            var field = _a[_i];\n                            if (field.name === fieldName && field.selectedField === args.value) {\n                                filterObj_1 = field;\n                                break;\n                            }\n                        }\n                        if (filterObj_1) {\n                            if (type === 'value' && filterObj_1.measure && filterObj_1.measure !== '') {\n                                optionWrapper1.value = filterObj_1.measure ? filterObj_1.measure : vDataSource[0].value;\n                            }\n                            else {\n                            }\n                            if (filterObj_1.condition) {\n                                optionWrapper.value = filterObj_1.condition ? filterObj_1.condition : 'DoesNotEquals';\n                            }\n                            else {\n                                optionWrapper.value = 'DoesNotEquals';\n                            }\n                            var inputObj1 = void 0;\n                            var inputObj2 = void 0;\n                            if (type === 'value') {\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? parseInt(filterObj_1.value1, 10) : undefined;\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? parseInt(filterObj_1.value2, 10) : undefined;\n                                }\n                            }\n                            else {\n                                inputObj1 = inputDiv1.ej2_instances[0];\n                                inputObj2 = inputDiv2.ej2_instances[0];\n                                if (inputObj1) {\n                                    inputObj1.value = filterObj_1.value1 ? filterObj_1.value1 : '';\n                                }\n                                if (inputObj2) {\n                                    inputObj2.value = filterObj_1.value2 ? filterObj_1.value2 : '';\n                                }\n                            }\n                        }\n                        popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    }\n                    else {\n                        return;\n                    }\n                }\n            });\n            levelWrapper.isStringTemplate = true;\n            levelWrapper.appendTo(levelDropOption);\n        }\n        var optionWrapper1 = new DropDownList({\n            dataSource: vDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: valueIndex,\n            cssClass: cls.VALUE_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    setStyleAndAttributes(element, { 'data-measure': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper1.isStringTemplate = true;\n        optionWrapper1.appendTo(optionDiv1);\n        var optionWrapper = new DropDownList({\n            dataSource: oDataSource, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, value: option,\n            cssClass: cls.FILTER_OPERATOR_CLASS, width: '100%',\n            change: function (args) {\n                var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                if (!isNullOrUndefined(element)) {\n                    popupInstance.updateInputValues(element, type, inputDiv1, inputDiv2);\n                    var disabledClasses = [cls.BETWEEN_TEXT_DIV_CLASS, cls.FILTER_INPUT_DIV_2_CLASS];\n                    for (var _i = 0, disabledClasses_1 = disabledClasses; _i < disabledClasses_1.length; _i++) {\n                        var className = disabledClasses_1[_i];\n                        if (operators.indexOf(args.value) >= 0) {\n                            removeClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                        else {\n                            addClass([element.querySelector('.' + className)], cls.ICON_DISABLE);\n                        }\n                    }\n                    setStyleAndAttributes(element, { 'data-operator': args.value });\n                }\n                else {\n                    return;\n                }\n            }\n        });\n        optionWrapper.isStringTemplate = true;\n        optionWrapper.appendTo(optionDiv2);\n        if (type === 'date') {\n            var inputObj1_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value1) === 'string' ? new Date(filterObj.value1) : filterObj.value1) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_1.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            var inputObj2_1 = new DateTimePicker({\n                placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                enableRtl: this.parent.enableRtl,\n                format: 'dd/MM/yyyy hh:mm:ss a',\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ?\n                    (typeof (filterObj.value2) === 'string' ? new Date(filterObj.value2) : filterObj.value2) : null),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_1.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                },\n                width: '100%',\n            });\n            inputObj1_1.isStringTemplate = true;\n            inputObj1_1.appendTo(inputDiv1);\n            inputObj2_1.isStringTemplate = true;\n            inputObj2_1.appendTo(inputDiv2);\n        }\n        else if (type === 'value') {\n            var inputObj1_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value1, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (e.value ? e.value.toString() : '0'),\n                            'data-value2': (inputObj2_2.value ? inputObj2_2.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_2 = new NumericTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                format: '###.##',\n                value: (filterObj && option === filterObj.condition ? parseInt(filterObj.value2, 10) : undefined),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, {\n                            'data-value1': (inputObj1_2.value ? inputObj1_2.value.toString() : '0'),\n                            'data-value2': (e.value ? e.value.toString() : '0')\n                        });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_2.isStringTemplate = true;\n            inputObj1_2.appendTo(inputDiv1);\n            inputObj2_2.isStringTemplate = true;\n            inputObj2_2.appendTo(inputDiv2);\n        }\n        else {\n            var inputObj1_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value1 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': e.value, 'data-value2': inputObj2_3.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            var inputObj2_3 = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('enterValue'),\n                enableRtl: this.parent.enableRtl,\n                showClearButton: true,\n                value: (filterObj && option === filterObj.condition ? filterObj.value2 : ''),\n                change: function (e) {\n                    var element = popupInstance.dialogPopUp.element.querySelector('.e-selected-tab');\n                    if (!isNullOrUndefined(element)) {\n                        setStyleAndAttributes(element, { 'data-value1': inputObj1_3.value, 'data-value2': e.value });\n                    }\n                    else {\n                        return;\n                    }\n                }, width: '100%'\n            });\n            inputObj1_3.isStringTemplate = true;\n            inputObj1_3.appendTo(inputDiv1);\n            inputObj2_3.isStringTemplate = true;\n            inputObj2_3.appendTo(inputDiv2);\n        }\n    };\n    /* tslint:enable */\n    FilterDialog.prototype.updateInputValues = function (element, type, inputDiv1, inputDiv2) {\n        var value1;\n        var value2;\n        if (type === 'date') {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = !isNullOrUndefined(inputObj1.value) ? inputObj1.value.toString() : '';\n            value2 = !isNullOrUndefined(inputObj2.value) ? inputObj2.value.toString() : '';\n        }\n        else {\n            var inputObj1 = inputDiv1.ej2_instances[0];\n            var inputObj2 = inputDiv2.ej2_instances[0];\n            value1 = inputObj1.value;\n            value2 = inputObj2.value;\n        }\n        setStyleAndAttributes(element, { 'data-value1': value1, 'data-value2': value2 });\n    };\n    FilterDialog.prototype.validateTreeNode = function (e) {\n        if (e.node.classList.contains(cls.ICON_DISABLE)) {\n            e.cancel = true;\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Update filter state while Member check/uncheck.\n     * @hidden\n     */\n    FilterDialog.prototype.updateCheckedState = function (fieldCaption) {\n        var filterDialog = this.dialogPopUp.element;\n        setStyleAndAttributes(filterDialog, { 'role': 'menu', 'aria-haspopup': 'true' });\n        var list = [].slice.call(this.memberTreeView.element.querySelectorAll('li'));\n        var fieldName = filterDialog.getAttribute('data-fieldname');\n        var uncheckedNodes = this.getUnCheckedNodes(fieldName);\n        var checkedNodes = this.getCheckedNodes(fieldName);\n        var firstNode = this.allMemberSelect.element.querySelector('li').querySelector('span.' + cls.CHECK_BOX_FRAME_CLASS);\n        if (list.length > 0) {\n            if (checkedNodes > 0) {\n                if (uncheckedNodes > 0) {\n                    removeClass([firstNode], cls.NODE_CHECK_CLASS);\n                    addClass([firstNode], cls.NODE_STOP_CLASS);\n                }\n                else if (uncheckedNodes === 0) {\n                    removeClass([firstNode], cls.NODE_STOP_CLASS);\n                    addClass([firstNode], cls.NODE_CHECK_CLASS);\n                }\n                this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n                filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n            }\n            else if (uncheckedNodes > 0 && checkedNodes === 0) {\n                removeClass([firstNode], [cls.NODE_CHECK_CLASS, cls.NODE_STOP_CLASS]);\n                if (this.getCheckedNodes(fieldName) === checkedNodes) {\n                    this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n                    filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                }\n            }\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = true;\n            filterDialog.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n        }\n    };\n    FilterDialog.prototype.getCheckedNodes = function (fieldName) {\n        var engineModule = this.parent.engineModule;\n        var nodeList = [];\n        var checkeNodes = [];\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return nodeList.length;\n        }\n        else {\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isSelected) {\n                    checkeNodes.push(item);\n                }\n            }\n            return checkeNodes.length;\n        }\n    };\n    FilterDialog.prototype.getUnCheckedNodes = function (fieldName) {\n        var unCheckeNodes = [];\n        var nodeList = [];\n        var engineModule = this.parent.engineModule;\n        if (this.parent.dataType === 'olap' && engineModule && !engineModule.fieldList[fieldName].isHierarchy) {\n            nodeList = this.memberTreeView.getAllCheckedNodes();\n            return (this.memberTreeView.fields.dataSource.length -\n                nodeList.length);\n        }\n        else {\n            // unCheckeNodes = this.parent.searchTreeItems.filter((item: { [key: string]: object }) => {\n            //     return !item.isSelected;\n            // });\n            for (var _i = 0, _a = this.parent.searchTreeItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (!item.isSelected) {\n                    unCheckeNodes.push(item);\n                }\n            }\n            return unCheckeNodes.length;\n        }\n    };\n    FilterDialog.prototype.isExcelFilter = function (fieldName) {\n        var isFilterField = false;\n        for (var _i = 0, _a = this.parent.dataSourceSettings.filters; _i < _a.length; _i++) {\n            var field = _a[_i];\n            if (field.name === fieldName) {\n                isFilterField = true;\n                break;\n            }\n        }\n        if (!isFilterField && (this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    FilterDialog.prototype.getFilterObject = function (fieldName) {\n        var filterObj = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        if (filterObj && (((['Label', 'Date', 'Number'].indexOf(filterObj.type) >= 0) &&\n            this.parent.dataSourceSettings.allowLabelFilter) ||\n            (filterObj.type === 'Value' && this.parent.dataSourceSettings.allowValueFilter) ||\n            (['Include', 'Exclude'].indexOf(filterObj.type) >= 0 &&\n                this.parent.eventBase.isValidFilterItemsAvail(fieldName, filterObj)))) {\n            return filterObj;\n        }\n        return undefined;\n    };\n    /**\n     * To close filter dialog.\n     * @hidden\n     */\n    FilterDialog.prototype.closeFilterDialog = function () {\n        if (this.allowExcelLikeFilter) {\n            if (this.tabObj && !this.tabObj.isDestroyed) {\n                this.tabObj.destroy();\n            }\n        }\n        if (this.dropMenu && !this.dropMenu.isDestroyed) {\n            this.dropMenu.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_LevelDiv-popup')) {\n            remove(document.getElementById(this.parent.parentID + '_LevelDiv-popup'));\n        }\n        this.dialogPopUp.close();\n    };\n    FilterDialog.prototype.removeFilterDialog = function () {\n        if (this.dialogPopUp && !this.dialogPopUp.isDestroyed) {\n            this.dialogPopUp.destroy();\n        }\n        if (document.getElementById(this.parent.parentID + '_EditorTreeView')) {\n            remove(document.getElementById(this.parent.parentID + '_EditorTreeView'));\n        }\n    };\n    return FilterDialog;\n}());\nexport { FilterDialog };\n","import { CommonKeyboardInteraction } from '../actions/keyboard';\nimport { EventBase } from '../actions/event-base';\nimport { NodeStateModified } from '../actions/node-state-modified';\nimport { DataSourceUpdate } from '../actions/dataSource-update';\nimport { ErrorDialog } from '../popups/error-dialog';\nimport { FilterDialog } from '../popups/filter-dialog';\n/**\n * PivotCommon is used to manipulate the relational or Multi-Dimensional public methods by using their dataSource\n * @hidden\n */\n/** @hidden */\nvar PivotCommon = /** @class */ (function () {\n    /**\n     * Constructor for Pivot Common class\n     * @param  {CommonArgs} control?\n     * @hidden\n     */\n    function PivotCommon(control) {\n        /** @hidden */\n        this.currentTreeItems = [];\n        /** @hidden */\n        this.savedTreeFilterPos = {};\n        /** @hidden */\n        this.currentTreeItemsPos = {};\n        /** @hidden */\n        this.searchTreeItems = [];\n        /** @hidden */\n        this.isDataOverflow = false;\n        /** @hidden */\n        this.isDateField = false;\n        this.element = control.element;\n        this.moduleName = control.moduleName;\n        this.dataSourceSettings = control.dataSourceSettings;\n        this.engineModule = control.pivotEngine;\n        this.enableRtl = control.enableRtl;\n        this.isAdaptive = control.isAdaptive;\n        this.renderMode = control.renderMode;\n        this.parentID = control.id;\n        this.localeObj = control.localeObj;\n        this.dataType = control.dataType;\n        this.nodeStateModified = new NodeStateModified(this);\n        this.dataSourceUpdate = new DataSourceUpdate(this);\n        this.eventBase = new EventBase(this);\n        this.filterDialog = new FilterDialog(this);\n        this.errorDialog = new ErrorDialog(this);\n        this.keyboardModule = new CommonKeyboardInteraction(this);\n        return this;\n    }\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    PivotCommon.prototype.destroy = function () {\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n    };\n    return PivotCommon;\n}());\nexport { PivotCommon };\n","import { createElement, isNullOrUndefined, addClass, removeClass, closest } from '@syncfusion/ej2-base';\nimport { EventHandler, setStyleAttribute, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button, CheckBox } from '@syncfusion/ej2-buttons';\nimport { Tab } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Pivot Field List Dialog\n */\n/** @hidden */\nvar DialogRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function DialogRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the field list layout rendering\n     * @returns void\n     * @private\n     */\n    DialogRenderer.prototype.render = function () {\n        var fieldListWrappper = createElement('div', {\n            id: this.parent.element.id + '_Wrapper',\n            className: cls.WRAPPER_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_WRAPPER_CLASS : ''),\n            styles: 'width:' + this.parent.element.style.width\n        });\n        if (this.parent.isAdaptive) {\n            addClass([fieldListWrappper], cls.DEVICE);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.DEVICE);\n        }\n        if (this.parent.enableRtl) {\n            addClass([fieldListWrappper], cls.RTL);\n        }\n        else {\n            removeClass([fieldListWrappper], cls.RTL);\n        }\n        if (this.parent.cssClass) {\n            addClass([fieldListWrappper], this.parent.cssClass);\n        }\n        this.parentElement = createElement('div', { className: cls.CONTAINER_CLASS });\n        this.parent.element.appendChild(fieldListWrappper);\n        if (this.parent.isAdaptive) {\n            fieldListWrappper.removeAttribute('style');\n            this.parentElement = createElement('div', { className: cls.ADAPTIVE_CONTAINER_CLASS });\n            this.renderAdaptiveLayout(fieldListWrappper);\n        }\n        if (this.parent.renderMode === 'Popup') {\n            this.renderFieldListDialog(fieldListWrappper);\n            this.unWireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n            this.wireDialogEvent(this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS));\n        }\n        else {\n            this.renderStaticLayout(fieldListWrappper);\n        }\n    };\n    DialogRenderer.prototype.renderStaticLayout = function (fieldListWrappper) {\n        if (!this.parent.isAdaptive) {\n            var layoutHeader = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CLASS\n            });\n            var headerContent = createElement('div', {\n                className: cls.FIELD_LIST_TITLE_CONTENT_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('staticFieldList')\n            });\n            layoutHeader.appendChild(headerContent);\n            layoutHeader.appendChild(this.createCalculatedButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            fieldListWrappper.appendChild(layoutHeader);\n            fieldListWrappper.appendChild(this.parentElement);\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            if (this.parent.allowDeferLayoutUpdate) {\n                fieldListWrappper.appendChild(this.createDeferUpdateButtons());\n                this.renderDeferUpdateButtons();\n            }\n        }\n    };\n    DialogRenderer.prototype.renderDeferUpdateButtons = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.deferUpdateCheckBox = new CheckBox({\n                label: this.parent.localeObj.getConstant('deferLayoutUpdate'),\n                checked: true,\n                enableRtl: this.parent.enableRtl,\n                change: this.onCheckChange.bind(this)\n            });\n            this.deferUpdateCheckBox.isStringTemplate = true;\n            this.deferUpdateCheckBox.appendTo('#' + this.parent.element.id + 'DeferUpdateCheckBox');\n            this.deferUpdateApplyButton = new Button({\n                cssClass: cls.DEFER_APPLY_BUTTON + ' ' + cls.DEFER_UPDATE_BUTTON + (this.parent.renderMode === 'Popup' ?\n                    (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n                content: this.parent.localeObj.getConstant('apply'),\n                enableRtl: this.parent.enableRtl,\n                isPrimary: true\n            });\n            this.deferUpdateApplyButton.isStringTemplate = true;\n            this.deferUpdateApplyButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton1');\n            this.deferUpdateApplyButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.applyButtonClick.bind(this) :\n                this.onDeferUpdateClick.bind(this);\n        }\n        this.deferUpdateCancelButton = new Button({\n            cssClass: cls.DEFER_CANCEL_BUTTON + ' ' + cls.CANCEL_BUTTON_CLASS + (this.parent.renderMode === 'Popup' ?\n                (' ' + cls.BUTTON_FLAT_CLASS) : ''),\n            content: this.parent.allowDeferLayoutUpdate ? this.parent.localeObj.getConstant('cancel') :\n                this.parent.localeObj.getConstant('close'),\n            enableRtl: this.parent.enableRtl, isPrimary: !this.parent.allowDeferLayoutUpdate\n        });\n        this.deferUpdateCancelButton.isStringTemplate = true;\n        this.deferUpdateCancelButton.appendTo('#' + this.parent.element.id + '_DeferUpdateButton2');\n        this.deferUpdateCancelButton.element.onclick = this.parent.renderMode === 'Fixed' ? this.cancelButtonClick.bind(this) :\n            this.onCloseFieldList.bind(this);\n    };\n    DialogRenderer.prototype.createDeferUpdateButtons = function () {\n        var layoutFooter = createElement('div', {\n            className: cls.LAYOUT_FOOTER\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var checkBoxLayout = createElement('div', {\n                className: cls.CHECKBOX_LAYOUT\n            });\n            var deferUpdateCheckBox = createElement('input', {\n                id: this.parent.element.id + 'DeferUpdateCheckBox'\n            });\n            checkBoxLayout.appendChild(deferUpdateCheckBox);\n            layoutFooter.appendChild(checkBoxLayout);\n        }\n        var buttonLayout = createElement('div', {\n            className: cls.BUTTON_LAYOUT\n        });\n        if (this.parent.allowDeferLayoutUpdate) {\n            var deferUpdateButton1 = createElement('button', {\n                id: this.parent.element.id + '_DeferUpdateButton1'\n            });\n            buttonLayout.appendChild(deferUpdateButton1);\n        }\n        var deferUpdateButton2 = createElement('button', {\n            id: this.parent.element.id + '_DeferUpdateButton2'\n        });\n        buttonLayout.appendChild(deferUpdateButton2);\n        layoutFooter.appendChild(buttonLayout);\n        return layoutFooter;\n    };\n    DialogRenderer.prototype.onCheckChange = function (args) {\n        if (args.checked) {\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        this.parent.allowDeferLayoutUpdate = !this.parent.allowDeferLayoutUpdate;\n        if (this.parent.renderMode === 'Fixed') {\n            this.deferUpdateApplyButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n            this.deferUpdateCancelButton.setProperties({ disabled: !this.parent.allowDeferLayoutUpdate });\n        }\n        else {\n            if (this.parent.allowDeferLayoutUpdate) {\n                this.deferUpdateApplyButton.element.style.display = '';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('cancel') });\n                this.deferUpdateCancelButton.isPrimary = false;\n            }\n            else {\n                this.deferUpdateApplyButton.element.style.display = 'none';\n                this.deferUpdateCancelButton.setProperties({ content: this.parent.localeObj.getConstant('close') });\n                this.deferUpdateCancelButton.isPrimary = true;\n            }\n        }\n        this.cancelButtonClick();\n    };\n    DialogRenderer.prototype.applyButtonClick = function () {\n        this.parent.updateDataSource(false);\n        var parent = this.parent;\n        //setTimeout(() => {\n        parent.axisFieldModule.render();\n        parent.clonedDataSource = extend({}, parent.dataSourceSettings, null, true);\n        parent.clonedFieldList = extend({}, parent.pivotFieldList, null, true);\n        //});\n    };\n    DialogRenderer.prototype.cancelButtonClick = function () {\n        /* tslint:disable:align */\n        this.parent.\n            setProperties({\n            dataSourceSettings: this.parent.clonedDataSource.properties\n        }, true);\n        if (this.parent.dataType === 'olap') {\n            this.parent.olapEngineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            for (var _i = 0, _a = Object.keys(this.parent.clonedFieldList); _i < _a.length; _i++) {\n                var name_1 = _a[_i];\n                var item = this.parent.clonedFieldList[name_1];\n                this.parent.olapEngineModule.updateFieldlistData(item.id, item.isSelected);\n            }\n        }\n        else {\n            this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n        }\n        this.parent.updateDataSource(false, true);\n    };\n    DialogRenderer.prototype.renderFieldListDialog = function (fieldListWrappper) {\n        var toggleFieldList = createElement('div', {\n            className: cls.TOGGLE_FIELD_LIST_CLASS + ' ' + cls.ICON + ' ' + cls.TOGGLE_SELECT_CLASS,\n            attrs: {\n                'tabindex': '0',\n                title: this.parent.localeObj.getConstant('fieldList'),\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('fieldList')\n            }\n        });\n        this.parent.element.appendChild(toggleFieldList);\n        if (this.parent.isAdaptive) {\n            var headerTemplate = '<div class=' + cls.TITLE_MOBILE_HEADER + '><span class=\"' + cls.ICON + ' ' +\n                cls.BACK_ICON + '\"></span><div class=' + cls.TITLE_MOBILE_CONTENT + '>' + this.parent.localeObj.getConstant('fieldList') +\n                '</div></div>';\n            var buttons = [{\n                    click: this.showFieldListDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                        isPrimary: true\n                    }\n                }, {\n                    click: this.showCalculatedField.bind(this),\n                    buttonModel: {\n                        cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                            ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n                        iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS, enableRtl: this.parent.enableRtl,\n                        isPrimary: true\n                    }\n                }];\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: this.parent.enableRtl ? 'SlideRight' : 'SlideLeft' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: true,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: false,\n                closeOnEscape: false,\n                enableRtl: this.parent.enableRtl,\n                width: '100%',\n                height: '100%',\n                position: { X: 'center', Y: 'center' },\n                buttons: buttons,\n                target: document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_dialog-content'), {\n                'padding': '0'\n            });\n            var footer = fieldListWrappper.querySelector('.' + cls.FOOTER_CONTENT_CLASS);\n            addClass([footer], cls.FIELD_LIST_FOOTER_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            removeClass([footer.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.BUTTON_FLAT_CLASS);\n            this.fieldListDialog.element.querySelector('.' + cls.BACK_ICON).onclick =\n                this.parent.allowDeferLayoutUpdate ? this.onDeferUpdateClick.bind(this) : this.onCloseFieldList.bind(this);\n        }\n        else {\n            var template = this.createDeferUpdateButtons().outerHTML;\n            var headerTemplate = '<div class=' + cls.TITLE_HEADER_CLASS + '><div class=' +\n                cls.TITLE_CONTENT_CLASS + '>' + this.parent.localeObj.getConstant('fieldList') + '</div></div>';\n            this.fieldListDialog = new Dialog({\n                animationSettings: { effect: 'Zoom' },\n                header: headerTemplate,\n                content: this.parentElement,\n                isModal: false,\n                showCloseIcon: false,\n                visible: false,\n                allowDragging: true,\n                enableRtl: this.parent.enableRtl,\n                width: this.parent.element.style.width,\n                position: { X: 'center', Y: this.parent.element.offsetTop },\n                footerTemplate: template,\n                closeOnEscape: true,\n                target: !isNullOrUndefined(this.parent.target) ? ((typeof this.parent.target) === 'string') ?\n                    document.querySelector(this.parent.target) : this.parent.target : document.body,\n                close: this.removeFieldListIcon.bind(this)\n            });\n            this.fieldListDialog.isStringTemplate = true;\n            this.fieldListDialog.appendTo(fieldListWrappper);\n            // this.fieldListDialog.element.querySelector('.e-dlg-header').innerHTML = headerTemplate;\n            // this.fieldListDialog.element.querySelector('.e-footer-content').innerHTML = template;\n            this.renderDeferUpdateButtons();\n            setStyleAttribute(fieldListWrappper.querySelector('#' + fieldListWrappper.id + '_title'), { 'width': '100%' });\n            fieldListWrappper.querySelector('.' + cls.TITLE_HEADER_CLASS).appendChild(this.createCalculatedButton());\n        }\n    };\n    /**\n     * Called internally if any of the field added to axis.\n     * @hidden\n     */\n    DialogRenderer.prototype.updateDataSource = function (selectedNodes) {\n        var axis = ['filters', 'columns', 'rows', 'values'];\n        for (var _i = 0, selectedNodes_1 = selectedNodes; _i < selectedNodes_1.length; _i++) {\n            var field = selectedNodes_1[_i];\n            var fieldName = field;\n            var droppedClass = axis[this.adaptiveElement.selectedItem];\n            this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ?\n                this.parent : (this.parent.pivotGridModule ?\n                this.parent.pivotGridModule : this.parent);\n            this.parent.pivotCommon.dataSourceUpdate.updateDataSource(fieldName, droppedClass, -1);\n        }\n        this.parent.axisFieldModule.render();\n        if (!this.parent.allowDeferLayoutUpdate) {\n            this.parent.updateDataSource(true);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    DialogRenderer.prototype.onDeferUpdateClick = function () {\n        this.parent.updateDataSource();\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.renderAdaptiveLayout = function (fieldListWrappper) {\n        var layoutFooter = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS\n        });\n        fieldListWrappper.appendChild(this.parentElement);\n        var items = [\n            {\n                header: { 'text': this.parent.localeObj.getConstant('filters') },\n                content: this.createAxisTable('filters')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('columns') },\n                content: this.createAxisTable('columns')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('rows') },\n                content: this.createAxisTable('rows')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('values') },\n                content: this.createAxisTable('values')\n            },\n            {\n                header: { 'text': this.parent.localeObj.getConstant('createCalculatedField') },\n                content: 'Calculated Field Related UI'\n            }\n        ];\n        if (!this.parent.allowCalculatedField) {\n            items.pop();\n        }\n        this.adaptiveElement = new Tab({\n            heightAdjustMode: 'Auto',\n            items: items,\n            height: '100%',\n            enableRtl: this.parent.enableRtl,\n            selected: this.tabSelect.bind(this)\n        });\n        if (this.parent.renderMode === 'Fixed') {\n            layoutFooter.appendChild(this.createAddButton());\n            addClass([fieldListWrappper], cls.STATIC_FIELD_LIST_CLASS);\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n            this.parentElement.appendChild(layoutFooter);\n        }\n        else {\n            this.adaptiveElement.isStringTemplate = true;\n            this.adaptiveElement.appendTo(this.parentElement);\n        }\n    };\n    DialogRenderer.prototype.tabSelect = function (e) {\n        var fieldWrapper = closest(this.parentElement, '.' + cls.WRAPPER_CLASS);\n        if (fieldWrapper && fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)) {\n            if (e.selectedIndex !== 4) {\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n            else {\n                removeClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS)], cls.ICON_DISABLE);\n                addClass([fieldWrapper.querySelector('.' + cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS)], cls.ICON_DISABLE);\n            }\n        }\n        if (e.selectedIndex === 4) {\n            this.adaptiveElement.items[4].content = '';\n            this.adaptiveElement.dataBind();\n            this.parent.notify(events.initCalculatedField, {});\n        }\n        else {\n            this.parent.axisFieldModule.render();\n        }\n    };\n    DialogRenderer.prototype.createCalculatedButton = function () {\n        var calculatedButton = createElement('div', {\n            id: this.parent.element.id + '_CalculatedField',\n            attrs: {\n                'tabindex': '0',\n                'aria-disabled': 'false',\n                'aria-label': this.parent.localeObj.getConstant('CalculatedField')\n            }\n        });\n        var calculateField = new Button({\n            cssClass: cls.CALCULATED_FIELD_CLASS + ' ' + cls.ICON_DISABLE,\n            content: this.parent.localeObj.getConstant('CalculatedField'),\n            enableRtl: this.parent.enableRtl\n        });\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        if (this.parent.calculatedFieldModule) {\n            removeClass([calculatedButton], cls.ICON_DISABLE);\n        }\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        return calculatedButton;\n    };\n    DialogRenderer.prototype.createAddButton = function () {\n        var footerContainer = createElement('div', {\n            className: cls.FIELD_LIST_FOOTER_CLASS + '-content'\n        });\n        var fieldListButton = createElement('div', {});\n        var calculatedButton = createElement('div', {});\n        var calculateField = new Button({\n            cssClass: cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS +\n                ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS + ' ' + cls.ICON_DISABLE,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        var fieldList = new Button({\n            cssClass: cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS + ' ' + cls.BUTTON_SMALL_CLASS + ' ' + cls.BUTTON_ROUND_CLASS,\n            iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n            enableRtl: this.parent.enableRtl\n        });\n        fieldList.isStringTemplate = true;\n        fieldList.appendTo(fieldListButton);\n        calculateField.isStringTemplate = true;\n        calculateField.appendTo(calculatedButton);\n        footerContainer.appendChild(fieldListButton);\n        footerContainer.appendChild(calculatedButton);\n        calculateField.element.onclick = this.showCalculatedField.bind(this);\n        fieldList.element.onclick = this.showFieldListDialog.bind(this);\n        return footerContainer;\n    };\n    DialogRenderer.prototype.createAxisTable = function (axis) {\n        var axisWrapper = createElement('div', {\n            className: cls.FIELD_LIST_CLASS + '-' + axis\n        });\n        var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + axis });\n        var axisPrompt = createElement('span', {\n            className: cls.AXIS_PROMPT_CLASS,\n            innerHTML: this.parent.localeObj.getConstant('addPrompt')\n        });\n        axisWrapper.appendChild(axisContent);\n        axisWrapper.appendChild(axisPrompt);\n        return axisWrapper;\n    };\n    DialogRenderer.prototype.showCalculatedField = function (event) {\n        if (!this.parent.isAdaptive) {\n            if (this.parent.dialogRenderer.fieldListDialog) {\n                this.parent.dialogRenderer.fieldListDialog.hide();\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n            }\n        }\n        this.parent.notify(events.initCalculatedField, {});\n    };\n    DialogRenderer.prototype.showFieldListDialog = function (event) {\n        var activeindex = this.adaptiveElement.selectedItem;\n        this.parent.treeViewModule.render(activeindex);\n    };\n    DialogRenderer.prototype.onShowFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            if (this.parent.isAdaptive) {\n                this.parent.axisFieldModule.render();\n            }\n            this.parent.clonedDataSource = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.clonedFieldList = extend({}, this.parent.pivotFieldList, null, true);\n        }\n        addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        this.parent.dialogRenderer.fieldListDialog.show();\n        this.parent.dialogRenderer.fieldListDialog.element.style.top =\n            parseInt(this.parent.dialogRenderer.fieldListDialog.element.style.top, 10) < 0 ?\n                '0px' : this.parent.dialogRenderer.fieldListDialog.element.style.top;\n    };\n    DialogRenderer.prototype.onCloseFieldList = function () {\n        if (this.parent.allowDeferLayoutUpdate) {\n            this.parent.dataSourceSettings =\n                extend({}, this.parent.clonedDataSource.properties, null, true);\n            this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            this.parent.pivotGridModule.\n                setProperties({\n                dataSourceSettings: this.parent.clonedDataSource.properties\n            }, true);\n            if (Object.keys(this.parent.clonedFieldList).length > 0) {\n                this.parent.dataType === 'olap' ? this.parent.olapEngineModule.fieldList =\n                    extend({}, this.parent.clonedFieldList, null, true) :\n                    this.parent.engineModule.fieldList = extend({}, this.parent.clonedFieldList, null, true);\n            }\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n            this.parent.pivotGridModule.notify(events.contentReady, this);\n        }\n        this.parent.dialogRenderer.fieldListDialog.hide();\n    };\n    DialogRenderer.prototype.removeFieldListIcon = function () {\n        if (!document.getElementById(this.parent.element.id + 'calculateddialog')) {\n            removeClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n        }\n    };\n    DialogRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    DialogRenderer.prototype.wireDialogEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.onShowFieldList, this);\n    };\n    DialogRenderer.prototype.unWireDialogEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.onShowFieldList);\n    };\n    return DialogRenderer;\n}());\nexport { DialogRenderer };\n","import { createElement, addClass, removeClass, remove, EventHandler, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Field List\n */\n/** @hidden */\nvar TreeViewRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function TreeViewRenderer(parent) {\n        this.selectedNodes = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Initialize the field list tree rendering\n     * @returns void\n     * @private\n     */\n    TreeViewRenderer.prototype.render = function (axis) {\n        this.parentElement = this.parent.dialogRenderer.parentElement;\n        this.fieldListSort = 'None';\n        if (!this.parent.isAdaptive) {\n            var fieldTable = createElement('div', {\n                className: cls.FIELD_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_TABLE_CLASS : '')\n            });\n            var treeHeader = createElement('div', {\n                className: cls.FIELD_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant('allFields')\n            });\n            var treeOuterDiv = createElement('div', { className: cls.FIELD_LIST_TREE_CLASS + '-outer-div' });\n            this.treeViewElement = createElement('div', {\n                id: this.parent.element.id + '_TreeView',\n                className: cls.FIELD_LIST_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_FIELD_LIST_CLASS : '')\n            });\n            var fieldHeaderWrappper = createElement('div', { className: 'e-field-header-wrapper' });\n            fieldHeaderWrappper.appendChild(treeHeader);\n            fieldTable.appendChild(fieldHeaderWrappper);\n            this.updateSortElements(fieldHeaderWrappper);\n            treeOuterDiv.appendChild(this.treeViewElement);\n            fieldTable.appendChild(treeOuterDiv);\n            this.parentElement.appendChild(fieldTable);\n            if (this.parent.renderMode === 'Fixed') {\n                var centerDiv = createElement('div', { className: cls.STATIC_CENTER_DIV_CLASS });\n                var axisHeader = createElement('div', {\n                    className: cls.STATIC_CENTER_HEADER_CLASS,\n                    innerHTML: this.parent.localeObj.getConstant('centerHeader')\n                });\n                this.parentElement.appendChild(centerDiv);\n                this.parentElement.appendChild(axisHeader);\n            }\n            this.renderTreeView();\n        }\n        else {\n            this.renderTreeDialog(axis);\n        }\n    };\n    TreeViewRenderer.prototype.updateSortElements = function (headerWrapper) {\n        var options = ['None', 'Ascend', 'Descend'];\n        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n            var option = options_1[_i];\n            var spanElement = createElement('span', {\n                attrs: {\n                    'tabindex': '0',\n                    'aria-disabled': 'false',\n                    'aria-label': 'Sort ' + option,\n                    'data-sort': option\n                },\n                className: cls.ICON + ' ' + 'e-sort-' + option.toLowerCase() + ' ' +\n                    (this.fieldListSort === option ? 'e-selected' : '')\n            });\n            headerWrapper.appendChild(spanElement);\n            this.unWireFieldListEvent(spanElement);\n            this.wireFieldListEvent(spanElement);\n        }\n    };\n    TreeViewRenderer.prototype.renderTreeView = function () {\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: this.getTreeData(), id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            nodeChecked: this.nodeStateChange.bind(this),\n            cssClass: cls.FIELD_LIST_TREE_CLASS,\n            showCheckBox: true,\n            allowDragAndDrop: true,\n            sortOrder: 'None',\n            autoCheck: false,\n            loadOnDemand: false,\n            enableRtl: this.parent.enableRtl,\n            nodeDragStart: this.dragStart.bind(this),\n            nodeDragStop: this.dragStop.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n        });\n        this.treeViewElement.innerHTML = '';\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(this.treeViewElement);\n    };\n    TreeViewRenderer.prototype.updateNodeIcon = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-icon');\n                addClass([node], 'e-folderCDB-open-icon');\n            }\n            else if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n                var node = args.node.querySelector('.e-list-icon');\n                removeClass([node], 'e-folderCDB-open-icon');\n                addClass([node], 'e-folderCDB-icon');\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateTreeNode = function (args) {\n        var allowDrag = false;\n        var dragVisibility = true;\n        if (this.parent.dataType === 'olap') {\n            allowDrag = this.updateOlapTreeNode(args);\n        }\n        else {\n            allowDrag = true;\n        }\n        var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n        if (args.node.querySelector('.e-list-icon') && liTextElement) {\n            var liIconElement = args.node.querySelector('.e-list-icon');\n            liTextElement.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n        }\n        if (allowDrag && !this.parent.isAdaptive) {\n            allowDrag = false;\n            var dragElement = createElement('span', {\n                attrs: {\n                    'tabindex': '-1',\n                    title: this.parent.localeObj.getConstant('drag'),\n                    'aria-disabled': 'false'\n                },\n                styles: 'visibility:' + (dragVisibility ? 'visible;' : 'hidden;'),\n                className: cls.ICON + ' ' + cls.DRAG_CLASS\n            });\n            if (args.node.querySelector('.e-checkbox-wrapper') &&\n                !args.node.querySelector('.cls.DRAG_CLASS') && liTextElement) {\n                liTextElement.insertBefore(dragElement, args.node.querySelector('.e-checkbox-wrapper'));\n            }\n        }\n        if (args.node.querySelector('.' + cls.NODE_CHECK_CLASS)) {\n            addClass([args.node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n        }\n    };\n    TreeViewRenderer.prototype.updateOlapTreeNode = function (args) {\n        var allowDrag = false;\n        if (this.parent.dataType === 'olap') {\n            /* tslint:disable-next-line:max-line-length */\n            if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon,.e-folderCDB-open-icon,.e-dimensionCDB-icon,.e-kpiCDB-icon')) {\n                args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n            }\n            if (args.node && args.node.querySelector('.e-list-icon') &&\n                (args.node.querySelector('.e-list-icon').className.indexOf('e-level-members') > -1)) {\n                if (this.parent.isAdaptive) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                else {\n                    args.node.querySelector('.e-checkbox-wrapper').style.visibility = 'hidden';\n                }\n            }\n            if (args.node && (args.node.querySelector('.e-hierarchyCDB-icon,.e-attributeCDB-icon,.e-namedSetCDB-icon') ||\n                args.node.querySelector('.e-measure-icon,.e-kpiGoal-icon,.e-kpiStatus-icon,.e-kpiTrend-icon,.e-kpiValue-icon') ||\n                args.node.querySelector('.e-calc-measure-icon,.e-calc-dimension-icon'))) {\n                if (args.node.querySelector('.e-measure-icon')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                    allowDrag = true;\n                }\n                else {\n                    allowDrag = true;\n                }\n            }\n        }\n        else {\n            allowDrag = true;\n        }\n        return allowDrag;\n    };\n    TreeViewRenderer.prototype.renderTreeDialog = function (axis) {\n        var fieldListDialog = createElement('div', {\n            id: this.parent.element.id + '_FieldListTreeView',\n            className: cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-editor-dialog' : ''),\n        });\n        this.parentElement.appendChild(fieldListDialog);\n        this.fieldDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            header: this.parent.localeObj.getConstant('adaptiveFieldHeader'),\n            content: this.createTreeView(this.getTreeData(axis)),\n            isModal: true,\n            visible: true,\n            showCloseIcon: false,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: '350px',\n            position: { X: 'center', Y: 'center' },\n            buttons: [{\n                    click: this.closeTreeDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }, {\n                    click: this.onFieldAdd.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('add'),\n                        isPrimary: true\n                    }\n                }],\n            closeOnEscape: true,\n            target: this.parentElement.parentElement,\n            close: this.dialogClose.bind(this)\n        });\n        this.fieldDialog.isStringTemplate = true;\n        this.fieldDialog.appendTo(fieldListDialog);\n        // this.fieldDialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('adaptiveFieldHeader');\n    };\n    TreeViewRenderer.prototype.dialogClose = function () {\n        if (document.getElementById(this.parent.element.id + '_FieldListTreeView')) {\n            remove(document.getElementById(this.parent.element.id + '_FieldListTreeView'));\n        }\n    };\n    TreeViewRenderer.prototype.createTreeView = function (treeData) {\n        var editorTreeWrapper = createElement('div', {\n            id: this.parent.element.id + 'EditorDiv',\n            className: cls.EDITOR_TREE_WRAPPER_CLASS\n        });\n        var searchWrapper = createElement('div', {\n            id: this.parent.element.id + '_SearchDiv', attrs: { 'tabindex': '-1' },\n            className: cls.EDITOR_SEARCH_WRAPPER_CLASS\n        });\n        var editorSearch = createElement('input', { attrs: { 'type': 'text' } });\n        searchWrapper.appendChild(editorSearch);\n        var treeOuterDiv = createElement('div', { className: cls.EDITOR_TREE_CONTAINER_CLASS + '-outer-div' });\n        var treeViewContainer = createElement('div', {\n            className: cls.EDITOR_TREE_CONTAINER_CLASS + ' ' + (this.parent.dataType === 'olap' ? 'e-olap-field-list-tree' : '')\n        });\n        editorTreeWrapper.appendChild(searchWrapper);\n        this.editorSearch = new MaskedTextBox({\n            showClearButton: true,\n            placeholder: this.parent.localeObj.getConstant('search'),\n            enableRtl: this.parent.enableRtl,\n            cssClass: cls.EDITOR_SEARCH_CLASS,\n            change: this.textChange.bind(this)\n        });\n        this.editorSearch.isStringTemplate = true;\n        this.editorSearch.appendTo(editorSearch);\n        var promptDiv = createElement('div', {\n            className: cls.EMPTY_MEMBER_CLASS + ' ' + cls.ICON_DISABLE,\n            innerHTML: this.parent.localeObj.getConstant('noMatches')\n        });\n        editorTreeWrapper.appendChild(promptDiv);\n        treeOuterDiv.appendChild(treeViewContainer);\n        editorTreeWrapper.appendChild(treeOuterDiv);\n        this.fieldTable = new TreeView({\n            /* tslint:disable-next-line:max-line-length */\n            fields: { dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass' },\n            showCheckBox: true,\n            autoCheck: false,\n            loadOnDemand: false,\n            sortOrder: this.parent.dataType === 'olap' ? 'None' : 'Ascending',\n            enableRtl: this.parent.enableRtl,\n            nodeChecked: this.addNode.bind(this),\n            drawNode: this.updateTreeNode.bind(this),\n            nodeExpanding: this.updateNodeIcon.bind(this),\n            nodeCollapsed: this.updateNodeIcon.bind(this),\n        });\n        this.fieldTable.isStringTemplate = true;\n        this.fieldTable.appendTo(treeViewContainer);\n        return editorTreeWrapper;\n    };\n    TreeViewRenderer.prototype.textChange = function (e) {\n        this.parent.pivotCommon.eventBase.searchTreeNodes(e, this.fieldTable, true);\n        var promptDiv = this.fieldDialog.element.querySelector('.' + cls.EMPTY_MEMBER_CLASS);\n        var liList = [].slice.call(this.fieldTable.element.querySelectorAll('li'));\n        /* tslint:disable-next-line:max-line-length */\n        var disabledList = [].slice.call(this.fieldTable.element.querySelectorAll('li.' + cls.ICON_DISABLE));\n        if (liList.length === disabledList.length) {\n            removeClass([promptDiv], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([promptDiv], cls.ICON_DISABLE);\n        }\n    };\n    TreeViewRenderer.prototype.dragStart = function (args) {\n        if (args.event.target.classList.contains(cls.DRAG_CLASS)) {\n            this.parent.isDragging = true;\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            var data = void 0;\n            if (this.parent.dataType === 'olap') {\n                data = this.parent.olapEngineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n            }\n            else {\n                data = this.parent.engineModule.fieldList[args.draggedNode.getAttribute('data-uid')];\n            }\n            var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n            if (data && data.aggregateType === 'CalculatedField') {\n                for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                    var axisContent = axis_1[_i];\n                    addClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n                }\n            }\n            var dragItem = args.clonedNode;\n            if (dragItem && (this.parent.getModuleName() === 'pivotfieldlist' &&\n                this.parent.renderMode) === 'Popup') {\n                dragItem.style.zIndex = (this.parent.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n            }\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    TreeViewRenderer.prototype.dragStop = function (args) {\n        args.cancel = true;\n        this.parent.isDragging = false;\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisElement = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisElement)], cls.NO_DRAG_CLASS);\n        }\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        var fieldName = args.draggedNodeData.id.toString();\n        if (!this.isNodeDropped(args, fieldName)) {\n            return;\n        }\n        var list = this.parent.pivotFieldList;\n        var selectedNode = list[fieldName];\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, fieldName)) {\n            if (this.parent.allowDeferLayoutUpdate) {\n                selectedNode.isSelected = true;\n                this.updateDataSource();\n            }\n            else {\n                this.parent.updateDataSource();\n            }\n            var parent_1 = this.parent;\n            //setTimeout(() => {\n            parent_1.axisFieldModule.render();\n            //});\n        }\n    };\n    TreeViewRenderer.prototype.isNodeDropped = function (args, targetID) {\n        var isDropped = true;\n        if (args.draggedNodeData.isChecked === 'true') {\n            var target = this.getButton(targetID);\n            var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n            var droppableElement = closest(args.target, '.' + cls.DROPPABLE_CLASS);\n            if (target && axisPanel === droppableElement) {\n                var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n                var dropTarget = closest(args.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n                var sourcePosition = void 0;\n                var dropPosition = -1;\n                for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                    if (pivotButtons[i].id === target.id) {\n                        sourcePosition = i;\n                    }\n                    if (dropTarget) {\n                        var droppableButton = dropTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                        if (pivotButtons[i].id === droppableButton.id) {\n                            dropPosition = i;\n                        }\n                    }\n                }\n                if (sourcePosition === dropPosition || (sourcePosition === (pivotButtons.length - 1) && dropPosition === -1)) {\n                    var parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n                    removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                    isDropped = false;\n                }\n            }\n        }\n        return isDropped;\n    };\n    TreeViewRenderer.prototype.getButton = function (fieldName) {\n        var wrapperElement = document.getElementById(this.parent.element.id + '_Wrapper');\n        var pivotButtons = [].slice.call(wrapperElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n        var buttonElement;\n        for (var i = 0, n = pivotButtons.length; i < n; i++) {\n            if (pivotButtons[i].id === fieldName) {\n                buttonElement = pivotButtons[i];\n                break;\n            }\n        }\n        return buttonElement;\n    };\n    TreeViewRenderer.prototype.nodeStateChange = function (args) {\n        var node = closest(args.node, '.' + cls.TEXT_CONTENT_CLASS);\n        if (!isNullOrUndefined(node)) {\n            var li = closest(node, 'li');\n            var id = li.getAttribute('data-uid');\n            if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n                this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n            }\n            var list = this.parent.pivotFieldList;\n            var selectedNode = list[id];\n            if (args.action === 'check') {\n                addClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                this.updateSelectedNodes(li, args.action);\n                var addNode = this.parent.pivotCommon.dataSourceUpdate.getNewField(id);\n                if (selectedNode.type === 'number' || (selectedNode.type === 'CalculatedField' &&\n                    selectedNode.formula && selectedNode.formula.indexOf('Measure') > -1 &&\n                    this.parent.dataType === 'olap')) {\n                    this.parent.dataSourceSettings.values.push(addNode);\n                    if (this.parent.dataType === 'olap' && this.parent.olapEngineModule && !(this.parent.olapEngineModule).isMeasureAvail) {\n                        var measureField = {\n                            name: '[Measures]', caption: 'Measures', baseField: undefined, baseItem: undefined,\n                        };\n                        var fieldAxis = this.parent.dataSourceSettings.valueAxis === 'row' ?\n                            this.parent.dataSourceSettings.rows : this.parent.dataSourceSettings.columns;\n                        fieldAxis.push(measureField);\n                    }\n                }\n                else {\n                    this.parent.dataSourceSettings.rows.push(addNode);\n                }\n            }\n            else {\n                removeClass([node.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                this.updateSelectedNodes(li, args.action);\n                this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(id);\n                if (this.parent.dataType === 'olap' && this.parent.dataSourceSettings.values.length === 0) {\n                    this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[Measures]');\n                }\n            }\n            if (!this.parent.allowDeferLayoutUpdate) {\n                this.parent.updateDataSource(true);\n            }\n            else {\n                selectedNode.isSelected = args.action === 'check';\n                if (this.parent.dataType === 'olap') {\n                    this.parent.olapEngineModule.updateFieldlistData(id, args.action === 'check');\n                }\n                this.updateDataSource();\n            }\n            var parent_2 = this.parent;\n            setTimeout(function () {\n                parent_2.axisFieldModule.render();\n            });\n        }\n    };\n    TreeViewRenderer.prototype.updateSelectedNodes = function (li, state) {\n        if (li && li.querySelector('ul')) {\n            for (var _i = 0, _a = [].slice.call(li.querySelectorAll('li')); _i < _a.length; _i++) {\n                var element = _a[_i];\n                if (state === 'check') {\n                    addClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n                else {\n                    removeClass([element.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.LIST_SELECT_CLASS);\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateDataSource = function () {\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n            }\n            else {\n                this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n            }\n            /* tslint:disable-next-line:max-line-length */\n            this.parent.pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            this.parent.pivotGridModule.notify(events.uiUpdate, this);\n        }\n        else {\n            this.parent.triggerPopulateEvent();\n        }\n    };\n    TreeViewRenderer.prototype.addNode = function (args) {\n        var fieldList = this.parent.pivotFieldList;\n        var selectedNode = fieldList[args.data[0].id.toString()];\n        if (args.action === 'check') {\n            this.selectedNodes.push(selectedNode.id.toString());\n        }\n        else {\n            var count = this.selectedNodes.length;\n            while (count--) {\n                if (this.selectedNodes[count] === selectedNode.id.toString()) {\n                    this.selectedNodes.splice(count, 1);\n                    break;\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.refreshTreeView = function () {\n        if (this.fieldTable) {\n            var treeData = this.getUpdatedData();\n            this.fieldTable.fields = {\n                dataSource: treeData, id: 'id', text: 'caption', isChecked: 'isSelected', parentID: 'pid', iconCss: 'spriteCssClass'\n            };\n            this.fieldTable.dataBind();\n        }\n    };\n    TreeViewRenderer.prototype.getUpdatedData = function () {\n        var treeData = this.getTreeData();\n        var expandedNodes = this.fieldTable.expandedNodes;\n        this.updateExpandedNodes(treeData, expandedNodes);\n        return this.applySorting(treeData, this.fieldListSort);\n    };\n    TreeViewRenderer.prototype.getTreeData = function (axis) {\n        var data = [];\n        if (this.parent.dataType === 'olap') {\n            data = this.getOlapTreeData(axis);\n        }\n        else {\n            var keys = Object.keys(this.parent.pivotFieldList);\n            var fieldList = {};\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var member = this.parent.pivotFieldList[key];\n                fieldList[key] = { id: member.id, caption: member.caption, isSelected: member.isSelected };\n            }\n            if (this.parent.isAdaptive) {\n                /* tslint:disable-next-line:max-line-length */\n                var fields = [this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns, this.parent.dataSourceSettings.rows,\n                    this.parent.dataSourceSettings.values];\n                var currentFieldSet = fields[axis];\n                var len = keys.length;\n                while (len--) {\n                    fieldList[keys[len]].isSelected = false;\n                }\n                for (var _a = 0, currentFieldSet_1 = currentFieldSet; _a < currentFieldSet_1.length; _a++) {\n                    var item = currentFieldSet_1[_a];\n                    fieldList[item.name].isSelected = true;\n                }\n            }\n            var list = fieldList;\n            for (var _b = 0, keys_2 = keys; _b < keys_2.length; _b++) {\n                var member = keys_2[_b];\n                var obj = list[member];\n                data.push(obj);\n            }\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.getOlapTreeData = function (axis) {\n        var data = [];\n        var fieldListData = this.parent.olapEngineModule.fieldListData;\n        if (this.parent.isAdaptive) {\n            /* tslint:disable-next-line:max-line-length */\n            var fields = [\n                this.parent.dataSourceSettings.filters, this.parent.dataSourceSettings.columns,\n                this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.values\n            ];\n            var currentFieldSet = fields[axis];\n            var i = 0;\n            while (i < fieldListData.length) {\n                var item = fieldListData[i];\n                /* tslint:disable */\n                var framedSet = void 0;\n                /* tslint:enable */\n                if (axis === 3) {\n                    if (item.id.toLowerCase() !== '[measures]' &&\n                        (item.id.toLowerCase().indexOf('[measures]') === 0 ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1)) ||\n                        (item.id.toLowerCase() === '[calculated members].[_0]' ||\n                            (item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1))) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        if (framedSet.spriteCssClass && framedSet.spriteCssClass.indexOf('e-measureCDB') !== -1) {\n                            framedSet.spriteCssClass = framedSet.spriteCssClass.replace('e-folderCDB-icon', 'e-measureGroupCDB-icon');\n                            framedSet.pid = undefined;\n                        }\n                        for (var _i = 0, currentFieldSet_2 = currentFieldSet; _i < currentFieldSet_2.length; _i++) {\n                            var field = currentFieldSet_2[_i];\n                            if (framedSet.id === field.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                else {\n                    if (!(item.id.toLowerCase().indexOf('[measures]') === 0) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-measureCDB') !== -1) &&\n                        !(item.spriteCssClass && item.spriteCssClass.indexOf('e-calc-measure-icon') !== -1)) {\n                        framedSet = {\n                            id: item.id, caption: item.caption, hasChildren: item.hasChildren,\n                            type: item.type, aggregateType: item.aggregateType,\n                            isSelected: item.isSelected, pid: item.pid, spriteCssClass: item.spriteCssClass\n                        };\n                        framedSet.isSelected = false;\n                        for (var _a = 0, currentFieldSet_3 = currentFieldSet; _a < currentFieldSet_3.length; _a++) {\n                            var item_1 = currentFieldSet_3[_a];\n                            if (framedSet.id === item_1.name) {\n                                framedSet.isSelected = true;\n                                break;\n                            }\n                        }\n                        data.push(framedSet);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            data = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        }\n        return data;\n    };\n    TreeViewRenderer.prototype.updateExpandedNodes = function (data, expandedNodes) {\n        if (expandedNodes.length > 0) {\n            var i = 0;\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var field = data_1[_i];\n                if (expandedNodes.indexOf(field.id) > -1) {\n                    i++;\n                    field.expanded = true;\n                    field.spriteCssClass = (field.spriteCssClass &&\n                        field.spriteCssClass.toString().indexOf('e-folderCDB-icon') > -1 ?\n                        field.spriteCssClass.toString().replace('e-folderCDB-icon', 'e-folderCDB-open-icon') :\n                        field.spriteCssClass);\n                    if (i === (expandedNodes.length)) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    TreeViewRenderer.prototype.updateSorting = function (args) {\n        var target = args.target;\n        var option = target.getAttribute('data-sort');\n        if (target.className.indexOf('e-selected') === -1) {\n            switch (option) {\n                case 'None':\n                    this.fieldListSort = 'None';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Ascend':\n                    this.fieldListSort = 'Ascend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-descend')], 'e-selected');\n                    break;\n                case 'Descend':\n                    this.fieldListSort = 'Descend';\n                    addClass([target], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-ascend')], 'e-selected');\n                    removeClass([this.parentElement.querySelector('.e-sort-none')], 'e-selected');\n                    break;\n            }\n            this.refreshTreeView();\n        }\n    };\n    TreeViewRenderer.prototype.applySorting = function (treeData, sortOrder) {\n        if (this.parent.dataType === 'olap') {\n            var measure = void 0;\n            var calcMember = void 0;\n            if (this.parent.dataSourceSettings.calculatedFieldSettings.length > 0 &&\n                treeData[0].id.toLowerCase() === '[calculated members].[_0]') {\n                calcMember = treeData[0];\n                measure = treeData[1];\n                treeData.splice(0, 2);\n            }\n            else {\n                measure = treeData[0];\n                treeData.splice(0, 1);\n            }\n            /* tslint:disable:typedef */\n            treeData = sortOrder === 'Ascend' ?\n                (treeData.sort(function (a, b) { return (a.caption > b.caption) ? 1 : ((b.caption > a.caption) ? -1 : 0); })) :\n                sortOrder === 'Descend' ?\n                    (treeData.sort(function (a, b) { return (a.caption < b.caption) ? 1 : ((b.caption < a.caption) ? -1 : 0); })) :\n                    treeData;\n            /* tslint:enable:typedef */\n            if (calcMember) {\n                treeData.splice(0, 0, calcMember, measure);\n            }\n            else {\n                treeData.splice(0, 0, measure);\n            }\n        }\n        else {\n            this.fieldTable.sortOrder = ((sortOrder === 'Ascend' ? 'Ascending' : (sortOrder === 'Descend' ? 'Descending' : 'None')));\n        }\n        return treeData;\n    };\n    TreeViewRenderer.prototype.onFieldAdd = function (e) {\n        this.parent.dialogRenderer.updateDataSource(this.selectedNodes);\n        this.closeTreeDialog();\n    };\n    TreeViewRenderer.prototype.closeTreeDialog = function () {\n        this.selectedNodes = [];\n        this.fieldDialog.hide();\n    };\n    TreeViewRenderer.prototype.keyPress = function (e) {\n        var target = e.target;\n        if (e.keyCode === 13 && e.target) {\n            e.target.click();\n            e.preventDefault();\n            return;\n        }\n    };\n    TreeViewRenderer.prototype.wireFieldListEvent = function (element) {\n        EventHandler.add(element, 'keydown', this.keyPress, this);\n        EventHandler.add(element, 'click', this.updateSorting, this);\n    };\n    TreeViewRenderer.prototype.unWireFieldListEvent = function (element) {\n        EventHandler.remove(element, 'keydown', this.keyPress);\n        EventHandler.remove(element, 'click', this.updateSorting);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.treeViewUpdate, this.refreshTreeView, this);\n    };\n    /**\n     * @hidden\n     */\n    TreeViewRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.treeViewUpdate, this.refreshTreeView);\n    };\n    /**\n     * To destroy the tree view event listener\n     * @return {void}\n     * @hidden\n     */\n    TreeViewRenderer.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TreeViewRenderer;\n}());\nexport { TreeViewRenderer };\n","import { createElement, Droppable, EventHandler, removeClass, addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\n/**\n * Module to render Axis Field Table\n */\n/** @hidden */\nvar AxisTableRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisTableRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the axis table rendering\n     * @returns void\n     * @private\n     */\n    AxisTableRenderer.prototype.render = function () {\n        if (!this.parent.isAdaptive) {\n            var axisTable = createElement('div', {\n                className: cls.AXIS_TABLE_CLASS + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_AXIS_TABLE_CLASS : '')\n            });\n            this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n            this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n            this.parent.dialogRenderer.parentElement.appendChild(axisTable);\n            axisTable.appendChild(this.leftAxisPanel);\n            axisTable.appendChild(this.rightAxisPanel);\n            this.axisTable = axisTable;\n            this.renderAxisTable();\n        }\n        this.parent.axisFieldModule.render();\n    };\n    AxisTableRenderer.prototype.renderAxisTable = function () {\n        var fieldLabels = ['filters', 'rows', 'columns', 'values'];\n        for (var len = 0, lnt = fieldLabels.length; len < lnt; len++) {\n            var axis = createElement('div', {\n                className: cls.FIELD_LIST_CLASS + '-' + fieldLabels[len]\n            });\n            var axisTitleWrapper = createElement('div', {\n                className: cls.AXIS_ICON_CLASS + '-wrapper'\n            });\n            var axisTitle = createElement('div', {\n                className: cls.AXIS_HEADER_CLASS,\n                innerHTML: this.parent.localeObj.getConstant(fieldLabels[len])\n            });\n            axisTitleWrapper.appendChild(this.getIconupdate(fieldLabels[len]));\n            axisTitleWrapper.appendChild(axisTitle);\n            var axisContent = createElement('div', { className: cls.AXIS_CONTENT_CLASS + ' ' + 'e-' + fieldLabels[len] });\n            var localePrompt = void 0;\n            if (fieldLabels[len] === 'rows') {\n                localePrompt = this.parent.localeObj.getConstant('dropRowPrompt');\n            }\n            else if (fieldLabels[len] === 'columns') {\n                localePrompt = this.parent.localeObj.getConstant('dropColPrompt');\n            }\n            else if (fieldLabels[len] === 'values') {\n                localePrompt = this.parent.localeObj.getConstant('dropValPrompt');\n            }\n            else {\n                localePrompt = this.parent.localeObj.getConstant('dropFilterPrompt');\n            }\n            var axisPrompt = createElement('span', {\n                className: cls.AXIS_PROMPT_CLASS,\n                innerHTML: localePrompt\n            });\n            var droppable = new Droppable(axisContent, {});\n            axis.appendChild(axisTitleWrapper);\n            axis.appendChild(axisContent);\n            axis.appendChild(axisPrompt);\n            if (len <= 1) {\n                this.leftAxisPanel.appendChild(axis);\n            }\n            else {\n                this.rightAxisPanel.appendChild(axis);\n            }\n            this.unWireEvent(axisContent);\n            this.wireEvent(axisContent);\n        }\n    };\n    AxisTableRenderer.prototype.getIconupdate = function (axis) {\n        var axisWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.AXIS_ICON_CLASS + '-icon-wrapper'\n        });\n        var axisElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.AXIS_ICON_CLASS + '-' + axis\n        });\n        axisWrapper.appendChild(axisElement);\n        return axisWrapper;\n    };\n    AxisTableRenderer.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        EventHandler.add(element, 'mouseleave', this.updateDropIndicator, this);\n    };\n    AxisTableRenderer.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        EventHandler.remove(element, 'mouseleave', this.updateDropIndicator);\n    };\n    AxisTableRenderer.prototype.updateDropIndicator = function (e) {\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (this.parent.isDragging && e.target.classList.contains(cls.AXIS_CONTENT_CLASS) && e.type === 'mouseover') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            var element = [].slice.call(e.target.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n            if (element.length > 0) {\n                addClass([element[element.length - 1].querySelector('.' + cls.DROP_INDICATOR_CLASS + '-last')], cls.INDICATOR_HOVER_CLASS);\n            }\n        }\n        else if (e.type === 'mouseleave') {\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    return AxisTableRenderer;\n}());\nexport { AxisTableRenderer };\n","import { createElement, Draggable, remove, extend } from '@syncfusion/ej2-base';\nimport { EventHandler, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, addClass, removeClass, closest, Browser } from '@syncfusion/ej2-base';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { AggregateMenu } from '../popups/aggregate-menu';\nimport { AxisFieldRenderer } from '../../pivotfieldlist/renderer/axis-field-renderer';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Pivot button\n */\n/** @hidden */\nvar PivotButton = /** @class */ (function () {\n    /** Constructor for render module */\n    function PivotButton(parent) {\n        this.parent = parent;\n        this.menuOption = new AggregateMenu(this.parent);\n        this.parent.pivotButtonModule = this;\n        this.addEventListener();\n        if (this.parent instanceof PivotFieldList) {\n            this.axisField = new AxisFieldRenderer(this.parent);\n        }\n    }\n    /* tslint:disable */\n    PivotButton.prototype.renderPivotButton = function (args) {\n        var field = extend([], args.field, null, true);\n        var axis = args.axis;\n        var axisElement;\n        var valuePos = -1;\n        var showValuesButton = (this.parent.dataType === 'pivot' ? (this.parent.getModuleName() == \"pivotfieldlist\" &&\n            this.parent.pivotGridModule) ?\n            this.parent.pivotGridModule.showValuesButton : this.parent.showValuesButton : false);\n        if (((this.parent.dataSourceSettings.valueAxis === 'row' && args.axis === 'rows') ||\n            (this.parent.dataSourceSettings.valueAxis === 'column' && args.axis === 'columns')) && showValuesButton && this.parent.dataSourceSettings.values.length > 1) {\n            valuePos = field.length;\n            field.push({\n                name: this.parent.localeObj.getConstant('values'), caption: this.parent.localeObj.getConstant('values'),\n                axis: args.axis\n            });\n        }\n        this.parentElement = this.parent.getModuleName() === 'pivotview' ? this.parent.element :\n            document.getElementById(this.parent.element.id + '_Wrapper');\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parentElement = document.getElementById(this.parent.element.id + '_Wrapper');\n            if (this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)) {\n                var axisPrompt = this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis)\n                    .querySelector('.' + cls.AXIS_PROMPT_CLASS);\n                if (field.length === 0) {\n                    removeClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                else {\n                    addClass([axisPrompt], cls.ICON_DISABLE);\n                }\n                axisElement =\n                    this.parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-' + axis).querySelector('.' + cls.AXIS_CONTENT_CLASS);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.parentElement = this.parent.element;\n            axisElement = this.parentElement.querySelector('.e-group-' + axis);\n        }\n        if (axisElement) {\n            if (this.parent.getModuleName() === 'pivotview' && field.length === 0) {\n                for (var _i = 0, _a = this.parentElement.querySelectorAll('.e-group-' + axis); _i < _a.length; _i++) {\n                    var element = _a[_i];\n                    if (!element.classList.contains(cls.GROUP_CHART_VALUE)) {\n                        var axisPrompt = createElement('span', {\n                            className: cls.AXIS_PROMPT_CLASS,\n                            innerHTML: (this.parent.groupingBarSettings.allowDragAndDrop ? axis === 'rows' ? this.parent.localeObj.getConstant('rowAxisPrompt') :\n                                axis === 'columns' ? this.parent.localeObj.getConstant('columnAxisPrompt') :\n                                    axis === 'values' ? this.parent.localeObj.getConstant('valueAxisPrompt') :\n                                        this.parent.localeObj.getConstant('filterAxisPrompt') : '')\n                        });\n                        element.appendChild(axisPrompt);\n                    }\n                }\n            }\n            else {\n                for (var i = 0, cnt = field.length; i < cnt; i++) {\n                    for (var _b = 0, _c = (this.parent.getModuleName() === 'pivotfieldlist' ? [axisElement] : this.parentElement.querySelectorAll('.e-group-' + axis)); _b < _c.length; _b++) {\n                        var element = _c[_b];\n                        element = element;\n                        var isMeasureAvail = (this.parent.dataType === 'olap' && (field[i].name.toLowerCase() === '[measures]' || axis === 'values'));\n                        var isMeasureFieldsAvail = (this.parent.dataType === 'olap' && axis === 'values');\n                        if (!element.classList.contains(cls.GROUP_CHART_VALUE)) {\n                            var buttonWrapper = createElement('div', {\n                                className: cls.PIVOT_BUTTON_WRAPPER_CLASS + (i === 0 ? ' e-first-btn' : ''),\n                                attrs: { 'data-tag': axis + ':' + field[i].name }\n                            });\n                            var buttonElement = createElement('div', {\n                                id: field[i].name, className: cls.PIVOT_BUTTON_CLASS + ' ' + field[i].name.replace(/[^A-Z0-9]/ig, ''),\n                                attrs: {\n                                    'data-uid': field[i].name, 'tabindex': '0', 'isvalue': (i === valuePos || isMeasureAvail && !isMeasureFieldsAvail) ? 'true' : 'false',\n                                    'aria-disabled': 'false', 'aria-label': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-type': (this.parent.dataType === 'olap' ? isMeasureFieldsAvail ? 'isMeasureFieldsAvail' : isMeasureAvail ? 'isMeasureAvail' : field[i].type : field[i].type),\n                                    'data-caption': field[i].caption ? field[i].caption : field[i].name,\n                                    'data-basefield': field[i].baseField,\n                                    'data-baseitem': field[i].baseItem\n                                }\n                            });\n                            var dropIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS\n                            });\n                            var dropLastIndicatorElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.DROP_INDICATOR_CLASS + '-last'\n                            });\n                            var dragWrapper = this.createButtonDragIcon(buttonElement);\n                            var contentElement = this.createButtonText(field, i, axis, valuePos);\n                            buttonElement.appendChild(contentElement);\n                            if (!isMeasureAvail && !field[i].isNamedSet && !field[i].isCalculatedField) {\n                                if (['filters', 'values'].indexOf(axis) === -1 && valuePos !== i &&\n                                    !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotview' &&\n                                        this.parent.enableVirtualization) || (this.parent.getModuleName() === 'pivotfieldlist' &&\n                                        this.parent.pivotGridModule !== undefined &&\n                                        this.parent.pivotGridModule.enableVirtualization)))) {\n                                    this.createSortOption(buttonElement, field[i].name);\n                                }\n                                if (axis !== 'values' && valuePos !== i) {\n                                    this.createFilterOption(buttonElement, field[i].name, axis);\n                                }\n                                if (axis === 'values') {\n                                    this.getTypeStatus(field, i, buttonElement);\n                                }\n                            }\n                            var removeElement = createElement('span', {\n                                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                                className: cls.ICON + ' ' + cls.REMOVE_CLASS\n                            });\n                            if (this.parent.getModuleName() === 'pivotview') {\n                                if (this.parent.groupingBarSettings.showRemoveIcon) {\n                                    removeClass([removeElement], cls.ICON_DISABLE);\n                                }\n                                else {\n                                    addClass([removeElement], cls.ICON_DISABLE);\n                                }\n                            }\n                            buttonElement.appendChild(removeElement);\n                            buttonWrapper.appendChild(dropIndicatorElement);\n                            buttonWrapper.appendChild(buttonElement);\n                            buttonWrapper.appendChild(dropLastIndicatorElement);\n                            element.appendChild(buttonWrapper);\n                            var pivotButton = new Button({ enableRtl: this.parent.enableRtl });\n                            pivotButton.isStringTemplate = true;\n                            pivotButton.appendTo(buttonElement);\n                            this.unWireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            this.wireEvent(buttonWrapper, i === valuePos ? 'values' : axis, isMeasureAvail);\n                            if ((this.parent.getModuleName() === 'pivotview' && !this.parent.isAdaptive) ||\n                                this.parent.getModuleName() === 'pivotfieldlist') {\n                                this.createDraggable(this.parent.getModuleName() === 'pivotview' ? contentElement : dragWrapper);\n                            }\n                        }\n                    }\n                }\n                if (axis === 'values') {\n                    var _loop_1 = function (element) {\n                        if (element.classList.contains(cls.GROUP_CHART_VALUE) && this_1.parent.chartModule) {\n                            var valueData = field.map(function (item) { return { text: item.caption ? item.caption : item.name, value: item.name }; });\n                            var parent_1 = this_1.parent;\n                            if (this_1.valueFiedDropDownList && element.querySelector('.' + cls.GROUP_CHART_VALUE_DROPDOWN_DIV)) {\n                                this_1.valueFiedDropDownList.dataSource = valueData;\n                                this_1.valueFiedDropDownList.value = !parent_1.chartSettings.enableMultiAxis ?\n                                    parent_1.chartModule.currentMeasure : valueData[0].value;\n                            }\n                            else {\n                                var ddlDiv = createElement('div', { className: cls.GROUP_CHART_VALUE_DROPDOWN_DIV });\n                                element.appendChild(ddlDiv);\n                                this_1.valueFiedDropDownList = new DropDownList({\n                                    dataSource: valueData,\n                                    enableRtl: this_1.parent.enableRtl,\n                                    value: !parent_1.chartSettings.enableMultiAxis ?\n                                        parent_1.chartModule.currentMeasure : valueData[0].value,\n                                    width: 200,\n                                    fields: { value: 'value', text: 'text' },\n                                    cssClass: cls.GROUP_CHART_VALUE_DROPDOWN,\n                                    change: function (args) {\n                                        if (args.e && args.e !== null) {\n                                            parent_1.chartSettings.value = args.value;\n                                        }\n                                    }\n                                });\n                                this_1.valueFiedDropDownList.isStringTemplate = true;\n                                this_1.valueFiedDropDownList.appendTo(ddlDiv);\n                            }\n                        }\n                    };\n                    var this_1 = this;\n                    for (var _d = 0, _e = this.parentElement.querySelectorAll('.e-group-' + axis); _d < _e.length; _d++) {\n                        var element = _e[_d];\n                        _loop_1(element);\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotButton.prototype.createButtonText = function (field, i, axis, valuePos) {\n        var buttonText;\n        var aggregation;\n        var filterMem;\n        if (axis === \"filters\") {\n            filterMem = this.updateButtontext(field[i].name);\n        }\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (engineModule.fieldList[field[i].name] !== undefined) {\n            aggregation = engineModule.fieldList[field[i].name].aggregateType;\n            if (aggregation === undefined && (engineModule.fieldList[field[i].name].type === 'string' || engineModule.fieldList[field[i].name].type === 'include' ||\n                engineModule.fieldList[field[i].name].type === 'exclude')) {\n                aggregation = 'Count';\n            }\n            else if (aggregation === undefined) {\n                aggregation = engineModule.fieldList[field[i].name].aggregateType !== undefined ?\n                    engineModule.fieldList[field[i].name].aggregateType : 'Sum';\n            }\n        }\n        var text = field[i].caption ? field[i].caption : field[i].name;\n        buttonText = createElement('span', {\n            attrs: {\n                title: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                    text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                    text : (((!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField') ?\n                    text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))),\n                'tabindex': '-1', 'aria-disabled': 'false', 'oncontextmenu': 'return false;',\n                'data-type': valuePos === i ? '' : aggregation\n            },\n            className: cls.PIVOT_BUTTON_CONTENT_CLASS + ' ' +\n                (this.parent.getModuleName() === 'pivotview' && !this.parent.groupingBarSettings.allowDragAndDrop ? 'e-disable-drag' : ''),\n            innerHTML: axis === 'filters' ? (this.parent.dataType === 'olap' && engineModule.fieldList[field[i].name].type === 'CalculatedField') ?\n                text : (text + ' (' + filterMem + ')') : (this.parent.dataType === 'olap' ?\n                text : (!this.parent.dataSourceSettings.showAggregationOnValueField || axis !== 'values' || aggregation === 'CalculatedField' ?\n                text : this.parent.localeObj.getConstant(aggregation) + ' ' + this.parent.localeObj.getConstant('of') + ' ' + text))\n        });\n        return buttonText;\n    };\n    PivotButton.prototype.getTypeStatus = function (field, i, buttonElement) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var fieldListItem = engineModule.fieldList[field[i].name];\n        if (fieldListItem.aggregateType !== 'CalculatedField' &&\n            fieldListItem.type === 'number') {\n            this.createSummaryType(buttonElement, field[i].name);\n        }\n    };\n    PivotButton.prototype.createSummaryType = function (pivotButton, fieldName) {\n        var spanElement = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n            className: cls.ICON + ' ' + cls.AXISFIELD_ICON_CLASS\n        });\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showValueTypeIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createMenuOption = function (args) {\n        this.menuOption.render(args, this.parentElement);\n        this.parent.pivotButtonModule = this;\n    };\n    PivotButton.prototype.createDraggable = function (target) {\n        this.draggable = new Draggable(target, {\n            clone: true,\n            enableTailMode: true,\n            enableAutoScroll: true,\n            helper: this.createDragClone.bind(this),\n            dragStart: this.onDragStart.bind(this),\n            drag: this.onDragging.bind(this),\n            dragStop: this.onDragStop.bind(this),\n            abort: (this.parent.getModuleName() === 'pivotview' && !this.parent.groupingBarSettings.allowDragAndDrop ? '.' + cls.PIVOT_BUTTON_CLASS : '')\n        });\n    };\n    PivotButton.prototype.createButtonDragIcon = function (pivotButton) {\n        var dragWrapper = createElement('span', {\n            attrs: { 'tabindex': '-1', 'aria-disabled': 'false' }\n        });\n        var dragElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.ICON + ' ' + cls.DRAG_CLASS\n        });\n        dragWrapper.appendChild(dragElement);\n        pivotButton.appendChild(dragWrapper);\n        return dragWrapper;\n    };\n    PivotButton.prototype.createSortOption = function (pivotButton, fieldName) {\n        var sortCLass;\n        var spanElement;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            sortCLass = engineModule.fieldList[fieldName].sort === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n        }\n        else {\n            sortCLass = '';\n            for (var i = 0; i < this.parent.dataSourceSettings.sortSettings.length; i++) {\n                if (this.parent.dataSourceSettings.sortSettings[i].name === fieldName) {\n                    sortCLass = this.parent.dataSourceSettings.sortSettings[i].order === 'Descending' ? cls.SORT_DESCEND_CLASS : '';\n                }\n            }\n        }\n        if (engineModule.fieldList[fieldName].sort === 'None') {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                className: cls.ICON\n            });\n        }\n        else {\n            spanElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false' },\n                className: cls.ICON + ' ' + cls.SORT_CLASS + ' ' + sortCLass\n            });\n        }\n        if (this.parent.dataSourceSettings.enableSorting) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showSortIcon) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    PivotButton.prototype.createFilterOption = function (pivotButton, fieldName, axis) {\n        var filterCLass;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        if (!this.parent.allowDeferLayoutUpdate) {\n            engineModule.fieldList[fieldName].filter = engineModule.fieldList[fieldName].filter === null ?\n                [] : engineModule.fieldList[fieldName].filter;\n            filterCLass = engineModule.fieldList[fieldName].filter.length === 0 ?\n                !engineModule.fieldList[fieldName].isExcelFilter ? cls.FILTER_CLASS : cls.FILTERED_CLASS : cls.FILTERED_CLASS;\n        }\n        else {\n            filterCLass = cls.FILTER_CLASS;\n            for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                    filterCLass = cls.FILTERED_CLASS;\n                }\n            }\n        }\n        var spanElement = createElement('span', {\n            attrs: {\n                'tabindex': '-1', 'aria-disabled': 'false'\n            },\n            className: cls.FILTER_COMMON_CLASS + ' ' + cls.ICON + ' ' + filterCLass\n        });\n        if ((((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n            axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n            removeClass([spanElement], cls.ICON_DISABLE);\n        }\n        else {\n            addClass([spanElement], cls.ICON_DISABLE);\n        }\n        if (this.parent.getModuleName() === 'pivotview') {\n            if (this.parent.groupingBarSettings.showFilterIcon &&\n                (((this.parent.dataSourceSettings.allowLabelFilter || this.parent.dataSourceSettings.allowValueFilter) &&\n                    axis !== 'filters') || this.parent.dataSourceSettings.allowMemberFilter)) {\n                removeClass([spanElement], cls.ICON_DISABLE);\n            }\n            else {\n                addClass([spanElement], cls.ICON_DISABLE);\n            }\n        }\n        pivotButton.appendChild(spanElement);\n        return spanElement;\n    };\n    // To update button text\n    PivotButton.prototype.updateButtontext = function (fieldName) {\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var filterCount = engineModule.fieldList[fieldName].filter.length;\n        var filterType = engineModule.fieldList[fieldName].filterType;\n        var memLen = engineModule.fieldList[fieldName].dateMember.length;\n        var filterMem;\n        var firstNode = engineModule.fieldList[fieldName].filter[0];\n        if (this.parent.dataType === 'olap') {\n            filterMem = this.updateOlapButtonText(engineModule, fieldName, firstNode, filterCount);\n        }\n        else if (filterType === \"include\") {\n            if (filterCount === 1) {\n                filterMem = firstNode;\n            }\n            else if (filterCount > 1) {\n                if (filterCount === memLen) {\n                    filterMem = this.parent.localeObj.getConstant('all');\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else if (filterType === \"exclude\") {\n            if (filterCount === 1) {\n                if (memLen === 2) {\n                    if (firstNode !== engineModule.fieldList[fieldName].dateMember[0].actualText) {\n                        filterMem = firstNode;\n                    }\n                    else {\n                        filterMem = engineModule.fieldList[fieldName].dateMember[0].actualText;\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n            else if (filterCount > 1) {\n                var j = void 0;\n                var allNodes = Object.keys(engineModule.fieldList[fieldName].members);\n                var filteredItems = engineModule.fieldList[fieldName].filter;\n                if (filterCount === (allNodes.length - 1)) {\n                    loop: for (j = 0; j < allNodes.length; j++) {\n                        var test = allNodes[j];\n                        var x = filteredItems.indexOf(test);\n                        if (x === -1) {\n                            filterMem = allNodes[j];\n                            break loop;\n                        }\n                    }\n                }\n                else {\n                    filterMem = this.parent.localeObj.getConstant('multipleItems');\n                }\n            }\n        }\n        else {\n            filterMem = this.parent.localeObj.getConstant('all');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.updateOlapButtonText = function (engineModule, fieldName, firstNode, filterCount) {\n        var filterMem;\n        var filterItems = engineModule.fieldList[fieldName].actualFilter;\n        if (filterItems.length > 0) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var actualFilterItems = [];\n            if (engineModule.fieldList[fieldName].filterMembers.length > 0) {\n                var dummyfilterItems = {};\n                for (var _i = 0, filterItems_1 = filterItems; _i < filterItems_1.length; _i++) {\n                    var item = filterItems_1[_i];\n                    dummyfilterItems[item] = item;\n                    if (cMembers[item]) {\n                        dummyfilterItems = this.parent.pivotCommon.eventBase.getParentNode(fieldName, item, dummyfilterItems);\n                    }\n                }\n                var updatedFilterItems = dummyfilterItems ? Object.keys(dummyfilterItems) : [];\n                for (var _a = 0, updatedFilterItems_1 = updatedFilterItems; _a < updatedFilterItems_1.length; _a++) {\n                    var item = updatedFilterItems_1[_a];\n                    if (cMembers[item].isSelected) {\n                        if (!(cMembers[item].parent && cMembers[cMembers[item].parent].isSelected)) {\n                            actualFilterItems.push(item);\n                        }\n                    }\n                }\n                firstNode = actualFilterItems.length === 1 ? cMembers[actualFilterItems[0]].caption : firstNode;\n            }\n            filterCount = actualFilterItems.length === 0 ? filterCount : actualFilterItems.length;\n        }\n        if (filterCount === 0) {\n            filterMem = (engineModule.fieldList[fieldName].allMember ?\n                engineModule.fieldList[fieldName].allMember : this.parent.localeObj.getConstant('all'));\n        }\n        else if (filterCount === 1) {\n            filterMem = firstNode;\n        }\n        else if (filterCount > 1) {\n            filterMem = this.parent.localeObj.getConstant('multipleItems');\n        }\n        return filterMem;\n    };\n    PivotButton.prototype.createDragClone = function (args) {\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var cloneElement = createElement('div', {\n            id: this.parent.element.id + '_DragClone',\n            className: cls.DRAG_CLONE_CLASS\n        });\n        var contentElement = createElement('span', {\n            className: cls.TEXT_CONTENT_CLASS,\n            innerHTML: element.textContent\n        });\n        cloneElement.appendChild(contentElement);\n        document.body.appendChild(cloneElement);\n        return cloneElement;\n    };\n    PivotButton.prototype.onDragStart = function (e) {\n        this.parent.isDragging = true;\n        var engineModule;\n        if (this.parent.dataType === 'olap') {\n            engineModule = this.parent.olapEngineModule;\n        }\n        else {\n            engineModule = this.parent.engineModule;\n        }\n        var element = closest(e.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        var data = engineModule.fieldList[element.getAttribute('data-uid')];\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        var dragItem = document.getElementById(this.parent.element.id + '_DragClone');\n        addClass([element], cls.SELECTED_NODE_CLASS);\n        if (dragItem && (this.parent.getModuleName() === 'pivotfieldlist' &&\n            this.parent.renderMode) === 'Popup') {\n            var fieldListPopup = this.parent;\n            dragItem.style.zIndex = (fieldListPopup.dialogRenderer.fieldListDialog.zIndex + 1).toString();\n        }\n        if (data && data.aggregateType === 'CalculatedField') {\n            for (var _i = 0, axis_1 = axis; _i < axis_1.length; _i++) {\n                var axisContent = axis_1[_i];\n                addClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n            }\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    PivotButton.prototype.onDragging = function (e) {\n        this.draggable.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20, } });\n        // if (closest(e.event.srcElement, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)) {\n        //     let droppableElement: HTMLElement = closest(e.event.srcElement, '.' + cls.DROPPABLE_CLASS) as HTMLElement;\n        //     let buttonElement: HTMLElement = closest(e.event.srcElement, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS) as HTMLElement;\n        //     if (droppableElement.offsetHeight < droppableElement.scrollHeight) {\n        //         let scrollPosition: number = (droppableElement.scrollHeight - buttonElement.offsetTop);\n        //         if (buttonElement.offsetTop >= droppableElement.offsetTop && scrollPosition > droppableElement.scrollTop) {\n        //             droppableElement.scrollTop += Math.abs(buttonElement.offsetHeight);\n        //         } else if (buttonElement.offsetTop <= droppableElement.offsetTop) {\n        //             droppableElement.scrollTop -= Math.abs(buttonElement.offsetHeight);\n        //         }\n        //     }\n        // }\n    };\n    PivotButton.prototype.onDragStop = function (args) {\n        this.parent.isDragging = false;\n        if (args.target.classList && (args.target.classList.contains(cls.GROUP_CHART_VALUE) || args.target.classList.contains(cls.GROUP_CHART_VALUE_DROPDOWN))) {\n            args.target = this.parent.element.querySelector('.' + cls.GROUP_CHART_ROW);\n        }\n        var element = closest(args.element, '.' + cls.PIVOT_BUTTON_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS)), cls.SELECTED_NODE_CLASS);\n        removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n        var axis = [cls.ROW_AXIS_CLASS, cls.COLUMN_AXIS_CLASS, cls.FILTER_AXIS_CLASS];\n        for (var _i = 0, axis_2 = axis; _i < axis_2.length; _i++) {\n            var axisContent = axis_2[_i];\n            removeClass([this.parentElement.querySelector('.' + axisContent)], cls.NO_DRAG_CLASS);\n        }\n        if (this.parent.pivotCommon.filterDialog.dialogPopUp) {\n            this.parent.pivotCommon.filterDialog.dialogPopUp.close();\n        }\n        if (document.getElementById(this.parent.element.id + '_DragClone')) {\n            remove(document.getElementById(this.parent.element.id + '_DragClone'));\n        }\n        document.body.style.cursor = 'auto';\n        if (!this.isButtonDropped(args.target, element)) {\n            return;\n        }\n        this.parent.pivotCommon.dataSourceUpdate.control = this.parent.getModuleName() === 'pivotview' ? this.parent :\n            (this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent);\n        if (this.parent.pivotCommon.nodeStateModified.onStateModified(args, element.id)) {\n            this.updateDataSource();\n            var thisObj = this;\n            //setTimeout(() => {\n            thisObj.parent.axisFieldModule.render();\n            //});\n        }\n    };\n    PivotButton.prototype.isButtonDropped = function (dropTarget, target) {\n        var axisPanel = closest(target, '.' + cls.DROPPABLE_CLASS);\n        var droppableElement = closest(dropTarget, '.' + cls.DROPPABLE_CLASS);\n        var isDropped = true;\n        if (axisPanel === droppableElement) {\n            var pivotButtons = [].slice.call(axisPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_CLASS));\n            var droppableTarget = closest(dropTarget, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            var sourcePosition = void 0;\n            var droppedPosition = -1;\n            for (var i = 0, n = pivotButtons.length; i < n; i++) {\n                if (pivotButtons[i].id === target.id) {\n                    sourcePosition = i;\n                }\n                if (droppableTarget) {\n                    var droppableButton = droppableTarget.querySelector('.' + cls.PIVOT_BUTTON_CLASS);\n                    if (pivotButtons[i].id === droppableButton.id) {\n                        droppedPosition = i;\n                    }\n                }\n            }\n            if (sourcePosition === droppedPosition || (sourcePosition === (pivotButtons.length - 1) && droppedPosition === -1)) {\n                removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n                isDropped = false;\n            }\n        }\n        return isDropped;\n    };\n    PivotButton.prototype.updateSorting = function (args) {\n        if (!(args.target.classList.contains(cls.FILTER_COMMON_CLASS)) &&\n            !(args.target.classList.contains(cls.REMOVE_CLASS))) {\n            if ((this.parent instanceof PivotFieldList || this.parent.groupingBarSettings.showSortIcon) &&\n                this.parent.dataSourceSettings.enableSorting &&\n                !(this.parent.dataType === 'olap' && ((this.parent.getModuleName() === 'pivotfieldlist' &&\n                    this.parent.pivotGridModule !== undefined &&\n                    this.parent.pivotGridModule.enableVirtualization) ||\n                    (this.parent.getModuleName() === 'pivotview' && this.parent.enableVirtualization)))) {\n                if (((this.parent.getModuleName() === 'pivotview' && this.parent.enableValueSorting) ||\n                    (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.pivotGridModule !== undefined &&\n                        this.parent.pivotGridModule.enableValueSorting))) {\n                    if (this.parent.enableValueSorting || this.parent.pivotGridModule.enableValueSorting) {\n                        if (args.target.classList.contains('e-pivot-button')) {\n                            if (args.target.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                        else {\n                            if (args.target.parentElement.parentElement.getAttribute('data-tag').split(':')[0] === 'rows') {\n                                this.parent.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            }\n                        }\n                    }\n                }\n                this.parent.pivotCommon.eventBase.updateSorting(args);\n                if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() != \"pivotfieldlist\") {\n                    this.updateDataSource(true);\n                }\n                var thisObj = this;\n                //setTimeout(() => {\n                if (thisObj.parent instanceof PivotFieldList) {\n                    thisObj.axisField.render();\n                }\n                //});\n            }\n        }\n    };\n    /** @hidden */\n    PivotButton.prototype.updateDataSource = function (isRefreshGrid) {\n        if (!this.parent.allowDeferLayoutUpdate || this.parent.getModuleName() === 'pivotview') {\n            this.parent.updateDataSource(isRefreshGrid);\n        }\n        else {\n            if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.renderMode === 'Popup') {\n                if (this.parent.dataType === 'olap') {\n                    this.parent.pivotGridModule.olapEngineModule = this.parent.olapEngineModule;\n                }\n                else {\n                    this.parent.pivotGridModule.engineModule = this.parent.engineModule;\n                }\n                this.parent.pivotGridModule.notify(events.uiUpdate, this);\n                this.parent.\n                    pivotGridModule.setProperties({ dataSourceSettings: this.parent.dataSourceSettings.properties }, true);\n            }\n            else {\n                this.parent.triggerPopulateEvent();\n            }\n        }\n    };\n    PivotButton.prototype.updateFiltering = function (args) {\n        var pivotObj = this.parent.pivotGridModule ? this.parent.pivotGridModule : this.parent;\n        if (pivotObj && pivotObj.enableVirtualization && isBlazor() && pivotObj.dataType == 'pivot') {\n            var fieldName_1 = args.target.parentElement.id;\n            var _this_1 = this;\n            pivotObj.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'fetchFieldMembers', fieldName_1).then(function (data) {\n                var parsedData = JSON.parse(data.dateMembers);\n                var dateMembers = [];\n                var formattedMembers = {};\n                var members = {};\n                for (var i = 0; i < parsedData.length; i++) {\n                    dateMembers.push({ formattedText: parsedData[i].FormattedText, actualText: parsedData[i].ActualText });\n                    formattedMembers[parsedData[i].FormattedText] = {};\n                    members[parsedData[i].ActualText] = {};\n                }\n                _this_1.parent.engineModule.fieldList[fieldName_1].dateMember = dateMembers;\n                _this_1.parent.engineModule.fieldList[fieldName_1].formattedMembers = formattedMembers;\n                _this_1.parent.engineModule.fieldList[fieldName_1].members = members;\n                _this_1.updateFilterEvents(args);\n            });\n        }\n        else {\n            this.updateFilterEvents(args);\n        }\n    };\n    PivotButton.prototype.updateFilterEvents = function (args) {\n        this.parent.pivotCommon.eventBase.updateFiltering(args);\n        var target = args.target;\n        this.fieldName = target.parentElement.id;\n        this.dialogPopUp = this.parent.pivotCommon.filterDialog.dialogPopUp;\n        this.memberTreeView = this.parent.pivotCommon.filterDialog.memberTreeView;\n        this.parent.pivotCommon.filterDialog.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        this.parent.pivotCommon.filterDialog.allMemberSelect.nodeChecked = this.nodeStateModified.bind(this);\n        this.bindDialogEvents();\n    };\n    PivotButton.prototype.bindDialogEvents = function () {\n        if (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter && this.parent.pivotCommon.filterDialog.tabObj) {\n            this.index = this.parent.pivotCommon.filterDialog.tabObj.selectedItem;\n            this.updateDialogButtonEvents();\n            this.dialogPopUp.buttons = this.buttonModel();\n            this.dialogPopUp.dataBind();\n            this.parent.pivotCommon.filterDialog.tabObj.selected = this.tabSelect.bind(this);\n        }\n        else if (this.parent.dataSourceSettings.allowMemberFilter) {\n            this.index = 0;\n            this.updateDialogButtonEvents();\n        }\n    };\n    PivotButton.prototype.buttonModel = function () {\n        return [\n            {\n                buttonModel: {\n                    cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                },\n                click: (this.index === 0 ? this.updateFilterState.bind(this, this.fieldName) : this.updateCustomFilter.bind(this))\n            },\n            {\n                buttonModel: {\n                    cssClass: 'e-clear-filter-button' + (this.parent.pivotCommon.filterDialog.allowExcelLikeFilter ? '' : ' ' + cls.ICON_DISABLE),\n                    iconCss: 'e-icons e-clear-filter-icon', enableRtl: this.parent.enableRtl,\n                    content: this.parent.localeObj.getConstant('clearFilter'), disabled: (this.parent.pivotCommon.filterDialog.filterObject ? false : true)\n                },\n                click: this.ClearFilter.bind(this)\n            },\n            {\n                click: this.parent.pivotCommon.filterDialog.closeFilterDialog.bind(this),\n                buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n            }\n        ];\n    };\n    PivotButton.prototype.tabSelect = function (e) {\n        this.index = e.selectedIndex;\n        this.updateDialogButtonEvents();\n        removeClass([].slice.call(this.dialogPopUp.element.querySelectorAll('.e-selected-tab')), 'e-selected-tab');\n        if (e.selectedIndex > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            addClass([this.dialogPopUp.element.querySelector('.e-filter-div-content' + '.' + (e.selectedIndex === 1 && this.parent.dataSourceSettings.allowLabelFilter ? 'e-label-filter' : 'e-value-filter'))], 'e-selected-tab');\n        }\n        if (e.selectedIndex === 0) {\n            this.parent.pivotCommon.filterDialog.updateCheckedState();\n        }\n        else {\n            this.dialogPopUp.buttons[0].buttonModel.disabled = false;\n            this.dialogPopUp.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n        }\n    };\n    PivotButton.prototype.updateDialogButtonEvents = function () {\n        this.dialogPopUp.buttons = this.buttonModel();\n        this.dialogPopUp.dataBind();\n    };\n    PivotButton.prototype.updateCustomFilter = function (args) {\n        var dialogElement = this.dialogPopUp.element.querySelector('.e-selected-tab');\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var levelName = dialogElement.getAttribute('data-selectedField');\n        var filterType = dialogElement.getAttribute('data-type');\n        var measure = dialogElement.getAttribute('data-measure');\n        var operator = dialogElement.getAttribute('data-operator');\n        var operand1 = dialogElement.getAttribute('data-value1');\n        var operand2 = dialogElement.getAttribute('data-value2');\n        var type = ((filterType === 'value') ? 'Value' : (filterType === 'date') ? 'Date' :\n            (filterType === 'number') ? 'Number' : 'Label');\n        var filterItem = {\n            name: fieldName,\n            type: type,\n            measure: measure,\n            condition: operator,\n            value1: filterType === 'date' ? new Date(operand1) : operand1,\n            value2: filterType === 'date' ? new Date(operand2) : operand2\n        };\n        var filterObject;\n        if (this.parent.dataType === 'olap') {\n            filterItem.selectedField = levelName;\n            this.removeDataSourceSettings(fieldName, levelName, type);\n            var filterItems = this.parent.dataSourceSettings.filterSettings;\n            for (var _i = 0, filterItems_2 = filterItems; _i < filterItems_2.length; _i++) {\n                var item = filterItems_2[_i];\n                if (item.name === fieldName && item.selectedField === levelName) {\n                    filterObject = item;\n                }\n            }\n        }\n        else {\n            filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        if ((isNOU(operand1) || operand1 === '') ||\n            (['Between', 'NotBetween'].indexOf(operator) > -1 && (isNOU(operand2) || operand2 === ''))) {\n            var inputElementString = (type.toLowerCase() + ((isNOU(operand1) || operand1 === '') ? '_input_option_1' : '_input_option_2'));\n            var focusElement = dialogElement.querySelector('#' + this.parent.element.id + '_' + inputElementString);\n            addClass([focusElement], cls.EMPTY_FIELD);\n            focusElement.focus();\n            return;\n        }\n        var filter = {\n            cancel: false,\n            filterSettings: filterItem,\n            dataSourceSettings: this.parent.dataSourceSettings\n        };\n        this.parent.pivotGridModule ?\n            this.parent.pivotGridModule.trigger(events.memberFiltering, filter) :\n            this.parent.trigger(events.memberFiltering, filter);\n        if (!filter.cancel) {\n            if (filterObject) {\n                // this.removeDataSourceSettings(fieldName);\n                filterObject = filterObject.properties ?\n                    filterObject.properties : filterObject;\n                filterObject.type = type;\n                filterObject.measure = measure;\n                filterObject.condition = operator;\n                filterObject.value1 = filterType === 'date' ? new Date(operand1) : operand1;\n                filterObject.value2 = filterType === 'date' ? new Date(operand2) : operand2;\n                if (this.parent.dataType === 'olap') {\n                    filterObject.selectedField = levelName;\n                }\n            }\n            else {\n                this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n        }\n        if (type !== 'Value') {\n            this.parent.lastFilterInfo = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        }\n        this.dialogPopUp.close();\n        if (!filter.cancel) {\n            this.refreshPivotButtonState(fieldName, true);\n            this.updateDataSource(true);\n        }\n    };\n    PivotButton.prototype.ClearFilter = function (e) {\n        var dialogElement = this.dialogPopUp.element;\n        var fieldName = dialogElement.getAttribute('data-fieldname');\n        var tabElement = dialogElement.querySelector('.e-selected-tab');\n        this.dialogPopUp.close();\n        if (this.parent.dataType === 'olap' && tabElement) {\n            var levelName = tabElement.getAttribute('data-selectedField');\n            this.removeDataSourceSettings(fieldName, levelName);\n        }\n        else {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n        this.refreshPivotButtonState(fieldName, filterObject ? true : false);\n        this.updateDataSource(true);\n    };\n    PivotButton.prototype.removeButton = function (args) {\n        var target = args.target;\n        var fieldName = target.parentElement.id;\n        if (target.parentElement.getAttribute('isvalue') === 'true') {\n            this.parent.setProperties({ dataSourceSettings: { values: [] } }, true);\n            if (this.parent.dataType === 'olap') {\n                this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n            }\n        }\n        else {\n            this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport(fieldName);\n            if (this.parent.dataType === 'olap' && this.parent.dataSourceSettings.values.length === 0) {\n                this.parent.pivotCommon.dataSourceUpdate.removeFieldFromReport('[measures]');\n            }\n        }\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n        }\n        this.updateDataSource();\n    };\n    PivotButton.prototype.nodeStateModified = function (args) {\n        var target = closest(args.node, 'li');\n        var fieldName = target.getAttribute('data-fieldname');\n        if (target.getAttribute('data-uid') === 'all') {\n            this.memberTreeView.nodeChecked = null;\n            if (args.action === 'check') {\n                this.memberTreeView.checkAll();\n            }\n            else {\n                this.memberTreeView.uncheckAll();\n            }\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                this.updateNodeStates(this.memberTreeView.getAllCheckedNodes(), fieldName, args.action);\n            }\n            this.checkedStateAll(args.action);\n            this.memberTreeView.nodeChecked = this.nodeStateModified.bind(this);\n        }\n        else {\n            if (this.parent.dataType === 'olap' && this.parent.olapEngineModule &&\n                !this.parent.olapEngineModule.fieldList[fieldName].isHierarchy) {\n                // let st1: number = new Date().getTime();\n                var checkedNodes = this.memberTreeView.getAllCheckedNodes();\n                // let st2: number = (new Date().getTime() - st1) / 1000;\n                // console.log('getAllCheckedNodes:' + st2);\n                this.updateNodeStates(checkedNodes, fieldName, args.action);\n            }\n            var pos = this.parent.pivotCommon.currentTreeItemsPos[target.getAttribute('data-uid')];\n            if (args.action === 'check') {\n                if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                    this.parent.pivotCommon.currentTreeItems[pos].isSelected = true;\n                }\n            }\n            else {\n                if (this.parent.pivotCommon.currentTreeItems[pos]) {\n                    this.parent.pivotCommon.currentTreeItems[pos].isSelected = false;\n                }\n            }\n        }\n        this.parent.pivotCommon.filterDialog.updateCheckedState();\n    };\n    PivotButton.prototype.checkedStateAll = function (state) {\n        var searchItemObj = {};\n        for (var _i = 0, _a = this.parent.pivotCommon.searchTreeItems; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.isSelected = state === 'check';\n            searchItemObj[item.id] = item.id;\n        }\n        for (var _b = 0, _c = this.parent.pivotCommon.currentTreeItems; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (searchItemObj[item.id] !== undefined) {\n                item.isSelected = state === 'check';\n            }\n        }\n    };\n    PivotButton.prototype.updateNodeStates = function (checkedNodes, fieldName, state) {\n        var fieldList = this.parent.pivotCommon.engineModule.fieldList[fieldName];\n        var currentMembers = fieldList.members;\n        var searchMembers = fieldList.currrentMembers;\n        if (fieldList.searchMembers.length > 0) {\n            var members = Object.keys(searchMembers);\n            for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {\n                var member = members_1[_i];\n                if (searchMembers[member]) {\n                    searchMembers[member].isSelected = false;\n                }\n                if (currentMembers[member]) {\n                    currentMembers[member].isSelected = false;\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + member + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, member, false);\n                        }\n                    }\n                }\n            }\n            for (var _a = 0, checkedNodes_1 = checkedNodes; _a < checkedNodes_1.length; _a++) {\n                var node = checkedNodes_1[_a];\n                if (currentMembers[node]) {\n                    if (this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]')) {\n                        var element = this.memberTreeView.element.querySelector('li[data-uid=\"' + node + '\"]');\n                        if (element && !element.querySelector('ul')) {\n                            currentMembers[node].isSelected = true;\n                            this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                        }\n                    }\n                }\n                if (searchMembers[node]) {\n                    searchMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            var members = Object.keys(currentMembers);\n            for (var _b = 0, members_2 = members; _b < members_2.length; _b++) {\n                var member = members_2[_b];\n                if (currentMembers[member].isSelected) {\n                    currentMembers[member].isSelected = false;\n                }\n            }\n            for (var _c = 0, checkedNodes_2 = checkedNodes; _c < checkedNodes_2.length; _c++) {\n                var node = checkedNodes_2[_c];\n                if (currentMembers[node]) {\n                    currentMembers[node].isSelected = true;\n                    this.parent.pivotCommon.eventBase.updateChildNodeStates(fieldList.filterMembers, fieldName, node, true);\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateFilterState = function (fieldName, args) {\n        var isNodeUnChecked = false;\n        var filterItem = { items: [], name: fieldName, type: 'Include' };\n        var engineModule = this.parent.olapEngineModule;\n        if (this.parent.dataType === 'olap' && engineModule &&\n            !engineModule.fieldList[fieldName].isHierarchy) {\n            var cMembers = engineModule.fieldList[fieldName].members;\n            var sMembers = engineModule.fieldList[fieldName].currrentMembers;\n            filterItem.items = this.memberTreeView.getAllCheckedNodes();\n            filterItem.levelCount = engineModule.fieldList[fieldName].levelCount;\n            isNodeUnChecked = (filterItem.items.length ===\n                this.memberTreeView.fields.dataSource.length ? false : true);\n            if (engineModule.fieldList[fieldName].searchMembers.length > 0 && !isNodeUnChecked) {\n                var cNodeLength = Object.keys(cMembers).length;\n                var sNodeLength = Object.keys(sMembers).length;\n                isNodeUnChecked = cNodeLength === sNodeLength && cNodeLength === filterItem.items.length ? false : true;\n            }\n            var filterItems = filterItem.items;\n            for (var _i = 0, filterItems_3 = filterItems; _i < filterItems_3.length; _i++) {\n                var node = filterItems_3[_i];\n                if (engineModule.fieldList[fieldName].searchMembers.length > 0 && sMembers[node]) {\n                    sMembers[node].isSelected = true;\n                }\n                else if (cMembers[node]) {\n                    cMembers[node].isSelected = true;\n                }\n            }\n        }\n        else {\n            for (var _a = 0, _b = this.parent.pivotCommon.searchTreeItems; _a < _b.length; _a++) {\n                var item = _b[_a];\n                if (item.isSelected) {\n                    if (this.parent.pivotCommon.isDateField) {\n                        filterItem.items.push(item.name);\n                    }\n                    else {\n                        filterItem.items.push(item.id);\n                    }\n                }\n            }\n            isNodeUnChecked = (filterItem.items.length === this.parent.pivotCommon.currentTreeItems.length ?\n                false : true);\n        }\n        if (this.parent.dataType === 'olap') {\n            this.removeDataSourceSettings(fieldName);\n        }\n        var filter = {\n            filterSettings: filterItem,\n            dataSourceSettings: this.parent.dataSourceSettings,\n            cancel: false\n        };\n        this.parent.pivotGridModule ?\n            this.parent.pivotGridModule.trigger(events.memberFiltering, filter) :\n            this.parent.trigger(events.memberFiltering, filter);\n        if (!filter.cancel) {\n            var filterObject = PivotUtil.getFilterItemByName(fieldName, this.parent.dataSourceSettings.filterSettings);\n            if (filterObject) {\n                for (var i = 0; i < this.parent.dataSourceSettings.filterSettings.length; i++) {\n                    if (this.parent.dataSourceSettings.filterSettings[i].name === fieldName) {\n                        this.parent.dataSourceSettings.filterSettings.splice(i, 1);\n                        break;\n                    }\n                }\n                this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n            else if (!filter.cancel) {\n                this.parent.dataSourceSettings.filterSettings.push(filterItem);\n            }\n        }\n        this.dialogPopUp.close();\n        if (!filter.cancel) {\n            this.refreshPivotButtonState(fieldName, isNodeUnChecked);\n            if (!isNodeUnChecked) {\n                this.removeDataSourceSettings(fieldName);\n            }\n            this.parent.lastFilterInfo = filterItem;\n            this.updateDataSource(true);\n            var thisObj = this;\n            //setTimeout(() => {\n            if (thisObj.parent instanceof PivotFieldList) {\n                thisObj.axisField.render();\n            }\n        }\n        //});\n    };\n    PivotButton.prototype.refreshPivotButtonState = function (fieldName, isFiltered) {\n        var pivotButtons = [].slice.call(this.parentElement.querySelectorAll('.e-pivot-button'));\n        var selectedButton;\n        for (var _i = 0, pivotButtons_1 = pivotButtons; _i < pivotButtons_1.length; _i++) {\n            var item = pivotButtons_1[_i];\n            if (item.getAttribute('data-uid') === fieldName) {\n                selectedButton = item.querySelector('.' + cls.FILTER_COMMON_CLASS);\n                break;\n            }\n        }\n        if (isFiltered) {\n            removeClass([selectedButton], cls.FILTER_CLASS);\n            addClass([selectedButton], cls.FILTERED_CLASS);\n        }\n        else {\n            removeClass([selectedButton], cls.FILTERED_CLASS);\n            addClass([selectedButton], cls.FILTER_CLASS);\n        }\n    };\n    PivotButton.prototype.removeDataSourceSettings = function (fieldName, selectedField, type) {\n        var filterSettings = this.parent.dataSourceSettings.filterSettings;\n        for (var len = 0, lnt = filterSettings.length; len < lnt; len++) {\n            if (this.parent.dataType === 'olap' && selectedField) {\n                if (!type && filterSettings[len].name === fieldName &&\n                    filterSettings[len].selectedField === selectedField) {\n                    filterSettings.splice(len, 1);\n                    break;\n                }\n                else if (type) {\n                    if (filterSettings[len].type !== type &&\n                        filterSettings[len].name === fieldName) {\n                        filterSettings.splice(len, 1);\n                        lnt--;\n                        len--;\n                    }\n                }\n            }\n            else {\n                if (filterSettings[len].name === fieldName) {\n                    filterSettings.splice(len, 1);\n                    if (this.parent.dataType !== 'olap') {\n                        break;\n                    }\n                    lnt--;\n                    len--;\n                }\n            }\n        }\n    };\n    PivotButton.prototype.updateDropIndicator = function (e) {\n        if (this.parent.isDragging) {\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parentElement.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            var element = closest(e.target, '.' + cls.PIVOT_BUTTON_WRAPPER_CLASS);\n            addClass([element.querySelector('.' + cls.DROP_INDICATOR_CLASS)], cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    PivotButton.prototype.wireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.add(element, 'mouseover', this.updateDropIndicator, this);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting, this);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering, this);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.add(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption, this);\n            }\n        }\n        EventHandler.add(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton, this);\n    };\n    PivotButton.prototype.unWireEvent = function (element, axis, isMeasureAvail) {\n        EventHandler.remove(element, 'mouseover', this.updateDropIndicator);\n        if (!isMeasureAvail) {\n            if (['filters', 'values'].indexOf(axis) === -1 && element.querySelector('.' + cls.PIVOT_BUTTON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.PIVOT_BUTTON_CLASS), 'click', this.updateSorting);\n            }\n            if (axis !== 'values' && element.querySelector('.' + cls.FILTER_COMMON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.FILTER_COMMON_CLASS), 'click', this.updateFiltering);\n            }\n            if (axis === 'values' && element.querySelector('.' + cls.AXISFIELD_ICON_CLASS) !== null) {\n                EventHandler.remove(element.querySelector('.' + cls.AXISFIELD_ICON_CLASS), 'click', this.createMenuOption);\n            }\n        }\n        EventHandler.remove(element.querySelector('.' + cls.REMOVE_CLASS), 'click', this.removeButton);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderPivotButton\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.pivotButtonUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    PivotButton.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.pivotButtonUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    PivotButton.prototype.destroy = function () {\n        this.menuOption.destroy();\n        this.removeEventListener();\n    };\n    return PivotButton;\n}());\nexport { PivotButton };\n","import * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { PivotButton } from '../../common/actions/pivot-button';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFieldRenderer = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFieldRenderer(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFieldRenderer.prototype.render = function () {\n        this.pivotButton = new PivotButton(this.parent);\n        this.createPivotButtons();\n    };\n    AxisFieldRenderer.prototype.createPivotButtons = function () {\n        var rows = this.parent.dataSourceSettings.rows;\n        var columns = this.parent.dataSourceSettings.columns;\n        var values = this.parent.dataSourceSettings.values;\n        var filters = this.parent.dataSourceSettings.filters;\n        var fields = [rows, columns, values, filters];\n        var parentElement = this.parent.dialogRenderer.parentElement;\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-filters').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-rows').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-columns').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        if (parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values')) {\n            parentElement.querySelector('.' + cls.FIELD_LIST_CLASS + '-values').querySelector('.' + cls.AXIS_CONTENT_CLASS).innerHTML = '';\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        for (var len = 0, lnt = fields.length; len < lnt; len++) {\n            if (fields[len]) {\n                var args = {\n                    field: fields[len],\n                    axis: axis[len].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFieldRenderer;\n}());\nexport { AxisFieldRenderer };\n","import { DialogRenderer } from '../renderer/dialog-renderer';\nimport { TreeViewRenderer } from '../renderer/tree-renderer';\nimport { AxisTableRenderer } from '../renderer/axis-table-renderer';\nimport { AxisFieldRenderer } from './axis-field-renderer';\n/**\n * Module to render Pivot Table component\n */\n/** @hidden */\nvar Render = /** @class */ (function () {\n    /** Constructor for render module */\n    function Render(parent) {\n        this.parent = parent;\n        this.parent.dialogRenderer = new DialogRenderer(this.parent);\n        this.parent.treeViewModule = new TreeViewRenderer(this.parent);\n        this.parent.axisTableModule = new AxisTableRenderer(this.parent);\n        this.parent.axisFieldModule = new AxisFieldRenderer(this.parent);\n    }\n    /**\n     * Initialize the pivot table rendering\n     * @returns void\n     * @private\n     */\n    Render.prototype.render = function () {\n        this.parent.dialogRenderer.render();\n        if (!this.parent.isAdaptive) {\n            this.parent.treeViewModule.render();\n        }\n        this.parent.axisTableModule.render();\n    };\n    return Render;\n}());\nexport { Render };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Event, Component, Internationalization, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { L10n, remove, addClass, Browser, Complex, getInstance } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, removeClass, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { PivotEngine } from '../../base/engine';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Render } from '../renderer/renderer';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { DataSourceSettings } from '../../pivotview/model/datasourcesettings';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { PivotUtil } from '../../base/util';\nimport { OlapEngine } from '../../base/olap/engine';\n/**\n * Represents the PivotFieldList component.\n * ```html\n * <div id=\"pivotfieldlist\"></div>\n * <script>\n *  var pivotfieldlistObj = new PivotFieldList({ });\n *  pivotfieldlistObj.appendTo(\"#pivotfieldlist\");\n * </script>\n * ```\n */\nvar PivotFieldList = /** @class */ (function (_super) {\n    __extends(PivotFieldList, _super);\n    /**\n     * Constructor for creating the widget\n     * @param  {PivotFieldListModel} options?\n     * @param  {string|HTMLButtonElement} element?\n     */\n    function PivotFieldList(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isRequiredUpdate = true;\n        /** @hidden */\n        _this.lastSortInfo = {};\n        /** @hidden */\n        _this.lastFilterInfo = {};\n        /** @hidden */\n        _this.lastAggregationInfo = {};\n        /** @hidden */\n        _this.lastCalcFieldInfo = {};\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    PivotFieldList.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.allowCalculatedField) {\n            modules.push({ args: [this], member: 'calculatedfield' });\n        }\n        return modules;\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    PivotFieldList.prototype.preRender = function () {\n        if (this.dataSourceSettings && this.dataSourceSettings.providerType === 'SSAS') {\n            this.olapEngineModule = new OlapEngine();\n            this.dataType = 'olap';\n        }\n        else {\n            this.engineModule = new PivotEngine();\n            this.dataType = 'pivot';\n        }\n        this.isAdaptive = Browser.isDevice;\n        this.globalize = new Internationalization(this.locale);\n        this.renderModule = new Render(this);\n        this.defaultLocale = {\n            staticFieldList: 'Pivot Field List',\n            fieldList: 'Field List',\n            dropFilterPrompt: 'Drop filter here',\n            dropColPrompt: 'Drop column here',\n            dropRowPrompt: 'Drop row here',\n            dropValPrompt: 'Drop value here',\n            addPrompt: 'Add field here',\n            adaptiveFieldHeader: 'Choose field',\n            centerHeader: 'Drag fields between axes below:',\n            add: 'add',\n            drag: 'Drag',\n            filter: 'Filter',\n            filtered: 'Filtered',\n            sort: 'Sort',\n            remove: 'Remove',\n            filters: 'Filters',\n            rows: 'Rows',\n            columns: 'Columns',\n            values: 'Values',\n            CalculatedField: 'Calculated Field',\n            createCalculatedField: 'Create Calculated Field',\n            fieldName: 'Enter the field name',\n            error: 'Error',\n            invalidFormula: 'Invalid formula.',\n            dropText: 'Example: (\"Sum(Order_Count)\" + \"Sum(In_Stock)\") * 250',\n            dropTextMobile: 'Add fields and edit formula here.',\n            dropAction: 'Calculated field cannot be place in any other region except value axis.',\n            search: 'Search',\n            close: 'Close',\n            cancel: 'Cancel',\n            delete: 'Delete',\n            alert: 'Alert',\n            warning: 'Warning',\n            ok: 'OK',\n            allFields: 'All Fields',\n            formula: 'Formula',\n            fieldExist: 'A field already exists in this name. Please enter a different name.',\n            confirmText: 'A calculation field already exists in this name. Do you want to replace it?',\n            noMatches: 'No matches',\n            format: 'Summaries values by',\n            edit: 'Edit',\n            clear: 'Clear',\n            formulaField: 'Drag and drop fields to formula',\n            dragField: 'Drag field to formula',\n            clearFilter: 'Clear',\n            by: 'by',\n            enterValue: 'Enter value',\n            chooseDate: 'Enter date',\n            all: 'All',\n            multipleItems: 'Multiple items',\n            /* tslint:disable */\n            Equals: 'Equals',\n            DoesNotEquals: 'Does Not Equal',\n            BeginWith: 'Begins With',\n            DoesNotBeginWith: 'Does Not Begin With',\n            EndsWith: 'Ends With',\n            DoesNotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            DoesNotContains: 'Does Not Contain',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqualTo: 'Greater Than Or Equal To',\n            LessThan: 'Less Than',\n            LessThanOrEqualTo: 'Less Than Or Equal To',\n            Between: 'Between',\n            NotBetween: 'Not Between',\n            Before: 'Before',\n            BeforeOrEqualTo: 'Before Or Equal To',\n            After: 'After',\n            AfterOrEqualTo: 'After Or Equal To',\n            member: 'Member',\n            label: 'Label',\n            date: 'Date',\n            value: 'Value',\n            labelTextContent: 'Show the items for which the label',\n            dateTextContent: 'Show the items for which the date',\n            valueTextContent: 'Show the items for which',\n            And: 'and',\n            Sum: 'Sum',\n            Count: 'Count',\n            DistinctCount: 'Distinct Count',\n            Product: 'Product',\n            Avg: 'Avg',\n            Min: 'Min',\n            Max: 'Max',\n            Index: 'Index',\n            SampleStDev: 'Sample StDev',\n            PopulationStDev: 'Population StDev',\n            SampleVar: 'Sample Var',\n            PopulationVar: 'Population Var',\n            RunningTotals: 'Running Totals',\n            DifferenceFrom: 'Difference From',\n            PercentageOfDifferenceFrom: '% of Difference From',\n            PercentageOfGrandTotal: '% of Grand Total',\n            PercentageOfColumnTotal: '% of Column Total',\n            PercentageOfRowTotal: '% of Row Total',\n            PercentageOfParentTotal: '% of Parent Total',\n            PercentageOfParentColumnTotal: '% of Parent Column Total',\n            PercentageOfParentRowTotal: '% of Parent Row Total',\n            MoreOption: 'More...',\n            Years: 'Years',\n            Quarters: 'Quarters',\n            Months: 'Months',\n            Days: 'Days',\n            Hours: 'Hours',\n            Minutes: 'Minutes',\n            Seconds: 'Seconds',\n            /* tslint:enable */\n            apply: 'APPLY',\n            valueFieldSettings: 'Value field settings',\n            sourceName: 'Field name :',\n            sourceCaption: 'Field caption :',\n            summarizeValuesBy: 'Summarize values by :',\n            baseField: 'Base field :',\n            baseItem: 'Base item :',\n            example: 'e.g:',\n            editorDataLimitMsg: ' more items. Search to refine further.',\n            deferLayoutUpdate: 'Defer Layout Update',\n            null: 'null',\n            undefined: 'undefined',\n            groupOutOfRange: 'Out of Range',\n            fieldDropErrorAction: 'The field you are moving cannot be placed in that area of the report',\n            memberType: 'Field Type',\n            selectedHierarchy: 'Parent Hierarchy',\n            formatString: 'Format String',\n            expressionField: 'Expression',\n            olapDropText: 'Example: [Measures].[Order Quantity] + ([Measures].[Order Quantity] * 0.10)',\n            customFormat: 'Enter custom format string',\n            Measure: 'Measure',\n            Dimension: 'Dimension',\n            Standard: 'Standard',\n            Currency: 'Currency',\n            Percent: 'Percent',\n            Custom: 'Custom',\n            blank: '(Blank)',\n            fieldTooltip: 'Drag and drop fields to create an expression. ' +\n                'And, if you want to edit the existing the calculated fields! ' +\n                'You can achieve it by simply selecting the field under \"Calculated Members\".',\n            fieldTitle: 'Field Name',\n            QuarterYear: 'Quarter Year',\n            caption: 'Field Caption',\n            copy: 'Copy',\n            of: 'of',\n            group: 'Group'\n        };\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.isDragging = false;\n        this.captionData = [];\n        this.wireEvent();\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PivotFieldList.prototype.frameCustomProperties = function (fieldListData, fieldList) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.updatePageSettings(false);\n        }\n        var pageSettings = this.pivotGridModule ? this.pivotGridModule.pageSettings : undefined;\n        var isDrillThrough = this.pivotGridModule ?\n            (this.pivotGridModule.allowDrillThrough || this.pivotGridModule.editSettings.allowEditing) : true;\n        var enableValueSorting = this.pivotGridModule ? this.pivotGridModule.enableValueSorting : undefined;\n        var customProperties;\n        if (this.dataType === 'olap') {\n            customProperties = {\n                mode: '',\n                savedFieldList: fieldList ? fieldList : undefined,\n                savedFieldListData: fieldListData ? fieldListData : undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: this.localeObj\n            };\n        }\n        else {\n            customProperties = {\n                mode: '',\n                savedFieldList: undefined,\n                pageSettings: pageSettings,\n                enableValueSorting: enableValueSorting,\n                isDrillThrough: isDrillThrough,\n                localeObj: this.localeObj\n            };\n        }\n        return customProperties;\n    };\n    /**\n     * Initialize the control rendering\n     * @returns void\n     * @private\n     */\n    PivotFieldList.prototype.render = function () {\n        var _this = this;\n        this.trigger(events.load, { dataSourceSettings: this.dataSourceSettings }, function (observedArgs) {\n            if (isBlazor()) {\n                observedArgs.dataSourceSettings.dataSource = _this.dataSourceSettings.dataSource;\n            }\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            addClass([_this.element], cls.ROOT);\n            if (_this.enableRtl) {\n                addClass([_this.element], cls.RTL);\n            }\n            else {\n                removeClass([_this.element], cls.RTL);\n            }\n            if (_this.isAdaptive) {\n                addClass([_this.element], cls.DEVICE);\n            }\n            else {\n                removeClass([_this.element], cls.DEVICE);\n            }\n            if (_this.cssClass) {\n                addClass([_this.element], _this.cssClass);\n            }\n            _this.notify(events.initialLoad, {});\n        });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n    };\n    /**\n     * Binding events to the Pivot Field List element.\n     * @hidden\n     */\n    PivotFieldList.prototype.wireEvent = function () {\n        this.on(events.initialLoad, this.generateData, this);\n        this.on(events.dataReady, this.fieldListRender, this);\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    PivotFieldList.prototype.unWireEvent = function () {\n        if (this.pivotGridModule && this.pivotGridModule.isDestroyed) {\n            return;\n        }\n        this.off(events.initialLoad, this.generateData);\n        this.off(events.dataReady, this.fieldListRender);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    PivotFieldList.prototype.getPersistData = function () {\n        var keyEntity = ['dataSourceSettings'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Get component name.\n     * @returns string\n     * @private\n     */\n    PivotFieldList.prototype.getModuleName = function () {\n        return 'pivotfieldlist';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    PivotFieldList.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'locale':\n                    this.refresh();\n                    break;\n                case 'enableRtl':\n                    if (this.enableRtl) {\n                        addClass([this.element], cls.RTL);\n                    }\n                    else {\n                        removeClass([this.element], cls.RTL);\n                    }\n                    requireRefresh = true;\n                    break;\n            }\n            if (requireRefresh) {\n                this.fieldListRender();\n            }\n        }\n    };\n    /* tslint:disable */\n    PivotFieldList.prototype.initEngine = function () {\n        var _this = this;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings)\n        };\n        this.trigger(events.enginePopulating, args, function (observedArgs) {\n            PivotUtil.updateDataSourceSettings(_this, observedArgs.dataSourceSettings);\n            if (isBlazor()) {\n                _this.dataSourceSettings.dataSource = _this.engineModule.data;\n            }\n            if (_this.dataType === 'pivot') {\n                if (_this.dataSourceSettings.groupSettings && _this.dataSourceSettings.groupSettings.length > 0) {\n                    var pivotDataSet = void 0;\n                    if (isBlazor()) {\n                        pivotDataSet = _this.engineModule.data;\n                    }\n                    else {\n                        pivotDataSet = _this.dataSourceSettings.dataSource;\n                    }\n                    _this.clonedDataSet = (_this.clonedDataSet ? _this.clonedDataSet : PivotUtil.getClonedData(pivotDataSet));\n                    _this.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n                    _this.clonedReport = _this.clonedReport ? _this.clonedReport : extend({}, _this.dataSourceSettings, null, true);\n                    _this.setProperties({ dataSourceSettings: { dataSource: pivotDataSet } }, true);\n                }\n                _this.engineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(), _this.getValueCellInfo.bind(_this));\n                _this.pivotFieldList = _this.engineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.engineModule.pivotValues\n                };\n                var this$_1 = _this;\n                _this.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_1.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_1.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_1.notify(events.dataReady, {});\n                    this$_1.trigger(events.dataBound);\n                });\n            }\n            else if (_this.dataType === 'olap') {\n                _this.olapEngineModule.renderEngine(_this.dataSourceSettings, _this.frameCustomProperties(_this.olapEngineModule.fieldListData, _this.olapEngineModule.fieldList));\n                _this.pivotFieldList = _this.olapEngineModule.fieldList;\n                var eventArgs = {\n                    pivotFieldList: _this.pivotFieldList,\n                    pivotValues: _this.olapEngineModule.pivotValues\n                };\n                var this$_2 = _this;\n                _this.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n                    this$_2.pivotFieldList = observedArgs.pivotFieldList;\n                    this$_2.olapEngineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n                    this$_2.notify(events.dataReady, {});\n                    this$_2.trigger(events.dataBound);\n                });\n            }\n        });\n    };\n    /* tslint:enable */\n    /* tslint:enable */\n    PivotFieldList.prototype.generateData = function () {\n        this.pivotFieldList = {};\n        if (this.dataSourceSettings && (this.dataSourceSettings.dataSource || this.dataSourceSettings.url)) {\n            if ((this.dataSourceSettings.url !== '' && this.dataType === 'olap') ||\n                this.dataSourceSettings.dataSource.length > 0) {\n                if (this.dataType === 'pivot') {\n                    this.engineModule.data = this.dataSourceSettings.dataSource;\n                }\n                this.initEngine();\n            }\n            else if (this.dataSourceSettings.dataSource instanceof DataManager) {\n                setTimeout(this.getData.bind(this), 100);\n            }\n        }\n        else {\n            this.notify(events.dataReady, {});\n            this.trigger(events.dataBound);\n        }\n    };\n    PivotFieldList.prototype.getValueCellInfo = function (aggregateObj) {\n        var args = aggregateObj;\n        this.trigger(events.aggregateCellInfo, args);\n        return args;\n    };\n    PivotFieldList.prototype.getData = function () {\n        this.dataSourceSettings.dataSource.executeQuery(new Query()).then(this.executeQuery.bind(this));\n    };\n    PivotFieldList.prototype.executeQuery = function (e) {\n        this.engineModule.data = e.result;\n        this.initEngine();\n    };\n    PivotFieldList.prototype.fieldListRender = function () {\n        this.element.innerHTML = '';\n        if (this.renderMode === 'Popup' && this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n            this.dialogRenderer.fieldListDialog.destroy();\n            remove(document.getElementById(this.element.id + '_Wrapper'));\n        }\n        this.renderModule.render();\n        this.fieldListSpinnerElement = this.renderMode === 'Popup' ?\n            this.dialogRenderer.fieldListDialog.element : this.element.querySelector('.e-pivotfieldlist-wrapper');\n        if (this.spinnerTemplate) {\n            createSpinner({ target: this.fieldListSpinnerElement, template: this.spinnerTemplate }, this.createElement);\n        }\n        else {\n            createSpinner({ target: this.fieldListSpinnerElement }, this.createElement);\n        }\n        var args;\n        args = {\n            pivotEngine: this.dataType === 'olap' ? this.olapEngineModule : this.engineModule,\n            dataSourceSettings: this.dataSourceSettings,\n            id: this.element.id,\n            element: document.getElementById(this.element.id + '_Wrapper'),\n            moduleName: this.getModuleName(),\n            enableRtl: this.enableRtl,\n            isAdaptive: this.isAdaptive,\n            renderMode: this.renderMode,\n            localeObj: this.localeObj,\n            dataType: this.dataType\n        };\n        this.pivotCommon = new PivotCommon(args);\n        this.pivotCommon.control = this;\n        if (this.allowDeferLayoutUpdate) {\n            this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n            this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n        }\n    };\n    PivotFieldList.prototype.getFieldCaption = function (dataSourceSettings) {\n        this.getFields(dataSourceSettings);\n        if (this.captionData.length > 0) {\n            var lnt = this.captionData.length;\n            var engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            while (lnt--) {\n                if (this.captionData[lnt]) {\n                    for (var _i = 0, _a = this.captionData[lnt]; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        if (obj) {\n                            if (engineModule.fieldList[obj.name]) {\n                                if (obj.caption) {\n                                    engineModule.fieldList[obj.name].caption = obj.caption;\n                                }\n                                else {\n                                    engineModule.fieldList[obj.name].caption = obj.name;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    PivotFieldList.prototype.getFields = function (dataSourceSettings) {\n        /* tslint:disable-next-line:max-line-length */\n        this.captionData = [dataSourceSettings.rows, dataSourceSettings.columns, dataSourceSettings.values, dataSourceSettings.filters];\n    };\n    /* tslint:disable */\n    /**\n     * Updates the PivotEngine using dataSource from Pivot Field List component.\n     * @method updateDataSource\n     * @return {void}\n     * @hidden\n     */\n    PivotFieldList.prototype.updateDataSource = function (isTreeViewRefresh, isEngineRefresh) {\n        if (this.pivotGridModule) {\n            this.pivotGridModule.showWaitingPopup();\n        }\n        showSpinner(this.fieldListSpinnerElement);\n        var pivot = this;\n        //setTimeout(() => {\n        var isOlapDataRefreshed = false;\n        var pageSettings = pivot.pivotGridModule && pivot.pivotGridModule.enableVirtualization ?\n            pivot.pivotGridModule.pageSettings : undefined;\n        var isCalcChange = Object.keys(pivot.lastCalcFieldInfo).length > 0 ? true : false;\n        var isSorted = Object.keys(pivot.lastSortInfo).length > 0 ? true : false;\n        var lastSortInfo = pivot.lastSortInfo;\n        if (pivot.pivotGridModule && pivot.dataType === 'pivot') {\n            pivot.pivotGridModule.lastSortInfo = {};\n        }\n        pivot.lastSortInfo = {};\n        var isAggChange = Object.keys(pivot.lastAggregationInfo).length > 0 ? true : false;\n        var isFiltered = Object.keys(pivot.lastFilterInfo).length > 0 ? true : false;\n        var args = {\n            dataSourceSettings: PivotUtil.getClonedDataSourceSettings(pivot.dataSourceSettings)\n        };\n        pivot.trigger(events.enginePopulating, args, function (observedArgs) {\n            if (!(pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange))) {\n                PivotUtil.updateDataSourceSettings(pivot, observedArgs.dataSourceSettings);\n                PivotUtil.updateDataSourceSettings(pivot.pivotGridModule, observedArgs.dataSourceSettings);\n            }\n            if (isNullOrUndefined(isEngineRefresh)) {\n                if (pivot.dataType === 'pivot') {\n                    var customProperties = pivot.frameCustomProperties();\n                    customProperties.savedFieldList = pivot.pivotFieldList;\n                    if (pageSettings && (isSorted || isFiltered || isAggChange || isCalcChange)) {\n                        var interopArguments = {};\n                        if (isSorted) {\n                            pivot.pivotGridModule.setProperties({ dataSourceSettings: { valueSortSettings: { headerText: '' } } }, true);\n                            if ((isBlazor())) {\n                                interopArguments = { 'key': 'onSort', 'arg': lastSortInfo };\n                            }\n                            else {\n                                pivot.engineModule.onSort(lastSortInfo);\n                            }\n                        }\n                        if (isFiltered) {\n                            if (isBlazor()) {\n                                var dataArgs = window['ejsInterop'].copyWithoutCircularReferences([pivot.dataSourceSettings.filterSettings], pivot.dataSourceSettings.filterSettings);\n                                interopArguments = {\n                                    'key': 'onFilter',\n                                    'arg': { 'lastFilterInfo': pivot.lastFilterInfo, 'filterSettings': dataArgs }\n                                };\n                            }\n                            else {\n                                pivot.engineModule.onFilter(pivot.lastFilterInfo, pivot.dataSourceSettings);\n                            }\n                            pivot.lastFilterInfo = {};\n                        }\n                        if (isAggChange) {\n                            if (isBlazor()) {\n                                interopArguments = { 'key': 'onAggregation', 'arg': pivot.lastAggregationInfo };\n                            }\n                            else {\n                                pivot.engineModule.onAggregation(pivot.lastAggregationInfo);\n                            }\n                            pivot.lastAggregationInfo = {};\n                        }\n                        if (isCalcChange) {\n                            if (isBlazor()) {\n                                interopArguments = {\n                                    'key': 'onCalcOperation',\n                                    'arg': {\n                                        lastCalcFieldInfo: pivot.lastCalcFieldInfo,\n                                        values: pivot.dataSourceSettings.values,\n                                        calculatedFieldSettings: pivot.dataSourceSettings.calculatedFieldSettings\n                                    }\n                                };\n                            }\n                            else {\n                                pivot.engineModule.onCalcOperation(pivot.lastCalcFieldInfo);\n                            }\n                            pivot.lastCalcFieldInfo = {};\n                        }\n                        if (isBlazor()) {\n                            var args_1 = window['ejsInterop'].copyWithoutCircularReferences([interopArguments['arg']], interopArguments['arg']);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", interopArguments['key'], args_1).then(function (data) {\n                                pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                pivot.getFieldCaption(pivot.dataSourceSettings);\n                                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                                if (pivot.calculatedFieldModule && pivot.calculatedFieldModule.isRequireUpdate) {\n                                    pivot.calculatedFieldModule.endDialog();\n                                    pivot.calculatedFieldModule.isRequireUpdate = false;\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        if (isBlazor() && pageSettings) {\n                            var dataArgs = window['ejsInterop'].copyWithoutCircularReferences([pivot.dataSourceSettings.properties], pivot.dataSourceSettings.properties);\n                            pivot.pivotGridModule.interopAdaptor.invokeMethodAsync(\"PivotInteropMethod\", 'renderEngine', { 'dataSourceSettings': dataArgs, 'customProperties': customProperties }).then(function (data) {\n                                pivot.pivotGridModule.updateBlazorData(data, pivot.pivotGridModule);\n                                pivot.getFieldCaption(pivot.dataSourceSettings);\n                                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n                            });\n                        }\n                        else {\n                            /* tslint:disable-next-line:max-line-length */\n                            pivot.engineModule.renderEngine(pivot.dataSourceSettings, customProperties, pivot.getValueCellInfo.bind(pivot));\n                        }\n                    }\n                }\n                else {\n                    isOlapDataRefreshed = pivot.updateOlapDataSource(pivot, isSorted, isCalcChange, isOlapDataRefreshed);\n                }\n                if (!(isBlazor() && pageSettings)) {\n                    pivot.getFieldCaption(pivot.dataSourceSettings);\n                }\n            }\n            else {\n                pivot.axisFieldModule.render();\n                pivot.isRequiredUpdate = false;\n            }\n            if (!(isBlazor() && pageSettings)) {\n                pivot.enginePopulatedEventMethod(pivot, isTreeViewRefresh, isOlapDataRefreshed);\n            }\n        });\n        //});\n    };\n    PivotFieldList.prototype.enginePopulatedEventMethod = function (pivot, isTreeViewRefresh, isOlapDataRefreshed) {\n        var eventArgs = {\n            dataSourceSettings: pivot.dataSourceSettings,\n            pivotFieldList: pivot.dataType === 'pivot' ? pivot.engineModule.fieldList : pivot.olapEngineModule.fieldList,\n            pivotValues: pivot.dataType === 'pivot' ? pivot.engineModule.pivotValues : pivot.olapEngineModule.pivotValues\n        };\n        pivot.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            var dataSource = pivot.dataSourceSettings.dataSource;\n            if (isBlazor() && observedArgs.dataSourceSettings.dataSource instanceof Object) {\n                observedArgs.dataSourceSettings.dataSource = dataSource;\n            }\n            pivot.dataSourceSettings = observedArgs.dataSourceSettings;\n            pivot.pivotCommon.dataSourceSettings = pivot.dataSourceSettings;\n            pivot.pivotFieldList = observedArgs.pivotFieldList;\n            if (pivot.dataType === 'olap') {\n                pivot.olapEngineModule.pivotValues = isBlazor() ? pivot.olapEngineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.olapEngineModule;\n            }\n            else {\n                pivot.engineModule.pivotValues = isBlazor() ? pivot.engineModule.pivotValues : observedArgs.pivotValues;\n                pivot.pivotCommon.engineModule = pivot.engineModule;\n            }\n            if (!isTreeViewRefresh && pivot.treeViewModule.fieldTable && !pivot.isAdaptive) {\n                pivot.notify(events.treeViewUpdate, {});\n            }\n            if (pivot.isRequiredUpdate) {\n                if (pivot.allowDeferLayoutUpdate) {\n                    pivot.clonedDataSource = extend({}, pivot.dataSourceSettings, null, true);\n                    pivot.clonedFieldList = extend({}, pivot.pivotFieldList, null, true);\n                }\n                pivot.updateView(pivot.pivotGridModule);\n            }\n            else if (pivot.renderMode === 'Popup' && pivot.allowDeferLayoutUpdate) {\n                pivot.pivotGridModule.engineModule = pivot.engineModule;\n                /* tslint:disable:align */\n                pivot.pivotGridModule.setProperties({\n                    dataSourceSettings: pivot.dataSourceSettings.properties\n                }, true);\n                pivot.pivotGridModule.notify(events.uiUpdate, pivot);\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            if (pivot.renderMode === 'Popup' && pivot.pivotGridModule &&\n                pivot.pivotGridModule.allowDeferLayoutUpdate && !pivot.isRequiredUpdate) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n                pivot.pivotGridModule.hideWaitingPopup();\n            }\n            pivot.isRequiredUpdate = true;\n            if (!pivot.pivotGridModule || isOlapDataRefreshed) {\n                hideSpinner(pivot.fieldListSpinnerElement);\n            }\n            else {\n                pivot.pivotGridModule.fieldListSpinnerElement = pivot.fieldListSpinnerElement;\n            }\n        });\n    };\n    /* tslint:enable */\n    PivotFieldList.prototype.updateOlapDataSource = function (pivot, isSorted, isCalcChange, isOlapDataRefreshed) {\n        var customProperties = pivot.frameCustomProperties(pivot.olapEngineModule.fieldListData, pivot.olapEngineModule.fieldList);\n        customProperties.savedFieldList = pivot.pivotFieldList;\n        if (isCalcChange || isSorted) {\n            pivot.olapEngineModule.savedFieldList = pivot.pivotFieldList;\n            pivot.olapEngineModule.savedFieldListData = pivot.olapEngineModule.fieldListData;\n            if (isCalcChange) {\n                pivot.olapEngineModule.updateCalcFields(pivot.dataSourceSettings, pivot.lastCalcFieldInfo);\n                pivot.lastCalcFieldInfo = {};\n                isOlapDataRefreshed = pivot.olapEngineModule.dataFields[pivot.lastCalcFieldInfo.name] ? false : true;\n                if (pivot.pivotGridModule) {\n                    pivot.pivotGridModule.hideWaitingPopup();\n                }\n            }\n            else {\n                pivot.olapEngineModule.onSort(pivot.dataSourceSettings);\n            }\n        }\n        else {\n            pivot.olapEngineModule.renderEngine(pivot.dataSourceSettings, customProperties);\n        }\n        return isOlapDataRefreshed;\n    };\n    /**\n     * Updates the Pivot Field List component using dataSource from PivotView component.\n     * @method updateControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.update = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            this.clonedDataSet = control.clonedDataSet;\n            this.setProperties({ dataSourceSettings: control.dataSourceSettings }, true);\n            this.engineModule = control.engineModule;\n            this.olapEngineModule = control.olapEngineModule;\n            this.dataType = control.dataType;\n            this.pivotFieldList = this.dataType === 'olap' ? control.olapEngineModule.fieldList : control.engineModule.fieldList;\n            if (this.renderMode === 'Popup') {\n                this.pivotGridModule = control;\n            }\n            this.getFieldCaption(control.dataSourceSettings);\n            this.pivotCommon.engineModule = this.dataType === 'olap' ? this.olapEngineModule : this.engineModule;\n            this.pivotCommon.dataSourceSettings = this.dataSourceSettings;\n            this.pivotCommon.control = this;\n            if (this.treeViewModule.fieldTable && !this.isAdaptive) {\n                this.notify(events.treeViewUpdate, {});\n            }\n            this.axisFieldModule.render();\n            if (this.renderMode === 'Fixed' && this.allowDeferLayoutUpdate) {\n                this.clonedDataSource = extend({}, this.dataSourceSettings, null, true);\n                this.clonedFieldList = extend({}, this.pivotFieldList, null, true);\n            }\n        }\n    };\n    /**\n     * Updates the PivotView component using dataSource from Pivot Field List component.\n     * @method refreshTargetControl\n     * @return {void}\n     */\n    PivotFieldList.prototype.updateView = function (control) {\n        if (isBlazor() && control !== undefined) {\n            /* tslint:disable */\n            var pivotId = control.ID;\n            var pivotInstance = getInstance('#' + pivotId, PivotView);\n            control = pivotInstance;\n            /* tslint:enable */\n        }\n        if (control) {\n            control.clonedDataSet = this.clonedDataSet;\n            if (isBlazor()) {\n                PivotUtil.updateDataSourceSettings(control, PivotUtil.getClonedDataSourceSettings(this.dataSourceSettings));\n            }\n            else {\n                control.setProperties({ dataSourceSettings: this.dataSourceSettings }, true);\n            }\n            control.engineModule = this.engineModule;\n            control.olapEngineModule = this.olapEngineModule;\n            control.dataType = this.dataType;\n            control.pivotValues = this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues;\n            var eventArgs = {\n                dataSourceSettings: control.dataSourceSettings,\n                pivotValues: control.pivotValues\n            };\n            control.trigger(events.fieldListRefreshed, eventArgs);\n            if (control.enableVirtualization && isBlazor()) {\n                control.renderPivotGrid();\n            }\n            else {\n                control.dataBind();\n            }\n        }\n    };\n    /**\n     * Called internally to trigger populate event.\n     * @hidden\n     */\n    PivotFieldList.prototype.triggerPopulateEvent = function () {\n        var _this = this;\n        var eventArgs = {\n            dataSourceSettings: this.dataSourceSettings,\n            pivotFieldList: this.dataType === 'olap' ? this.olapEngineModule.fieldList : this.engineModule.fieldList,\n            pivotValues: this.dataType === 'olap' ? this.olapEngineModule.pivotValues : this.engineModule.pivotValues\n        };\n        this.trigger(events.enginePopulated, eventArgs, function (observedArgs) {\n            _this.dataSourceSettings = observedArgs.dataSourceSettings;\n            _this.pivotFieldList = observedArgs.pivotFieldList;\n            if (_this.dataType === 'olap') {\n                _this.olapEngineModule.pivotValues = isBlazor() ? _this.olapEngineModule.pivotValues : observedArgs.pivotValues;\n            }\n            else {\n                _this.engineModule.pivotValues = isBlazor() ? _this.engineModule.pivotValues : observedArgs.pivotValues;\n            }\n        });\n    };\n    /**\n     * Destroys the Field Table component.\n     * @method destroy\n     * @return {void}\n     */\n    PivotFieldList.prototype.destroy = function () {\n        this.unWireEvent();\n        if (this.treeViewModule) {\n            this.treeViewModule.destroy();\n        }\n        if (this.pivotButtonModule) {\n            this.pivotButtonModule.destroy();\n        }\n        if (this.allowDeferLayoutUpdate && this.dialogRenderer &&\n            this.dialogRenderer.deferUpdateCheckBox && !this.dialogRenderer.deferUpdateCheckBox.isDestroyed) {\n            this.dialogRenderer.deferUpdateCheckBox.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.ROOT);\n        removeClass([this.element], cls.RTL);\n        removeClass([this.element], cls.DEVICE);\n        if (this.renderMode === 'Popup') {\n            if (this.dialogRenderer.fieldListDialog && !this.dialogRenderer.fieldListDialog.isDestroyed) {\n                this.dialogRenderer.fieldListDialog.destroy();\n            }\n            if (document.getElementById(this.element.id + '_Wrapper')) {\n                remove(document.getElementById(this.element.id + '_Wrapper'));\n            }\n        }\n    };\n    __decorate([\n        Complex({}, DataSourceSettings)\n    ], PivotFieldList.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property('Popup')\n    ], PivotFieldList.prototype, \"renderMode\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"target\", void 0);\n    __decorate([\n        Property('')\n    ], PivotFieldList.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowCalculatedField\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"showValuesButton\", void 0);\n    __decorate([\n        Property(false)\n    ], PivotFieldList.prototype, \"allowDeferLayoutUpdate\", void 0);\n    __decorate([\n        Property(1000)\n    ], PivotFieldList.prototype, \"maxNodeLimitInMemberEditor\", void 0);\n    __decorate([\n        Property(true)\n    ], PivotFieldList.prototype, \"loadOnDemandInMemberEditor\", void 0);\n    __decorate([\n        Property()\n    ], PivotFieldList.prototype, \"spinnerTemplate\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulating\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"memberFiltering\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"enginePopulated\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"onFieldDropped\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"aggregateCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], PivotFieldList.prototype, \"destroyed\", void 0);\n    PivotFieldList = __decorate([\n        NotifyPropertyChanges\n    ], PivotFieldList);\n    return PivotFieldList;\n}(Component));\nexport { PivotFieldList };\n","import { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Droppable, createElement, extend, remove, addClass, closest, getInstance, isBlazor } from '@syncfusion/ej2-base';\nimport { prepend, append, KeyboardEvents, removeClass } from '@syncfusion/ej2-base';\nimport { Button, RadioButton, CheckBox } from '@syncfusion/ej2-buttons';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport * as cls from '../../common/base/css-constant';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport * as events from '../../common/base/constant';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\n/**\n * Module to render Calculated Field Dialog\n */\nvar COUNT = 'Count';\nvar AVG = 'Avg';\nvar MIN = 'Min';\nvar MAX = 'Max';\nvar SUM = 'Sum';\nvar DISTINCTCOUNT = 'DistinctCount';\nvar PRODUCT = 'Product';\nvar STDEV = 'SampleStDev';\nvar STDEVP = 'PopulationStDev';\nvar VAR = 'SampleVar';\nvar VARP = 'PopulationVar';\nvar CALC = 'CalculatedField';\nvar AGRTYPE = 'AggregateType';\n/** @hidden */\nvar CalculatedField = /** @class */ (function () {\n    /** Constructor for calculatedfield module */\n    function CalculatedField(parent) {\n        /** @hidden */\n        this.isFormula = false;\n        /** @hidden */\n        this.isRequireUpdate = false;\n        this.parent = parent;\n        this.existingReport = null;\n        this.parent.calculatedFieldModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.inputObj = null;\n        this.treeObj = null;\n        this.droppable = null;\n        this.menuObj = null;\n        this.newFields = null;\n        this.isFieldExist = true;\n        this.formulaText = null;\n        this.fieldText = null;\n        this.isEdit = false;\n        this.currentFieldName = null;\n        this.confirmPopUp = null;\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    CalculatedField.prototype.getModuleName = function () {\n        return 'calculatedfield';\n    };\n    CalculatedField.prototype.keyActionHandler = function (e) {\n        var node = e.currentTarget.querySelector('.e-hover.e-node-focus');\n        if (node) {\n            switch (e.action) {\n                case 'moveRight':\n                    if (this.parent.dataType === 'pivot') {\n                        this.displayMenu(node.previousSibling);\n                    }\n                    break;\n                case 'enter':\n                    var field = node.getAttribute('data-field');\n                    var type = node.getAttribute('data-type');\n                    var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n                    if (this.parent.dataType === 'pivot') {\n                        if (dropField.value === '') {\n                            if (type === CALC) {\n                                dropField.value = node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                        else if (dropField.value !== '') {\n                            if (type === CALC) {\n                                dropField.value = dropField.value + node.getAttribute('data-uid');\n                            }\n                            else {\n                                dropField.value = dropField.value + '\"' + type + '(' + field + ')' + '\"';\n                            }\n                        }\n                    }\n                    else {\n                        if (this.parent.olapEngineModule && this.parent.olapEngineModule.fieldList[field] &&\n                            this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                            field = this.parent.olapEngineModule.fieldList[field].tag;\n                        }\n                        if (dropField.value === '') {\n                            dropField.value = field;\n                        }\n                        else if (dropField.value !== '') {\n                            dropField.value = dropField.value + field;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * Trigger while click treeview icon.\n     * @param  {MouseEvent} e\n     * @returns void\n     */\n    CalculatedField.prototype.fieldClickHandler = function (e) {\n        var node = e.event.target.parentElement;\n        if (e.event.target.classList.contains(cls.FORMAT) ||\n            e.event.target.classList.contains(cls.CALC_EDIT) ||\n            e.event.target.classList.contains(cls.CALC_EDITED)) {\n            this.displayMenu(node.parentElement);\n        }\n    };\n    CalculatedField.prototype.clearFormula = function () {\n        if (this.treeObj && this.treeObj.element.querySelector('li')) {\n            removeClass(this.treeObj.element.querySelectorAll('li'), 'e-active');\n            this.displayMenu(this.treeObj.element.querySelector('li'));\n        }\n    };\n    /**\n     * To display context menu.\n     * @param  {HTMLElement} node\n     * @returns void\n     */\n    CalculatedField.prototype.displayMenu = function (node) {\n        if (this.parent.dataType === 'pivot' && document.querySelector('.' + this.parentID + 'calculatedmenu') !== null &&\n            node.querySelector('.e-list-icon').classList.contains(cls.ICON) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) &&\n            !node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) && node.tagName === 'LI') {\n            this.menuObj.close();\n            this.curMenu = node.querySelector('.' + cls.LIST_TEXT_CLASS);\n            this.openContextMenu();\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDIT) ||\n            (this.parent.dataType === 'olap' && node.getAttribute('data-type') === CALC && node.classList.contains('e-active')))) {\n            this.isEdit = true;\n            var fieldName = node.getAttribute('data-field');\n            var caption = node.getAttribute('data-caption');\n            this.currentFieldName = fieldName;\n            this.inputObj.value = caption;\n            this.inputObj.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var memberType = node.getAttribute('data-membertype');\n                var parentHierarchy = node.getAttribute('data-hierarchy');\n                var expression = node.getAttribute('data-formula');\n                var formatString = node.getAttribute('data-formatString');\n                var customString = node.getAttribute('data-customString');\n                var dialogElement = this.dialog.element;\n                /* tslint:disable */\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                /* tslint:enable */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('caption');\n                document.querySelector('#' + this.parentID + 'droppable').value = expression;\n                memberTypeDrop.readonly = true;\n                memberTypeDrop.value = memberType;\n                memberTypeDrop.dataBind();\n                if (memberType === 'Dimension') {\n                    hierarchyDrop.value = parentHierarchy;\n                }\n                if (formatString !== '') {\n                    formatDrop.value = formatString;\n                    formatDrop.dataBind();\n                }\n                customFormat.value = customString;\n                customFormat.dataBind();\n            }\n            else {\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                node.querySelector('.' + cls.CALC_EDITED).setAttribute('title', this.parent.localeObj.getConstant('clear'));\n                document.querySelector('#' + this.parentID + 'droppable').value = node.getAttribute('data-uid');\n            }\n        }\n        else if (node.tagName === 'LI' && (node.querySelector('.e-list-icon').classList.contains(cls.CALC_EDITED) ||\n            (this.parent.dataType === 'olap' && !node.classList.contains('e-active')))) {\n            this.isEdit = false;\n            this.inputObj.value = '';\n            this.inputObj.dataBind();\n            if (this.parent.dataType === 'olap') {\n                var dialogElement = this.dialog.element;\n                /* tslint:disable */\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var fieldTitle = dialogElement.querySelector('#' + this.parentID + '_' + 'FieldNameTitle');\n                /* tslint:enable */\n                fieldTitle.innerHTML = this.parent.localeObj.getConstant('fieldTitle');\n                hierarchyDrop.index = 0;\n                hierarchyDrop.dataBind();\n                formatDrop.index = 0;\n                formatDrop.dataBind();\n                customFormat.value = '';\n                customFormat.dataBind();\n                memberTypeDrop.index = 0;\n                memberTypeDrop.readonly = false;\n                memberTypeDrop.dataBind();\n            }\n            else {\n                addClass([node.querySelector('.e-list-icon')], cls.CALC_EDIT);\n                removeClass([node.querySelector('.e-list-icon')], cls.CALC_EDITED);\n                node.querySelector('.' + cls.CALC_EDIT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n            }\n            document.querySelector('#' + this.parentID + 'droppable').value = '';\n        }\n    };\n    /**\n     * To set position for context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.openContextMenu = function () {\n        var pos = this.curMenu.getBoundingClientRect();\n        if (this.parent.enableRtl) {\n            this.menuObj.open(pos.top + 30, pos.left - 100);\n        }\n        else {\n            this.menuObj.open(pos.top + 30, pos.left + 150);\n        }\n    };\n    /**\n     * Triggers while select menu.\n     * @param  {MenuEventArgs} menu\n     * @returns void\n     */\n    CalculatedField.prototype.selectContextMenu = function (menu) {\n        if (menu.element.textContent !== null) {\n            var field = closest(this.curMenu, '.e-list-item').getAttribute('data-caption');\n            closest(this.curMenu, '.e-list-item').setAttribute('data-type', menu.element.id.split(this.parent.element.id + '_')[1]);\n            this.curMenu.textContent = field + ' (' + menu.element.id.split(this.parent.element.id + '_')[1] + ')';\n            addClass([this.curMenu.parentElement.parentElement], ['e-node-focus', 'e-hover']);\n            this.curMenu.parentElement.parentElement.setAttribute('tabindex', '-1');\n            this.curMenu.parentElement.parentElement.focus();\n        }\n    };\n    /**\n     * To create context menu.\n     * @returns void\n     */\n    CalculatedField.prototype.createMenu = function () {\n        var menuItems = [\n            { id: this.parent.element.id + '_Sum', text: this.parent.localeObj.getConstant('Sum') },\n            { id: this.parent.element.id + '_Count', text: this.parent.localeObj.getConstant('Count') },\n            { id: this.parent.element.id + '_DistinctCount', text: this.parent.localeObj.getConstant('DistinctCount') },\n            { id: this.parent.element.id + '_Avg', text: this.parent.localeObj.getConstant('Avg') },\n            { id: this.parent.element.id + '_Min', text: this.parent.localeObj.getConstant('Min') },\n            { id: this.parent.element.id + '_Max', text: this.parent.localeObj.getConstant('Max') },\n            { id: this.parent.element.id + '_Product', text: this.parent.localeObj.getConstant('Product') },\n            { id: this.parent.element.id + '_SampleStDev', text: this.parent.localeObj.getConstant('SampleStDev') },\n            { id: this.parent.element.id + '_SampleVar', text: this.parent.localeObj.getConstant('SampleVar') },\n            { id: this.parent.element.id + '_PopulationStDev', text: this.parent.localeObj.getConstant('PopulationStDev') },\n            { id: this.parent.element.id + '_PopulationVar', text: this.parent.localeObj.getConstant('PopulationVar') }\n        ];\n        var menuOptions = {\n            cssClass: this.parentID + 'calculatedmenu',\n            items: menuItems,\n            enableRtl: this.parent.enableRtl,\n            beforeOpen: this.beforeMenuOpen.bind(this),\n            select: this.selectContextMenu.bind(this)\n        };\n        var contextMenu = createElement('ul', {\n            id: this.parentID + 'contextmenu'\n        });\n        this.parent.element.appendChild(contextMenu);\n        this.menuObj = new Menu(menuOptions);\n        this.menuObj.isStringTemplate = true;\n        this.menuObj.appendTo(contextMenu);\n    };\n    /* tslint:disable */\n    /**\n     * Triggers while click OK button.\n     * @returns void\n     */\n    CalculatedField.prototype.applyFormula = function () {\n        var currentObj = this;\n        var isExist = false;\n        removeClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n        if (currentObj.parent.dataType === 'olap') {\n            var field = currentObj.inputObj.value;\n            if (currentObj.parent.olapEngineModule.fieldList[field] &&\n                currentObj.parent.olapEngineModule.fieldList[field].type !== 'CalculatedField') {\n                isExist = true;\n            }\n        }\n        else {\n            Object.keys(currentObj.parent.engineModule.fieldList).forEach(function (key, index) {\n                if (currentObj.inputObj.value && currentObj.inputObj.value === key &&\n                    currentObj.parent.engineModule.fieldList[key].aggregateType !== 'CalculatedField') {\n                    isExist = true;\n                }\n            });\n        }\n        if (isExist) {\n            currentObj.parent.pivotCommon.errorDialog.createErrorDialog(currentObj.parent.localeObj.getConstant('error'), currentObj.parent.localeObj.getConstant('fieldExist'));\n            return;\n        }\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.existingReport = extend({}, this.parent.dataSourceSettings, null, true);\n        var report = this.parent.dataSourceSettings;\n        var dropField = document.querySelector('#' + this.parentID + 'droppable');\n        if (this.inputObj.value !== null && this.inputObj.value !== '' && dropField.value !== '') {\n            var field = void 0;\n            if (this.parent.dataType === 'olap') {\n                var dialogElement = this.parent.isAdaptive ? this.parent.dialogRenderer.adaptiveElement.element : this.dialog.element;\n                var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n                var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n                var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n                var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n                field = {\n                    name: this.inputObj.value,\n                    formula: dropField.value,\n                    formatString: (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value)\n                };\n                if (memberTypeDrop.value === 'Dimension') {\n                    field.hierarchyUniqueName = hierarchyDrop.value;\n                }\n                this.isFieldExist = false;\n                if (!this.isEdit) {\n                    for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                        if (report.calculatedFieldSettings[i].name === field.name) {\n                            this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'));\n                            return;\n                        }\n                    }\n                }\n                else {\n                    for (var i = 0; i < report.calculatedFieldSettings.length; i++) {\n                        if (report.calculatedFieldSettings[i].name === this.currentFieldName && this.isEdit) {\n                            if (memberTypeDrop.value === 'Dimension') {\n                                report.calculatedFieldSettings[i].hierarchyUniqueName = field.hierarchyUniqueName;\n                            }\n                            this.parent.olapEngineModule.fieldList[this.currentFieldName].caption = this.inputObj.value;\n                            report.calculatedFieldSettings[i].formatString = field.formatString;\n                            report.calculatedFieldSettings[i].formula = field.formula;\n                            field = report.calculatedFieldSettings[i];\n                            this.isFieldExist = true;\n                            break;\n                        }\n                    }\n                    var axisFields = [report.rows, report.columns, report.values, report.filters];\n                    var isFieldExist = false;\n                    for (var _i = 0, axisFields_1 = axisFields; _i < axisFields_1.length; _i++) {\n                        var fields = axisFields_1[_i];\n                        for (var _a = 0, fields_1 = fields; _a < fields_1.length; _a++) {\n                            var item = fields_1[_a];\n                            if (item.isCalculatedField && this.currentFieldName !== null &&\n                                item.name === this.currentFieldName && this.isEdit) {\n                                item.caption = this.inputObj.value;\n                                this.isFieldExist = true;\n                                isFieldExist = true;\n                                break;\n                            }\n                        }\n                        if (isFieldExist) {\n                            break;\n                        }\n                    }\n                }\n                if (!this.isFieldExist) {\n                    report.calculatedFieldSettings.push(field);\n                }\n                this.parent.lastCalcFieldInfo = field;\n            }\n            else {\n                field = {\n                    name: this.inputObj.value,\n                    type: 'CalculatedField'\n                };\n                var cField = {\n                    name: this.inputObj.value,\n                    formula: dropField.value\n                };\n                this.isFieldExist = true;\n                if (!this.isEdit) {\n                    for (var i = 0; i < report.values.length; i++) {\n                        if (report.values[i].type === CALC && report.values[i].name === field.name) {\n                            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                if (report.calculatedFieldSettings[j].name === field.name) {\n                                    this.createConfirmDialog(currentObj.parent.localeObj.getConstant('alert'), currentObj.parent.localeObj.getConstant('confirmText'));\n                                    return;\n                                }\n                            }\n                            this.isFieldExist = false;\n                        }\n                    }\n                }\n                else {\n                    for (var i = 0; i < report.values.length; i++) {\n                        if (report.values[i].type === CALC && this.currentFieldName !== null &&\n                            report.values[i].name === this.currentFieldName && this.isEdit) {\n                            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                                if (report.calculatedFieldSettings[j].name === this.currentFieldName) {\n                                    report.values[i].caption = this.inputObj.value;\n                                    report.calculatedFieldSettings[j].formula = dropField.value;\n                                    this.parent.engineModule.fieldList[this.currentFieldName].caption = this.inputObj.value;\n                                    this.isFieldExist = false;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this.isFieldExist) {\n                    report.values.push(field);\n                    report.calculatedFieldSettings.push(cField);\n                }\n                this.parent.lastCalcFieldInfo = cField;\n            }\n            this.addFormula(report, field.name);\n        }\n        else {\n            if (this.inputObj.value === null || this.inputObj.value === '') {\n                addClass([document.getElementById(this.parentID + 'ddlelement')], cls.EMPTY_FIELD);\n                document.getElementById(this.parentID + 'ddlelement').focus();\n            }\n            else {\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n            }\n        }\n    };\n    /* tslint:enable */\n    CalculatedField.prototype.addFormula = function (report, field) {\n        this.isFormula = true;\n        this.field = field;\n        this.parent.setProperties({ dataSourceSettings: report }, true);\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.allowDeferLayoutUpdate) {\n            this.parent.isRequiredUpdate = false;\n        }\n        try {\n            this.parent.updateDataSource(false);\n            var pivot = this.parent.getModuleName() === 'pivotfieldlist' ?\n                this.parent.pivotGridModule : this.parent;\n            if (!(isBlazor() && pivot && pivot.enableVirtualization)) {\n                this.endDialog();\n            }\n            else {\n                this.isRequireUpdate = true;\n            }\n        }\n        catch (exception) {\n            this.showError();\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.endDialog = function () {\n        this.isEdit = false;\n        if (this.dialog) {\n            this.dialog.close();\n        }\n        else {\n            this.inputObj.value = '';\n            this.formulaText = null;\n            this.fieldText = null;\n            this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = '';\n            this.parent.\n                dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable').value = '';\n        }\n    };\n    /** @hidden */\n    CalculatedField.prototype.showError = function () {\n        if (this.parent.engineModule.fieldList[this.field]) {\n            delete this.parent.engineModule.fieldList[this.field];\n        }\n        this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormula'));\n        this.parent.setProperties({ dataSourceSettings: this.existingReport }, true);\n        this.parent.lastCalcFieldInfo = {};\n        this.parent.updateDataSource(false);\n        this.isFormula = false;\n    };\n    /**\n     * To get treeview data\n     * @param  {PivotGrid|PivotFieldList} parent\n     * @returns Object\n     */\n    CalculatedField.prototype.getFieldListData = function (parent) {\n        var fields = [];\n        if (this.parent.dataType === 'olap') {\n            fields = PivotUtil.getClonedData(parent.olapEngineModule.fieldListData);\n            for (var _i = 0, _a = fields; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                        item.spriteCssClass.indexOf('e-level-members') > -1)) {\n                    item.hasChildren = true;\n                }\n                else if (item.spriteCssClass &&\n                    (item.spriteCssClass.indexOf('e-namedSetCDB-icon') > -1)) {\n                    item.hasChildren = false;\n                }\n            }\n        }\n        else {\n            Object.keys(parent.engineModule.fieldList).forEach(function (key) {\n                var type = null;\n                if (parent.engineModule.fieldList[key].type === 'string' || parent.engineModule.fieldList[key].type === 'include' ||\n                    parent.engineModule.fieldList[key].type === 'exclude') {\n                    type = COUNT;\n                }\n                else {\n                    type = parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                        parent.engineModule.fieldList[key].aggregateType : SUM;\n                }\n                fields.push({\n                    index: parent.engineModule.fieldList[key].index,\n                    name: parent.engineModule.fieldList[key].caption + ' (' + type + ')',\n                    type: type,\n                    icon: cls.FORMAT + ' ' + cls.ICON,\n                    formula: parent.engineModule.fieldList[key].formula,\n                    field: key,\n                    caption: parent.engineModule.fieldList[key].caption ? parent.engineModule.fieldList[key].caption : key\n                });\n            });\n        }\n        return fields;\n    };\n    /**\n     * Triggers before menu opens.\n     * @param  {BeforeOpenCloseMenuEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.beforeMenuOpen = function (args) {\n        args.element.style.zIndex = (this.dialog.zIndex + 1).toString();\n        args.element.style.display = 'inline';\n    };\n    /**\n     * Trigger while drop node in formula field.\n     * @param  {DragAndDropEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.fieldDropped = function (args) {\n        args.cancel = true;\n        var dropField = this.dialog.element.querySelector('#' + this.parentID + 'droppable');\n        removeClass([dropField], 'e-copy-drop');\n        removeClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n        var field = args.draggedNode.getAttribute('data-field');\n        if (this.parent.dataType === 'olap') {\n            if (this.parent.olapEngineModule.fieldList[field] &&\n                this.parent.olapEngineModule.fieldList[field].isCalculatedField) {\n                field = this.parent.olapEngineModule.fieldList[field].tag;\n            }\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                dropField.value = field;\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var currentValue = dropField.value;\n                var cursorPos = dropField.selectionStart;\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                textCovered = textBeforeText + field;\n                dropField.value = textBeforeText + field + textAfterText;\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n        else {\n            var type = args.draggedNode.getAttribute('data-type');\n            if (args.target.id === this.parentID + 'droppable' && dropField.value === '') {\n                if (type === CALC) {\n                    dropField.value = args.draggedNodeData.id.toString();\n                }\n                else {\n                    dropField.value = '\"' + type + '(' + field + ')' + '\"';\n                }\n                dropField.focus();\n            }\n            else if (args.target.id === (this.parentID + 'droppable') && dropField.value !== '') {\n                var textCovered = void 0;\n                var cursorPos = dropField.selectionStart;\n                var currentValue = dropField.value;\n                var textBeforeText = currentValue.substring(0, cursorPos);\n                var textAfterText = currentValue.substring(cursorPos, currentValue.length);\n                if (type === CALC) {\n                    textCovered = textBeforeText + args.draggedNodeData.id.toString();\n                    dropField.value = textBeforeText + args.draggedNodeData.id.toString() + textAfterText;\n                }\n                else {\n                    textCovered = textBeforeText + '\"' + type + '(' + field + ')' + '\"';\n                    dropField.value = textBeforeText + '\"' + type + '(' + field + ')' + '\"' + textAfterText;\n                }\n                dropField.focus();\n                dropField.setSelectionRange(textCovered.length, textCovered.length);\n            }\n            else {\n                args.cancel = true;\n            }\n        }\n    };\n    /**\n     * To create dialog.\n     * @returns void\n     */\n    CalculatedField.prototype.createDialog = function () {\n        var _this = this;\n        if (document.querySelector('#' + this.parentID + 'calculateddialog') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'calculateddialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'calculateddialog',\n            className: cls.CALCDIALOG + ' ' + (this.parent.dataType === 'olap' ? cls.OLAP_CALCDIALOG : '')\n        }));\n        var calcButtons = [\n            {\n                click: this.applyFormula.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('ok'),\n                    isPrimary: true\n                }\n            },\n            {\n                click: this.cancelClick.bind(this),\n                buttonModel: {\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.dataType === 'olap') {\n            var clearButton = {\n                click: this.clearFormula.bind(this),\n                buttonModel: {\n                    cssClass: 'e-calc-clear-btn',\n                    content: this.parent.localeObj.getConstant('clear'),\n                }\n            };\n            calcButtons.splice(0, 0, clearButton);\n        }\n        this.dialog = new Dialog({\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: calcButtons,\n            close: this.closeDialog.bind(this),\n            beforeOpen: this.beforeOpen.bind(this),\n            open: function () {\n                if (_this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement')) {\n                    _this.dialog.element.querySelector('#' + _this.parentID + 'ddlelement').focus();\n                }\n            },\n            animationSettings: { effect: 'Zoom' },\n            width: '25%',\n            isModal: false,\n            closeOnEscape: true,\n            enableRtl: this.parent.enableRtl,\n            showCloseIcon: true,\n            header: this.parent.localeObj.getConstant('createCalculatedField'),\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'calculateddialog');\n    };\n    CalculatedField.prototype.cancelClick = function () {\n        this.dialog.close();\n        this.isEdit = false;\n    };\n    CalculatedField.prototype.beforeOpen = function (args) {\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('createCalculatedField');\n        this.dialog.element.querySelector('.e-dlg-header').\n            setAttribute('title', this.parent.localeObj.getConstant('createCalculatedField'));\n    };\n    CalculatedField.prototype.closeDialog = function (args) {\n        if (this.parent.getModuleName() === 'pivotfieldlist') {\n            this.parent.axisFieldModule.render();\n            if (this.parent.renderMode !== 'Fixed') {\n                addClass([this.parent.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], cls.ICON_HIDDEN);\n                this.parent.dialogRenderer.fieldListDialog.show();\n            }\n        }\n        this.treeObj.destroy();\n        this.dialog.destroy();\n        this.newFields = null;\n        remove(document.getElementById(this.parentID + 'calculateddialog'));\n        remove(document.querySelector('.' + this.parentID + 'calculatedmenu'));\n    };\n    /* tslint:disable */\n    /**\n     * To render dialog elements.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogElements = function () {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv',\n            className: (this.parent.dataType === 'olap' ? cls.OLAP_CALCOUTERDIV + ' ' : '') + cls.CALCOUTERDIV\n        });\n        var olapFieldTreeDiv = createElement('div', { id: this.parentID + 'Olap_Tree_Div', className: 'e-olap-field-tree-div' });\n        var olapCalcDiv = createElement('div', { id: this.parentID + 'Olap_Calc_Div', className: 'e-olap-calculated-div' });\n        if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var accordDiv = createElement('div', { id: this.parentID + 'accordDiv', className: cls.CALCACCORD });\n            outerDiv.appendChild(accordDiv);\n            var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n            var addBtn = createElement('button', {\n                id: this.parentID + 'addBtn', innerHTML: this.parent.localeObj.getConstant('add'),\n                className: cls.CALCADDBTN\n            });\n            var cancelBtn = createElement('button', {\n                id: this.parentID + 'cancelBtn', innerHTML: this.parent.localeObj.getConstant('cancel'),\n                className: cls.CALCCANCELBTN\n            });\n            buttonDiv.appendChild(cancelBtn);\n            buttonDiv.appendChild(addBtn);\n            outerDiv.appendChild(buttonDiv);\n        }\n        else {\n            if (!this.parent.isAdaptive && this.parent.dataType === 'olap') {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FIELD_TITLE_CLASS, id: this.parentID + '_' + 'FieldNameTitle',\n                    innerHTML: this.parent.localeObj.getConstant('fieldTitle')\n                });\n                olapCalcDiv.appendChild(formulaTitle);\n            }\n            var inputDiv = createElement('div', { id: this.parentID + 'outerDiv', className: cls.CALCINPUTDIV });\n            var inputObj = createElement('input', {\n                id: this.parentID + 'ddlelement',\n                attrs: { 'type': 'text' },\n                className: cls.CALCINPUT\n            });\n            inputDiv.appendChild(inputObj);\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(inputDiv) : outerDiv.appendChild(inputDiv));\n            var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n            if (!this.parent.isAdaptive) {\n                var fieldTitle = createElement('div', {\n                    className: cls.PIVOT_ALL_FIELD_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('allFields') :\n                        this.parent.localeObj.getConstant('formulaField'))\n                });\n                if (this.parent.dataType === 'olap') {\n                    var headerWrapperDiv = createElement('div', { className: cls.PIVOT_ALL_FIELD_TITLE_CLASS + '-wrapper' });\n                    headerWrapperDiv.appendChild(fieldTitle);\n                    var spanElement = createElement('span', {\n                        attrs: {\n                            'tabindex': '0',\n                            'aria-disabled': 'false',\n                            'aria-label': this.parent.localeObj.getConstant('fieldTooltip'),\n                        },\n                        className: cls.ICON + ' ' + cls.CALC_INFO\n                    });\n                    headerWrapperDiv.appendChild(spanElement);\n                    var tooltip = new Tooltip({\n                        content: this.parent.localeObj.getConstant('fieldTooltip'),\n                        position: (this.parent.enableRtl ? 'RightCenter' : 'LeftCenter'),\n                        target: '.' + cls.CALC_INFO,\n                        offsetY: (this.parent.enableRtl ? -10 : -10),\n                        width: 220\n                    });\n                    tooltip.appendTo(headerWrapperDiv);\n                    wrapDiv.appendChild(headerWrapperDiv);\n                }\n                else {\n                    outerDiv.appendChild(fieldTitle);\n                }\n            }\n            var treeOuterDiv = createElement('div', { className: cls.TREEVIEW + '-outer-div' });\n            wrapDiv.appendChild(treeOuterDiv);\n            treeOuterDiv.appendChild(createElement('div', { id: this.parentID + 'tree', className: cls.TREEVIEW }));\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapFieldTreeDiv.appendChild(wrapDiv) : outerDiv.appendChild(wrapDiv));\n            if (!this.parent.isAdaptive) {\n                var formulaTitle = createElement('div', {\n                    className: cls.PIVOT_FORMULA_TITLE_CLASS,\n                    innerHTML: (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('expressionField') :\n                        this.parent.localeObj.getConstant('formula'))\n                });\n                (this.parent.dataType === 'olap' ? olapCalcDiv.appendChild(formulaTitle) : outerDiv.appendChild(formulaTitle));\n            }\n            var dropDiv = createElement('textarea', {\n                id: this.parentID + 'droppable',\n                className: cls.FORMULA,\n                attrs: {\n                    'placeholder': this.parent.isAdaptive ? this.parent.localeObj.getConstant('dropTextMobile') :\n                        (this.parent.dataType === 'olap' ? this.parent.localeObj.getConstant('olapDropText') :\n                            this.parent.localeObj.getConstant('dropText'))\n                }\n            });\n            (this.parent.dataType === 'olap' && !this.parent.isAdaptive ? olapCalcDiv.appendChild(dropDiv) : outerDiv.appendChild(dropDiv));\n            if (this.parent.isAdaptive) {\n                var buttonDiv = createElement('div', { id: this.parentID + 'buttonDiv', className: cls.CALCBUTTONDIV });\n                var okBtn = createElement('button', {\n                    id: this.parentID + 'okBtn', innerHTML: this.parent.localeObj.getConstant('apply'),\n                    className: cls.CALCOKBTN\n                });\n                buttonDiv.appendChild(okBtn);\n                outerDiv.appendChild(buttonDiv);\n            }\n            if (this.parent.dataType === 'olap') {\n                if (!this.parent.isAdaptive) {\n                    var memberTypeTitle = createElement('div', {\n                        className: cls.OLAP_MEMBER_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('memberType')\n                    });\n                    olapCalcDiv.appendChild(memberTypeTitle);\n                }\n                var memberTypeDrop = createElement('div', { id: this.parentID + 'Member_Type_Div', className: cls.CALC_MEMBER_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(memberTypeDrop) : olapCalcDiv.appendChild(memberTypeDrop));\n                if (!this.parent.isAdaptive) {\n                    var hierarchyTitle = createElement('div', {\n                        className: cls.OLAP_HIERARCHY_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('selectedHierarchy')\n                    });\n                    olapCalcDiv.appendChild(hierarchyTitle);\n                }\n                var hierarchyDrop = createElement('div', { id: this.parentID + 'Hierarchy_List_Div', className: cls.CALC_HIERARCHY_LIST_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(hierarchyDrop) : olapCalcDiv.appendChild(hierarchyDrop));\n                if (!this.parent.isAdaptive) {\n                    var formatTitle = createElement('div', {\n                        className: cls.OLAP_FORMAT_TITLE_CLASS,\n                        innerHTML: this.parent.localeObj.getConstant('formatString')\n                    });\n                    olapCalcDiv.appendChild(formatTitle);\n                }\n                var formatDrop = createElement('div', { id: this.parentID + 'Format_Div', className: cls.CALC_FORMAT_TYPE_DIV });\n                (this.parent.isAdaptive ? outerDiv.appendChild(formatDrop) : olapCalcDiv.appendChild(formatDrop));\n                var customFormatDiv = createElement('div', { id: this.parentID + 'custom_Format_Div', className: cls.CALC_CUSTOM_FORMAT_INPUTDIV });\n                var customFormatObj = createElement('input', {\n                    id: this.parentID + 'Custom_Format_Element',\n                    attrs: { 'type': 'text' },\n                    className: cls.CALC_FORMAT_INPUT\n                });\n                customFormatDiv.appendChild(customFormatObj);\n                olapCalcDiv.appendChild(customFormatDiv);\n                (this.parent.isAdaptive ? outerDiv.appendChild(customFormatDiv) : olapCalcDiv.appendChild(customFormatDiv));\n                if (this.parent.getModuleName() === 'pivotfieldlist' && this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) === null && this.parent.isAdaptive) {\n                    var okBtn = outerDiv.querySelector('.' + cls.CALCOKBTN);\n                    outerDiv.appendChild(okBtn);\n                }\n                else {\n                    outerDiv.appendChild(olapFieldTreeDiv);\n                    outerDiv.appendChild(olapCalcDiv);\n                }\n            }\n        }\n        return outerDiv;\n    };\n    /* tslint:enable */\n    /**\n     * To create calculated field adaptive layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderAdaptiveLayout = function () {\n        if (document.querySelector('#' + this.parentID + 'droppable')) {\n            this.formulaText = document.querySelector('#' + this.parentID + 'droppable').value;\n            this.fieldText = this.inputObj.value;\n        }\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createOlapDropElements = function () {\n        var dialogElement = (this.parent.isAdaptive ?\n            this.parent.dialogRenderer.parentElement : this.dialog.element);\n        var mData = [];\n        var fData = [];\n        var fieldData = [];\n        var memberTypeData = ['Measure', 'Dimension'];\n        var formatStringData = ['Standard', 'Currency', 'Percent', 'Custom'];\n        for (var _i = 0, memberTypeData_1 = memberTypeData; _i < memberTypeData_1.length; _i++) {\n            var type = memberTypeData_1[_i];\n            mData.push({ value: type, text: this.parent.localeObj.getConstant(type) });\n        }\n        for (var _a = 0, formatStringData_1 = formatStringData; _a < formatStringData_1.length; _a++) {\n            var format = formatStringData_1[_a];\n            fData.push({ value: format, text: this.parent.localeObj.getConstant(format) });\n        }\n        var fields = PivotUtil.getClonedData(this.parent.olapEngineModule.fieldListData);\n        for (var _b = 0, _c = fields; _b < _c.length; _b++) {\n            var item = _c[_b];\n            if (item.spriteCssClass &&\n                (item.spriteCssClass.indexOf('e-attributeCDB-icon') > -1 ||\n                    item.spriteCssClass.indexOf('e-hierarchyCDB-icon') > -1)) {\n                fieldData.push({ value: item.id, text: item.caption });\n            }\n        }\n        var memberTypeObj = new DropDownList({\n            dataSource: mData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: 0,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                hierarchyListObj.enabled = args.value === 'Dimension' ? true : false;\n                hierarchyListObj.dataBind();\n            }\n        });\n        memberTypeObj.isStringTemplate = true;\n        memberTypeObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'));\n        var hierarchyListObj = new DropDownList({\n            dataSource: fieldData, enableRtl: this.parent.enableRtl,\n            allowFiltering: true, enabled: false,\n            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + fieldData[0].text.toString(),\n            fields: { value: 'value', text: 'text' }, index: 0,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%'\n        });\n        hierarchyListObj.isStringTemplate = true;\n        hierarchyListObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'));\n        var formatStringObj = new DropDownList({\n            dataSource: fData, enableRtl: this.parent.enableRtl,\n            fields: { value: 'value', text: 'text' }, index: 0,\n            cssClass: cls.MEMBER_OPTIONS_CLASS, width: '100%',\n            change: function (args) {\n                customerFormatObj.enabled = args.value === 'Custom' ? true : false;\n                customerFormatObj.dataBind();\n            }\n        });\n        formatStringObj.isStringTemplate = true;\n        formatStringObj.appendTo(dialogElement.querySelector('#' + this.parentID + 'Format_Div'));\n        var customerFormatObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('customFormat'),\n            enabled: false\n        });\n        customerFormatObj.isStringTemplate = true;\n        customerFormatObj.appendTo('#' + this.parentID + 'Custom_Format_Element');\n    };\n    /**\n     * To create treeview.\n     * @returns void\n     */\n    CalculatedField.prototype.createTreeView = function () {\n        var _this = this;\n        if (this.parent.dataType === 'olap') {\n            this.treeObj = new TreeView({\n                /* tslint:disable-next-line:max-line-length */\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeDragStart: this.dragStart.bind(this),\n                nodeDragging: function (e) {\n                    if (e.event.target && e.event.target.classList.contains(cls.FORMULA)) {\n                        removeClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        addClass([e.event.target], 'e-copy-drop');\n                    }\n                    else {\n                        addClass([e.clonedNode], cls.NO_DRAG_CLASS);\n                        removeClass([e.event.target], 'e-copy-drop');\n                        e.dropIndicator = 'e-no-drop';\n                        addClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-icon-expandable');\n                        removeClass([e.clonedNode.querySelector('.' + cls.ICON)], 'e-list-icon');\n                    }\n                },\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeSelected: function (args) {\n                    if (args.node.getAttribute('data-type') === CALC) {\n                        _this.displayMenu(args.node);\n                    }\n                    else {\n                        removeClass([args.node], 'e-active');\n                        args.cancel = true;\n                    }\n                },\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                nodeExpanding: this.updateNodeIcon.bind(this),\n                nodeCollapsed: this.updateNodeIcon.bind(this),\n                sortOrder: 'None',\n            });\n        }\n        else {\n            this.treeObj = new TreeView({\n                fields: { dataSource: this.getFieldListData(this.parent), id: 'formula', text: 'name', iconCss: 'icon' },\n                allowDragAndDrop: true,\n                enableRtl: this.parent.enableRtl,\n                nodeCollapsing: this.nodeCollapsing.bind(this),\n                nodeDragStart: this.dragStart.bind(this),\n                nodeClicked: this.fieldClickHandler.bind(this),\n                nodeDragStop: this.fieldDropped.bind(this),\n                drawNode: this.drawTreeNode.bind(this),\n                sortOrder: 'Ascending'\n            });\n        }\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parentID + 'tree');\n    };\n    CalculatedField.prototype.updateNodeIcon = function (args) {\n        if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable.e-process') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-icon');\n            addClass([node], 'e-folderCDB-open-icon');\n        }\n        else if (args.node && args.node.querySelector('.e-list-icon') &&\n            args.node.querySelector('.e-icon-expandable') &&\n            (args.node.querySelector('.e-list-icon').className.indexOf('e-folderCDB-open-icon') > -1)) {\n            var node = args.node.querySelector('.e-list-icon');\n            removeClass([node], 'e-folderCDB-open-icon');\n            addClass([node], 'e-folderCDB-icon');\n        }\n        else {\n            var curTreeData = this.treeObj.fields.dataSource;\n            var fieldListData = curTreeData;\n            var childNodes = [];\n            for (var _i = 0, fieldListData_1 = fieldListData; _i < fieldListData_1.length; _i++) {\n                var item = fieldListData_1[_i];\n                if (item.pid === args.nodeData.id.toString()) {\n                    childNodes.push(item);\n                }\n            }\n            if (childNodes.length === 0) {\n                this.parent.olapEngineModule.calcChildMembers = [];\n                this.parent.olapEngineModule.getCalcChildMembers(this.parent.dataSourceSettings, args.nodeData.id.toString());\n                childNodes = this.parent.olapEngineModule.calcChildMembers;\n                this.parent.olapEngineModule.calcChildMembers = [];\n                for (var _a = 0, childNodes_1 = childNodes; _a < childNodes_1.length; _a++) {\n                    var node = childNodes_1[_a];\n                    node.pid = args.nodeData.id.toString();\n                    node.hasChildren = false;\n                    node.spriteCssClass = 'e-level-members';\n                    node.caption = (node.caption === '' ? this.parent.localeObj.getConstant('blank') : node.caption);\n                    curTreeData.push(node);\n                }\n                this.treeObj.addNodes(childNodes, args.node);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    CalculatedField.prototype.nodeCollapsing = function (args) {\n        args.cancel = true;\n    };\n    CalculatedField.prototype.dragStart = function (args) {\n        var isDrag = false;\n        var dragItem = args.clonedNode;\n        if (dragItem && ((this.parent.dataType === 'olap' &&\n            (dragItem.querySelector('.e-calc-dimension-icon,.e-calc-measure-icon,.e-measure-icon') ||\n                dragItem.querySelector('.e-dimensionCDB-icon,.e-attributeCDB-icon,.e-hierarchyCDB-icon') ||\n                dragItem.querySelector('.e-level-members,.e-namedSetCDB-icon'))) || (this.parent.dataType === 'pivot' &&\n            args.event.target.classList.contains(cls.DRAG_CLASS)))) {\n            isDrag = true;\n        }\n        if (isDrag) {\n            addClass([args.draggedNode.querySelector('.' + cls.LIST_TEXT_CLASS)], cls.SELECTED_NODE_CLASS);\n            addClass([dragItem], cls.PIVOTCALC);\n            dragItem.style.zIndex = (this.dialog.zIndex + 1).toString();\n            dragItem.style.display = 'inline';\n        }\n        else {\n            args.cancel = true;\n        }\n    };\n    /**\n     * Trigger before treeview text append.\n     * @param  {DrawNodeEventArgs} args\n     * @returns void\n     */\n    CalculatedField.prototype.drawTreeNode = function (args) {\n        if (this.parent.dataType === 'olap') {\n            if (args.node.querySelector('.e-measure-icon')) {\n                args.node.querySelector('.e-list-icon').style.display = 'none';\n            }\n            var field = args.nodeData;\n            args.node.setAttribute('data-field', field.id);\n            args.node.setAttribute('data-caption', field.caption);\n            var liTextElement = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n            if (args.nodeData && args.nodeData.type === CALC &&\n                liTextElement && args.node.querySelector('.e-list-icon.e-calc-member')) {\n                args.node.setAttribute('data-type', field.type);\n                args.node.setAttribute('data-membertype', field.fieldType);\n                args.node.setAttribute('data-hierarchy', field.parentHierarchy ? field.parentHierarchy : '');\n                args.node.setAttribute('data-formula', field.formula);\n                var formatStringData = ['Standard', 'Currency', 'Percent'];\n                var formatString = void 0;\n                formatString = (field.formatString ? formatStringData.indexOf(field.formatString) > -1 ?\n                    field.formatString : 'Custom' : '');\n                args.node.setAttribute('data-formatString', formatString);\n                args.node.setAttribute('data-customString', (formatString === 'Custom' ? field.formatString : ''));\n                // if (!this.parent.isAdaptive) {\n                //     let editElement: Node = args.node.querySelector('.e-list-icon.e-calc-member').cloneNode(true);\n                //     let calcClasses: string[] = ['e-calc-measure-icon', 'e-calc-dimension-icon', 'e-calc-member'];\n                //     removeClass([editElement as Element], calcClasses);\n                //     addClass([editElement as Element], cls.CALC_EDIT);\n                //     (editElement as Element).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                //     liTextElement.insertBefore(editElement, args.node.querySelector('.e-list-icon'));\n                // }\n            }\n            if (this.parent.isAdaptive) {\n                var liTextElement_1 = args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS);\n                if (args.node && args.node.querySelector('.e-list-icon') && liTextElement_1) {\n                    var liIconElement = args.node.querySelector('.e-list-icon');\n                    liTextElement_1.insertBefore(liIconElement, args.node.querySelector('.e-list-text'));\n                }\n                if (args.node && args.node.querySelector('.e-calcMemberGroupCDB,.e-measureGroupCDB-icon,.e-folderCDB-icon')) {\n                    args.node.querySelector('.e-checkbox-wrapper').style.display = 'none';\n                }\n                if (args.node && args.node.querySelector('.e-level-members')) {\n                    args.node.querySelector('.e-list-icon').style.display = 'none';\n                }\n            }\n        }\n        else {\n            var field = args.nodeData.field;\n            args.node.setAttribute('data-field', field);\n            args.node.setAttribute('data-caption', args.nodeData.caption);\n            args.node.setAttribute('data-type', args.nodeData.type);\n            var dragElement = createElement('span', {\n                attrs: { 'tabindex': '-1', 'aria-disabled': 'false', 'title': this.parent.localeObj.getConstant('dragField') },\n                className: cls.ICON + ' e-drag'\n            });\n            prepend([dragElement], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            append([args.node.querySelector('.' + cls.FORMAT)], args.node.querySelector('.' + cls.TEXT_CONTENT_CLASS));\n            if (this.parent.engineModule.fieldList[field].type !== 'number' &&\n                this.parent.engineModule.fieldList[field].aggregateType !== CALC) {\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.ICON);\n            }\n            else {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('format'));\n            }\n            if (this.parent.engineModule.fieldList[field].aggregateType === CALC) {\n                args.node.querySelector('.' + cls.FORMAT).setAttribute('title', this.parent.localeObj.getConstant('edit'));\n                addClass([args.node.querySelector('.' + cls.FORMAT)], cls.CALC_EDIT);\n                removeClass([args.node.querySelector('.' + cls.FORMAT)], cls.FORMAT);\n            }\n        }\n    };\n    /**\n     * To create radio buttons.\n     * @param  {string} key\n     * @returns HTMLElement\n     */\n    CalculatedField.prototype.createTypeContainer = function (key) {\n        var wrapDiv = createElement('div', { id: this.parentID + 'control_wrapper', className: cls.TREEVIEWOUTER });\n        var type = [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n        for (var i = 0; i < type.length; i++) {\n            var input = createElement('input', {\n                id: this.parentID + 'radio' + type[i],\n                attrs: { 'type': 'radio', 'data-ftxt': key },\n                className: cls.CALCRADIO\n            });\n            wrapDiv.appendChild(input);\n        }\n        return wrapDiv;\n    };\n    /**\n     * To get Accordion Data.\n     * @param  {PivotView | PivotFieldList} parent\n     * @returns AccordionItemModel\n     */\n    CalculatedField.prototype.getAccordionData = function (parent) {\n        var _this = this;\n        var data = [];\n        Object.keys(parent.engineModule.fieldList).forEach(function (key, index) {\n            data.push({\n                header: '<input id=' + _this.parentID + '_' + index + ' class=' + cls.CALCCHECK + ' type=\"checkbox\" data-field=' +\n                    key + ' data-caption=' + _this.parent.engineModule.fieldList[key].caption + ' data-type=' +\n                    _this.parent.engineModule.fieldList[key].type + '/>',\n                content: parent.engineModule.fieldList[key].aggregateType === CALC ||\n                    _this.parent.engineModule.fieldList[key].type !== 'number' ? '' : _this.createTypeContainer(key).outerHTML\n            });\n        });\n        return data;\n    };\n    /**\n     * To render mobile layout.\n     * @param  {Tab} tabObj\n     * @returns void\n     */\n    CalculatedField.prototype.renderMobileLayout = function (tabObj) {\n        tabObj.items[4].content = this.renderDialogElements().outerHTML;\n        tabObj.dataBind();\n        if (this.parent.dataType === 'olap' && this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        var cancelBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n        cancelBtn.isStringTemplate = true;\n        cancelBtn.appendTo('#' + this.parentID + 'cancelBtn');\n        if (cancelBtn.element) {\n            cancelBtn.element.onclick = this.cancelBtnClick.bind(this);\n        }\n        if (this.parent.\n            dialogRenderer.parentElement.querySelector('.' + cls.FORMULA) !== null && this.parent.isAdaptive) {\n            var okBtn = new Button({ cssClass: cls.FLAT + ' ' + cls.OUTLINE_CLASS, isPrimary: true });\n            okBtn.isStringTemplate = true;\n            okBtn.appendTo('#' + this.parentID + 'okBtn');\n            this.inputObj = new MaskedTextBox({\n                placeholder: this.parent.localeObj.getConstant('fieldName')\n            });\n            this.inputObj.isStringTemplate = true;\n            this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n            if (this.formulaText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable') !== null) {\n                var drop = this.parent.\n                    dialogRenderer.parentElement.querySelector('#' + this.parentID + 'droppable');\n                drop.value = this.formulaText;\n            }\n            if (this.fieldText !== null && this.parent.\n                dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT) !== null) {\n                this.parent.\n                    dialogRenderer.parentElement.querySelector('.' + cls.CALCINPUT).value = this.fieldText;\n                this.inputObj.value = this.fieldText;\n            }\n            if (okBtn.element) {\n                okBtn.element.onclick = this.applyFormula.bind(this);\n            }\n        }\n        else if (this.parent.isAdaptive) {\n            var addBtn = new Button({ cssClass: cls.FLAT, isPrimary: true });\n            addBtn.isStringTemplate = true;\n            addBtn.appendTo('#' + this.parentID + 'addBtn');\n            if (this.parent.dataType === 'olap') {\n                this.treeObj = new TreeView({\n                    /* tslint:disable-next-line:max-line-length */\n                    fields: { dataSource: this.getFieldListData(this.parent), id: 'id', text: 'caption', parentID: 'pid', iconCss: 'spriteCssClass' },\n                    showCheckBox: true,\n                    autoCheck: false,\n                    sortOrder: 'None',\n                    enableRtl: this.parent.enableRtl,\n                    drawNode: this.drawTreeNode.bind(this),\n                    nodeExpanding: this.updateNodeIcon.bind(this),\n                    nodeCollapsed: this.updateNodeIcon.bind(this)\n                });\n                this.treeObj.isStringTemplate = true;\n                this.treeObj.appendTo('#' + this.parentID + 'accordDiv');\n            }\n            else {\n                var accordion = new Accordion({\n                    items: this.getAccordionData(this.parent),\n                    enableRtl: this.parent.enableRtl,\n                    expanding: this.accordionExpand.bind(this),\n                });\n                accordion.isStringTemplate = true;\n                accordion.appendTo('#' + this.parentID + 'accordDiv');\n                Object.keys(this.parent.engineModule.fieldList).forEach(this.updateType.bind(this));\n            }\n            if (addBtn.element) {\n                addBtn.element.onclick = this.addBtnClick.bind(this);\n            }\n        }\n    };\n    CalculatedField.prototype.accordionExpand = function (args) {\n        var _this = this;\n        if (args.element.querySelectorAll('.e-radio-wrapper').length === 0) {\n            Object.keys(this.parent.engineModule.fieldList).forEach(function (key) {\n                var type = [SUM, COUNT, AVG, MIN, MAX, DISTINCTCOUNT, PRODUCT, STDEV, STDEVP, VAR, VARP];\n                var radiobutton;\n                if (key === args.element.querySelector('[data-field').getAttribute('data-field')) {\n                    for (var i = 0; i < type.length; i++) {\n                        radiobutton = new RadioButton({\n                            label: _this.parent.localeObj.getConstant(type[i]),\n                            name: AGRTYPE + key,\n                            change: _this.onChange.bind(_this),\n                        });\n                        radiobutton.isStringTemplate = true;\n                        radiobutton.appendTo('#' + _this.parentID + 'radio' + type[i]);\n                    }\n                }\n            });\n        }\n    };\n    CalculatedField.prototype.onChange = function (args) {\n        var type = args.event.target.id.split(this.parent.element.id + 'radio')[1];\n        var field = args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-field').getAttribute('data-caption');\n        args.event.target.\n            closest('.e-acrdn-item').querySelector('.e-label').\n            innerText = field + ' (' + type + ')';\n        args.event.target.closest('.e-acrdn-item').\n            querySelector('[data-type').setAttribute('data-type', type);\n    };\n    CalculatedField.prototype.updateType = function (key, index) {\n        var type = null;\n        if (this.parent.engineModule.fieldList[key].type === 'string' ||\n            this.parent.engineModule.fieldList[key].type === 'include' ||\n            this.parent.engineModule.fieldList[key].type === 'exclude') {\n            type = COUNT;\n        }\n        else {\n            type = this.parent.engineModule.fieldList[key].aggregateType !== undefined ?\n                this.parent.engineModule.fieldList[key].aggregateType : SUM;\n        }\n        var checkbox = new CheckBox({\n            label: this.parent.engineModule.fieldList[key].caption + ' (' + type + ')'\n        });\n        checkbox.isStringTemplate = true;\n        checkbox.appendTo('#' + this.parentID + '_' + index);\n        document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-field', key);\n        document.querySelector('#' + this.parentID + '_' + index).setAttribute('data-type', type);\n    };\n    /**\n     * Trigger while click cancel button.\n     * @returns void\n     */\n    CalculatedField.prototype.cancelBtnClick = function () {\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * Trigger while click add button.\n     * @returns void\n     */\n    CalculatedField.prototype.addBtnClick = function () {\n        var fieldText = '';\n        var field = null;\n        var type = null;\n        if (this.parent.dataType === 'pivot') {\n            var node = document.querySelectorAll('.e-accordion .e-check');\n            for (var i = 0; i < node.length; i++) {\n                field = node[i].parentElement.querySelector('[data-field]').getAttribute('data-field');\n                type = node[i].parentElement.querySelector('[data-field]').getAttribute('data-type');\n                if (type.indexOf(CALC) === -1) {\n                    fieldText = fieldText + ('\"' + type + '(' + field + ')' + '\"');\n                }\n                else {\n                    for (var j = 0; j < this.parent.dataSourceSettings.calculatedFieldSettings.length; j++) {\n                        if (this.parent.dataSourceSettings.calculatedFieldSettings[j].name === field) {\n                            fieldText = fieldText + this.parent.dataSourceSettings.calculatedFieldSettings[j].formula;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var nodes = this.treeObj.getAllCheckedNodes();\n            var olapEngine = this.parent.olapEngineModule;\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var item = nodes_1[_i];\n                fieldText = fieldText + (olapEngine.fieldList[item] &&\n                    olapEngine.fieldList[item].type === CALC ? olapEngine.fieldList[item].tag : item);\n            }\n        }\n        this.formulaText = this.formulaText !== null ? (this.formulaText + fieldText) : fieldText;\n        this.renderMobileLayout(this.parent.dialogRenderer.adaptiveElement);\n    };\n    /**\n     * To create calculated field dialog elements.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.createCalculatedFieldDialog = function () {\n        if (this.parent.isAdaptive && this.parent.getModuleName() === 'pivotfieldlist') {\n            this.renderAdaptiveLayout();\n        }\n        else if (!this.parent.isAdaptive) {\n            this.renderDialogLayout();\n            this.dialog.element.style.top = parseInt(this.dialog.element.style.top, 10) < 0 ? '0px' : this.dialog.element.style.top;\n        }\n    };\n    /**\n     * To create calculated field desktop layout.\n     * @returns void\n     */\n    CalculatedField.prototype.renderDialogLayout = function () {\n        this.newFields =\n            extend([], this.parent.dataSourceSettings.calculatedFieldSettings, null, true);\n        this.createDialog();\n        this.dialog.content = this.renderDialogElements();\n        this.dialog.refresh();\n        this.inputObj = new MaskedTextBox({\n            placeholder: this.parent.localeObj.getConstant('fieldName')\n        });\n        this.inputObj.isStringTemplate = true;\n        this.inputObj.appendTo('#' + this.parentID + 'ddlelement');\n        if (this.parent.dataType === 'olap' && !this.parent.isAdaptive) {\n            this.createOlapDropElements();\n        }\n        this.createTreeView();\n        this.createMenu();\n        this.droppable = new Droppable(this.dialog.element.querySelector('#' + this.parentID + 'droppable'));\n        this.keyboardEvents = new KeyboardEvents(this.parent.calculatedFieldModule.dialog.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: { moveRight: 'rightarrow', enter: 'enter' },\n            eventName: 'keydown'\n        });\n    };\n    /**\n     * Creates the error dialog for the unexpected action done.\n     * @method createConfirmDialog\n     * @return {void}\n     * @hidden\n     */\n    CalculatedField.prototype.createConfirmDialog = function (title, description) {\n        var errorDialog = createElement('div', {\n            id: this.parentID + '_ErrorDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.replaceFormula.bind(this),\n                    buttonModel: {\n                        cssClass: cls.OK_BUTTON_CLASS + ' ' + cls.OUTLINE_CLASS,\n                        content: this.parent.localeObj.getConstant('ok'), isPrimary: true\n                    }\n                },\n                {\n                    click: this.removeErrorDialog.bind(this),\n                    buttonModel: {\n                        cssClass: cls.CANCEL_BUTTON_CLASS,\n                        content: this.parent.localeObj.getConstant('cancel'), isPrimary: true\n                    }\n                }\n            ],\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            close: this.removeErrorDialog.bind(this),\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        // this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    CalculatedField.prototype.replaceFormula = function () {\n        var report = this.parent.dataSourceSettings;\n        var dropField = document.querySelector('#' + this.parentID + 'droppable');\n        if (this.parent.dataType === 'olap') {\n            var dialogElement = this.dialog.element;\n            /* tslint:disable */\n            var customFormat = getInstance(dialogElement.querySelector('#' + this.parentID + 'Custom_Format_Element'), MaskedTextBox);\n            var formatDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Format_Div'), DropDownList);\n            var memberTypeDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Member_Type_Div'), DropDownList);\n            var hierarchyDrop = getInstance(dialogElement.querySelector('#' + this.parentID + 'Hierarchy_List_Div'), DropDownList);\n            /* tslint:enable */\n            for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                if (report.calculatedFieldSettings[j].name === this.inputObj.value) {\n                    if (memberTypeDrop.value === 'Dimension') {\n                        report.calculatedFieldSettings[j].hierarchyUniqueName = hierarchyDrop.value;\n                    }\n                    report.calculatedFieldSettings[j].formatString =\n                        (formatDrop.value === 'Custom' ? customFormat.value : formatDrop.value);\n                    report.calculatedFieldSettings[j].formula = dropField.value;\n                    this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                    break;\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < report.values.length; i++) {\n                if (report.values[i].type === CALC && report.values[i].name === this.inputObj.value) {\n                    for (var j = 0; j < report.calculatedFieldSettings.length; j++) {\n                        if (report.calculatedFieldSettings[j].name === this.inputObj.value) {\n                            report.calculatedFieldSettings[j].formula = dropField.value;\n                            this.parent.lastCalcFieldInfo = report.calculatedFieldSettings[j];\n                        }\n                    }\n                }\n            }\n        }\n        this.addFormula(report, this.inputObj.value);\n        this.removeErrorDialog();\n    };\n    CalculatedField.prototype.removeErrorDialog = function () {\n        if (document.getElementById(this.parentID + '_ErrorDialog')) {\n            remove(document.getElementById(this.parentID + '_ErrorDialog').parentElement);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initCalculatedField, this.createCalculatedFieldDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initCalculatedField, this.createCalculatedFieldDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    CalculatedField.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return CalculatedField;\n}());\nexport { CalculatedField };\n","import * as events from '../../common/base/constant';\nimport * as cls from '../base/css-constant';\nimport { PivotFieldList } from '../../pivotfieldlist/base/field-list';\nimport { createElement, setStyleAttribute, formatUnit, prepend, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { CalculatedField } from '../../common/calculatedfield/calculated-field';\nPivotFieldList.Inject(CalculatedField);\n/**\n * Module for Field List rendering\n */\n/** @hidden */\nvar FieldList = /** @class */ (function () {\n    /** Constructor for Field List module */\n    function FieldList(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    FieldList.prototype.getModuleName = function () {\n        return 'fieldlist';\n    };\n    FieldList.prototype.initiateModule = function () {\n        this.element = createElement('div', {\n            id: this.parent.element.id + '_PivotFieldList',\n            styles: 'position:' + (this.parent.enableRtl ? 'static' : 'absolute') + ';height:0;width:' + this.parent.element.style.width +\n                ';display:none'\n        });\n        this.parent.element.parentElement.setAttribute('id', 'ContainerWrapper');\n        this.parent.element.parentElement.appendChild(this.element);\n        this.parent.element.parentElement.appendChild(this.parent.element);\n        this.parent.pivotFieldListModule = new PivotFieldList({\n            dataSourceSettings: {\n                providerType: this.parent.dataSourceSettings.providerType,\n                rows: [],\n                columns: [],\n                values: [],\n                filters: []\n            },\n            spinnerTemplate: this.parent.spinnerTemplate,\n            allowDeferLayoutUpdate: this.parent.allowDeferLayoutUpdate,\n            renderMode: 'Popup',\n            allowCalculatedField: this.parent.allowCalculatedField,\n            showValuesButton: this.parent.showValuesButton,\n            enableRtl: this.parent.enableRtl,\n            locale: this.parent.locale,\n            target: this.parent.element.parentElement,\n            maxNodeLimitInMemberEditor: this.parent.maxNodeLimitInMemberEditor,\n            aggregateCellInfo: this.parent.bindTriggerEvents.bind(this.parent),\n            enginePopulating: this.parent.bindTriggerEvents.bind(this.parent),\n            enginePopulated: this.parent.bindTriggerEvents.bind(this.parent),\n            onFieldDropped: this.parent.bindTriggerEvents.bind(this.parent)\n        });\n        this.parent.pivotFieldListModule.appendTo('#' + this.element.id);\n    };\n    FieldList.prototype.updateControl = function () {\n        if (this.element) {\n            this.element.style.display = 'block';\n            prepend([this.element], this.parent.element);\n            if (this.parent.showGroupingBar && this.parent.groupingBarModule) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.update.bind(this));\n            }\n            else {\n                setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                    left: 'auto'\n                });\n                if (this.parent.enableRtl) {\n                    removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n                else {\n                    addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n                }\n            }\n            setStyleAttribute(this.element, {\n                width: formatUnit(this.parent.element.offsetWidth)\n            });\n        }\n        this.parent.pivotFieldListModule.update(this.parent);\n    };\n    FieldList.prototype.update = function () {\n        var currentWidth;\n        if (this.parent.currentView !== 'Table') {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actualWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actualWidth) -\n                        this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n            if (this.parent.enableRtl) {\n                addClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n            else {\n                removeClass([this.element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS)], 'e-fieldlist-left');\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateModule,\n            update: this.updateControl\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this);\n        this.parent.on(events.uiUpdate, this.handlers.update, this);\n    };\n    /**\n     * @hidden\n     */\n    FieldList.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initSubComponent, this.handlers.load);\n        this.parent.off(events.uiUpdate, this.handlers.update);\n    };\n    /**\n     * To destroy the Field List\n     * @return {void}\n     * @hidden\n     */\n    FieldList.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotFieldListModule) {\n            this.parent.pivotFieldListModule.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return FieldList;\n}());\nexport { FieldList };\n","import * as events from '../../common/base/constant';\nimport { PivotCommon } from '../../common/base/pivot-common';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Module for PivotCommon rendering\n */\n/** @hidden */\nvar Common = /** @class */ (function () {\n    /** Constructor for Common module */\n    function Common(parent) {\n        this.parent = parent;\n        this.parent.commonModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Common.prototype.getModuleName = function () {\n        return 'common';\n    };\n    Common.prototype.initiateCommonModule = function () {\n        if (!this.parent.pivotCommon) {\n            var args = {\n                pivotEngine: this.parent.dataType === 'olap' ? this.parent.olapEngineModule : this.parent.engineModule,\n                dataSourceSettings: this.parent.dataSourceSettings.properties ?\n                    this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings,\n                id: this.parent.element.id,\n                element: this.parent.element,\n                moduleName: this.parent.getModuleName(),\n                enableRtl: this.parent.enableRtl,\n                isAdaptive: Browser.isDevice,\n                renderMode: 'Popup',\n                localeObj: this.parent.localeObj,\n                dataType: this.parent.dataType\n            };\n            this.parent.pivotCommon = new PivotCommon(args);\n        }\n        else {\n            this.parent.pivotCommon.element = this.parent.element;\n            this.parent.pivotCommon.engineModule = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule : this.parent.engineModule;\n            this.parent.pivotCommon.parentID = this.parent.element.id;\n            this.parent.pivotCommon.dataSourceSettings = this.parent.dataSourceSettings.properties ?\n                this.parent.dataSourceSettings.properties : this.parent.dataSourceSettings;\n            this.parent.pivotCommon.moduleName = this.parent.getModuleName();\n            this.parent.pivotCommon.enableRtl = this.parent.enableRtl;\n            this.parent.pivotCommon.isAdaptive = Browser.isDevice;\n            this.parent.pivotCommon.renderMode = 'Popup';\n            this.parent.pivotCommon.localeObj = this.parent.localeObj;\n            this.parent.pivotCommon.dataType = this.parent.dataType;\n        }\n        this.parent.pivotCommon.control = this.parent;\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.initiateCommonModule\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (this.parent.gridSettings.contextMenuItems) {\n            if ((!this.parent.showFieldList) || (!this.parent.showGroupingBar)) {\n                this.parent.on(events.initialLoad, this.handlers.load, this);\n            }\n        }\n        this.parent.on(events.uiUpdate, this.handlers.load, this);\n    };\n    /**\n     * @hidden\n     */\n    Common.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    Common.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotCommon) {\n            this.parent.pivotCommon.destroy();\n        }\n    };\n    return Common;\n}());\nexport { Common };\n","import { PivotButton } from '../actions/pivot-button';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { createElement, prepend } from '@syncfusion/ej2-base';\n/**\n * Module to render Axis Fields\n */\n/** @hidden */\nvar AxisFields = /** @class */ (function () {\n    /** Constructor for render module */\n    function AxisFields(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Initialize the pivot button rendering\n     * @returns void\n     * @private\n     */\n    AxisFields.prototype.render = function () {\n        this.pivotButton = new PivotButton(this.parent);\n        this.createPivotButtons();\n        var pivotButtons = [];\n        /* tslint:disable:no-any */\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!element.classList.contains(cls.GROUP_CHART_ROW)) {\n                pivotButtons = pivotButtons.concat([].slice.call(element.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS)));\n            }\n        }\n        var vlen = pivotButtons.length;\n        for (var j = 0; j < vlen; j++) {\n            var indentWidth = 24;\n            var indentDiv = createElement('span', {\n                className: 'e-indent-div',\n                styles: 'width:' + j * indentWidth + 'px'\n            });\n            prepend([indentDiv], pivotButtons[j]);\n        }\n    };\n    AxisFields.prototype.createPivotButtons = function () {\n        var fields = [this.parent.dataSourceSettings.rows, this.parent.dataSourceSettings.columns,\n            this.parent.dataSourceSettings.values, this.parent.dataSourceSettings.filters];\n        for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUP_ROW_CLASS + ',.' + cls.GROUP_COLUMN_CLASS + ',.'\n            + cls.GROUP_VALUE_CLASS + ',.' + cls.GROUP_FILTER_CLASS); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (this.parent.dataSourceSettings.values.length > 0 ? !element.classList.contains(cls.GROUP_CHART_VALUE) : true) {\n                element.innerHTML = '';\n            }\n        }\n        var axis = ['rows', 'columns', 'values', 'filters'];\n        var count = axis.length;\n        for (var i = 0, lnt = fields.length; i < lnt; i++) {\n            if (fields[i]) {\n                var args = {\n                    field: fields[i],\n                    axis: axis[i].toString()\n                };\n                this.parent.notify(events.pivotButtonUpdate, args);\n            }\n        }\n    };\n    return AxisFields;\n}());\nexport { AxisFields };\n","import { createElement, remove, Droppable, setStyleAttribute, removeClass } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass, formatUnit } from '@syncfusion/ej2-base';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { Common } from '../actions/common';\nimport * as events from '../../common/base/constant';\nimport * as cls from '../../common/base/css-constant';\nimport { AxisFields } from './axis-field-renderer';\nPivotView.Inject(Common);\n/**\n * Module for GroupingBar rendering\n */\n/** @hidden */\nvar GroupingBar = /** @class */ (function () {\n    /** Constructor for GroupingBar module */\n    function GroupingBar(parent) {\n        this.parent = parent;\n        this.parent.groupingBarModule = this;\n        this.resColWidth = (this.parent.isAdaptive ? 180 : 249);\n        this.addEventListener();\n        this.parent.axisFieldModule = new AxisFields(this.parent);\n        this.touchObj = new Touch(this.parent.element, {\n            tapHold: this.tapHoldHandler.bind(this)\n        });\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    GroupingBar.prototype.getModuleName = function () {\n        return 'groupingbar';\n    };\n    GroupingBar.prototype.renderLayout = function () {\n        this.groupingTable = createElement('div', { className: cls.GROUPING_BAR_CLASS });\n        this.leftAxisPanel = createElement('div', { className: cls.LEFT_AXIS_PANEL_CLASS });\n        this.rightAxisPanel = createElement('div', { className: cls.RIGHT_AXIS_PANEL_CLASS });\n        var rowAxisPanel = createElement('div', { className: cls.AXIS_ROW_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper' });\n        var columnAxisPanel = createElement('div', {\n            className: cls.AXIS_COLUMN_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var valueAxisPanel = createElement('div', {\n            className: cls.AXIS_VALUE_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        var filterAxisPanel = createElement('div', {\n            className: cls.AXIS_FILTER_CLASS + ' ' + cls.AXIS_ICON_CLASS + 'wrapper'\n        });\n        this.rowPanel = createElement('div', { className: cls.GROUP_ROW_CLASS + ' ' + cls.ROW_AXIS_CLASS });\n        this.columnPanel = createElement('div', { className: cls.GROUP_COLUMN_CLASS + ' ' + cls.COLUMN_AXIS_CLASS });\n        this.valuePanel = createElement('div', { className: cls.GROUP_VALUE_CLASS + ' ' + cls.VALUE_AXIS_CLASS });\n        this.filterPanel = createElement('div', { className: cls.GROUP_FILTER_CLASS + ' ' + cls.FILTER_AXIS_CLASS });\n        rowAxisPanel.appendChild(this.rowPanel);\n        columnAxisPanel.appendChild(this.columnPanel);\n        valueAxisPanel.appendChild(this.valuePanel);\n        filterAxisPanel.appendChild(this.filterPanel);\n        this.rowAxisPanel = rowAxisPanel;\n        this.columnAxisPanel = columnAxisPanel;\n        this.valueAxisPanel = valueAxisPanel;\n        this.filterAxisPanel = filterAxisPanel;\n        this.leftAxisPanel.appendChild(valueAxisPanel);\n        this.leftAxisPanel.appendChild(rowAxisPanel);\n        this.rightAxisPanel.appendChild(filterAxisPanel);\n        this.rightAxisPanel.appendChild(columnAxisPanel);\n        this.groupingTable.appendChild(this.leftAxisPanel);\n        this.groupingTable.appendChild(this.rightAxisPanel);\n        this.groupingTable.classList.add(cls.GRID_GROUPING_BAR_CLASS);\n        var axisPanels = [this.rowPanel, this.columnPanel, this.valuePanel, this.filterPanel];\n        for (var _i = 0, axisPanels_1 = axisPanels; _i < axisPanels_1.length; _i++) {\n            var element = axisPanels_1[_i];\n            if (this.parent.groupingBarSettings.allowDragAndDrop) {\n                new Droppable(element, {});\n            }\n            this.unWireEvent(element);\n            this.wireEvent(element);\n        }\n        if (this.parent.displayOption.view !== 'Table' && this.parent.groupingBarSettings.displayMode !== 'Table') {\n            this.groupingChartTable = this.groupingTable.cloneNode(true);\n            this.groupingChartTable.classList.add(cls.CHART_GROUPING_BAR_CLASS);\n            this.groupingChartTable.classList.remove(cls.GRID_GROUPING_BAR_CLASS);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_ROW_CLASS).classList.add(cls.GROUP_CHART_ROW);\n            this.groupingChartTable.querySelector('.' + cls.GROUP_COLUMN_CLASS).classList.add(cls.GROUP_CHART_COLUMN);\n            if (this.parent.chartSettings.enableMultiAxis) {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_MULTI_VALUE);\n            }\n            else {\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.add(cls.GROUP_CHART_VALUE);\n                this.groupingChartTable.querySelector('.' + cls.GROUP_VALUE_CLASS).classList.remove(cls.DROPPABLE_CLASS);\n            }\n            this.groupingChartTable.querySelector('.' + cls.GROUP_FILTER_CLASS).classList.add(cls.GROUP_CHART_FILTER);\n        }\n        else {\n            this.groupingChartTable = undefined;\n        }\n        if (this.parent.displayOption.view === 'Chart' || this.parent.groupingBarSettings.displayMode === 'Chart') {\n            this.groupingTable = undefined;\n        }\n    };\n    /* tslint:disable:max-func-body-length */\n    GroupingBar.prototype.appendToElement = function () {\n        if (this.parent.element.querySelector('.' + cls.GRID_CLASS) || this.parent.element.querySelector('.' + cls.PIVOTCHART)) {\n            if (this.parent.showGroupingBar) {\n                if (this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n                    /* tslint:disable:no-any */\n                    for (var _i = 0, _a = this.parent.element.querySelectorAll('.' + cls.GROUPING_BAR_CLASS); _i < _a.length; _i++) {\n                        var element = _a[_i];\n                        remove(element);\n                    }\n                }\n                if (this.groupingChartTable) {\n                    if (this.parent.element.querySelector('#' + this.parent.element.id + '_chart')) {\n                        setStyleAttribute(this.groupingChartTable, {\n                            width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                        });\n                        this.parent.element.insertBefore(this.groupingChartTable, this.parent.element.querySelector('#' + this.parent.element.id + '_chart'));\n                    }\n                    else {\n                        this.groupingChartTable = undefined;\n                    }\n                }\n                if (this.parent.displayOption.view !== 'Chart' && this.groupingTable) {\n                    if (this.parent.isAdaptive) {\n                        this.leftAxisPanel.style.minWidth = '180px';\n                        this.valuePanel.style.minWidth = '180px';\n                    }\n                    if (this.parent.firstColWidth) {\n                        this.leftAxisPanel.style.minWidth = 'auto';\n                        this.valuePanel.style.minWidth = 'auto';\n                    }\n                    this.filterPanel.removeAttribute('style');\n                    this.columnPanel.removeAttribute('style');\n                    this.rowPanel.removeAttribute('style');\n                    this.filterPanel.removeAttribute('style');\n                    var emptyRowCount = void 0;\n                    if (this.parent.dataType === 'olap') {\n                        emptyRowCount = Object.keys(this.parent.olapEngineModule.headerContent).length;\n                    }\n                    else {\n                        emptyRowCount = Object.keys(this.parent.engineModule.headerContent).length;\n                    }\n                    if (!isNullOrUndefined(emptyRowCount)) {\n                        var emptyHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                        addClass([emptyHeader], 'e-row');\n                        emptyHeader.removeAttribute('style');\n                        addClass([emptyHeader.querySelector('.e-headercell')], 'e-group-row');\n                        emptyHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv').style.display = 'none';\n                        emptyHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv').style.display = 'none';\n                    }\n                    this.parent.element.insertBefore(this.groupingTable, this.parent.element.querySelector('.' + cls.GRID_CLASS));\n                    setStyleAttribute(this.groupingTable, {\n                        width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n                    });\n                    this.groupingTable.style.minWidth = '400px';\n                    this.parent.axisFieldModule.render();\n                    this.setGridRowWidth();\n                    var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n                    var rightAxisPanelWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n                    setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n                    setStyleAttribute(this.rightAxisPanel, { width: rightAxisPanelWidth });\n                    var rightPanelHeight = (this.valuePanel.offsetHeight / 2);\n                    if (rightPanelHeight > this.columnPanel.offsetHeight) {\n                        setStyleAttribute(this.filterPanel, { height: formatUnit(rightPanelHeight) });\n                        setStyleAttribute(this.columnPanel, { height: formatUnit(rightPanelHeight + 1) });\n                    }\n                    var topLeftHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                    setStyleAttribute(this.rowPanel, {\n                        height: topLeftHeight + 'px'\n                    });\n                    if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                        this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                            topLeftHeight + 'px';\n                    }\n                    var colRows = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                    var columnRows = colRows.filter(function (trCell) {\n                        return (trCell.childNodes.length > 0);\n                    });\n                    var colHeight = topLeftHeight / columnRows.length;\n                    for (var _b = 0, columnRows_1 = columnRows; _b < columnRows_1.length; _b++) {\n                        var element = columnRows_1[_b];\n                        setStyleAttribute(element, { 'height': colHeight + 'px' });\n                        var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                        for (var _c = 0, rowHeader_1 = rowHeader; _c < rowHeader_1.length; _c++) {\n                            var rhElement = rowHeader_1[_c];\n                            setStyleAttribute(rhElement, { 'height': colHeight + 'px' });\n                        }\n                    }\n                }\n                else {\n                    this.parent.axisFieldModule.render();\n                }\n                if (this.parent.showToolbar && this.parent.displayOption.view === 'Both') {\n                    if (this.parent.currentView === 'Table') {\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = 'none';\n                    }\n                    else {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = 'none';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.refreshUI = function () {\n        if (this.groupingChartTable) {\n            setStyleAttribute(this.groupingChartTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n        }\n        if (this.groupingTable) {\n            setStyleAttribute(this.groupingTable, {\n                width: formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber())\n            });\n            this.groupingTable.style.minWidth = '400px';\n            var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n            var rightAxisWidth = formatUnit(this.groupingTable.offsetWidth - parseInt(colGroupElement.style.width, 10));\n            setStyleAttribute(this.valuePanel, { width: colGroupElement.style.width });\n            setStyleAttribute(this.rightAxisPanel, { width: rightAxisWidth });\n            if (this.parent.showFieldList && this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.element) {\n                clearTimeout(this.timeOutObj);\n                this.timeOutObj = setTimeout(this.alignIcon.bind(this));\n            }\n            if (!this.parent.grid.element.querySelector('.e-group-row')) {\n                var emptyRowHeader = this.parent.element.querySelector('.e-frozenheader').querySelector('.e-columnheader');\n                addClass([emptyRowHeader], 'e-row');\n                addClass([emptyRowHeader.querySelector('.e-headercell')], 'e-group-row');\n                setStyleAttribute(this.rowPanel, {\n                    height: this.parent.element.querySelector('.e-headercontent').offsetHeight + 'px'\n                });\n                emptyRowHeader.querySelector('.e-group-row').appendChild(this.rowAxisPanel);\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-headercelldiv'), {\n                    display: 'none'\n                });\n                setStyleAttribute(emptyRowHeader.querySelector('.e-group-row').querySelector('.e-sortfilterdiv'), {\n                    display: 'none'\n                });\n                var groupHeight = this.parent.element.querySelector('.e-headercontent').offsetHeight;\n                setStyleAttribute(this.rowPanel, {\n                    height: groupHeight + 'px'\n                });\n                if (this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler')) {\n                    this.parent.element.querySelector('.e-frozenheader').querySelector('.e-rhandler').style.height =\n                        groupHeight + 'px';\n                }\n                var colRowElements = [].slice.call(this.parent.element.querySelector('.e-movableheader').querySelector('thead').querySelectorAll('tr'));\n                var columnRows = colRowElements.filter(function (trCell) {\n                    return (trCell.childNodes.length > 0);\n                });\n                var colHeight = groupHeight / columnRows.length;\n                for (var _i = 0, columnRows_2 = columnRows; _i < columnRows_2.length; _i++) {\n                    var element = columnRows_2[_i];\n                    setStyleAttribute(element, { 'height': colHeight + 'px' });\n                    var rowHeader = [].slice.call(element.querySelectorAll('.e-rhandler'));\n                    for (var _a = 0, rowHeader_2 = rowHeader; _a < rowHeader_2.length; _a++) {\n                        var handlerElement = rowHeader_2[_a];\n                        setStyleAttribute(handlerElement, { 'height': colHeight + 'px' });\n                    }\n                }\n            }\n        }\n    };\n    /** @hidden */\n    GroupingBar.prototype.alignIcon = function () {\n        var element = this.parent.pivotFieldListModule.element;\n        var currentWidth;\n        if (this.parent.currentView === 'Table') {\n            currentWidth = this.parent.grid ? this.parent.grid.element.offsetWidth : currentWidth;\n        }\n        else {\n            currentWidth = this.parent.chart ? this.parent.chartModule.calculatedWidth : currentWidth;\n        }\n        if (currentWidth) {\n            var actWidth = currentWidth < 400 ? 400 : currentWidth;\n            setStyleAttribute(element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS), {\n                left: formatUnit(this.parent.enableRtl ?\n                    -Math.abs((actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth) :\n                    (actWidth) -\n                        element.querySelector('.' + cls.TOGGLE_FIELD_LIST_CLASS).offsetWidth)\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.setGridRowWidth = function () {\n        var colGroupElement = this.parent.element.querySelector('.e-frozenheader').querySelector('colgroup').children[0];\n        if (this.rowPanel.querySelector('.' + cls.PIVOT_BUTTON_CLASS)) {\n            if (!this.parent.isAdaptive) {\n                var pivotButtons = [].slice.call(this.rowPanel.querySelectorAll('.' + cls.PIVOT_BUTTON_WRAPPER_CLASS));\n                var lastButton = pivotButtons[pivotButtons.length - 1];\n                var lastButtonWidth = (lastButton.querySelector('.' + cls.PIVOT_BUTTON_CLASS).offsetWidth +\n                    lastButton.querySelector('.e-indent-div').offsetWidth + 20);\n                var buttonWidth = formatUnit(lastButtonWidth < this.resColWidth ? this.resColWidth : lastButtonWidth);\n                var rowHeaderTable = this.parent.element.querySelector('.e-frozenheader').querySelector('table');\n                var rowContentTable = this.parent.element.querySelector('.e-frozencontent').querySelector('table');\n                var rowContent = this.parent.element.querySelector('.e-frozencontent').querySelector('colgroup').children[0];\n                var colwidth = parseInt(buttonWidth, 10);\n                var gridColumn = this.parent.grid.columns;\n                if (gridColumn && gridColumn.length > 0) {\n                    /* tslint:disable:align */\n                    gridColumn[0].width = (gridColumn[0].width >= this.resColWidth ?\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth) :\n                        (colwidth > this.resColWidth ? colwidth : this.resColWidth));\n                }\n                var valueColWidth = void 0;\n                if (this.parent.dataType === 'olap') {\n                    valueColWidth = this.parent.renderModule.calculateColWidth(this.parent.olapEngineModule.pivotValues.length > 0 ?\n                        this.parent.olapEngineModule.pivotValues[0].length : 2);\n                }\n                else {\n                    valueColWidth = this.parent.renderModule.calculateColWidth((this.parent.dataSourceSettings.values.length > 0 &&\n                        this.parent.engineModule.pivotValues.length > 0) ?\n                        this.parent.engineModule.pivotValues[0].length : 2);\n                }\n                for (var cCnt = 0; cCnt < gridColumn.length; cCnt++) {\n                    if (cCnt !== 0) {\n                        if (gridColumn[cCnt].columns) {\n                            this.setColWidth(gridColumn[cCnt].columns, valueColWidth);\n                        }\n                        else {\n                            gridColumn[cCnt].width = valueColWidth;\n                            if (gridColumn[cCnt].width !== 'auto') {\n                                var levelName = gridColumn[cCnt].customAttributes ?\n                                    gridColumn[cCnt].customAttributes.cell.valueSort.levelName : '';\n                                gridColumn[cCnt].width = this.parent.renderModule.setSavedWidth(levelName, valueColWidth);\n                            }\n                            else {\n                                gridColumn[cCnt].minWidth = valueColWidth;\n                            }\n                        }\n                    }\n                }\n                this.parent.posCount = 0;\n                this.parent.setGridColumns(this.parent.grid.columns);\n                this.parent.grid.headerModule.refreshUI();\n                if (!this.parent.firstColWidth) {\n                    colGroupElement.style.width = buttonWidth;\n                    rowContent.style.width = buttonWidth;\n                    rowHeaderTable.style.width = buttonWidth;\n                    rowContentTable.style.width = buttonWidth;\n                    setStyleAttribute(rowHeaderTable, { 'width': buttonWidth });\n                    setStyleAttribute(rowContentTable, { 'width': buttonWidth });\n                }\n            }\n            else {\n                if (!this.parent.firstColWidth) {\n                    var gridColumn = this.parent.grid.columns;\n                    if (gridColumn && gridColumn.length > 0) {\n                        gridColumn[0].width = this.resColWidth;\n                    }\n                    this.parent.posCount = 0;\n                    this.parent.grid.headerModule.refreshUI();\n                }\n            }\n        }\n        else {\n            if (this.parent.grid.columns && this.parent.grid.columns.length > 0) {\n                this.parent.grid.columns[0].width = this.parent.grid.columns[0].width > this.resColWidth ?\n                    this.parent.grid.columns[0].width : this.resColWidth;\n            }\n            this.parent.grid.headerModule.refreshUI();\n        }\n        if (this.groupingTable) {\n            this.refreshUI();\n        }\n    };\n    GroupingBar.prototype.setColWidth = function (columns, width) {\n        for (var cCnt = 0; cCnt < columns.length; cCnt++) {\n            if (columns[cCnt].columns) {\n                this.setColWidth(columns[cCnt].columns, width);\n            }\n            else {\n                columns[cCnt].width = width;\n            }\n        }\n    };\n    GroupingBar.prototype.wireEvent = function (element) {\n        EventHandler.add(element, 'mouseover', this.dropIndicatorUpdate, this);\n        EventHandler.add(element, 'mouseleave', this.dropIndicatorUpdate, this);\n    };\n    GroupingBar.prototype.unWireEvent = function (element) {\n        EventHandler.remove(element, 'mouseover', this.dropIndicatorUpdate);\n        EventHandler.remove(element, 'mouseleave', this.dropIndicatorUpdate);\n    };\n    GroupingBar.prototype.dropIndicatorUpdate = function (e) {\n        if ((this.parent.isDragging && e.target.classList.contains(cls.DROPPABLE_CLASS) && e.type === 'mouseover') ||\n            e.type === 'mouseleave') {\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS)), cls.INDICATOR_HOVER_CLASS);\n            removeClass([].slice.call(this.parent.element.querySelectorAll('.' + cls.DROP_INDICATOR_CLASS + '-last')), cls.INDICATOR_HOVER_CLASS);\n        }\n    };\n    GroupingBar.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.PIVOT_BUTTON_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            var pos = target.getBoundingClientRect();\n            this.parent.contextMenuModule.fieldElement = target;\n            this.parent.contextMenuModule.menuObj.open(pos.top, pos.left);\n            return;\n        }\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.renderLayout,\n            end: this.appendToElement,\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initSubComponent, this.handlers.load, this); //For initial rendering\n        this.parent.on(events.uiUpdate, this.handlers.end, this);\n    };\n    /**\n     * @hidden\n     */\n    GroupingBar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.handlers.end);\n        this.parent.off(events.initSubComponent, this.handlers.load);\n    };\n    /**\n     * To destroy the groupingbar\n     * @return {void}\n     * @hidden\n     */\n    GroupingBar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.parent.pivotButtonModule) {\n            this.parent.pivotButtonModule.destroy();\n            if (this.touchObj && !this.touchObj.isDestroyed) {\n                this.touchObj.destroy();\n            }\n        }\n        else {\n            return;\n        }\n    };\n    return GroupingBar;\n}());\nexport { GroupingBar };\n","import { Dialog } from '@syncfusion/ej2-popups';\nimport { isNullOrUndefined as isNaN, createElement, extend, remove, addClass } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\n/**\n * Module to render Conditional Formatting Dialog\n */\n/** @hidden */\nvar ConditionalFormatting = /** @class */ (function () {\n    /** Constructor for conditionalformatting module */\n    function ConditionalFormatting(parent) {\n        this.parent = parent;\n        this.parent.conditionalFormattingModule = this;\n        this.parentID = this.parent.element.id;\n        this.dialog = null;\n        this.fieldsDropDown = [];\n        this.conditionsDropDown = [];\n        this.fontNameDropDown = [];\n        this.fontSizeDropDown = [];\n        this.fontColor = [];\n        this.backgroundColor = [];\n        this.newFormat = [];\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    ConditionalFormatting.prototype.getModuleName = function () {\n        return 'conditionalformatting';\n    };\n    ConditionalFormatting.prototype.createDialog = function () {\n        if (document.querySelector('#' + this.parentID + 'conditionalformatting') !== null) {\n            remove(document.querySelector('#' + this.parentID + 'conditionalformatting'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parentID + 'conditionalformatting',\n        }));\n        var buttonModel = [\n            {\n                click: this.addButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: this.parent.isAdaptive ? (cls.FORMAT_ROUND_BUTTON + ' ' + cls.FORMAT_CONDITION_BUTTON) :\n                        cls.FORMAT_CONDITION_BUTTON,\n                    iconCss: cls.ICON + ' ' + cls.ADD_ICON_CLASS,\n                    content: this.parent.isAdaptive ? '' : this.parent.localeObj.getConstant('condition'),\n                }\n            },\n            {\n                click: this.applyButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_APPLY_BUTTON,\n                    content: this.parent.localeObj.getConstant('apply')\n                }\n            },\n            {\n                click: this.cancelButtonClick.bind(this),\n                buttonModel: {\n                    cssClass: cls.FLAT_CLASS + ' ' + cls.FORMAT_CANCEL_BUTTON,\n                    content: this.parent.localeObj.getConstant('cancel')\n                }\n            }\n        ];\n        if (this.parent.isAdaptive) {\n            this.dialog = new Dialog({\n                animationSettings: { effect: 'Zoom' }, isModal: true, width: '100%', height: '100%',\n                showCloseIcon: false, closeOnEscape: false, enableRtl: this.parent.enableRtl,\n                position: { X: 'center', Y: 'center' }, allowDragging: true, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this),\n                cssClass: cls.FORMAT_DIALOG, header: this.parent.localeObj.getConstant('conditionalFormating'), target: document.body\n            });\n        }\n        else {\n            this.dialog = new Dialog({\n                allowDragging: true, position: { X: 'center', Y: this.parent.element.offsetTop }, buttons: buttonModel,\n                beforeOpen: this.beforeOpen.bind(this),\n                cssClass: cls.FORMAT_DIALOG, isModal: false, closeOnEscape: true, enableRtl: this.parent.enableRtl,\n                showCloseIcon: true, header: this.parent.localeObj.getConstant('conditionalFormating'), target: this.parent.element\n            });\n        }\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parentID + 'conditionalformatting');\n        // this.dialog.element.querySelector('.e-dlg-header').innerHTML = this.parent.localeObj.getConstant('conditionalFormating');\n    };\n    ConditionalFormatting.prototype.beforeOpen = function (args) {\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).\n            setAttribute('title', this.parent.localeObj.getConstant('conditionalFormating'));\n    };\n    ConditionalFormatting.prototype.addButtonClick = function () {\n        var format = {\n            conditions: 'LessThan',\n            value1: 0,\n            applyGrandTotals: true,\n            style: {\n                backgroundColor: 'white',\n                color: 'black',\n                fontFamily: 'Arial',\n                fontSize: '12px'\n            }\n        };\n        var conditionalFormating = this;\n        this.parent.trigger(events.conditionalFormatting, format, function (observedArgs) {\n            conditionalFormating.refreshConditionValues();\n            conditionalFormating.newFormat.push(observedArgs);\n            conditionalFormating.addFormat();\n        });\n    };\n    ConditionalFormatting.prototype.applyButtonClick = function () {\n        if (this.refreshConditionValues()) {\n            this.parent.setProperties({ dataSourceSettings: { conditionalFormatSettings: this.newFormat } }, true);\n            this.parent.renderPivotGrid();\n            this.destroy();\n        }\n    };\n    ConditionalFormatting.prototype.cancelButtonClick = function () {\n        this.destroy();\n        this.newFormat = [];\n    };\n    ConditionalFormatting.prototype.refreshConditionValues = function () {\n        for (var i = 0; i < this.newFormat.length; i++) {\n            if (document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ||\n                document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value === '') {\n                document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value === '' ?\n                    document.querySelector('#' + this.parentID + 'conditionvalue1' + i).focus() :\n                    document.querySelector('#' + this.parentID + 'conditionvalue2' + i).focus();\n                return false;\n            }\n            this.newFormat[i].value1 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue1' + i).value);\n            this.newFormat[i].value2 =\n                Number(document.querySelector('#' + this.parentID + 'conditionvalue2' + i).value);\n        }\n        return true;\n    };\n    ConditionalFormatting.prototype.addFormat = function () {\n        var format = createElement('div', { id: this.parentID + 'formatDiv', className: cls.FORMAT_NEW });\n        for (var i = 0; i < this.newFormat.length; i++) {\n            format.appendChild(this.createDialogElements(i));\n        }\n        if (this.newFormat.length === 0) {\n            var outerDiv = this.createDialogElements();\n            var element = createElement('p', {\n                id: this.parentID + 'emptyFormat',\n                innerHTML: this.parent.localeObj.getConstant('emptyFormat'),\n                styles: 'margin: 10px'\n            });\n            outerDiv.appendChild(element);\n            format.appendChild(outerDiv);\n        }\n        this.dialog.setProperties({ 'content': format }, false);\n        for (var i = 0; i < this.newFormat.length; i++) {\n            this.renderDropDowns(i);\n            this.renderColorPicker(i);\n        }\n    };\n    ConditionalFormatting.prototype.createDialogElements = function (i) {\n        var outerDiv = createElement('div', {\n            id: this.parentID + 'outerDiv' + i, className: cls.FORMAT_OUTER\n        });\n        if (i !== undefined) {\n            var format = this.newFormat[i];\n            var button = createElement('button', {\n                id: this.parentID + 'removeButton' + i, className: cls.FORMAT_DELETE_BUTTON,\n                attrs: { 'title': this.parent.localeObj.getConstant('delete') }\n            });\n            outerDiv.appendChild(button);\n            var innerDiv = createElement('div', { id: this.parentID + 'innerDiv', className: cls.FORMAT_INNER });\n            var table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            var tRow = createElement('tr');\n            var td = createElement('td');\n            var valuelabel = createElement('span', {\n                id: this.parentID + 'valuelabel' + i, className: cls.FORMAT_VALUE_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('value')\n            });\n            td.appendChild(valuelabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var measureDropdown = createElement('div', { id: this.parentID + 'measure' + i });\n            var measureInput = createElement('input', {\n                id: this.parentID + 'measureinput' + i,\n                attrs: { 'type': 'text', 'tabindex': '1' }\n            });\n            measureDropdown.appendChild(measureInput);\n            td.appendChild(measureDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var conditionDropdown = createElement('div', { id: this.parentID + 'condition' });\n            var conditionInput = createElement('input', {\n                id: this.parentID + 'conditioninput' + i,\n                attrs: { 'type': 'text', 'tabindex': '1' }\n            });\n            conditionDropdown.appendChild(conditionInput);\n            td.appendChild(conditionDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var style = !(format.conditions === 'Between' || format.conditions === 'NotBetween') ? 'display:none; width:10px' : '';\n            var value1 = createElement('input', {\n                id: this.parentID + 'conditionvalue1' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '1', 'value': !isNaN(format.value1) ? format.value1.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: this.parent.isAdaptive ? style === '' ? 'width: 35%' : 'width: 100%' : style === '' ? 'width: 45px' :\n                    'width: 120px',\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE1\n            });\n            td.appendChild(value1);\n            var valuespan = createElement('span', {\n                id: this.parentID + 'valuespan' + i, className: cls.FORMAT_VALUE_SPAN,\n                innerHTML: '&', styles: style\n            });\n            td.appendChild(valuespan);\n            var value2 = createElement('input', {\n                id: this.parentID + 'conditionvalue2' + i,\n                attrs: {\n                    'type': 'text', 'tabindex': '1', 'value': !isNaN(format.value2) ? format.value2.toString() : '0',\n                    'placeholder': this.parent.localeObj.getConstant('emptyInput')\n                },\n                styles: (this.parent.isAdaptive && style === '') ? 'width: 35%' : style === '' ? 'width: 45px' : style,\n                className: cls.INPUT + ' ' + cls.FORMAT_VALUE2\n            });\n            td.appendChild(value2);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            if (this.parent.isAdaptive) {\n                innerDiv.appendChild(table);\n                table = createElement('table', { id: this.parentID + 'cftable', className: cls.FORMAT_TABLE });\n            }\n            tRow = createElement('tr');\n            td = createElement('td');\n            var formatlabel = createElement('span', {\n                id: this.parentID + 'formatlabel' + i, className: cls.FORMAT_LABEL,\n                innerHTML: this.parent.localeObj.getConstant('formatLabel')\n            });\n            td.appendChild(formatlabel);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            tRow = createElement('tr');\n            td = createElement('td');\n            var fontNameDropdown = createElement('div', { id: this.parentID + 'fontname' });\n            var fontNameInput = createElement('input', {\n                id: this.parentID + 'fontnameinput' + i, attrs: { 'type': 'text', 'tabindex': '1' }\n            });\n            fontNameDropdown.appendChild(fontNameInput);\n            td.appendChild(fontNameDropdown);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var fontSizeDropdown = createElement('div', { id: this.parentID + 'fontsize' });\n            var fontSizeInput = createElement('input', {\n                id: this.parentID + 'fontsizeinput' + i, attrs: { 'type': 'text', 'tabindex': '1' }\n            });\n            fontSizeDropdown.appendChild(fontSizeInput);\n            td.appendChild(fontSizeDropdown);\n            tRow.appendChild(td);\n            if (this.parent.isAdaptive) {\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n                table.appendChild(tRow);\n                tRow = createElement('tr');\n            }\n            td = createElement('td');\n            var colorPicker1 = createElement('input', {\n                id: this.parentID + 'fontcolor' + i, attrs: { 'type': 'color', 'tabindex': '1' }, className: cls.FORMAT_FONT_COLOR\n            });\n            td.appendChild(colorPicker1);\n            var colorPicker2 = createElement('input', {\n                id: this.parentID + 'backgroundcolor' + i, attrs: { 'type': 'color', 'tabindex': '1' }, className: cls.FORMAT_BACK_COLOR\n            });\n            td.appendChild(colorPicker2);\n            tRow.appendChild(td);\n            td = createElement('td');\n            var valuePreview = createElement('div', {\n                id: this.parentID + 'valuepreview' + i, className: cls.INPUT + ' ' + cls.FORMAT_VALUE_PREVIEW,\n                innerHTML: '123.45',\n            });\n            td.appendChild(valuePreview);\n            tRow.appendChild(td);\n            table.appendChild(tRow);\n            innerDiv.appendChild(table);\n            outerDiv.appendChild(innerDiv);\n        }\n        return outerDiv;\n    };\n    ConditionalFormatting.prototype.renderDropDowns = function (i) {\n        var format = this.newFormat[i];\n        var fields = [];\n        fields.push({\n            index: 0, name: this.parent.localeObj.getConstant('AllValues'),\n            field: this.parent.localeObj.getConstant('AllValues')\n        });\n        for (var i_1 = 0; i_1 < this.parent.dataSourceSettings.values.length; i_1++) {\n            fields.push({\n                index: i_1 + 1,\n                name: this.parent.dataSourceSettings.values[i_1].caption || this.parent.dataSourceSettings.values[i_1].name,\n                field: this.parent.dataSourceSettings.values[i_1].name\n            });\n        }\n        var value = isNaN(format.measure) ? this.parent.localeObj.getConstant('AllValues') : format.measure;\n        this.fieldsDropDown[i] = new DropDownList({\n            dataSource: fields, fields: { text: 'name', value: 'field' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.measureChange.bind(this, i)\n        });\n        this.fieldsDropDown[i].isStringTemplate = true;\n        this.fieldsDropDown[i].appendTo('#' + this.parentID + 'measureinput' + i);\n        var conditions = [\n            { value: 'LessThan', name: this.parent.localeObj.getConstant('LessThan') },\n            { value: 'LessThanOrEqualTo', name: this.parent.localeObj.getConstant('LessThanOrEqualTo') },\n            { value: 'GreaterThan', name: this.parent.localeObj.getConstant('GreaterThan') },\n            { value: 'GreaterThanOrEqualTo', name: this.parent.localeObj.getConstant('GreaterThanOrEqualTo') },\n            { value: 'Equals', name: this.parent.localeObj.getConstant('Equals') },\n            { value: 'NotEquals', name: this.parent.localeObj.getConstant('NotEquals') },\n            { value: 'Between', name: this.parent.localeObj.getConstant('Between') },\n            { value: 'NotBetween', name: this.parent.localeObj.getConstant('NotBetween') }\n        ];\n        value = isNaN(format.conditions) ? 'LessThan' : format.conditions;\n        this.conditionsDropDown[i] = new DropDownList({\n            dataSource: conditions, fields: { value: 'value', text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupHeight: '200px', popupWidth: 'auto',\n            change: this.conditionChange.bind(this, i)\n        });\n        this.conditionsDropDown[i].isStringTemplate = true;\n        this.conditionsDropDown[i].appendTo('#' + this.parentID + 'conditioninput' + i);\n        var fontNames = [\n            { index: 0, name: 'Arial' }, { index: 1, name: 'San Serif' }, { index: 2, name: 'Impact' },\n            { index: 3, name: 'Trebuchet MS' }, { index: 4, name: 'Serif' }, { index: 5, name: 'Verdana' },\n            { index: 6, name: 'Courier New' }, { index: 7, name: 'Times New Roman' }, { index: 8, name: 'Tahoma' },\n            { index: 9, name: 'Gerogia' }\n        ];\n        value = isNaN(format.style.fontFamily) ? 'Arial' : format.style.fontFamily;\n        this.fontNameDropDown[i] = new DropDownList({\n            dataSource: fontNames, fields: { text: 'name' },\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            popupWidth: '150px', popupHeight: '200px',\n            change: this.fontNameChange.bind(this, i)\n        });\n        this.fontNameDropDown[i].isStringTemplate = true;\n        this.fontNameDropDown[i].appendTo('#' + this.parentID + 'fontnameinput' + i);\n        var fontSize = [\n            { index: 0, name: '9px' }, { index: 1, name: '10px' }, { index: 2, name: '11px' }, { index: 3, name: '12px' },\n            { index: 4, name: '13px' }, { index: 5, name: '14px' }, { index: 6, name: '15px' }, { index: 6, name: '16px' }\n        ];\n        value = isNaN(format.style.fontSize) ? '12px' : format.style.fontSize;\n        this.fontSizeDropDown[i] = new DropDownList({\n            dataSource: fontSize, fields: { text: 'name' }, popupHeight: '200px',\n            value: value, width: this.parent.isAdaptive ? '100%' : '120px',\n            change: this.fontSizeChange.bind(this, i)\n        });\n        this.fontSizeDropDown[i].isStringTemplate = true;\n        this.fontSizeDropDown[i].appendTo('#' + this.parentID + 'fontsizeinput' + i);\n    };\n    ConditionalFormatting.prototype.conditionChange = function (i, args) {\n        this.newFormat[i].conditions = args.value;\n        if (args.value === 'Between' || args.value === 'NotBetween') {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.width =\n                this.parent.isAdaptive ? '10%' : '10px';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'inline-block';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '35%' : '45px';\n        }\n        else {\n            document.querySelector('#' + this.parentID + 'valuespan' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue2' + i).style.display = 'none';\n            document.querySelector('#' + this.parentID + 'conditionvalue1' + i).style.width =\n                this.parent.isAdaptive ? '100%' : '120px';\n        }\n    };\n    ConditionalFormatting.prototype.fontNameChange = function (i, args) {\n        this.newFormat[i].style.fontFamily = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = args.value;\n    };\n    ConditionalFormatting.prototype.fontSizeChange = function (i, args) {\n        this.newFormat[i].style.fontSize = args.value.toString();\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = args.value;\n    };\n    ConditionalFormatting.prototype.measureChange = function (i, args) {\n        this.newFormat[i].measure = args.value.toString() === this.parent.localeObj.getConstant('AllValues') ?\n            undefined : args.value.toString();\n    };\n    ConditionalFormatting.prototype.renderColorPicker = function (i) {\n        var format = this.newFormat[i];\n        var value = isNaN(format.style.color) ? 'black' : format.style.color;\n        var color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color = color;\n        this.fontColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.fontColorChange.bind(this, i)\n        });\n        this.fontColor[i].isStringTemplate = true;\n        this.fontColor[i].appendTo('#' + this.parentID + 'fontcolor' + i);\n        addClass([this.fontColor[i].element.nextElementSibling.querySelector('.' + cls.SELECTED_COLOR)], cls.ICON);\n        value = isNaN(format.style.backgroundColor) ? 'white' : format.style.backgroundColor;\n        color = this.isHex(value.substr(1)) ? value : this.colourNameToHex(value);\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor = color;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontFamily = format.style.fontFamily;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.fontSize = format.style.fontSize;\n        this.backgroundColor[i] = new ColorPicker({\n            cssClass: cls.FORMAT_COLOR_PICKER, value: color, mode: 'Palette',\n            change: this.backColorChange.bind(this, i)\n        });\n        this.backgroundColor[i].isStringTemplate = true;\n        this.backgroundColor[i].appendTo('#' + this.parentID + 'backgroundcolor' + i);\n        addClass([this.backgroundColor[i].element.nextElementSibling.querySelector('.e-selected-color')], cls.ICON);\n        var toggleBtn = new Button({\n            iconCss: cls.ICON + ' ' + cls.FORMAT_DELETE_ICON,\n            cssClass: cls.FLAT\n        });\n        toggleBtn.isStringTemplate = true;\n        toggleBtn.appendTo('#' + this.parentID + 'removeButton' + i);\n        toggleBtn.element.onclick = this.toggleButtonClick.bind(this, i);\n    };\n    ConditionalFormatting.prototype.backColorChange = function (i, args) {\n        this.newFormat[i].style.backgroundColor = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.backgroundColor =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.fontColorChange = function (i, args) {\n        this.newFormat[i].style.color = args.currentValue.hex;\n        document.querySelector('#' + this.parentID + 'valuepreview' + i).style.color =\n            args.currentValue.hex;\n    };\n    ConditionalFormatting.prototype.toggleButtonClick = function (i) {\n        this.newFormat.splice(i, 1);\n        this.addFormat();\n    };\n    /**\n     * To check is Hex or not.\n     * @returns boolean\n     * @hidden\n     */\n    ConditionalFormatting.prototype.isHex = function (h) {\n        var a = parseInt(h, 16);\n        while (h.charAt(0) === '0') {\n            h = h.substr(1);\n        }\n        return (a.toString(16) === h.toLowerCase() || (a === 0 && h === ''));\n    };\n    /**\n     * To convert hex to RGB.\n     * @returns { r: number, g: number, b: number } | null\n     * @hidden\n     */\n    ConditionalFormatting.prototype.hexToRgb = function (hex) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    };\n    /**\n     * To convert color to hex.\n     * @returns string\n     * @hidden\n     */\n    ConditionalFormatting.prototype.colourNameToHex = function (colour) {\n        var colours = {\n            'aliceblue': '#f0f8ff', 'antiquewhite': '#faebd7', 'aqua': '#00ffff', 'aquamarine': '#7fffd4',\n            'azure': '#f0ffff', 'beige': '#f5f5dc', 'bisque': '#ffe4c4', 'black': '#000000',\n            'blanchedalmond': '#ffebcd', 'blue': '#0000ff',\n            'blueviolet': '#8a2be2', 'brown': '#a52a2a', 'burlywood': '#deb887', 'cadetblue': '#5f9ea0',\n            'chartreuse': '#7fff00', 'chocolate': '#d2691e',\n            'coral': '#ff7f50', 'cornflowerblue': '#6495ed', 'cornsilk': '#fff8dc', 'crimson': '#dc143c', 'cyan': '#00ffff',\n            'darkblue': '#00008b', 'darkcyan': '#008b8b', 'darkgoldenrod': '#b8860b', 'darkgray': '#a9a9a9', 'darkgreen': '#006400',\n            'darkkhaki': '#bdb76b', 'darkmagenta': '#8b008b', 'darkolivegreen': '#556b2f',\n            'darkorange': '#ff8c00', 'darkorchid': '#9932cc', 'darkred': '#8b0000', 'darksalmon': '#e9967a', 'darkseagreen': '#8fbc8f',\n            'darkslateblue': '#483d8b', 'darkslategray': '#2f4f4f', 'darkturquoise': '#00ced1',\n            'darkviolet': '#9400d3', 'deeppink': '#ff1493', 'deepskyblue': '#00bfff', 'dimgray': '#696969', 'dodgerblue': '#1e90ff',\n            'firebrick': '#b22222', 'floralwhite': '#fffaf0', 'forestgreen': '#228b22', 'fuchsia': '#ff00ff',\n            'gainsboro': '#dcdcdc', 'ghostwhite': '#f8f8ff', 'gold': '#ffd700', 'goldenrod': '#daa520',\n            'gray': '#808080', 'green': '#008000',\n            'greenyellow': '#adff2f', 'honeydew': '#f0fff0', 'hotpink': '#ff69b4', 'indianred ': '#cd5c5c',\n            'indigo': '#4b0082', 'ivory': '#fffff0',\n            'khaki': '#f0e68c', 'lavender': '#e6e6fa', 'lavenderblush': '#fff0f5', 'lawngreen': '#7cfc00', 'lemonchiffon': '#fffacd',\n            'lightblue': '#add8e6', 'lightcoral': '#f08080', 'lightcyan': '#e0ffff', 'lightgoldenrodyellow': '#fafad2',\n            'lightgrey': '#d3d3d3', 'lightgreen': '#90ee90', 'lightpink': '#ffb6c1', 'lightsalmon': '#ffa07a', 'lightseagreen': '#20b2aa',\n            'lightskyblue': '#87cefa', 'lightslategray': '#778899', 'lightsteelblue': '#b0c4de',\n            'lightyellow': '#ffffe0', 'lime': '#00ff00', 'limegreen': '#32cd32', 'linen': '#faf0e6',\n            'magenta': '#ff00ff', 'maroon': '#800000', 'mediumaquamarine': '#66cdaa', 'mediumblue': '#0000cd', 'mediumorchid': '#ba55d3',\n            'mediumpurple': '#9370d8', 'mediumseagreen': '#3cb371', 'mediumslateblue': '#7b68ee',\n            'mediumspringgreen': '#00fa9a', 'mediumturquoise': '#48d1cc', 'mediumvioletred': '#c71585', 'midnightblue': '#191970',\n            'mintcream': '#f5fffa', 'mistyrose': '#ffe4e1', 'moccasin': '#ffe4b5', 'navajowhite': '#ffdead', 'navy': '#000080',\n            'oldlace': '#fdf5e6', 'olive': '#808000', 'olivedrab': '#6b8e23', 'orange': '#ffa500', 'orangered': '#ff4500',\n            'orchid': '#da70d6',\n            'palegoldenrod': '#eee8aa', 'palegreen': '#98fb98', 'paleturquoise': '#afeeee', 'palevioletred': '#d87093',\n            'papayawhip': '#ffefd5',\n            'peachpuff': '#ffdab9', 'peru': '#cd853f', 'pink': '#ffc0cb', 'plum': '#dda0dd', 'powderblue': '#b0e0e6', 'purple': '#800080',\n            'rebeccapurple': '#663399', 'red': '#ff0000', 'rosybrown': '#bc8f8f', 'royalblue': '#4169e1',\n            'saddlebrown': '#8b4513', 'salmon': '#fa8072', 'sandybrown': '#f4a460', 'seagreen': '#2e8b57',\n            'seashell': '#fff5ee', 'sienna': '#a0522d',\n            'silver': '#c0c0c0', 'skyblue': '#87ceeb', 'slateblue': '#6a5acd', 'slategray': '#708090', 'snow': '#fffafa',\n            'springgreen': '#00ff7f',\n            'steelblue': '#4682b4', 'tan': '#d2b48c', 'teal': '#008080', 'thistle': '#d8bfd8', 'tomato': '#ff6347', 'turquoise': '#40e0d0',\n            'violet': '#ee82ee', 'wheat': '#f5deb3', 'white': '#ffffff', 'whitesmoke': '#f5f5f5', 'yellow': '#ffff00',\n            'yellowgreen': '#9acd32'\n        };\n        if (typeof colours[colour.toLowerCase()] !== 'undefined') {\n            return colours[colour.toLowerCase()];\n        }\n        return '#d5d5d5';\n    };\n    /**\n     * To create Conditional Formatting dialog.\n     * @returns void\n     */\n    ConditionalFormatting.prototype.showConditionalFormattingDialog = function () {\n        this.newFormat = [];\n        for (var i = 0; i < this.parent.dataSourceSettings.conditionalFormatSettings.length; i++) {\n            this.newFormat.push(extend({}, this.parent.dataSourceSettings.conditionalFormatSettings[i].properties, null, true));\n        }\n        this.createDialog();\n        this.dialog.refresh();\n        this.addFormat();\n    };\n    /**\n     * To destroy the Conditional Formatting dialog\n     * @returns void\n     * @hidden\n     */\n    ConditionalFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.hide();\n            for (var i = 0; i < this.newFormat.length; i++) {\n                if (this.fontColor[i] && !this.fontColor[i].isDestroyed) {\n                    this.fontColor[i].destroy();\n                }\n                if (this.backgroundColor[i] && !this.backgroundColor[i].isDestroyed) {\n                    this.backgroundColor[i].destroy();\n                }\n            }\n            this.dialog.destroy();\n        }\n        else {\n            return;\n        }\n    };\n    return ConditionalFormatting;\n}());\nexport { ConditionalFormatting };\n","import { Toolbar as tool, Menu } from '@syncfusion/ej2-navigations';\nimport { remove, createElement, formatUnit, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../../common/base/constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport * as cls from '../../common/base/css-constant';\nimport { Common } from '../actions/common';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport { Deferred } from '@syncfusion/ej2-data';\nPivotView.Inject(Common);\n/**\n * Module for Toolbar\n */\n/** @hidden */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        this.currentReport = '';\n        this.parent = parent;\n        this.parent.toolbarModule = this;\n        this.addEventListener();\n    }\n    /**\n     * It returns the Module name.\n     * @returns string\n     * @hidden\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    Toolbar.prototype.createToolbar = function () {\n        this.parent.isModified = false;\n        this.renderDialog();\n        if (document.querySelector('#' + this.parent.element.id + 'pivot-toolbar') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'pivot-toolbar'));\n        }\n        var element = createElement('div', {\n            id: this.parent.element.id + 'pivot-toolbar',\n            className: cls.GRID_TOOLBAR\n        });\n        if (this.parent.showFieldList && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList'));\n        }\n        else if (this.parent.showGroupingBar &&\n            this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar')) {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + ' .' + 'e-pivot-grouping-bar'));\n        }\n        else {\n            this.parent.element.insertBefore(element, this.parent.element.querySelector('#' + this.parent.element.id + '_grid'));\n        }\n        this.toolbar = new tool({\n            created: this.create.bind(this),\n            enableRtl: this.parent.enableRtl,\n            items: this.getItems()\n        });\n        this.toolbar.isStringTemplate = true;\n        this.toolbar.appendTo('#' + this.parent.element.id + 'pivot-toolbar');\n        this.toolbar.width = this.parent.grid ? (this.parent.getGridWidthAsNumber() - 2) : (this.parent.getWidthAsNumber() - 2);\n        if (this.parent.chart) {\n            this.parent.chart.width = this.parent.grid ? this.parent.getGridWidthAsNumber().toString() :\n                this.parent.getWidthAsNumber().toString();\n        }\n        if (this.parent.showGroupingBar && this.parent.groupingBarModule &&\n            this.parent.element.querySelector('.' + cls.GROUPING_BAR_CLASS)) {\n            this.parent.groupingBarModule.refreshUI();\n        }\n    };\n    Toolbar.prototype.fetchReports = function () {\n        /* tslint:disable */\n        var reports = { reportName: [] };\n        /* tslint:enable */\n        var tool = this;\n        if (isBlazor()) {\n            reports = this.fetchReportsArgs();\n            /* tslint:disable */\n            reports.then(function (e) {\n                /* tslint:enable */\n                tool.reportList.dataSource = e.reportName;\n                return e;\n            });\n        }\n        this.parent.trigger(events.fetchReport, reports);\n        return reports;\n    };\n    Toolbar.prototype.fetchReportsArgs = function () {\n        var callbackPromise = new Deferred();\n        var reports = { reportName: [] };\n        this.parent.trigger(events.fetchReport, reports, function (observedArgs) {\n            callbackPromise.resolve(observedArgs);\n        });\n        return callbackPromise;\n    };\n    /* tslint:disable */\n    Toolbar.prototype.getItems = function () {\n        var toolbar = this.parent.toolbar.filter(function (v, i, a) { return a.indexOf(v) === i; });\n        var items = [];\n        for (var _i = 0, toolbar_1 = toolbar; _i < toolbar_1.length; _i++) {\n            var item = toolbar_1[_i];\n            switch (item) {\n                case 'New':\n                    items.push({\n                        prefixIcon: cls.GRID_NEW + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('new'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'new'\n                    });\n                    break;\n                case 'Save':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('save'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'save'\n                    });\n                    break;\n                case 'SaveAs':\n                    items.push({\n                        prefixIcon: cls.GRID_SAVEAS + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('saveAs'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'saveas'\n                    });\n                    break;\n                case 'Rename':\n                    items.push({\n                        prefixIcon: cls.GRID_RENAME + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('rename'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'rename'\n                    });\n                    break;\n                case 'Remove':\n                    items.push({\n                        prefixIcon: cls.GRID_REMOVE + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('deleteReport'),\n                        click: this.actionClick.bind(this), id: this.parent.element.id + 'remove'\n                    });\n                    break;\n                case 'Load':\n                    items.push({\n                        template: '<div><input class=' + cls.GRID_LOAD + ' id=' + this.parent.element.id + '_reportlist></input></div>',\n                        click: this.actionClick.bind(this),\n                        id: this.parent.element.id + 'load'\n                    });\n                    break;\n                case 'Grid':\n                    var toDisable = this.parent.displayOption.view === 'Chart';\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_GRID + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('grid'),\n                        id: this.parent.element.id + 'grid', cssClass: toDisable ? cls.MENU_DISABLE : '',\n                        click: this.menuItemClick.bind(this)\n                    });\n                    break;\n                case 'Chart':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'chart_menu\"></ul>',\n                        id: this.parent.element.id + 'chartmenu'\n                    });\n                    break;\n                case 'MDX':\n                    if (this.parent.dataType == \"olap\") {\n                        items.push({\n                            prefixIcon: cls.GRID_MDX + ' ' + cls.ICON, id: this.parent.element.id + 'mdxQuery',\n                            click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('mdxQuery')\n                        });\n                    }\n                    break;\n                case 'Export':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'export_menu\"></ul>',\n                        id: this.parent.element.id + 'exportmenu'\n                    });\n                    break;\n                case 'SubTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'subtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'subtotalmenu'\n                    });\n                    break;\n                case 'GrandTotal':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'grandtotal_menu\"></ul>',\n                        id: this.parent.element.id + 'grandtotalmenu'\n                    });\n                    break;\n                case 'ConditionalFormatting':\n                    items.push({\n                        prefixIcon: cls.GRID_FORMATTING + ' ' + cls.ICON, id: this.parent.element.id + 'formatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('toolbarFormatting')\n                    });\n                    break;\n                case 'NumberFormatting':\n                    items.push({\n                        prefixIcon: cls.FORMATTING_TOOLBAR + ' ' + cls.ICON, id: this.parent.element.id + 'numberFormatting',\n                        click: this.actionClick.bind(this), tooltipText: this.parent.localeObj.getConstant('numberFormat')\n                    });\n                    break;\n                case 'Formatting':\n                    items.push({\n                        template: '<ul id=\"' + this.parent.element.id + 'formatting_menu\"></ul>',\n                        id: this.parent.element.id + 'formattingmenu'\n                    });\n                    break;\n                case 'FieldList':\n                    items.push({\n                        prefixIcon: cls.TOOLBAR_FIELDLIST + ' ' + cls.ICON, tooltipText: this.parent.localeObj.getConstant('fieldList'),\n                        click: this.actionClick.bind(this), align: 'Right', id: this.parent.element.id + 'fieldlist'\n                    });\n                    if (this.parent.element.querySelector('.e-toggle-field-list')) {\n                        this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                    }\n                    break;\n            }\n        }\n        if (this.parent.showFieldList && toolbar.indexOf(\"FieldList\") === -1 && this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display === 'none') {\n            this.parent.element.querySelector('#' + this.parent.element.id + '_PivotFieldList').style.display = 'block';\n        }\n        var toolbarArgs = { customToolbar: items };\n        this.parent.trigger(events.toolbarRender, toolbarArgs);\n        return items;\n    };\n    /* tslint:enable */\n    Toolbar.prototype.reportChange = function (args) {\n        this.dropArgs = args;\n        if (this.parent.isModified && this.currentReport !== '') {\n            this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n        }\n        else {\n            this.reportLoad(args);\n        }\n    };\n    Toolbar.prototype.reportLoad = function (args) {\n        var _this = this;\n        if (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New') {\n            var loadArgs = {\n                reportName: args.itemData.value\n            };\n            this.parent.trigger(events.loadReport, loadArgs, function (observedArgs) {\n                _this.currentReport = observedArgs.reportName;\n                _this.parent.isModified = false;\n            });\n        }\n    };\n    Toolbar.prototype.saveReport = function (args) {\n        if (this.currentReport && this.currentReport !== '' && args.item.id === (this.parent.element.id + 'save')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else {\n            this.dialogShow(args, 'saveAs');\n        }\n    };\n    Toolbar.prototype.mdxQueryDialog = function (args) {\n        if (!(this.mdxDialog && !this.mdxDialog.isDestroyed)) {\n            this.renderMDXDialog();\n        }\n        var outerDiv = createElement('div', {\n            className: cls.MDX_QUERY\n        });\n        var textarea = createElement('textarea', {\n            className: cls.MDX_QUERY_CONTENT,\n            innerHTML: this.parent.olapEngineModule.getMDXQuery(this.parent.dataSourceSettings).trim(),\n            attrs: { 'readonly': 'readonly' }\n        });\n        outerDiv.appendChild(textarea);\n        this.mdxDialog.content = outerDiv;\n        this.mdxDialog.show();\n    };\n    Toolbar.prototype.dialogShow = function (args, action) {\n        this.dialog.header = args.item.tooltipText;\n        var outerDiv = createElement('div', {\n            className: cls.GRID_REPORT_OUTER\n        });\n        var label = createElement('div', {\n            className: cls.GRID_REPORT_LABEL,\n            innerHTML: this.parent.localeObj.getConstant('reportName')\n        });\n        var input = createElement('input', {\n            className: cls.GRID_REPORT_INPUT + ' ' + cls.INPUT,\n            innerHTML: (action && action === 'rename' ? this.currentReport : ''),\n            attrs: {\n                'placeholder': this.parent.localeObj.getConstant('emptyReportName'),\n                'value': (action && action === 'rename' ? this.currentReport : '')\n            },\n        });\n        input.setSelectionRange(input.textContent.length, input.textContent.length);\n        outerDiv.appendChild(label);\n        outerDiv.appendChild(input);\n        this.dialog.content = outerDiv;\n        this.dialog.refresh();\n        this.dialog.show();\n    };\n    Toolbar.prototype.renameReport = function (args) {\n        this.parent.trigger(events.toolbarClick, args);\n        if (this.currentReport && this.currentReport !== '') {\n            this.dialogShow(args, 'rename');\n        }\n        else {\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n            return;\n        }\n    };\n    Toolbar.prototype.actionClick = function (args) {\n        switch (args.item.id) {\n            case (this.parent.element.id + 'save'):\n            case (this.parent.element.id + 'saveas'):\n                this.saveReport(args);\n                break;\n            case (this.parent.element.id + 'remove'):\n                this.action = 'Remove';\n                if (this.currentReport && this.currentReport !== '') {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('removeConfirm'));\n                }\n                else {\n                    this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('emptyReport'));\n                }\n                return;\n            case (this.parent.element.id + 'rename'):\n                this.renameReport(args);\n                break;\n            case (this.parent.element.id + 'new'):\n                this.action = 'New';\n                if (this.parent.isModified) {\n                    this.createConfirmDialog(this.parent.localeObj.getConstant('alert'), this.parent.localeObj.getConstant('newReportConfirm'));\n                }\n                else {\n                    this.createNewReport();\n                }\n                break;\n            case (this.parent.element.id + 'load'):\n                this.action = 'Load';\n                break;\n            case (this.parent.element.id + 'fieldlist'):\n                if (this.parent.pivotFieldListModule && this.parent.pivotFieldListModule.dialogRenderer) {\n                    this.parent.pivotFieldListModule.dialogRenderer.fieldListDialog.show();\n                }\n                break;\n            case (this.parent.element.id + 'formatting'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'mdxQuery'):\n                this.mdxQueryDialog(args);\n                break;\n            case (this.parent.element.id + 'numberFormatting'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n        }\n    };\n    Toolbar.prototype.renderDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'report-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'report-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'report-dialog',\n            className: cls.GRID_REPORT_DIALOG\n        }));\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.okBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'),\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.cancelBtnClick.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel')\n                    }\n                }\n            ],\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo('#' + this.parent.element.id + 'report-dialog');\n    };\n    Toolbar.prototype.renderMDXDialog = function () {\n        if (document.querySelector('#' + this.parent.element.id + 'mdx-dialog') !== null) {\n            remove(document.querySelector('#' + this.parent.element.id + 'mdx-dialog'));\n        }\n        this.parent.element.appendChild(createElement('div', {\n            id: this.parent.element.id + 'mdx-dialog',\n            className: cls.GRID_MDX_DIALOG\n        }));\n        this.mdxDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.copyMDXQuery.bind(this),\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('copy'),\n                        isPrimary: true\n                    }\n                }\n            ],\n            header: this.parent.localeObj.getConstant('mdxQuery'),\n            isModal: true,\n            visible: false,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            zIndex: 1000001,\n            closeOnEscape: true,\n            target: document.body\n        });\n        this.mdxDialog.isStringTemplate = true;\n        this.mdxDialog.appendTo('#' + this.parent.element.id + 'mdx-dialog');\n    };\n    Toolbar.prototype.copyMDXQuery = function () {\n        var textArea = this.mdxDialog.element.querySelector('.' + cls.MDX_QUERY_CONTENT);\n        try {\n            textArea.select();\n            document.execCommand('copy');\n        }\n        catch (err) {\n            window.alert('Oops, unable to copy');\n        }\n        return;\n    };\n    Toolbar.prototype.okBtnClick = function () {\n        var reportInput = this.dialog.element.querySelector('.' + cls.GRID_REPORT_INPUT);\n        if (reportInput && reportInput.value === '') {\n            reportInput.focus();\n            return;\n        }\n        var isNew = false;\n        if ((this.dialog.header === this.parent.localeObj.getConstant('save') ||\n            this.dialog.header === this.parent.localeObj.getConstant('saveAs')) &&\n            reportInput.value && reportInput.value !== '') {\n            if (this.action === 'New') {\n                isNew = true;\n            }\n            else {\n                this.action = 'Save';\n            }\n            this.currentReport = reportInput.value;\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: reportInput.value\n            };\n            this.parent.trigger(events.saveReport, saveArgs);\n            this.parent.isModified = false;\n        }\n        else if (this.dialog.header === this.parent.localeObj.getConstant('rename') && reportInput.value && reportInput.value !== '') {\n            this.action = 'Rename';\n            var renameArgs = {\n                reportName: this.currentReport,\n                rename: reportInput.value\n            };\n            this.parent.trigger(events.renameReport, renameArgs);\n            this.currentReport = reportInput.value;\n        }\n        this.updateReportList();\n        this.dialog.hide();\n        if (isNew) {\n            this.createNewReport();\n        }\n    };\n    Toolbar.prototype.createNewReport = function () {\n        this.currentReport = '';\n        this.reportList.value = '';\n        this.reportList.text = '';\n        this.reportList.refresh();\n        this.parent.trigger(events.newReport);\n        this.parent.isModified = false;\n    };\n    Toolbar.prototype.cancelBtnClick = function () {\n        this.dialog.hide();\n    };\n    Toolbar.prototype.createConfirmDialog = function (title, description) {\n        if (document.getElementById(this.parent.element.id + '_ConfirmDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_ConfirmDialog').parentElement);\n        }\n        var errorDialog = createElement('div', {\n            id: this.parent.element.id + '_ConfirmDialog',\n            className: cls.ERROR_DIALOG_CLASS\n        });\n        this.parent.element.appendChild(errorDialog);\n        this.confirmPopUp = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            header: title,\n            content: description,\n            isModal: true,\n            visible: true,\n            closeOnEscape: true,\n            target: document.body,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('ok'), isPrimary: true,\n                        cssClass: cls.OK_BUTTON_CLASS\n                    },\n                    click: this.okButtonClick.bind(this)\n                },\n                {\n                    buttonModel: {\n                        content: this.parent.localeObj.getConstant('cancel'),\n                        cssClass: cls.CANCEL_BUTTON_CLASS\n                    },\n                    click: this.cancelButtonClick.bind(this)\n                }\n            ]\n        });\n        this.confirmPopUp.isStringTemplate = true;\n        this.confirmPopUp.appendTo(errorDialog);\n        this.confirmPopUp.element.querySelector('.e-dlg-header').innerHTML = title;\n    };\n    Toolbar.prototype.okButtonClick = function () {\n        if (this.action === 'Remove') {\n            var removeArgs = {\n                reportName: this.currentReport\n            };\n            this.parent.trigger(events.removeReport, removeArgs);\n            this.currentReport = '';\n            this.parent.isModified = false;\n            this.action = '';\n            this.updateReportList();\n        }\n        else if (this.action === 'New' || (this.action !== 'Save' && this.action !== 'Rename' && this.action !== 'New')) {\n            if (this.currentReport && this.currentReport !== '') {\n                var saveArgs = {\n                    report: this.parent.getPersistData(),\n                    reportName: this.currentReport\n                };\n                this.parent.trigger(events.saveReport, saveArgs);\n                this.parent.isModified = false;\n                if (this.action === 'New') {\n                    this.createNewReport();\n                }\n                else {\n                    this.reportLoad(this.dropArgs);\n                }\n            }\n            else {\n                this.dialogShow({ item: { tooltipText: this.parent.localeObj.getConstant('save') } });\n            }\n        }\n        this.confirmPopUp.hide();\n    };\n    Toolbar.prototype.cancelButtonClick = function () {\n        if (this.action === 'New') {\n            this.createNewReport();\n        }\n        else if (this.dropArgs && this.action !== 'Remove') {\n            this.reportLoad(this.dropArgs);\n        }\n        this.confirmPopUp.hide();\n    };\n    /* tslint:disable */\n    Toolbar.prototype.create = function () {\n        var toDisable = this.parent.displayOption.view === 'Table';\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'chart_menu')) {\n            var menu = [{\n                    iconCss: cls.TOOLBAR_CHART + ' ' + cls.ICON,\n                    items: toDisable ? [] : [\n                        {\n                            text: this.parent.localeObj.getConstant('column'),\n                            id: this.parent.element.id + '_' + 'Column',\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('bar'),\n                            id: this.parent.element.id + '_' + 'Bar'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('line'),\n                            id: this.parent.element.id + '_' + 'Line'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('area'),\n                            id: this.parent.element.id + '_' + 'Area'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('scatter'),\n                            id: this.parent.element.id + '_' + 'Scatter'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('polar'),\n                            id: this.parent.element.id + '_' + 'Polar'\n                        }\n                    ]\n                }];\n            this.chartMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.chartMenu.isStringTemplate = true;\n            this.chartMenu.appendTo('#' + this.parent.element.id + 'chart_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'export_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_EXPORT + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('pdf'),\n                            iconCss: cls.GRID_PDF_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'pdf'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('excel'),\n                            iconCss: cls.GRID_EXCEL_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'excel'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('csv'),\n                            iconCss: cls.GRID_CSV_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'csv'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('png'),\n                            iconCss: cls.GRID_PNG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'png'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('jpeg'),\n                            iconCss: cls.GRID_JPEG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'jpeg'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('svg'),\n                            iconCss: cls.GRID_SVG_EXPORT + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'svg'\n                        }\n                    ]\n                }];\n            this.exportMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateExportMenu.bind(this)\n            });\n            this.exportMenu.isStringTemplate = true;\n            this.exportMenu.appendTo('#' + this.parent.element.id + 'export_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'subtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_SUB_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotals'),\n                            id: this.parent.element.id + 'subtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowSubTotals'),\n                            id: this.parent.element.id + 'notsubtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsRowsOnly'),\n                            id: this.parent.element.id + 'subtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showSubTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'subtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.subTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateSubtotalSelection.bind(this)\n            });\n            this.subTotalMenu.isStringTemplate = true;\n            this.subTotalMenu.appendTo('#' + this.parent.element.id + 'subtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'grandtotal_menu')) {\n            var menu = [{\n                    iconCss: cls.GRID_GRAND_TOTAL + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotals'),\n                            id: this.parent.element.id + 'grandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('doNotShowGrandTotals'),\n                            id: this.parent.element.id + 'notgrandtotal',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsRowsOnly'),\n                            id: this.parent.element.id + 'grandtotalrow',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('showGrandTotalsColumnsOnly'),\n                            id: this.parent.element.id + 'grandtotalcolumn',\n                            iconCss: cls.PIVOT_SELECT_ICON + ' ' + cls.ICON\n                        },\n                    ]\n                }];\n            this.grandTotalMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this), beforeOpen: this.updateGrandtotalSelection.bind(this)\n            });\n            this.grandTotalMenu.isStringTemplate = true;\n            this.grandTotalMenu.appendTo('#' + this.parent.element.id + 'grandtotal_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + 'formatting_menu')) {\n            var menu = [{\n                    iconCss: cls.FORMATTING_MENU + ' ' + cls.ICON,\n                    items: [\n                        {\n                            text: this.parent.localeObj.getConstant('numberFormat'),\n                            iconCss: cls.NUMBER_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'numberFormattingMenu'\n                        },\n                        {\n                            text: this.parent.localeObj.getConstant('conditionalFormating'),\n                            iconCss: cls.CONDITIONAL_FORMATTING_MENU + ' ' + cls.ICON,\n                            id: this.parent.element.id + 'conditionalFormattingMenu'\n                        }\n                    ]\n                }];\n            this.formattingMenu = new Menu({\n                items: menu, enableRtl: this.parent.enableRtl,\n                select: this.menuItemClick.bind(this)\n            });\n            this.formattingMenu.isStringTemplate = true;\n            this.formattingMenu.appendTo('#' + this.parent.element.id + 'formatting_menu');\n        }\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_reportlist')) {\n            var saveArgs = {\n                report: this.parent.getPersistData(),\n                reportName: this.parent.localeObj.getConstant('defaultReport')\n            };\n            this.currentReport = this.parent.localeObj.getConstant('defaultReport');\n            this.parent.trigger(events.saveReport, saveArgs);\n            var reports = this.fetchReports();\n            this.reportList = new DropDownList({\n                dataSource: reports.reportName,\n                width: '150px',\n                popupHeight: '200px',\n                placeholder: this.currentReport === '' ? this.parent.localeObj.getConstant('reportList') : '',\n                enableRtl: this.parent.enableRtl,\n                cssClass: cls.REPORT_LIST_DROP,\n                select: this.reportChange.bind(this),\n                value: this.currentReport\n            });\n            this.reportList.isStringTemplate = true;\n            this.reportList.appendTo('#' + this.parent.element.id + '_reportlist');\n        }\n    };\n    Toolbar.prototype.updateExportMenu = function (args) {\n        if (this.parent.currentView == \"Table\") {\n            args.element.querySelector('#' + this.parent.element.id + 'png').remove();\n            args.element.querySelector('#' + this.parent.element.id + 'jpeg').remove();\n            args.element.querySelector('#' + this.parent.element.id + 'svg').remove();\n        }\n        else {\n            args.element.querySelector('#' + this.parent.element.id + 'excel').remove();\n            args.element.querySelector('#' + this.parent.element.id + 'csv').remove();\n        }\n    };\n    Toolbar.prototype.updateSubtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && !this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showSubTotals && this.parent.dataSourceSettings.showRowSubTotals && this.parent.dataSourceSettings.showColumnSubTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'subtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showSubTotals || (!this.parent.dataSourceSettings.showRowSubTotals && !this.parent.dataSourceSettings.showColumnSubTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notsubtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateGrandtotalSelection = function (args) {\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (!args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.contains(cls.PIVOT_DISABLE_ICON)) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.add(cls.PIVOT_DISABLE_ICON);\n        }\n        if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalrow' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && !this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotalcolumn' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (this.parent.dataSourceSettings.showGrandTotals && this.parent.dataSourceSettings.showRowGrandTotals && this.parent.dataSourceSettings.showColumnGrandTotals) {\n            args.element.querySelector('#' + this.parent.element.id + 'grandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n        else if (!this.parent.dataSourceSettings.showGrandTotals || (!this.parent.dataSourceSettings.showRowGrandTotals && !this.parent.dataSourceSettings.showColumnGrandTotals)) {\n            args.element.querySelector('#' + this.parent.element.id + 'notgrandtotal' + ' .' + cls.PIVOT_SELECT_ICON).classList.remove(cls.PIVOT_DISABLE_ICON);\n        }\n    };\n    Toolbar.prototype.updateReportList = function () {\n        var reports;\n        if (isBlazor()) {\n            reports = this.fetchReports();\n            if (reports.reportName === undefined) {\n                reports.reportName = this.reportList.dataSource;\n            }\n        }\n        else {\n            reports = this.fetchReports();\n        }\n        this.reportList.dataSource = reports.reportName;\n        if (this.currentReport === '' && this.reportList.dataSource.length > 0) {\n            this.reportList.value = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            this.reportList.text = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n            this.currentReport = this.reportList.dataSource[this.reportList.dataSource.length - 1];\n        }\n        else {\n            this.reportList.value = this.currentReport;\n            this.reportList.text = this.currentReport;\n        }\n        this.reportList.refresh();\n    };\n    Toolbar.prototype.menuItemClick = function (args) {\n        var exportArgs = {\n            pdfExportProperties: undefined,\n            isMultipleExport: undefined,\n            pdfDoc: undefined,\n            isBlob: undefined,\n            excelExportProperties: undefined,\n            workbook: undefined,\n            type: undefined,\n            fileName: undefined,\n            orientation: undefined,\n            width: undefined,\n            height: undefined,\n        };\n        switch (args.item.id) {\n            case (this.parent.element.id + 'grid'):\n                if (this.parent.grid && this.parent.chart) {\n                    this.parent.grid.element.style.display = '';\n                    this.parent.chart.element.style.display = 'none';\n                    this.parent.currentView = 'Table';\n                    this.parent.setProperties({ displayOption: { primary: 'Table' } }, true);\n                    if (this.parent.showGroupingBar) {\n                        this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = \"\";\n                        this.parent.element.querySelector('.e-chart-grouping-bar').style.display = \"none\";\n                    }\n                    this.parent.layoutRefresh();\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + '_' + 'Column'):\n            case (this.parent.element.id + '_' + 'Bar'):\n            case (this.parent.element.id + '_' + 'Line'):\n            case (this.parent.element.id + '_' + 'Area'):\n            case (this.parent.element.id + '_' + 'Scatter'):\n            case (this.parent.element.id + '_' + 'Polar'):\n                if (args.item && args.item.text) {\n                    this.parent.chartSettings.chartSeries.type = args.item.id.split('_')[args.item.id.split('_').length - 1];\n                    if (this.parent.grid && this.parent.chart) {\n                        this.parent.grid.element.style.display = 'none';\n                        this.parent.chart.element.style.display = '';\n                        this.parent.currentView = 'Chart';\n                        this.parent.setProperties({ displayOption: { primary: 'Chart' } }, true);\n                        this.parent.chart.element.style.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                        this.parent.chart.width = formatUnit(this.parent.grid ? this.parent.getGridWidthAsNumber() : this.parent.getWidthAsNumber());\n                        if (this.parent.showGroupingBar) {\n                            this.parent.element.querySelector('.e-pivot-grouping-bar').style.display = \"none\";\n                            this.parent.element.querySelector('.e-chart-grouping-bar').style.display = \"\";\n                        }\n                    }\n                }\n                if (isBlazor() && this.parent.element.querySelector('.e-toggle-field-list') && this.parent.toolbar.indexOf('FieldList') !== -1) {\n                    this.parent.element.querySelector('.e-toggle-field-list').style.display = 'none';\n                }\n                break;\n            case (this.parent.element.id + 'pdf'):\n                if (this.parent.currentView == \"Table\") {\n                    if (this.parent.pdfExportModule) {\n                        this.parent.pdfExportModule.exportToPDF();\n                    }\n                    else {\n                        this.parent.trigger(events.beforeExport, exportArgs);\n                        this.parent.pdfExport(exportArgs.pdfExportProperties, exportArgs.isMultipleExport, exportArgs.pdfDoc, exportArgs.isBlob);\n                    }\n                }\n                else {\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.chartExport(exportArgs.type ? exportArgs.type : 'PDF', exportArgs.fileName ? exportArgs.fileName : 'result', exportArgs.orientation, exportArgs.width, exportArgs.height);\n                }\n                break;\n            case (this.parent.element.id + 'excel'):\n                if (this.parent.excelExportModule) {\n                    this.parent.excelExportModule.exportToExcel('Excel');\n                }\n                else {\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.excelExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                }\n                break;\n            case (this.parent.element.id + 'csv'):\n                if (this.parent.excelExportModule) {\n                    this.parent.excelExportModule.exportToExcel('csv');\n                }\n                else {\n                    this.parent.trigger(events.beforeExport, exportArgs);\n                    this.parent.csvExport(exportArgs.excelExportProperties, exportArgs.isMultipleExport, exportArgs.workbook, exportArgs.isBlob);\n                }\n                break;\n            case (this.parent.element.id + 'png'):\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type ? exportArgs.type : 'PNG', exportArgs.fileName ? exportArgs.fileName : 'result', exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'jpeg'):\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type ? exportArgs.type : 'JPEG', exportArgs.fileName ? exportArgs.fileName : 'result', exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'svg'):\n                this.parent.trigger(events.beforeExport, exportArgs);\n                this.parent.chartExport(exportArgs.type ? exportArgs.type : 'SVG', exportArgs.fileName ? exportArgs.fileName : 'result', exportArgs.orientation, exportArgs.width, exportArgs.height);\n                break;\n            case (this.parent.element.id + 'notsubtotal'):\n                this.parent.dataSourceSettings.showSubTotals = false;\n                this.parent.dataSourceSettings.showColumnSubTotals = false;\n                this.parent.dataSourceSettings.showRowSubTotals = false;\n                break;\n            case (this.parent.element.id + 'subtotalrow'):\n                this.parent.dataSourceSettings.showSubTotals = true;\n                this.parent.dataSourceSettings.showColumnSubTotals = false;\n                this.parent.dataSourceSettings.showRowSubTotals = true;\n                break;\n            case (this.parent.element.id + 'subtotalcolumn'):\n                this.parent.dataSourceSettings.showSubTotals = true;\n                this.parent.dataSourceSettings.showColumnSubTotals = true;\n                this.parent.dataSourceSettings.showRowSubTotals = false;\n                break;\n            case (this.parent.element.id + 'subtotal'):\n                this.parent.dataSourceSettings.showSubTotals = true;\n                this.parent.dataSourceSettings.showColumnSubTotals = true;\n                this.parent.dataSourceSettings.showRowSubTotals = true;\n                break;\n            case (this.parent.element.id + 'notgrandtotal'):\n                this.parent.dataSourceSettings.showGrandTotals = false;\n                this.parent.dataSourceSettings.showColumnGrandTotals = false;\n                this.parent.dataSourceSettings.showRowGrandTotals = false;\n                break;\n            case (this.parent.element.id + 'grandtotalrow'):\n                this.parent.dataSourceSettings.showGrandTotals = true;\n                this.parent.dataSourceSettings.showColumnGrandTotals = false;\n                this.parent.dataSourceSettings.showRowGrandTotals = true;\n                break;\n            case (this.parent.element.id + 'grandtotalcolumn'):\n                this.parent.dataSourceSettings.showGrandTotals = true;\n                this.parent.dataSourceSettings.showColumnGrandTotals = true;\n                this.parent.dataSourceSettings.showRowGrandTotals = false;\n                break;\n            case (this.parent.element.id + 'grandtotal'):\n                this.parent.dataSourceSettings.showGrandTotals = true;\n                this.parent.dataSourceSettings.showColumnGrandTotals = true;\n                this.parent.dataSourceSettings.showRowGrandTotals = true;\n                break;\n            case (this.parent.element.id + 'numberFormattingMenu'):\n                if (this.parent.numberFormattingModule) {\n                    this.parent.numberFormattingModule.showNumberFormattingDialog();\n                }\n                break;\n            case (this.parent.element.id + 'conditionalFormattingMenu'):\n                if (this.parent.conditionalFormattingModule) {\n                    this.parent.conditionalFormattingModule.showConditionalFormattingDialog();\n                }\n                break;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initToolbar, this.createToolbar, this);\n    };\n    /**\n     * To refresh the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.refreshToolbar = function () {\n        this.createToolbar();\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initToolbar, this.createToolbar);\n    };\n    /**\n     * To destroy the toolbar\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.confirmPopUp && !this.confirmPopUp.isDestroyed) {\n            this.confirmPopUp.destroy();\n        }\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (this.mdxDialog && !this.mdxDialog.isDestroyed) {\n            this.mdxDialog.destroy();\n        }\n        if (this.chartMenu && !this.chartMenu.isDestroyed) {\n            this.chartMenu.destroy();\n        }\n        if (this.exportMenu && !this.exportMenu.isDestroyed) {\n            this.exportMenu.destroy();\n        }\n        if (this.subTotalMenu && !this.subTotalMenu.isDestroyed) {\n            this.subTotalMenu.destroy();\n        }\n        if (this.grandTotalMenu && !this.grandTotalMenu.isDestroyed) {\n            this.grandTotalMenu.destroy();\n        }\n        if (this.formattingMenu && !this.formattingMenu.isDestroyed) {\n            this.formattingMenu.destroy();\n        }\n        if (this.reportList && !this.reportList.isDestroyed) {\n            this.reportList.destroy();\n        }\n        if (this.toolbar && !this.toolbar.isDestroyed) {\n            this.toolbar.destroy();\n        }\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { PivotView } from '../../pivotview/base/pivotview';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { createElement, remove, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../../common/base/css-constant';\nimport * as events from '../../common/base/constant';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Common } from '../actions/common';\nPivotView.Inject(Common);\n/**\n * Module to render NumberFormatting Dialog\n */\nvar NumberFormatting = /** @class */ (function () {\n    function NumberFormatting(parent) {\n        this.parent = parent;\n        this.parent.numberFormattingModule = this;\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    /**\n     * To get module name.\n     * @returns string\n     */\n    NumberFormatting.prototype.getModuleName = function () {\n        return 'numberformatting';\n    };\n    /**\n     * To show Number Formatting dialog.\n     * @returns void\n     */\n    NumberFormatting.prototype.showNumberFormattingDialog = function () {\n        var _this = this;\n        var valueDialog = createElement('div', {\n            id: this.parent.element.id + '_FormatDialog',\n            className: cls.FORMATTING_DIALOG\n        });\n        this.parent.element.appendChild(valueDialog);\n        this.dialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('numberFormat'),\n            content: this.getDialogContent(),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 'auto',\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateFormatting.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('apply'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.dialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            closeOnEscape: true,\n            target: this.parent.element,\n            overlayClick: function () { _this.removeDialog(); },\n            close: this.removeDialog.bind(this)\n        });\n        this.dialog.isStringTemplate = true;\n        this.dialog.appendTo(valueDialog);\n        this.dialog.element.querySelector('.' + cls.DIALOG_HEADER).innerHTML = this.parent.localeObj.getConstant('numberFormat');\n        this.renderControls();\n    };\n    NumberFormatting.prototype.getDialogContent = function () {\n        var outerElement = createElement('div', {\n            id: this.parent.element.id + '_FormatDialogOuter',\n            className: cls.FORMATTING_DIALOG_OUTER\n        });\n        var table = createElement('table', {\n            id: this.parent.element.id + '_FormatTable',\n            className: cls.FORMATTING_TABLE,\n            styles: 'width: 100%'\n        });\n        var tRow = createElement('tr');\n        var tValue = createElement('td');\n        var valueLable = createElement('div', {\n            id: this.parent.element.id + '_FormatValueLable',\n            className: cls.FORMATTING_VALUE_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('values')\n        });\n        var valueDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatValueDrop'\n        });\n        tValue.appendChild(valueLable);\n        tValue.appendChild(valueDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var formatLable = createElement('div', {\n            id: this.parent.element.id + '_FormatLable',\n            className: cls.FORMATTING_FORMAT_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('formatType')\n        });\n        var formatDrop = createElement('div', {\n            id: this.parent.element.id + '_FormatDrop'\n        });\n        tValue.appendChild(formatLable);\n        tValue.appendChild(formatDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var groupingLable = createElement('div', {\n            id: this.parent.element.id + '_GroupingLable',\n            className: cls.FORMATTING_GROUPING_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('grouping')\n        });\n        var groupingDrop = createElement('div', {\n            id: this.parent.element.id + '_GroupingDrop'\n        });\n        tValue.appendChild(groupingLable);\n        tValue.appendChild(groupingDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        var decimalLable = createElement('div', {\n            id: this.parent.element.id + '_DecimalLable',\n            className: cls.FORMATTING_DECIMAL_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('decimalPlaces')\n        });\n        var decimalDrop = createElement('div', {\n            id: this.parent.element.id + '_DecimalDrop'\n        });\n        tValue.appendChild(decimalLable);\n        tValue.appendChild(decimalDrop);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        tValue = createElement('td');\n        this.customLable = createElement('div', {\n            id: this.parent.element.id + '_CustomLable',\n            className: cls.FORMATTING_CUSTOM_LABLE,\n            innerHTML: this.parent.localeObj.getConstant('customFormatString')\n        });\n        this.customText = createElement('input', {\n            id: this.parent.element.id + '_CustomText',\n            attrs: {\n                'type': 'text', 'tabindex': '0'\n            },\n            className: cls.INPUT + ' ' + cls.FORMATTING_CUSTOM_TEXT\n        });\n        tValue.appendChild(this.customLable);\n        tValue.appendChild(this.customText);\n        tRow.appendChild(tValue);\n        table.appendChild(tRow);\n        tRow = createElement('tr');\n        table.appendChild(tRow);\n        outerElement.appendChild(table);\n        return outerElement;\n    };\n    NumberFormatting.prototype.renderControls = function () {\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatValueDrop')) {\n            var valueFields = [];\n            valueFields.push({\n                index: 0, name: this.parent.localeObj.getConstant('AllValues'), field: this.parent.localeObj.getConstant('AllValues')\n            });\n            for (var i = 0; i < this.parent.dataSourceSettings.values.length; i++) {\n                valueFields.push({\n                    index: i + 1, name: this.parent.dataSourceSettings.values[i].caption || this.parent.dataSourceSettings.values[i].name,\n                    field: this.parent.dataSourceSettings.values[i].name\n                });\n            }\n            this.valuesDropDown = new DropDownList({\n                dataSource: valueFields, fields: { text: 'name', value: 'field' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_VALUE_DROP, change: this.valueChange.bind(this), width: '100%'\n            });\n            this.valuesDropDown.isStringTemplate = true;\n            this.valuesDropDown.appendTo('#' + this.parent.element.id + '_FormatValueDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_FormatDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('number') },\n                { index: 1, name: this.parent.localeObj.getConstant('currency') },\n                { index: 2, name: this.parent.localeObj.getConstant('percentage') },\n                { index: 2, name: this.parent.localeObj.getConstant('Custom') }\n            ];\n            this.formatDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' },\n                index: 0, change: this.dropDownChange.bind(this), enableRtl: this.parent.enableRtl,\n                cssClass: cls.FORMATTING_FORMAT_DROP, width: '100%'\n            });\n            this.formatDropDown.isStringTemplate = true;\n            this.formatDropDown.appendTo('#' + this.parent.element.id + '_FormatDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_GroupingDrop')) {\n            var fields = [\n                { index: 0, name: this.parent.localeObj.getConstant('true') },\n                { index: 1, name: this.parent.localeObj.getConstant('false') }\n            ];\n            this.groupingDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_GROUPING_DROP, width: '100%'\n            });\n            this.groupingDropDown.isStringTemplate = true;\n            this.groupingDropDown.appendTo('#' + this.parent.element.id + '_GroupingDrop');\n        }\n        if (this.dialog.element.querySelector('#' + this.parent.element.id + '_DecimalDrop')) {\n            var fields = [\n                { index: 0, name: 0 },\n                { index: 1, name: 1 },\n                { index: 2, name: 2 },\n                { index: 3, name: 3 },\n                { index: 4, name: 4 },\n                { index: 5, name: 5 },\n                { index: 6, name: 6 },\n                { index: 7, name: 7 },\n                { index: 8, name: 8 },\n                { index: 9, name: 9 },\n                { index: 10, name: 10 },\n            ];\n            this.decimalDropDown = new DropDownList({\n                dataSource: fields, fields: { text: 'name', value: 'name' }, enableRtl: this.parent.enableRtl,\n                index: 0, cssClass: cls.FORMATTING_DECIMAL_DROP, popupHeight: 150, width: '100%'\n            });\n            this.decimalDropDown.isStringTemplate = true;\n            this.decimalDropDown.appendTo('#' + this.parent.element.id + '_DecimalDrop');\n        }\n        if (this.formatDropDown.value !== this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = true;\n        }\n    };\n    NumberFormatting.prototype.valueChange = function (args) {\n        var format = this.parent.dataSourceSettings.formatSettings;\n        var isExist = false;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === args.value) {\n                var fString = format[i].format;\n                var first = fString.split('')[0].toLowerCase();\n                if (fString.length === 2 && ['n', 'p', 'c'].indexOf(first) > -1) {\n                    this.formatDropDown.value = first === 'n' ? this.parent.localeObj.getConstant('number') : first === 'p' ?\n                        this.parent.localeObj.getConstant('percentage') : first === 'c' ? this.parent.localeObj.getConstant('currency') :\n                        this.parent.localeObj.getConstant('number');\n                    this.decimalDropDown.value = Number(fString.split('')[1]);\n                    this.groupingDropDown.value = format[i].useGrouping ? this.parent.localeObj.getConstant('true') :\n                        this.parent.localeObj.getConstant('false');\n                }\n                else {\n                    this.formatDropDown.value = this.parent.localeObj.getConstant('Custom');\n                    this.customText.value = fString;\n                }\n                isExist = true;\n                break;\n            }\n        }\n        if (!isExist) {\n            this.formatDropDown.value = this.parent.localeObj.getConstant('number');\n            this.decimalDropDown.value = 0;\n            this.groupingDropDown.value = this.parent.localeObj.getConstant('true');\n        }\n    };\n    NumberFormatting.prototype.dropDownChange = function (args) {\n        if (args.value === this.parent.localeObj.getConstant('Custom')) {\n            this.customText.disabled = false;\n            this.groupingDropDown.enabled = false;\n            this.decimalDropDown.enabled = false;\n        }\n        else {\n            this.customText.disabled = true;\n            this.groupingDropDown.enabled = true;\n            this.decimalDropDown.enabled = true;\n        }\n    };\n    NumberFormatting.prototype.removeDialog = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        if (document.getElementById(this.parent.element.id + '_FormatDialog')) {\n            remove(document.getElementById(this.parent.element.id + '_FormatDialog'));\n        }\n    };\n    NumberFormatting.prototype.updateFormatting = function () {\n        var _this = this;\n        var text;\n        if (this.formatDropDown.value === this.parent.localeObj.getConstant('number') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('percentage') ||\n            this.formatDropDown.value === this.parent.localeObj.getConstant('currency')) {\n            text = this.formatDropDown.value === this.parent.localeObj.getConstant('number') ? 'N' :\n                this.formatDropDown.value === this.parent.localeObj.getConstant('currency') ? 'C' : 'P';\n            text += this.decimalDropDown.value;\n        }\n        else {\n            text = this.customText.value;\n        }\n        var format = extend([], this.parent.dataSourceSettings.formatSettings, true);\n        if (this.valuesDropDown.value === this.parent.localeObj.getConstant('AllValues')) {\n            var fieldList_1 = this.parent.dataType === 'olap' ?\n                this.parent.olapEngineModule.fieldList : this.parent.engineModule.fieldList;\n            Object.keys(fieldList_1).forEach(function (key) {\n                if (fieldList_1[key].type === 'number') {\n                    _this.insertFormat(key, text);\n                }\n            });\n        }\n        else {\n            this.insertFormat(this.valuesDropDown.value.toString(), text);\n        }\n        try {\n            this.parent.updateDataSource(false);\n            this.dialog.close();\n        }\n        catch (exception) {\n            this.parent.setProperties({ dataSourceSettings: { formatSettings: format } }, true);\n            this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('error'), this.parent.localeObj.getConstant('invalidFormat'), this.dialog.element);\n            this.parent.hideWaitingPopup();\n        }\n    };\n    NumberFormatting.prototype.insertFormat = function (fieldName, text) {\n        var isExist = false;\n        var newFormat = {\n            name: fieldName, format: text,\n            useGrouping: this.groupingDropDown.value === this.parent.localeObj.getConstant('true') ? true : false\n        };\n        var format = this.parent.dataSourceSettings.formatSettings;\n        for (var i = 0; i < format.length; i++) {\n            if (format[i].name === fieldName) {\n                format[i] = newFormat;\n                isExist = true;\n            }\n        }\n        if (!isExist) {\n            format.push(newFormat);\n        }\n    };\n    /**\n     * To add event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initFormatting, this.showNumberFormattingDialog, this);\n    };\n    /**\n     * To remove event listener.\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initFormatting, this.showNumberFormattingDialog);\n    };\n    /**\n     * To destroy the calculated field dialog\n     * @returns void\n     * @hidden\n     */\n    NumberFormatting.prototype.destroy = function () {\n        if (this.dialog && !this.dialog.isDestroyed) {\n            this.dialog.destroy();\n        }\n        this.removeEventListener();\n    };\n    return NumberFormatting;\n}());\nexport { NumberFormatting };\n","import { createElement, remove, extend, getInstance, addClass, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { PivotView } from '../../pivotview/base/pivotview';\nimport * as cls from '../base/css-constant';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MaskedTextBox, NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';\nimport { PivotUtil } from '../../base/util';\nimport { CheckBox } from '@syncfusion/ej2-buttons';\nimport { DateTimePicker } from '@syncfusion/ej2-calendars';\nimport * as events from '../../common/base/constant';\nimport { Common } from '../actions/common';\nPivotView.Inject(Common);\n/**\n * `Grouping` module to create grouping option for date, number and custom in popup.\n */\n/** @hidden */\nvar Grouping = /** @class */ (function () {\n    /**\n     * Constructor for the group UI rendering.\n     * @hidden\n     */\n    function Grouping(parent) {\n        /* tslint:disable-next-line:max-line-length */\n        this.dateGroup = /_date_group_years|_date_group_quarters|_date_group_quarterYear|_date_group_months|_date_group_days|_date_group_hours|_date_group_minutes|_date_group_seconds/g;\n        this.parent = parent;\n        this.parent.groupingModule = this;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grouping.prototype.getModuleName = function () {\n        return 'grouping';\n    };\n    Grouping.prototype.render = function (args) {\n        var target = args.target;\n        var option = args.option;\n        var parentElement = args.parentElement;\n        this.parentElement = parentElement;\n        this.selectedCellsInfo = [];\n        this.isUpdate = false;\n        var colIndex = Number(target.getAttribute('aria-colindex'));\n        var rowIndex = Number(target.getAttribute('index'));\n        var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n        var fieldName = cell.valueSort.axis.toString();\n        this.selectedCellsInfo = this.getSelectedCells(cell.axis, fieldName, cell.actualText.toString());\n        this.selectedCellsInfo.push({ axis: cell.axis, fieldName: fieldName, name: cell.actualText.toString(), cellInfo: cell });\n        if (option.replace(parentElement.id, '').indexOf('_custom_group') !== -1) {\n            this.createGroupSettings(fieldName);\n        }\n        else {\n            this.updateUnGroupSettings(fieldName);\n        }\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedOptions\n     * @param  {SelectedCellsInfo[]} axis - Get the members name from the given selected cells information\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedOptions = function (selectedCellsInfo) {\n        var selectedOptions = [];\n        for (var _i = 0, selectedCellsInfo_1 = selectedCellsInfo; _i < selectedCellsInfo_1.length; _i++) {\n            var option = selectedCellsInfo_1[_i];\n            if (PivotUtil.inArray(option.name, selectedOptions) === -1) {\n                selectedOptions.push(option.name);\n            }\n        }\n        return selectedOptions;\n    };\n    Grouping.prototype.createGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            var isInvalid = false;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        isInvalid = false;\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Custom') {\n                    if (this.selectedCellsInfo.length === 1) {\n                        isInvalid = true;\n                    }\n                    else {\n                        isInvalid = false;\n                        type = 'custom';\n                    }\n                }\n                else if (group && group.type === 'Number') {\n                    isInvalid = false;\n                    type = 'number';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        isInvalid = false;\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                    else if (group.type === 'Custom') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n                else {\n                    if (fieldList.type === 'number' ||\n                        (['datetime', 'date']).indexOf(fieldList.type) !== -1 || this.isDateType(fieldName)) {\n                        isInvalid = false;\n                        type = (this.selectedCellsInfo.length === 1 ? ((['datetime', 'date']).indexOf(fieldList.type) !== -1 ||\n                            this.isDateType(fieldName)) ? 'date' : 'number' : 'custom');\n                    }\n                    else if (fieldList.type === 'string') {\n                        isInvalid = this.selectedCellsInfo.length === 1;\n                        type = 'custom';\n                    }\n                }\n            }\n            if (isInvalid) {\n                /* tslint:disable-next-line:max-line-length */\n                this.parent.pivotCommon.errorDialog.createErrorDialog(this.parent.localeObj.getConstant('warning'), this.parent.localeObj.getConstant('invalidSelection'));\n                this.parent.grid.clearSelection();\n            }\n            else if (type && type !== '') {\n                this.createGroupDialog(fieldName, type);\n            }\n        }\n    };\n    Grouping.prototype.updateUnGroupSettings = function (fieldName) {\n        var fieldList = this.parent.engineModule.fieldList[fieldName];\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        var group = this.getGroupSettings(fieldName);\n        if (this.selectedCellsInfo.length > 0) {\n            var type = void 0;\n            if (fieldList.isCustomField) {\n                if (!group) {\n                    var dateGroup = this.getGroupSettings(fieldName.replace(this.dateGroup, ''));\n                    var customGroup = this.getGroupSettings(fieldName.replace(/_custom_group/g, ''));\n                    if (dateGroup) {\n                        type = 'date';\n                        fieldName = fieldName.replace(this.dateGroup, '');\n                    }\n                    else if (customGroup) {\n                        type = 'custom';\n                    }\n                }\n                else if (group.type === 'Custom') {\n                    type = 'custom';\n                }\n            }\n            else {\n                if (group) {\n                    if (group.type === 'Number' || group.type === 'Date') {\n                        type = group.type === 'Date' ? 'date' : 'number';\n                    }\n                }\n            }\n            if (type === 'date' || type === 'number') {\n                groupFields = this.validateSettings(fieldName, groupFields, type, []);\n            }\n            else if (type === 'custom') {\n                var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n                groupFields = this.validateSettings(fieldName, groupFields, type, selectedOptions);\n            }\n            this.updateDateSource(groupFields, type);\n        }\n    };\n    Grouping.prototype.updateDateSource = function (groupFields, type) {\n        if (this.isUpdate) {\n            if (isBlazor()) {\n                PivotUtil.setPivotProperties(this.parent, { dataSourceSettings: { groupSettings: groupFields } });\n            }\n            else {\n                this.parent.setProperties({ dataSourceSettings: { groupSettings: groupFields } }, true);\n            }\n            this.parent.updateGroupingReport(groupFields, (type === 'date' ? 'Date' : type === 'custom' ? 'Custom' : 'Number'));\n            this.parent.notify(events.initialLoad, {});\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.removeGroupSettings = function (fieldName, selectedOptions, groupFields, groupNames, type) {\n        var index = groupNames.indexOf(fieldName);\n        if (index !== -1) {\n            var field = groupFields[index];\n            for (var j = 0, len = field.customGroups.length; j < len; j++) {\n                if (field.customGroups[j]) {\n                    var group = field.customGroups[j];\n                    if (PivotUtil.inArray(group.groupName, selectedOptions) !== -1) {\n                        groupFields = this.modifyParentGroupItems(fieldName, groupFields, [group.groupName], group.items, groupNames);\n                        field.customGroups.splice(j, 1);\n                        this.isUpdate = true;\n                        j--;\n                        len--;\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.getGroupSettings = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.groupSettings; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.name === fieldName) {\n                return group;\n            }\n        }\n        return undefined;\n    };\n    Grouping.prototype.isDateType = function (fieldName) {\n        for (var _i = 0, _a = this.parent.dataSourceSettings.formatSettings; _i < _a.length; _i++) {\n            var format = _a[_i];\n            if (format.name === fieldName && format.type) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the selected members/headers by checing the valid members from the pivot table.\n     * @method getSelectedCells\n     * @param  {string} axis - Spicifies the axis name for the given field.\n     * @param  {string} fieldName - Gets selected members for the given field name.\n     * @param  {string} name - specifies the selected member name for the given field.\n     * @return {boolean}\n     * @hidden\n     */\n    Grouping.prototype.getSelectedCells = function (axis, fieldName, name) {\n        var selectedCellsInfo = [];\n        /* tslint:disable */\n        var selectedElements = this.parent.element.querySelectorAll('.' + cls.CELL_SELECTED_BGCOLOR + ',.' + cls.SELECTED_BGCOLOR);\n        /* tslint:enable */\n        for (var _i = 0, selectedElements_1 = selectedElements; _i < selectedElements_1.length; _i++) {\n            var element = selectedElements_1[_i];\n            var colIndex = Number(element.getAttribute('aria-colindex'));\n            var rowIndex = Number(element.getAttribute('index'));\n            var cell = this.parent.engineModule.pivotValues[rowIndex][colIndex];\n            if (cell && (cell.axis === axis) && !(cell.type === 'grand sum' || cell.type === 'sum') &&\n                cell.valueSort.axis === fieldName && name !== cell.actualText.toString()) {\n                selectedCellsInfo.push({\n                    axis: cell.axis,\n                    fieldName: cell.valueSort.axis.toString(),\n                    name: cell.actualText.toString(),\n                    cellInfo: cell\n                });\n            }\n        }\n        return selectedCellsInfo;\n    };\n    Grouping.prototype.createGroupDialog = function (fieldName, type) {\n        var _this = this;\n        var groupDialog = createElement('div', {\n            id: this.parentElement.id + '_GroupDialog',\n            className: 'e-group-field-settings',\n            attrs: { 'data-field': fieldName, 'data-type': type }\n        });\n        this.parentElement.appendChild(groupDialog);\n        this.groupDialog = new Dialog({\n            animationSettings: { effect: 'Fade' },\n            allowDragging: true,\n            header: this.parent.localeObj.getConstant('grouping'),\n            content: this.createGroupOptions(fieldName, type),\n            isModal: true,\n            visible: true,\n            showCloseIcon: true,\n            enableRtl: this.parent.enableRtl,\n            width: 300,\n            height: 'auto',\n            position: { X: 'center', Y: 'center' },\n            buttons: [\n                {\n                    click: this.updateGroupSettings.bind(this),\n                    buttonModel: { cssClass: cls.OK_BUTTON_CLASS, content: this.parent.localeObj.getConstant('ok'), isPrimary: true }\n                },\n                {\n                    click: function () { _this.groupDialog.hide(); },\n                    buttonModel: { cssClass: cls.CANCEL_BUTTON_CLASS, content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            overlayClick: function () { _this.removeDialog(); },\n            closeOnEscape: true,\n            close: this.removeDialog.bind(this),\n            target: this.parentElement\n        });\n        this.groupDialog.isStringTemplate = true;\n        this.groupDialog.appendTo(groupDialog);\n    };\n    /* tslint:disable:all */\n    Grouping.prototype.createGroupOptions = function (fieldName, type) {\n        var _this = this;\n        var groupInstance = this;\n        var mainDiv = createElement('div', {\n            className: 'e-group-field-div-content', id: this.parentElement.id + '_group_field_div_content',\n            attrs: { 'data-fieldName': fieldName, 'data-type': type }\n        });\n        var groupWrapperDiv1 = createElement('div', { className: 'e-group-option-wrapper' });\n        mainDiv.appendChild(groupWrapperDiv1);\n        // this.parentElement.appendChild(mainDiv);\n        var dataSource = this.parent.dataSourceSettings;\n        var groupField = PivotUtil.getFieldByName(fieldName, dataSource.groupSettings);\n        switch (type) {\n            case 'custom':\n                {\n                    var caption = void 0;\n                    var dataFields = dataSource.rows;\n                    dataFields = dataFields.concat(dataSource.columns, dataSource.values, dataSource.filters);\n                    var actualField = PivotUtil.getFieldByName(fieldName.replace(/_custom_group/g, ''), dataFields);\n                    var currentField = PivotUtil.getFieldByName(fieldName, dataFields);\n                    var nextField = PivotUtil.getFieldByName(fieldName + '_custom_group', dataFields);\n                    if (currentField) {\n                        var newFieldName = fieldName + '_custom_group';\n                        caption = nextField ? nextField.caption :\n                            this.parent.engineModule.fieldList[actualField.name].caption + (newFieldName.match(/_custom_group/g).length + 1);\n                    }\n                    var captionInputTextDiv1 = createElement('div', {\n                        className: 'e-caption-option-text', innerHTML: this.parent.localeObj.getConstant('groupFieldCaption')\n                    });\n                    var captionInputDiv1 = createElement('div', { className: 'e-group-caption-wrapper' });\n                    var captionInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_caption_option',\n                        className: 'e-group-caption-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    captionInputDiv1.appendChild(captionInputTextDiv1);\n                    captionInputDiv1.appendChild(captionInputField1);\n                    groupWrapperDiv1.appendChild(captionInputDiv1);\n                    var inputTextDiv1 = createElement('div', {\n                        className: 'e-input-option-text', innerHTML: this.parent.localeObj.getConstant('groupTitle')\n                    });\n                    var inputDiv1 = createElement('div', { className: 'e-group-input-wrapper' });\n                    var inputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_input_option',\n                        className: 'e-group-input-text',\n                        attrs: { 'type': 'text' }\n                    });\n                    inputDiv1.appendChild(inputTextDiv1);\n                    inputDiv1.appendChild(inputField1);\n                    groupWrapperDiv1.appendChild(inputDiv1);\n                    var captionInputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('captionName'),\n                        enableRtl: this.parent.enableRtl,\n                        value: caption, width: '100%'\n                    });\n                    captionInputObj1.isStringTemplate = true;\n                    captionInputObj1.appendTo(captionInputField1);\n                    var inputObj1 = new MaskedTextBox({\n                        placeholder: this.parent.localeObj.getConstant('groupName'),\n                        enableRtl: this.parent.enableRtl,\n                        width: '100%'\n                    });\n                    inputObj1.isStringTemplate = true;\n                    inputObj1.appendTo(inputField1);\n                }\n                break;\n            case 'date':\n            case 'number':\n                {\n                    var startAtWrapper = createElement('div', {\n                        className: 'e-group-start-option-wrapper'\n                    });\n                    var startAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_option',\n                        className: 'e-group_start_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var startAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_start_input',\n                        className: 'e-group_start_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    startAtWrapper.appendChild(startAtOptionDiv1);\n                    startAtWrapper.appendChild(startAtInputField1);\n                    groupWrapperDiv1.appendChild(startAtWrapper);\n                    var endAtWrapper = createElement('div', {\n                        className: 'e-group-end-option-wrapper'\n                    });\n                    var endAtOptionDiv1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_option',\n                        className: 'e-group_end_option',\n                        attrs: { 'type': 'checkbox' }\n                    });\n                    var endAtInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_end_input',\n                        className: 'e-group_end_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    endAtWrapper.appendChild(endAtOptionDiv1);\n                    endAtWrapper.appendChild(endAtInputField1);\n                    groupWrapperDiv1.appendChild(endAtWrapper);\n                    var intervalWrapper = createElement('div', {\n                        className: 'e-group-interval-option-wrapper'\n                    });\n                    var intervalTextDiv1 = createElement('div', {\n                        className: 'e-group-inerval-option-text', innerHTML: this.parent.localeObj.getConstant('groupBy')\n                    });\n                    var intervalInputField1 = createElement('input', {\n                        id: this.parentElement.id + 'group_interval_input',\n                        className: 'e-group_interval_input',\n                        attrs: { 'type': 'text' }\n                    });\n                    intervalWrapper.appendChild(intervalTextDiv1);\n                    intervalWrapper.appendChild(intervalInputField1);\n                    groupWrapperDiv1.appendChild(intervalWrapper);\n                    var startAt = undefined;\n                    var endAt = undefined;\n                    if (type === 'date') {\n                        var selectedGroups = [];\n                        var groupData = [\n                            { value: 'Seconds', text: this.parent.localeObj.getConstant('Seconds') },\n                            { value: 'Minutes', text: this.parent.localeObj.getConstant('Minutes') },\n                            { value: 'Hours', text: this.parent.localeObj.getConstant('Hours') },\n                            { value: 'Days', text: this.parent.localeObj.getConstant('Days') },\n                            { value: 'Months', text: this.parent.localeObj.getConstant('Months') },\n                            { value: 'QuarterYear', text: this.parent.localeObj.getConstant('QuarterYear') },\n                            { value: 'Quarters', text: this.parent.localeObj.getConstant('Quarters') },\n                            { value: 'Years', text: this.parent.localeObj.getConstant('Years') },\n                        ];\n                        if (groupField && groupField.type === 'Date') {\n                            selectedGroups = groupField.groupInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedGroups = ['Months'];\n                        }\n                        var startAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new DateTimePicker({\n                            placeholder: this.parent.localeObj.getConstant('chooseDate'),\n                            enableRtl: this.parent.enableRtl,\n                            format: 'dd/MM/yyyy hh:mm:ss a',\n                            enabled: !(endAt === undefined),\n                            width: '100%',\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        MultiSelect.Inject(CheckBoxSelection);\n                        var intervalObj_1 = new MultiSelect({\n                            dataSource: groupData,\n                            value: selectedGroups,\n                            fields: { text: 'text', value: 'value' },\n                            mode: 'CheckBox',\n                            showDropDownIcon: true,\n                            enableSelectionOrder: false,\n                            placeholder: this.parent.localeObj.getConstant('selectGroup'),\n                            filterBarPlaceholder: this.parent.localeObj.getConstant('example') + ' ' + this.parent.localeObj.getConstant('Months'),\n                            enableRtl: this.parent.enableRtl,\n                            select: function () {\n                                groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).removeAttribute('disabled');\n                            },\n                            removed: function () {\n                                /* tslint:disable */\n                                if (intervalObj_1.checkBoxSelectionModule.activeLi.length === 0) {\n                                    groupInstance.groupDialog.element.querySelector('.' + cls.OK_BUTTON_CLASS).setAttribute('disabled', 'disabled');\n                                }\n                                /* tslint:enable */\n                            }\n                        });\n                        intervalObj_1.isStringTemplate = true;\n                        intervalObj_1.appendTo(intervalInputField1);\n                        startAtInputObj.value = startAt === undefined ? null : new Date(startAt);\n                        startAtInputObj.dataBind();\n                        endAtInputObj.value = endAt === undefined ? null : new Date(endAt);\n                        endAtInputObj.dataBind();\n                    }\n                    else {\n                        var selectedInterval = undefined;\n                        if (groupField && groupField.type === 'Number') {\n                            selectedInterval = groupField.rangeInterval;\n                            startAt = groupField.startingAt ? groupField.startingAt.toString() : undefined;\n                            endAt = groupField.endingAt ? groupField.endingAt.toString() : undefined;\n                        }\n                        else {\n                            selectedInterval = 2;\n                        }\n                        var startAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: startAt === undefined ? undefined : parseInt(startAt, 10),\n                            enabled: !(startAt === undefined),\n                            width: '100%',\n                        });\n                        startAtInputObj.isStringTemplate = true;\n                        startAtInputObj.appendTo(startAtInputField1);\n                        var endAtInputObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            value: endAt === undefined ? undefined : parseInt(endAt, 10),\n                            enabled: !(endAt === undefined),\n                            width: '100%'\n                        });\n                        endAtInputObj.isStringTemplate = true;\n                        endAtInputObj.appendTo(endAtInputField1);\n                        var intervalObj = new NumericTextBox({\n                            placeholder: this.parent.localeObj.getConstant('enterValue'),\n                            enableRtl: this.parent.enableRtl,\n                            showClearButton: true,\n                            format: '###',\n                            min: 1,\n                            value: selectedInterval,\n                            width: '100%'\n                        });\n                        intervalObj.isStringTemplate = true;\n                        intervalObj.appendTo(intervalInputField1);\n                    }\n                    var startAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('startAt'),\n                        checked: !(startAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var startAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_start_input', NumericTextBox));\n                            startAtObj.enabled = args.checked;\n                            startAtObj.dataBind();\n                        }\n                    });\n                    startAtObj.isStringTemplate = true;\n                    startAtObj.appendTo(startAtOptionDiv1);\n                    var endAtObj = new CheckBox({\n                        label: this.parent.localeObj.getConstant('endAt'),\n                        checked: !(endAt === undefined),\n                        enableRtl: this.parent.enableRtl,\n                        change: function (args) {\n                            var endAtObj = (type === 'date' ?\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', DateTimePicker) :\n                                getInstance('#' + _this.parentElement.id + 'group_end_input', NumericTextBox));\n                            endAtObj.enabled = args.checked;\n                            endAtObj.dataBind();\n                        }\n                    });\n                    endAtObj.isStringTemplate = true;\n                    endAtObj.appendTo(endAtOptionDiv1);\n                }\n                break;\n        }\n        return mainDiv;\n    };\n    /* tslint:disable */\n    Grouping.prototype.updateGroupSettings = function () {\n        var dialogElement = this.groupDialog.element;\n        var groupType = dialogElement.getAttribute('data-type');\n        var fieldName = dialogElement.getAttribute('data-field');\n        var groupFields = PivotUtil.cloneGroupSettings(this.parent.dataSourceSettings.groupSettings);\n        if (groupFields.length === 0 && !this.parent.clonedDataSet && !this.parent.clonedReport) {\n            var dataSet = this.parent.engineModule.data;\n            this.parent.clonedDataSet = PivotUtil.getClonedData(dataSet);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: [] } }, true);\n            this.parent.clonedReport = extend({}, this.parent.dataSourceSettings, null, true);\n            this.parent.setProperties({ dataSourceSettings: { dataSource: dataSet } }, true);\n        }\n        if (groupType === 'custom') {\n            var inputInstance = getInstance('#' + this.parentElement.id + 'group_input_option', MaskedTextBox);\n            var captionInputInstance = getInstance('#' + this.parentElement.id + 'group_caption_option', MaskedTextBox);\n            removeClass([inputInstance.element], cls.EMPTY_FIELD);\n            if (inputInstance.value === null || inputInstance.value === '') {\n                addClass([inputInstance.element], cls.EMPTY_FIELD);\n                inputInstance.element.focus();\n                return;\n            }\n            var selectedOptions = this.getSelectedOptions(this.selectedCellsInfo);\n            var customGroup = { groupName: inputInstance.value, items: selectedOptions };\n            var splicedItems = [];\n            var newItems = [];\n            var field = { name: fieldName, caption: captionInputInstance.value, type: 'Custom', customGroups: [] };\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    field = groupFields[i];\n                    field.caption = captionInputInstance.value;\n                    for (var j = 0, len_1 = field.customGroups.length; j < len_1; j++) {\n                        if (field.customGroups[j]) {\n                            var group = field.customGroups[j];\n                            if (group.items && PivotUtil.isContainCommonElements(group.items, selectedOptions)) {\n                                splicedItems = this.mergeArray(splicedItems, [group.groupName]);\n                                newItems = this.mergeArray(newItems, group.items);\n                                field.customGroups.splice(j, 1);\n                                j--;\n                                len_1--;\n                            }\n                        }\n                    }\n                    for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n                        var item = selectedOptions_1[_i];\n                        var index = newItems.indexOf(item);\n                        if (index !== -1) {\n                            newItems.splice(index, 1);\n                        }\n                    }\n                    newItems = this.mergeArray(newItems, [customGroup.groupName]);\n                    field.customGroups.push(customGroup);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                field.customGroups.push(customGroup);\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, (splicedItems.length === 0 ? customGroup.items : splicedItems), newItems);\n        }\n        else if (groupType === 'date' || groupType === 'number') {\n            var startCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_start_option', CheckBox);\n            var endCheckBoxInstance = getInstance('#' + this.parentElement.id + 'group_end_option', CheckBox);\n            var startInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_start_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_start_input', NumericTextBox));\n            var endInputInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_end_input', DateTimePicker) :\n                getInstance('#' + this.parentElement.id + 'group_end_input', NumericTextBox));\n            var intervalInstance = (groupType === 'date' ?\n                getInstance('#' + this.parentElement.id + 'group_interval_input', MultiSelect) :\n                getInstance('#' + this.parentElement.id + 'group_interval_input', NumericTextBox));\n            var startAt = startCheckBoxInstance.checked ? startInputInstance.value.toString() : undefined;\n            var endAt = endCheckBoxInstance.checked ? endInputInstance.value.toString() : undefined;\n            var field = { name: fieldName, startingAt: startAt, endingAt: endAt };\n            if (groupType === 'date') {\n                var selectedItems = [];\n                for (var _a = 0, _b = intervalInstance.value; _a < _b.length; _a++) {\n                    var list = _b[_a];\n                    selectedItems.push(list);\n                }\n                field.type = 'Date';\n                field.groupInterval = selectedItems;\n            }\n            else {\n                field.type = 'Number';\n                field.rangeInterval = intervalInstance.value;\n            }\n            var isUpdated = false;\n            for (var i = 0, len = groupFields.length; i < len; i++) {\n                if (groupFields[i].name === fieldName) {\n                    groupFields.splice(i, 1, field);\n                    this.isUpdate = true;\n                    isUpdated = true;\n                    break;\n                }\n            }\n            if (!isUpdated) {\n                this.isUpdate = true;\n                groupFields.push(field);\n            }\n            groupFields = this.validateSettings(fieldName, groupFields, groupType, [], []);\n        }\n        this.groupDialog.close();\n        this.updateDateSource(groupFields, groupType);\n    };\n    /* tslint:enable */\n    Grouping.prototype.getGroupBasedSettings = function (groupFields) {\n        var groups = {};\n        for (var _i = 0, groupFields_1 = groupFields; _i < groupFields_1.length; _i++) {\n            var group = groupFields_1[_i];\n            if (groups[group.type]) {\n                groups[group.type].push(group);\n            }\n            else {\n                groups[group.type] = [group];\n            }\n        }\n        return groups;\n    };\n    Grouping.prototype.getGroupByName = function (groupFields) {\n        var customFields = {};\n        for (var _i = 0, groupFields_2 = groupFields; _i < groupFields_2.length; _i++) {\n            var field = groupFields_2[_i];\n            var name_1 = field.name.replace(/_custom_group/g, '');\n            if (customFields[name_1]) {\n                customFields[name_1].push(field);\n            }\n            else {\n                customFields[name_1] = [field];\n            }\n        }\n        return customFields;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.validateSettings = function (fieldName, groupFields, groupType, splicedItems, newItems) {\n        var validatedSettings = [];\n        var groups = this.getGroupBasedSettings(groupFields);\n        var groupOrders = ['Date', 'Number', 'Custom'];\n        if (groups[groupOrders[2]] && groupType === 'custom') {\n            var customFields = this.getGroupByName(groups[groupOrders[2]]);\n            if (customFields[fieldName.replace(/_custom_group/g, '')]) {\n                var customGroups = customFields[fieldName.replace(/_custom_group/g, '')];\n                var fields = customGroups.map(function (item, pos) { return item.name; });\n                if (newItems) {\n                    /* tslint:disable-next-line:max-line-length */\n                    customGroups = this.modifyParentGroupItems(fieldName, customGroups, splicedItems, newItems, fields);\n                }\n                else {\n                    customGroups = this.removeGroupSettings(fieldName.replace('_custom_group', ''), splicedItems, customGroups, fields);\n                }\n            }\n            var orderedGroups = [];\n            for (var _i = 0, _a = Object.keys(customFields); _i < _a.length; _i++) {\n                var field = _a[_i];\n                var fields = customFields[field].map(function (item, pos) { return item.name; });\n                orderedGroups = this.reOrderSettings(customFields[field], fields, orderedGroups, field);\n            }\n            groups[groupOrders[2]] = orderedGroups;\n        }\n        else if ((groupType === 'date' || groupType === 'number') && !newItems) {\n            var groupFields_3 = groupType === 'date' ? groups[groupOrders[0]] : groups[groupOrders[1]];\n            if (groupType === 'date') {\n                groups[groupOrders[0]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            else {\n                groups[groupOrders[1]] = groupFields_3.filter(function (field) { return field.name !== fieldName; });\n            }\n            this.isUpdate = true;\n        }\n        for (var _b = 0, groupOrders_1 = groupOrders; _b < groupOrders_1.length; _b++) {\n            var order = groupOrders_1[_b];\n            if (groups[order]) {\n                validatedSettings = validatedSettings.concat(groups[order]);\n            }\n        }\n        return validatedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.reOrderSettings = function (customGroups, fields, orderedSettings, fieldName) {\n        var index = fields.indexOf(fieldName);\n        if (index > -1 && customGroups[index].customGroups && customGroups[index].customGroups.length > 0) {\n            orderedSettings.push(customGroups[index]);\n            this.reOrderSettings(customGroups, fields, orderedSettings, fieldName + '_custom_group');\n        }\n        return orderedSettings;\n    };\n    /* tslint:disable-next-line:max-line-length */\n    Grouping.prototype.modifyParentGroupItems = function (fieldName, groupFields, splicedItems, newItems, fields) {\n        var index = fields.indexOf(fieldName + '_custom_group');\n        if (index !== -1) {\n            var field = groupFields[index];\n            var selectedOptions = [];\n            if (field.customGroups && field.customGroups.length > 0) {\n                for (var i = 0, len = field.customGroups.length; i < len; i++) {\n                    if (field.customGroups[i]) {\n                        var isItemsUpdated = false;\n                        var group = field.customGroups[i];\n                        if (group.items) {\n                            for (var _i = 0, splicedItems_1 = splicedItems; _i < splicedItems_1.length; _i++) {\n                                var item = splicedItems_1[_i];\n                                var pos = group.items.indexOf(item);\n                                if (pos !== -1) {\n                                    group.items.splice(pos, 1);\n                                    this.isUpdate = true;\n                                    isItemsUpdated = true;\n                                }\n                            }\n                            if (isItemsUpdated) {\n                                group.items = this.mergeArray(group.items, newItems);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return groupFields;\n    };\n    Grouping.prototype.mergeArray = function (collection1, collection2) {\n        var resultArray = [];\n        var array = collection1.concat(collection2);\n        var len = array.length;\n        var assoc = {};\n        while (len--) {\n            var item = String(array[len]);\n            if (!assoc[item]) {\n                resultArray.unshift(item);\n                assoc[item] = true;\n            }\n        }\n        return resultArray;\n    };\n    Grouping.prototype.removeDialog = function () {\n        if (this.parent.grid && this.parent.grid.isDestroyed) {\n            return;\n        }\n        this.parent.grid.clearSelection();\n        if (this.groupDialog && !this.groupDialog.isDestroyed) {\n            this.groupDialog.destroy();\n        }\n        if (document.getElementById(this.parentElement.id + '_GroupDialog')) {\n            remove(document.getElementById(this.parentElement.id + '_GroupDialog'));\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.addEventListener = function () {\n        this.handlers = {\n            load: this.render\n        };\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.initGrouping, this.handlers.load, this); //For initial rendering\n    };\n    /**\n     * @hidden\n     */\n    Grouping.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeDialog();\n        this.parent.off(events.initGrouping, this.handlers.load);\n    };\n    /**\n     * To destroy the pivot button event listener\n     * @return {void}\n     * @hidden\n     */\n    Grouping.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Grouping;\n}());\nexport { Grouping };\n","import * as index from './index';\nindex.PivotView.Inject(index.GroupingBar, index.FieldList, index.CalculatedField, index.ConditionalFormatting, index.VirtualScroll, index.DrillThrough, index.Toolbar, index.PivotChart, index.PDFExport, index.ExcelExport, index.NumberFormatting, index.Grouping);\nexport * from './index';\n"],"names":["PivotUtil","getType","value","getDay","getHours","getMinutes","getSeconds","getMilliseconds","resetTime","date","setHours","getClonedData","data","clonedData","_i","_a","length","item","fields","Object","keys","keyPos","framedSet","push","getClonedPivotValues","pivotValues","clonedSets","i","j","this","getClonedObj","undefined","inArray","collection","cnt","isContainCommonElements","collection1","collection2","lnt","setPivotProperties","control","properties","allowServerDataBinding","pivotGridModule","setProperties","getClonedDataSourceSettings","dataSourceSettings","catalog","cube","providerType","url","localeIdentifier","excludeFields","isNullOrUndefined","slice","expandAll","allowLabelFilter","allowValueFilter","allowMemberFilter","enableSorting","rows","cloneFieldSettings","columns","filters","values","filterSettings","cloneFilterSettings","sortSettings","cloneSortSettings","drilledMembers","cloneDrillMemberSettings","valueSortSettings","CloneValueSortObject","valueAxis","formatSettings","cloneFormatSettings","calculatedFieldSettings","cloneCalculatedFieldSettings","showSubTotals","showRowSubTotals","showColumnSubTotals","showGrandTotals","showRowGrandTotals","showColumnGrandTotals","showHeaderWhenEmpty","alwaysShowValueHeader","conditionalFormatSettings","cloneConditionalFormattingSettings","emptyCellsTextContent","groupSettings","cloneGroupSettings","updateDataSourceSettings","clonedCollection","collection_1","set","name","caption","axis","baseField","baseItem","isCalculatedField","isNamedSet","showNoDataItems","type","collection_2","condition","items","levelCount","measure","selectedField","showDateFilter","showLabelFilter","showNumberFilter","value1","value2","collection_3","order","collection_4","delimiter","collection_5","calendar","currency","format","maximumFractionDigits","maximumSignificantDigits","minimumFractionDigits","minimumIntegerDigits","minimumSignificantDigits","skeleton","useGrouping","columnIndex","headerDelimiter","headerText","sortOrder","collection_6","formatString","formula","hierarchyUniqueName","collection_7","applyGrandTotals","conditions","label","style","backgroundColor","color","fontFamily","fontSize","collection_8","customGroups","cloneCustomGroups","endingAt","startingAt","groupInterval","rangeInterval","collection_9","groupName","getFilterItemByName","fieldName","filterItems","DataManager","json","executeLocal","Query","where","getFieldByName","PivotEngine","aggregatedValueMatrix","valueContent","formatFields","dateFormatFunction","calculatedFields","calculatedFormulas","saveDataHeaders","columnCount","rowCount","colFirstLvl","rowFirstLvl","rowStartPos","colStartPos","enableValueSorting","headerCollection","rowHeaders","columnHeaders","rowHeadersCount","columnHeadersCount","rMembers","cMembers","groupingFields","valueMatrix","indexMatrix","memberCnt","pageInLimit","endPos","removeCount","colHdrBufferCalculated","colValuesLength","rowValuesLength","slicedHeaders","fieldFilterMem","filterPosObj","selectedHeaders","selectedHeader","rawIndexObject","isEditing","actualData","groupRawIndex","allowDataCompression","frameHeaderObjectsCollection","headerObjectsCollection","columnKeys","fieldDrillCollection","customRegex","formatRegex","prototype","renderEngine","dataSource","customProperties","fn","getValueCellInfo","globalize","Internationalization","localeObj","fieldsType","enableSort","isValueFilterEnabled","isDrillThrough","pageSettings","getGroupedRawData","formats","groups","getGroupData","validateFilters","isExpandAll","isValueFiltersAvail","isMutiMeasures","emptyCellTextContent","valueSortData","savedFieldList","getFieldList","removeIrrelevantFields","fieldList","fillFieldMembers","updateSortSettings","generateValueMatrix","filterMembers","columnLength","updateFilterMembers","generateGridData","report","pos","indexOf","splice","frameHeaderWithKeys","countFields","filter","map","hasCountField","realData","headerFields","concat","groupRawData","finalData","groupKeys","indexLength","currData","members","vPos","hPos","memberJoin","join","currFieldName","currValue","savedData","summType","fieldkeySet","this_1","state_1","group","groupFields","customGroupFieldName","sort","a","b","len","Date","toString","len_1","interval","isInRangeAvail","getRange","getTime","newDate","newFieldName","setFullYear","getFullYear","month","Math","ceil","getMonth","getConstant","setMonth","getDate","setMinutes","setSeconds","groupValue","len_2","cGroup","isDataMatch","isCompleteSet","keys_1","key","isDataSource","axisFields","gCnt","groupField","axisFields_1","actualField","dataFields","newField","len_3","startValue","endValue","cStartValue","cEndValue","unframedSet","dataLength","framedSetLength","max","apply","len_4","duplicateData","frameData","index","lastIndexOf","_b","keys_2","_c","axisFields_2","field","len_5","customFieldName","pattern","match","parentField","replace","customGroupField","_d","axisFields_3","formatfield","extend","cValue","isRangeAvail","cDate","startDate","endDate","parseInt","getFormattedFields","exactFormat","getDateFormat","fullFormat","isSort","isValueFilteringEnabled","getCalculatedField","lenE","isSelected","isExcelFilter","filterType","dateMember","formattedMembers","id","isCustomField","updateTreeViewData","updateFieldList","aggregateType","actualFormula","fieldKeys","this_2","calc","calcProperties","powerFunction","formulaType","split","lmt","aggregateValue","selectedString","filterElements","filterElements_1","dataFields_1","indMat","dlen","fList","kLn","kl","isDataAvail","membersCnt","fmembersCnt","dl","mkey","fKey","formattedValue","getFormattedValue","formattedText","String","actualText","hasOwnProperty","ordinal","isDrilled","dateText","vMat","keyLen","flList","tkln","sln","slt","source","filterRw","list","isInclude","getFilters","dln","include","ln","exclude","indexObject","ilist","rln","rlt","filterElement","isValidFilterField","applyLabelFilter","frameFilterList","allowMemberFiltering","allowLabelFiltering","isValidFilterElement","filterTypes","isNotValidFilterElement","isItemAvail","dataFields_2","getLabelFilterMembers","date1","date2","getDateFilterMembers","members_1","member","operand1","getParsedValue","operand2","validateFilterValue","excludeOperators","operator","members_2","filterValue","toLowerCase","members_3","val","isMemberInclude","isLabelFilter","updateFilter","fln","allowFil","final","filterObj","memberObj","indx","iln","ilt","applyValueFiltering","rowData","level","valueFilter","rowFilterData","isValueFiltered","allMember","getFilteredData","rLen","mPos","aggregate","getAggregateValue","cellDetails","row","column","cellSets","getCellSet","rowCellType","hasChild","columnCellType","skipFormatting","isLevelFiltered","removefilteredData","valueFilteredData","validateFilteredParentData","formatSetting","parseNumber","filteredData","valueSort","levelName","allMemberData","rows_1","rowFilteredData","index_1","index_2","_e","_f","updateFramedHeaders","framedHeaders","dataHeaders","filteredHeaders","headers","framedHeaders_1","dHeader","isHeaderAvail","validateFilteredHeaders","filterFramedHeaders","filteredHeaders_1","vHeader","isEmptyDataAvail","isEmptyData","updateGridData","frameDrillObject","getIndexedHeaders","insertAllMembersCommon","headerContent","rowheads","colheads","columnFilteredData","valuesCount","valueFilters","valueFields","values_1","filterSettings_1","isAvail","cLen","applyValueSorting","calculatePagingValues","getAggregatedHeaders","getHeaderData","insertSubTotals","getTableData","applyAdvancedAggregate","isEngineUpdated","onDrill","drilledItem","headersInfo","getHeadersInfo","performDrillOperation","position","updateEngine","onSort","sortItem","performSortOperation","onFilter","filterItem","posObj","addPos","performFilterCommonUpdate","onAggregation","onCalcOperation","currentPosition","count","memberName","action","sortedHeaders","updateHeadersCount","getSortedHeaders","performFilterDeletion","filterObjects","loopIn","this_3","engine_1","engine","matchIndexes","performFilterAddition","this_4","memberNameObj_1","excessHeaders","rawHeaders","headerNames_1","rawHeaders_1","header","grandHeader","pop","insertPosition","insertTotalPosition","getAxisByFieldName","fields_1","axisCount","isDrill","lenCnt","framedHeader","isNullArgument","textArray","hText","mIndex","mType","getMember","sortByValueRow","vlen","aggreColl","rMembers_1","rMembers_2","insertAllMember","rowLength","rowCnt","rowCells","savedCell","spanCnt","indexObj","colCnt","cell","colSpan","colIndex","rowPos","rowSpan","cellType","rowIndex","isSpanned","fieldCnt","drillOption","memberString","keyInd","parentMember","valueFil","hierarchy","rlen","decisionObj","childrens","isNoData","isDateType","savedMembers","lt","memInd","headerValue","availData","filterPosition","getOrderedIndex","orderedIndex","slicedHeader","diff","summCell","lt_1","rowCurrentPage","rowSize","exactStartPos","performSlicing","columnCurrentPage","columnSize","startPos","removeChildMembers","framedMember","customText","reformAxis","tnum","vlt","rTotal","cTotal","actCnt","Number","isLeastNode","hpos","actpos","vln","name_1","calObj","vData","cln","clt","updateRowData","recursiveRowData","isHeaderSelected","rows_2","getAggregatedHeaderData","columns_1","isChildren","headers_1","updateSelectedHeaders","childMembers","aggregateHeaders","children","vCount","isChild","uniqueName","valueCount","pivotIndex","isIndexFilled","colIndex_1","updateAggregates","indexCollection_1","selectedHeaders_1","selectedHeaderCollection","name_2","isRowBaseField","activeValues","indexCollection","activeColumn","rowindexCollection","selectedRowValues","selectedColumnValues","len_6","cLevelName","axisObj","isSelectedColumn","len_7","uniqueLevelName","colIndex_3","currentSet","selectedHeaderCollection_1","colIndex_2","indexCollection_2","cVal","isNaN","formatNumber","clen","_g","rowindexCollection_2","selectedHeaderCollection_2","rowindexCollection_1","_h","indexCollection_3","_j","selectedHeaderCollection_3","_k","colIndex_4","_l","indexCollection_4","_m","selectedHeaderCollection_4","_o","rowindexCollection_3","_p","indexCollection_5","_q","colIndex_5","_r","selectedHeaderCollection_5","_s","selectedHeaderCollection_6","gTotalIndex","totalValues","gTotalIndex_1","rIndex","gTotalIndex_2","isSum","subTotal","toLocaleString","currentCellSets","keys_3","vcnt","colItmLn","sortText","isTotalHide","lvl","isSingleMeasure","name_3","ri","cellValue","avgCnt","isInit","isValueExist","duplicateValues","currentVal","indexVal","avgVal","avgDifferenceVal","indexVal_1","pow","sqrt","NaN","isFirst","isMaxFirst","calcField","aggregateField","aggregatedValue","value_1","type_1","evaluate","Infinity","JSON","parse","obj","Function","commonValue","formatField","test","integerPart","exception","items_1","text","RegExp","initialLoad","uiUpdate","contentReady","dataReady","ROOT","RTL","DEVICE","ICON","COLLAPSE","EXPAND","TABLE","CALCINPUT","FLAT","FORMAT","FORMULA","MENU_HIDE","INPUT","CELL_SELECTED_BGCOLOR","SELECTED_BGCOLOR","PIVOT_DISABLE_ICON","PIVOT_SELECT_ICON","AggregateMenu","parent","render","args","parentElement","openContextMenu","menuInfo","createContextMenu","currentMenu","currentTarget","getBoundingClientRect","enableRtl","open","top","left","menuOptions","element","beforeOpen","beforeMenuOpen","bind","select","selectOptionInContextMenu","removeContextMenu","document","getElementById","innerHTML","contextMenu","createElement","appendChild","Menu","isStringTemplate","appendTo","zIndex","display","createValueSettingsDialog","target","_this","valueDialog","className","attrs","data-field","Dialog","animationSettings","effect","allowDragging","content","createFieldOptions","isModal","visible","showCloseIcon","width","height","X","Y","buttons","click","updateValueSettings","buttonModel","cssClass","isPrimary","hide","closeOnEscape","overlayClick","removeDialog","close","buttonElement","fieldCaption","getAttribute","summaryType","summaryDataSource","baseItemTypes","baseFieldTypes","fieldDataSource","fieldItemDataSource","engineModule","mainDiv","data-type","data-caption","data-basefield","data-baseitem","textWrappper","filterWrapperDiv1","optionWrapperDiv1","optionWrapperDiv2","optionWrapperDiv3","texttitle","textContent","inputTextDiv1","optionTextDiv1","optionTextDiv2","optionTextDiv3","inputDiv1","dropOptionDiv1","dropOptionDiv2","dropOptionDiv3","inputField1","popupInstance","optionWrapper1","DropDownList","change","optionWrapper2","enabled","optionWrapper3","refresh","filterBarPlaceholder","allowFiltering","inputObj1","MaskedTextBox","placeholder","menu","valuefields","contentElement","querySelector","captionName","setAttribute","vCnt","dataSourceItem","lastAggregationInfo","updateDataSource","isRefreshed","allowDeferLayoutUpdate","getModuleName","renderMode","notify","events.uiUpdate","triggerPopulateEvent","dialogElement","captionInstance","getInstance","summaryInstance","baseFieldInstance","baseItemInstance","isDestroyed","destroy","remove","Render","indentCollection","colPos","lastSpan","lvlCollection","hierarchyCollection","lvlPosCollection","hierarchyPosCollection","measurePos","maxMeasurePos","hierarchyCount","resColWidth","showGroupingBar","groupingBarModule","isAdaptive","dataType","olapEngineModule","gridSettings","formatList","getFormatList","aggMenu","gridHeaderCellInfo","gridCellCollection","injectGridModules","getRowStartPos","grid","frameDataSource","frameStackedHeaders","isScrolling","resizeInfo","refreshColumns","setGridRowWidth","getHeaderContent","calculateGridWidth","calculateGridHeight","bindGrid","on","headerRefreshed","refreshHeader","enableVirtualization","mHdr","mCont","vtr","virtualHeaderDiv","setStyleAttribute","transform","scrollLeft","isEmpty","Grid","frozenColumns","frozenRows","frameEmptyData","frameEmptyColumns","locale","allowExcelExport","allowPdfExport","allowResizing","allowTextWrap","allowReordering","allowSelection","contextMenuItems","selectedRowIndex","selectionSettings","textWrapSettings","printMode","rowHeight","gridLines","contextMenuClick","contextMenuOpen","beforeCopy","beforePrint","printComplete","rowSelecting","rowSelected","rowDeselecting","rowDeselected","cellSelecting","cellSelected","cellDeselecting","cellDeselected","resizeStart","columnDragStart","columnDrag","columnDrop","beforeExcelExport","resizing","setGroupWidth","resizeStop","onResizeStop","queryCellInfo","dataBound","headerCellInfo","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","excelQueryCellInfo","pdfQueryCellInfo","beforePdfExport","isBlazor","lastGridSettings","gridObject","pivotColumns","trigger","renderModule","selected","rowRangeSelection","enable","selectionModule","selectRowsByRange","startIndex","endIndex","rowCellBoundEvent","columnCellBoundEvent","excelColumnEvent","pdfRowEvent","excelRowEvent","pdfColumnEvent","cellTemplate","getCellTemplate","enableHtmlSanitizer","appendHtml","targetCell","SanitizeHtmlHelper","sanitize","outerHTML","borderRight","borderLeft","widthService","setWidthToTable","isEmptyGrid","currentView","hideScroll","events.contentReady","cellTarget","lastCellClicked","elem","bool","isGroupElement","classList","contains","cancel","allowGrouping","groupingModule","validateField","querySelectorAll","cls.EXPAND","add","cls.MENU_HIDE","cls.COLLAPSE","addClass","removeClass","isUngroupOption","selectedCellsInfo","getSelectedCells","cellInfo","selectedOptions","getSelectedOptions","customGroup","allowDrillThrough","innerText","allowCalculatedField","event","MouseEvent","view","window","bubbles","cancelable","ele","rowIndx","colIndx","pivotValue","pdfExport","excelExport","csvExport","dispatchEvent","exp","colp","calculatedFieldModule","createCalculatedFieldDialog","updateAggregate","args_1","option","contextMenuModule","isValueField","valueCnt","Inject","Freeze","ExcelExport","PdfExport","Selection","Reorder","Resize","ContextMenu","updateGridSettings","updatePivotColumns","layoutRefresh","clearColumnSelection","pivotColumn","fillGridColumns","forEach","cls.SELECTED_BGCOLOR","appendValueSortIcon","tCell","rCnt","cCnt","vSort","lock","padding-top","customAttributes","refreshUI","offsetWidth","firstColWidth","gridColumn","firstRowHeight","offsetHeight","e","clearTimeout","timeOutObj","setTimeout","onSelect","pivotArgs","currentCell","selectedElements_1","customClass","hyperlinkSettings","isValueCell","onOlapRowCellBoundEvent","localizedText","cls.ICON","title","isRowCellHyperlink","enableHyperlink","pivotView","styles","isSummaryCellHyperlink","isValueCellHyperlink","colindex","templateID","unWireEvents","wireEvents","pivotview","rowMeasurePos","tupRowInfo","tupInfo","memberPosition","uNameCollection","fieldSep","substring","memberType","nxtIndextCount","lastIndextCount","prevHasChild","fPos","indent","iPos","maxIndent","hierarchyName","levelUniqueName","currPos_1","lvlPosition","hierarchyPOs","currPos_2","currHierarchyPos","currPos","lvlPos","hasChild_1","node","borderBottomWidth","onOlapColumnCellBoundEvent","isColumnCellHyperlink","hdrdiv","lineHeight","div","navigator","userAgent","insertBefore","prevCell","isSpannedCell","colLength","currCell","parentCellSpan","parentCellPos","onHyperCellClick","observedArgs","getElement","dataContent","start","end","0","1","calculateColWidth","colCount","parWidth","parseFloat","columnWidth","colWidth","floor","resizeColWidth","eleWidth","elementCreated","gridHeight","parHeight","getHeightAsNumber","tableHeight","cls.TABLE","contentHeight","tableWidth","horizontalOverflow","verticalOverflow","commonOverflow","integrateModel","headerCnt","headerSplit","splitPos","columnModel","actualCnt","colField","setSavedWidth","minWidth","tmpSpan","innerModel","innerPos","clipMode","triggerColumnRenderEvent","formatArray","fString","fCnt","exportHeaderEvent","hAlign","exportContentEvent","paragraphIndent","gridCell","EventHandler","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","p","__","constructor","create","__decorate","decorators","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","FieldOptions","_super","Property","ChildProperty","Filter","FieldListFieldOptions","Style","ConditionalFormatSettings","Sort","FormatSettings","GroupSettings","CalculatedFieldSettings","CustomGroups","DrillOptions","ValueSortSettings","DataSourceSettings","Collection","Complex","GridSettings","PivotSelectionSettings","mode","cellSelectionMode","WrapMode","Event","exportToExcel","clonedValues","currentPivotValues","applyFormatting","fileName","footer","dataCollections","workSheets","dataColl","colLen","rowLen","actualrCnt","maxLevel","cells","pivotCell","rowOrdinal","measureName","numberFormat","bold","wrapText","backColor","fontColor","fontName","vAlign","borders","lineStyle","Workbook","worksheets","save","PDFExport","addPage","eventParams","page","pages","font","PdfStandardFont","PdfFontFamily","TimesRoman","PdfFontStyle","Regular","brush","PdfSolidBrush","PdfColor","pen","PdfPen","headerTemplate","PdfPageTemplateElement","RectangleF","graphics","clientSize","drawString","PdfStringFormat","PdfTextAlignment","Center","template","footerTemplate","bottom","hexDecToRgb","hexDec","Error","bigint","g","getFontStyle","theme","fontType","Bold","italic","Italic","underline","Underline","strikeout","Strikeout","getBorderStyle","borderStyle","PdfBorders","pdfColor","all","borderWidth","borderColor","dashStyle","getDashStyle","dashType","getStyle","border","gridStyle","Helvetica","getFontFamily","fontStyle","penBrushColor","setRecordThemeStyle","record","setFont","setTextBrush","borderRecord","setBorder","exportToPDF","applyEvent","headerStyle","firstColumnWidth","size","dataCollIndex","vLen","allowRepeatHeader","integratedCnt","pdfGrid","PdfGrid","pageSize","isColHeader","pdfGridRow","getHeader","addRow","localCnt","isEmptyRow","getCell","columnSpan","applyStyle","processCellStyle","stringFormat","indent_1","alignment","Right","Left","lineAlignment","PdfVerticalAlignment","Middle","getColumn","draw","PointF","conditionalFormattingModule","hexToRgb","backgroundBrush","textBrush","family","getFont","cellStyle","arg","textBrushColor","textPenColor","textColor","textPen","PdfDocument","KeyboardInteraction","keyConfigs","tab","enter","shiftUp","shiftDown","shiftLeft","shiftRight","upArrow","downArrow","leftArrow","rightArrow","escape","tabIndex","pivotViewKeyboardModule","KeyboardEvents","keyAction","keyActionHandler","eventName","processTab","processEnter","processSelection","clearSelection","getNextButton","allPivotButtons","call","nextElement","closest","gridFocus","serviceLocator","getService","nextButton","currentInfo","skipAction","focus","getFocusedElement","preventDefault","showFieldList","gridElement","getElementsByTagName","lastChild","cls.CELL_SELECTED_BGCOLOR","ele_1","control_1","rowIndex_1","nodeName","getParentElement","previousSibling","nextSibling","colSpan_1","selectArgs","isCellClick","applyColumnSelection","PivotContextMenu","renderContextMenu","onBeforeMenuOpen","onSelectContextMenu","cMenu","menuObj","fieldType","fieldElement","items_2","items_3","dropClass","pivotCommon","dataSourceUpdate","btnElement","VirtualScroll","previousValues","frozenPreviousValues","eventType","addInternalEvents","fCont","clearEvents","onHorizondalScroll","onVerticalScroll","common","onWheelScroll","setPageXY","onTouchScroll","isPreventScrollEvent","scrollTop","deltaMode","deltaY","getPointXY","pageXY","x","y","touches","pageX","pageY","pointerType","update","direction","rowValues_1","exactSize_1","section","scrollPosObject","vertical","hideWaitingPopup","showWaitingPopup","rowStartPos_1","pivot_1","ejsInterop","copyWithoutCircularReferences","interopAdaptor","invokeMethodAsync","then","updateBlazorData","exactPage","verticalSection","scrollPage","pageRowStartPos","colValues_1","exactSize_2","horizontal","pivot","colStartPos_1","pivot_2","horizontalSection","pageColStartPos","verticalScrollScale","horizontalScrollScale","horiOffset","vertiOffset","trim","scrollerBrowserLimit","excessMove","notLastPage","clientWidth","vWidth","clientHeight","movableTable","vHeight","removeInternalEvents","off","DrillThroughDialog","indexString","isUpdated","gridIndexObjects","gridData","showDrillThroughDialog","eventArgs","rawData","removeDrillThroughDialog","drillThroughDialog","dialogPopUp","createDrillThroughGrid","drillThroughGrid","editSettings","allowEditing","dataWithPrimarykey","beforeClose","addItems","currModule_1","AddItem","RemoveItem","ModifiedItem","body","visibility","drillThroughBody","drillThroughBodyHeader","toolbarItems","allowCommandColumns","Toolbar","ColumnChooser","showColumnChooser","toolbar","gridColumns","allowPaging","formatData","dialogModule","gridObj","Edit","Page","allowEditOnDblClick","CommandColumn","showInColumnChooser","commands","buttonOption","iconCss","isPrimaryKey","actionComplete","requestType","beforeBatchSave","frameGridColumns","reverse","validationRules","required","editType","newData","rawData_1","DrillThrough","mouseClickHandler","executeDrillThrough","valueCaption","aggType","tupleInfo","tupColumnInfo","colOrdinal","getUniqueName","errorDialog","createErrorDialog","getDrillThroughData","maxRowsInDrillThrough","gridJSON","RowIndex","ColumnIndex","parsedObj","Key","Value","triggerDialog","indexArray","indexArray_1","cIndex","aIndex","indexArray_2","valuetText","drillThrough","PivotChart","headerColl","columnGroupObject","fieldPosition","measuresNames","loadChart","chartSettings","colMeasurePos","chart","series","primaryXAxis","primaryYAxis","multiLevelLabels","axes","zoomFactor","enableMultiAxis","measureList","currentMeasure","prevLevel","firstLevelUName","totColIndex","getColumnTotalIndex","rKeys","levelCollection","integratedLevel","indexCount","memberCell","levelPos","lastHierarchy","lastDimension","groupHierarchyWithLevels","rKeys_1","rKey","firstRowCell","fieldPos","currrentLevel","cKeys","prevMemberCell","cKeys_1","cKey","cellIndex","measureAllow","colHeaders","columnSeries","yValue","refreshChart","chartSeries","persistSettings","getPersistData","columnKeys_1","currentSeries","frameObjectWithKeys","xName","yName","yAxisName","seriesEvent","pivotChart","bindChart","framedSeries","currentXAxis","configXAxis","currentTooltipSettings","configTooltipSettings","currentLegendSettings","configLegendSettings","currentZoomSettings","configZoomSettings","axesWithRows","frameAxesWithRows","displayOption","primary","showToolbar","getGridWidthAsNumber","Chart","ColumnSeries","StackingColumnSeries","RangeColumnSeries","BarSeries","StackingBarSeries","ScatterSeries","BubbleSeries","LineSeries","StepLineSeries","SplineSeries","SplineAreaSeries","MultiColoredLineSeries","PolarSeries","RadarSeries","AreaSeries","RangeAreaSeries","StackingAreaSeries","StepAreaSeries","MultiColoredAreaSeries","ParetoSeries","Legend","Tooltip","Category","MultiLevelLabel","ScrollBar","Zoom","Export","Crosshair","legendSettings","tooltip","zoomSettings","titleStyle","subTitle","subTitleStyle","margin","background","chartArea","palettes","crosshair","selectionMode","isMultiSelect","enableExport","selectedDataIndexes","isTransposed","enableAnimation","useGroupingSeparator","description","enableSideBySidePlacement","animationComplete","legendRender","textRender","pointRender","seriesRender","chartMouseMove","chartMouseClick","pointMove","pointClick","chartMouseLeave","chartMouseDown","chartMouseUp","dragComplete","zoomComplete","scrollStart","scrollEnd","scrollChanged","tooltipRender","loaded","load","resized","axisLabelRender","multiLevelLabelClick","percentChart","percentAggregateTypes","valCnt","divider","measureField","measureAggregatedName","getFormat","resFormat","currentYAxis","labelFormat","plotOffset","colIndexColl","rKeys_2","cKeys_2","fieldCount","measurePosition","lastEnd","frameMultiLevelLabels","startKeys","parentHeaders","startKeys_1","startKey","sKey","span","gRows","startKeys_2","lKeys_1","levelKey","lKey","categories","overflow","getZoomFactor","calculatedWidth","seriesLength","enableMarker","padding","shapePadding","valueType","labelIntersectAction","enableScrollbar","showMultiLevelLabels","majorTickLines","enableSelectionZooming","point","seriesName","isChartLoaded","alignIcon","multilabelAxisName","labelInfo","memberUqName","fieldAvail","memIndex","drillInfo","renderPivotGrid","zoomModule","isZoomed","PivotSeries","PivotChartSeriesBorder","PivotChartSeriesAnimation","PivotChartSeriesSegment","PivotChartSeriesMarkerSettings","Border","DataLabelSettings","PivotChartSeriesErrorSettings","ErrorBarCapSettings","PivotChartSeriesTrendline","Animation","MarkerSettings","PivotChartSeriesEmptyPointSettings","PivotChartSeriesCornerRadius","PivotChartAxisFont","PivotChartAxisCrosshairTooltip","Theme","crosshairLabelFont","Font","PivotChartAxisMajorTickLines","PivotChartAxisMajorGridLines","PivotChartAxisMinorTickLines","PivotChartAxisMinorGridLines","PivotChartAxisAxisLine","PivotChartAxisStripLineSettings","stripLineLabelFont","PivotChartAxisLabelBorder","PivotChartSettingsChartArea","PivotChartSettingsCrosshairSettings","PivotChartSettingsLegendSettings","ChartLocation","legendLabelFont","right","Margin","PivotChartSettingsIndexes","PivotChartSettingsMargin","ChartSegment","ErrorBarSettings","Trendline","EmptyPointSettings","CornerRadius","PivotAxis","axisLabelFont","CrosshairTooltip","axisTitleFont","MajorTickLines","MajorGridLines","MinorTickLines","AxisLine","MinorGridLines","StripLineSettings","LabelBorder","PivotTooltipSettings","tooltipLabelFont","PivotZoomSettings","ChartSettings","chartTitleFont","chartSubTitleFont","ChartArea","CrosshairSettings","Indexes","MDXQuery","getCellSets","olapEngine","refPaging","isQueryUpdate","isMondrian","isMeasureAvail","isPaging","updateDrilledItems","fieldDataObj","fieldListObj","cellSetInfo","measureQuery","getMeasuresQuery","rowQuery","getDimensionsQuery","columnQuery","pagingQuery","getPagingQuery","getPagingCountQuery","slicerQuery","getSlicersQuery","filterQuery","getfilterQuery","caclQuery","getCalculatedFieldQuery","query","frameMDXQuery","request","LCID","mdxQuery","getTableCellData","generatePagingData","generateEngine","successMethod","customArgs","connectionString","getConnectionInfo","soapMessage","doAjaxPost","rowQueryCpy","calRowPage","calColPage","calRowSize","calColumnSize","dimensions","getDimensionQuery","drillQueryObj","getDrillQuery","updateValueSortQuery","rawDrillQuery","isOnDemandDrill","onDemandDrillQuery","drilledMembers_1","drillQuery","rawQuery","drillInfo_1","heirarchize","tag","slicers","i_1","colUqName","getDimensionUniqueName","slicerUqName","dimension","hasAllMember","hierarchyNode","curElement","hierarchyNode_1","pid","measures","measures_1","advancedFilters","advancedFilterQuery","rowFilter","columnFilter","isFound","axes_1","advancedFilters_1","getAdvancedFilterQuery","updatedFilterQuery","currentAxis","getAdvancedFilterCondtions","filterOperator","calcMembers","calcQuery","calcMembers_1","aliasName","OlapEngine","drilledSets","namedSetsPosition","colDepth","totalCollection","parentObjCollection","curDrillEndPos","headerGrouping","lastLevel","hideRowTotalsObject","hideColumnTotalsObject","sortObject","measureReportItems","calcChildMembers","selectedItems","savedFieldListData","getCulture","getAxisFields","frameSortObject","fieldListData","setNamedSetsPosition","updateFieldlist","loadCalculatedMemberElements","updateFilterItems","xmlDoc","xmlaCellSet","countCells","newPage","prevPage","colMeasures","cloneNode","onDemandDrillEngine","getSubTotalsVisibility","columnTuples","rowTuples","valCollection","measureInfo","getMeasureInfo","orderedInfo","frameMeasureOrder","orderedHeaderTuples","orderedValueTuples","updateTupCollection","frameColumnHeader","performColumnSorting","frameRowHeader","performRowSorting","frameValues","performColumnSpanning","tuples","lastAllStartPos","lastAllCount","tupPos","prevUNArray","allType","rowMembers","availAllMember","withoutAllStartPos","withoutAllEndPos","minLevel","gTotals","Grand Total","newTupPosition","frameTupCollection","prevTupInfo","tuplesLength","allCount","allStartPos","startTupPos","memPos","prevParent","typeColl","typeCollection","drillStartPos","startDrillUniquename","drillEndPos","firstTupMembers","drillAllow","withoutAllAllow","parentUniqueName","lastPos","lastMemPos","withoutAllDrilled","getCaptionCollectionWithMeasure","showTotals","totPos","updateRowEngine","hideTotalsObject","levelColl","drillState","captionCollection","hideFieldPos","memberlevel","memberUName","startsWith","memberCaption","parentUName","UName","Caption","currUName","currCaption","currLevel","uNames","captions","uName","uCollection","parentLevel","setDrillInfo","tuple","captionColection","captionCollectionArray","setsPositions","currEngineCount","newEngineCount","newTuplesCount","tupCollection","currTupCount","lastRealTup","lastSavedInfo","isSubTotIncluded","withoutAllAvail","endDrillUniquename","isStartCol","levelComp","levelCompare","mergeTotCollection","setParentCollection","frameCommonColumnLoop","endAllow","allow","orderTotals","coll","groupColl","maxCnt","collLength","isSameParent","isWithoutAllMember","pUName","parentLvlCollection","newLevels","oldLevels","changePos","lPos","prevHdrPos","flagLevel","flagLevelString","getLevelsAsString","enterFlag","coll1","drillMemberPosition","memberPos","memberDepth","spanMemPos","colMembers","memDup","rowDepthPos","getDrilledParent","childMember","savedCollection","currentChild","currentParent","lvlGrouping","measureObjects","gSumGrouping","gSumFlag","withoutAllLastPos","rPos","currentTuple","frameUniqueName","getParentUname","levels","sortLvlGrouping","parentGrouping","objCollection","objKeys","oPos","pKeys","kPos","sortRowHeaders","groupSets","axisSets","aPos","isMembersIncluded","isLastMeasure","isFullLength","isLastNotDrilledMember","isActualLastMember","matchParent","newPos","temporary","grandTotal","arrange","k","sortColumnHeaders","l","length_1","q","weight","hgt","height1","hgt1","leng","m","n","pElement","cElement","o","hasLastMeasure","measureAvail","uniqueNameColl","parentString","sepPos","sepObjects","lastPosition","spanCollection","colMeasureCount","nextColCell","nextRowCell","colflag","rowflag","tupColInfo","isSubTot","rowEndPos","startRowOrdinal","lastColCell","valElement","formatObj","formatDate","mAxis","measureAxis","measureIndex","valueInfo","vTuples","orderedTuples","orderedVTuples","cLevels","uniqueLevels","cLevel","uniqueLevels_1","uniqueLevels_2","values_2","valueIndex","vOrdinalIndex","cRow","ordinalValue","getDrilledSets","currTuple","memberArray","joinArray","splitLevels","drillLevel","cropLevels","childSets","levels_1","drillFieldSep","cropArray","drillSets","childSets_1","updateDrilledInfo","updateCalcFields","lastcalcInfo","parentID","actualFilter","expression","parentHierarchy","updateFieldlistData","isSelect","getTreeData","getFieldListItems","getAggregateType","filterItems_1","isMembersAvail","selectedElements","parentNodes","parentNodes_1","getParentNode","currentItems","selectedElement","parentItem","drilledItems","maxRows","xmla","getSoapMsg","drillThroughSuccess","child","tagName","tag_1","getFilterMembers","isSearchFilter","loadLevelMember","getMembers","isAllFilterData","filterParentQuery","dimProp","searchMembers","currrentMembers","generateMembers","loadLevelMembers","getChildMembers","memberUQName","getCalcChildMembers","getSearchMembers","searchString","maxNodeLimit","nodeAttr","data-fieldName","parentUqName","hasChildren","htmlAttributes","isNodeExpand","expanded","nodeSelect","isHierarchy","fieldDate","hierarchyElements","fields_2","isAllMemberAvail","hierarchySuccess","loadDimensionElements","fieldListElements","calcObj","spriteCssClass","fields_3","dimensionName","dimensionCaption","defaultHierarchy","loadNamedSetElements","dimensionElements","reportElement","dataFields_3","measureGroupItems","fields_4","fieldObj","isNamedSets","loadHierarchyElements","dataFields_4","fields_5","stringCollection","hierarchyFolderName","dimensionElements_1","folderName","curParentElement","dimensionElements_2","fieldObj_1","loadLevelElements","newDataSource","fields_6","levelCaption","levelObj","isChecked","loadMeasureElements","dataFields_5","loadMeasureGroups","fields_7","measureGRPName","measuresGroups","success","Ajax","contentType","onSuccess","DOMParser","parseFromString","onFailure","send","connectionInfo","getMDXQuery","GroupingBarSettings","CellEditSettings","ConditionalSettings","HyperlinkSettings","DisplayOption","PivotView","options","_this_1","lastSortInfo","lastFilterInfo","lastCalcFieldInfo","shiftLockedPos","savedSelectedCellsPos","isPopupClicked","isMouseDown","isMouseUp","defaultItems","isCellBoxMultiSelection","scrollDirection","totColWidth","posCount","isModified","needsID","pivotRefresh","Component","setValue","mergePersistPivotData","PivotView_1","requiredModules","isCommonRequire","modules","allowConditionalFormatting","allowNumberFormatting","preRender","initProperties","Browser","isDevice","renderToolTip","keyboardModule","defaultLocale","total","noValue","collapse","expand","rowAxisPrompt","columnAxisPrompt","valueAxisPrompt","filterAxisPrompt","filtered","delete","CalculatedField","createCalculatedField","error","invalidFormula","dropText","dropTextMobile","dropAction","alert","warning","ok","search","drag","allFields","addToRow","addToColumn","addToValue","addToFilter","emptyData","fieldExist","confirmText","noMatches","edit","clear","formulaField","dragField","clearFilter","by","multipleItems","enterValue","chooseDate","Before","BeforeOrEqualTo","After","AfterOrEqualTo","labelTextContent","dateTextContent","valueTextContent","Equals","DoesNotEquals","BeginWith","DoesNotBeginWith","EndsWith","DoesNotEndsWith","Contains","DoesNotContains","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Between","NotBetween","And","Sum","Count","DistinctCount","Product","Avg","Min","SampleVar","PopulationVar","RunningTotals","Max","Index","SampleStDev","PopulationStDev","PercentageOfRowTotal","PercentageOfParentTotal","PercentageOfParentColumnTotal","PercentageOfParentRowTotal","DifferenceFrom","PercentageOfDifferenceFrom","PercentageOfGrandTotal","PercentageOfColumnTotal","MoreOption","NotEquals","AllValues","conditionalFormating","formatLabel","valueFieldSettings","summarizeValuesBy","sourceName","sourceCaption","example","editorDataLimitMsg","details","manageRecords","Years","Quarters","Months","Days","Hours","Minutes","Seconds","new","saveAs","rename","deleteReport","export","subTotals","grandTotals","reportName","pdf","excel","csv","png","jpeg","svg","doNotShowSubTotals","showSubTotalsRowsOnly","showSubTotalsColumnsOnly","doNotShowGrandTotals","showGrandTotalsRowsOnly","showGrandTotalsColumnsOnly","toolbarFormatting","reportMsg","reportList","removeConfirm","emptyReport","bar","line","area","scatter","polar","of","emptyFormat","emptyInput","newReportConfirm","emptyReportName","qtr","null","groupOutOfRange","fieldDropErrorAction","ascending","descending","number","percentage","formatType","symbolPosition","grouping","true","false","decimalPlaces","expressionField","customFormat","selectedHierarchy","olapDropText","Percent","Currency","Custom","Measure","Dimension","Standard","blank","fieldTooltip","fieldTitle","QuarterYear","drillError","copy","defaultReport","customFormatString","invalidFormat","unGroup","invalidSelection","groupFieldCaption","groupTitle","startAt","endAt","groupBy","selectGroup","L10n","isDragging","onBeforeTooltipOpen","showTooltip","showTipPointer","beforeRender","setToolTip","conmenuItems","groupItems","customItems","exportItems","aggItems","expItems","aggregateItems","getDefaultItems","buildDefaultItems","aggregateGroup","exportGroupItems","menuItem","cls.PIVOTVIEW_GRID","cls.PIVOTVIEW_EXPORT","cls.GRID_PDF_EXPORT","cls.GRID_EXCEL_EXPORT","cls.GRID_CSV_EXPORT","cls.PIVOTVIEW_EXPAND","cls.PIVOTVIEW_COLLAPSE","cls.ICON_ASC","cls.ICON_DESC","cls.PIVOTVIEW_GROUP","cls.PIVOTVIEW_UN_GROUP","beforeColumnsRender","columnRender","chartTooltipRender","chartLoaded","chartLoad","chartResized","chartAxisLabelRender","updatePageSettings","chartModule","colValues","rowValues","heightAsNumber","getWidthAsNumber","cellTemplateFn","templateParser","spinnerTemplate","createSpinner","loadArgs","updateClass","events.initialLoad","renderComplete","generateData","events.dataReady","onContentReady","keyEntity","addOnPersist","loadPersistData","persistData","pivotData","blazdataSource","localStorage","getItem","showConditionalFormattingDialog","withHeader","onPropertyChanged","newProp","oldProp","updateGroupingReport","refreshData","pivotFieldListModule","renderEmptyGrid","axisFieldModule","toolbarModule","refreshToolbar","compile","innerHtml","tempElement","firstChild","resetBlazorTemplate","clonedDataSource","virtualscrollModule","showRowHeaderHyperlink","showHyperlink","showColumnHeaderHyperlink","showValueCellHyperlink","showSummaryCellHyperlink","applyHyperlinkSettings","drillThroughModule","formatUnit","showSpinner","hideSpinner","isRefreshGrid","isSorted","isFiltered","isAggChange","isCalcChange","interopArguments","enginePopulatedEventMethod","isRequireUpdate","endDialog","datasourceSettings","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","pdfExportProperties","pdfDoc","pdfExportModule","chartExport","orientation","exportModule","printChart","print","chartDrillInfo","drilledItem_1","drillArgs_1","drillItem","onOlapDrill","drilledMember","drillSet","itemPos","fieldListSpinnerElement","virtualDiv","mCnt","verOffset","unwireEvents","gridCells","gridCells_1","templateObject","updateBlazorTemplate","hasField","getRowText","getColText","rowText","limit","colText","cls.RTL","cls.DEVICE","mouseRclickHandler","which","mouseDownHandler","parent_1","parentAt","lastSelectedElement","mouseMoveHandler","mouseUpHandler","CellClicked","framePivotColumns","gridcolumns","gridcolumns_1","setGridColumns","gridcolumns_2","calcWidth","gridcolumns_3","setCommonColumnsWidth","onWindowResize","applyRowSelection","cellClick","shiftKey","ctrlKey","rCount","colStart","colEnd","rowStart","isCtrl_1","showPopup","queryStringArray","isToggle_1","activeColumns_1","actColPos_1","rowSelectedList_1","isTargetSelected_1","getSelectedCellsPos","setSavedSelectedCells","scrollModule","setWidth","setHeight","overflowY","initEngine","dataSet","clonedDataSet","clonedReport","pivot_3","this$_1","pivot_4","pivVal","pivotFL","pivotFields","blazPivot","valContent","headContent","pvalLen","blazPivotValues","valLen","frameContent","rowPosition","getData","aggregateObj","bindTriggerEvents","getObject","executeQuery","requiresCount","result","format_1","checkCondition","isHex","substr","colourNameToHex","sheet","createStyleSheet","str","insertRule","createTextNode","head","conditionalSettings","ilen","jlen","conditionalValue1","conditionalValue2","newGroupSettings","updateGroupType","dateGroup","fieldSettings","clonedAxisFields","isDateGroupUpdated","sortObj","drillObj","settingsObj","isExists","addEventListener","removeEventListener","numberFormattingModule","cls.ROOT","NotifyPropertyChanges","CommonKeyboardInteraction","shiftF","shiftS","processFilter","processSort","processDelete","processOpenContextMenu","EventBase","updateSorting","filterDialog","checkisDescending","isDescending","newSortObj","updateFiltering","treeData","getOlapData","isValidFilterItemsAvail","popupTarget","moduleName","createFilterDialog","isSearchEnabled","updatedTreeData","loadOnDemandInMemberEditor","filterItemObj","dummyfilterItems","memberObject","getFilteredTreeNodes","getOlapTreeData","sortOlapFilterData","getParentIDs","treeObj","data_1","li","getChildIDs","cID","data_2","searchTreeNodes","isFieldCollection","searchList","nonSearchList","list_1","enableNodes","disableNodes","searchList_1","parentIDs","childIDs","pNodes","nonSearchList_1","nonSearchList_2","collapseAll","searchTreeItems","memberCount","currentTreeItems","maxNodeLimitInMemberEditor","editorLabelElement","allowExcelLikeFilter","isDataOverflow","dataBind","updateOlapSearchTree","filterItems_2","searchData","getOlapSearchTreeData","currentTreeItemsPos","savedTreeFilterPos","isDateField","filterItems_3","isSearchRender","updateChildNodeStates","members_4","state","sMembers","members_5","selectedNodes_1","members_6","NodeStateModified","onStateModified","droppedClass","nodeDropped","droppedPosition","actualFieldName","getButtonPosition","targetBtn","axisPanel","pivotButtons","DataSourceUpdate","removeFieldFromReport","getNewField","eventArgs_1","droppedField","droppedAxis","dataSourceUpdate_1","fieldAxis","pivotButtonModule","ErrorDialog","dialogRenderer","fieldListDialog","errorPopUp","closeErrorDialog","removeErrorDialog","FilterDialog","editorDialog","cls.MEMBER_EDITOR_DIALOG_CLASS","aria-label","filterCaption","filterObject","getFilterObject","createTreeView","disabled","closeFilterDialog","removeFilterDialog","createTabMenu","updateCheckedState","editorTreeWrapper","levelWrapper","searchWrapper","tabindex","editorSearch","nodeLimitText","labelWrapper","selectAllWrapper","selectAllContainer","treeOuterDiv","cls.EDITOR_TREE_CONTAINER_CLASS","treeViewContainer","promptDiv","cls.EMPTY_MEMBER_CLASS","createLevelWrapper","showClearButton","searchOlapTreeView","eventBase","memberTreeView","allMemberSelect","removeAttribute","TreeView","showCheckBox","expandOn","nodeClicked","nodeCheck","keyPress","nodeChecking","validateTreeNode","nodeExpanding","updateChildNodes","dropMenu","DropDownButton","selectedLevel","nodeLimit","isAllMember","checkedNode","getNode","uncheckAll","checkAll","nodeData","childNodes","curTreeData","updateChildData","treeData_1","addNodes","parentNode","childMemberCount","wrapper","types","regx","types_1","createCustomFilter","selectedIndex","tabObj","Tab","heightAdjustMode","selectedItem","hideTab","valueOptions","levelOptions","selectedOption","selectedValueIndex","selectedLevelIndex","betweenOperators","operatorCollection","operatorCollection_1","unshift","fieldlistData_1","cls.FILTER_DIV_CONTENT_CLASS","data-operator","data-selectedField","data-measure","data-value1","data-value2","textContentdiv","betweenTextContentdiv","cls.BETWEEN_TEXT_DIV_CLASS","separatordiv","levelWrapperDiv","filterWrapperDiv2","levelDropOption","inputDiv2","cls.FILTER_INPUT_DIV_2_CLASS","inputField2","createElements","operators","optionDiv1","optionDiv2","vDataSource","oDataSource","lDataSource","levelIndex","updateInputValues","setStyleAndAttributes","filterObj_1","optionWrapper","inputObj2","ej2_instances","disabledClasses_1","inputObj1_1","DateTimePicker","inputObj2_1","inputObj1_2","NumericTextBox","inputObj2_2","inputObj1_3","inputObj2_3","role","aria-haspopup","uncheckedNodes","getUnCheckedNodes","checkedNodes","getCheckedNodes","firstNode","checkeNodes","getAllCheckedNodes","unCheckeNodes","nodeList","isFilterField","PivotCommon","pivotEngine","nodeStateModified","DialogRenderer","fieldListWrappper","cls.WRAPPER_CLASS","renderAdaptiveLayout","renderFieldListDialog","unWireDialogEvent","wireDialogEvent","renderStaticLayout","layoutHeader","createCalculatedButton","createDeferUpdateButtons","renderDeferUpdateButtons","deferUpdateCheckBox","CheckBox","checked","onCheckChange","deferUpdateApplyButton","Button","cls.DEFER_APPLY_BUTTON","onclick","applyButtonClick","onDeferUpdateClick","deferUpdateCancelButton","cls.DEFER_CANCEL_BUTTON","cancelButtonClick","onCloseFieldList","layoutFooter","checkBoxLayout","buttonLayout","deferUpdateButton1","deferUpdateButton2","clonedFieldList","pivotFieldList","toggleFieldList","cls.TOGGLE_FIELD_LIST_CLASS","aria-disabled","showFieldListDialog","cls.ADAPTIVE_FIELD_LIST_BUTTON_CLASS","showCalculatedField","cls.ADAPTIVE_CALCULATED_FIELD_BUTTON_CLASS","removeFieldListIcon","offsetTop","selectedNodes","adaptiveElement","createAxisTable","tabSelect","createAddButton","fieldWrapper","calculatedButton","calculateField","cls.CALCULATED_FIELD_CLASS","footerContainer","cls.FIELD_LIST_FOOTER_CLASS","fieldListButton","axisWrapper","cls.FIELD_LIST_CLASS","axisContent","cls.AXIS_CONTENT_CLASS","axisPrompt","activeindex","treeViewModule","onShowFieldList","show","keyCode","TreeViewRenderer","fieldListSort","renderTreeDialog","fieldTable","cls.FIELD_TABLE_CLASS","treeHeader","cls.FIELD_LIST_TREE_CLASS","treeViewElement","fieldHeaderWrappper","updateSortElements","centerDiv","axisHeader","renderTreeView","headerWrapper","options_1","spanElement","data-sort","unWireFieldListEvent","wireFieldListEvent","nodeChecked","nodeStateChange","allowDragAndDrop","autoCheck","loadOnDemand","nodeDragStart","dragStart","nodeDragStop","dragStop","drawNode","updateTreeNode","updateNodeIcon","nodeCollapsed","allowDrag","updateOlapTreeNode","liTextElement","liIconElement","dragElement","cls.ADAPTIVE_FIELD_LIST_DIALOG_CLASS","fieldDialog","closeTreeDialog","onFieldAdd","dialogClose","textChange","addNode","liList","disabledList","draggedNode","axis_1","dragItem","clonedNode","axis_2","axisElement","draggedNodeData","isNodeDropped","selectedNode","targetID","isDropped","getButton","droppableElement","dropTarget","sourcePosition","dropPosition","droppableButton","wrapperElement","updateSelectedNodes","parent_2","refreshTreeView","getUpdatedData","expandedNodes","updateExpandedNodes","applySorting","currentFieldSet","currentFieldSet_1","currentFieldSet_2","currentFieldSet_3","item_1","calcMember","AxisTableRenderer","axisTable","cls.AXIS_TABLE_CLASS","leftAxisPanel","rightAxisPanel","renderAxisTable","fieldLabels","axisTitleWrapper","cls.AXIS_ICON_CLASS","axisTitle","getIconupdate","localePrompt","Droppable","unWireEvent","wireEvent","updateDropIndicator","PivotButton","menuOption","PivotFieldList","axisField","AxisFieldRenderer","renderPivotButton","valuePos","showValuesButton","groupingBarSettings","isMeasureFieldsAvail","buttonWrapper","data-tag","cls.PIVOT_BUTTON_CLASS","data-uid","isvalue","dropIndicatorElement","dropLastIndicatorElement","cls.DROP_INDICATOR_CLASS","dragWrapper","createButtonDragIcon","createButtonText","createSortOption","createFilterOption","getTypeStatus","removeElement","showRemoveIcon","pivotButton","createDraggable","valueData","valueFiedDropDownList","ddlDiv","aggregation","filterMem","updateButtontext","showAggregationOnValueField","oncontextmenu","cls.PIVOT_BUTTON_CONTENT_CLASS","fieldListItem","createSummaryType","showValueTypeIcon","createMenuOption","draggable","Draggable","clone","enableTailMode","enableAutoScroll","helper","createDragClone","onDragStart","onDragging","onDragStop","abort","sortCLass","showSortIcon","filterCLass","cls.FILTER_COMMON_CLASS","showFilterIcon","filterCount","memLen","updateOlapButtonText","allNodes","filteredItems","loop","actualFilterItems","updatedFilterItems_1","cloneElement","fieldListPopup","bindEvents","cursorAt","isNOU","targetTouches","cursor","isButtonDropped","droppableTarget","thisObj","pivotObj","fieldName_1","parsedData","dateMembers","FormattedText","ActualText","updateFilterEvents","bindDialogEvents","updateDialogButtonEvents","updateFilterState","updateCustomFilter","ClearFilter","removeDataSourceSettings","inputElementString","focusElement","refreshPivotButtonState","tabElement","removeButton","updateNodeStates","checkedStateAll","searchItemObj","currentMembers","checkedNodes_1","checkedNodes_2","isNodeUnChecked","cNodeLength","selectedButton","pivotButtons_1","handlers","createPivotButtons","axisTableModule","isRequiredUpdate","staticFieldList","dropFilterPrompt","dropColPrompt","dropRowPrompt","dropValPrompt","addPrompt","adaptiveFieldHeader","centerHeader","deferLayoutUpdate","captionData","frameCustomProperties","fieldListRender","requireRefresh","pivotDataSet","this$_2","getFieldCaption","getFields","isTreeViewRefresh","isEngineRefresh","isOlapDataRefreshed","dataArgs","updateOlapDataSource","updateView","pivotId","ID","VARP","CALC","isFormula","existingReport","dialog","inputObj","droppable","newFields","isFieldExist","formulaText","fieldText","isEdit","currentFieldName","confirmPopUp","displayMenu","dropField","fieldClickHandler","cls.FORMAT","clearFormula","customString","memberTypeDrop","hierarchyDrop","formatDrop","readonly","curMenu","selectContextMenu","createMenu","menuItems","applyFormula","currentObj","isExist","createConfirmDialog","cField","addFormula","showError","cls.CALCINPUT","getFieldListData","icon","fieldDropped","textCovered","currentValue","cursorPos","selectionStart","textAfterText","textBeforeText","setSelectionRange","createDialog","cls.CALCDIALOG","calcButtons","cancelClick","clearButton","closeDialog","renderDialogElements","outerDiv","cls.OLAP_CALCOUTERDIV","olapFieldTreeDiv","olapCalcDiv","cls.FORMULA","accordDiv","buttonDiv","addBtn","cancelBtn","formulaTitle","inputDiv","wrapDiv","headerWrapperDiv","cls.PIVOT_ALL_FIELD_TITLE_CLASS","offsetY","cls.TREEVIEW","dropDiv","okBtn","memberTypeTitle","hierarchyTitle","formatTitle","customFormatDiv","customFormatObj","renderMobileLayout","createOlapDropElements","mData","fData","fieldData","formatStringData","memberTypeData_1","formatStringData_1","memberTypeObj","hierarchyListObj","formatStringObj","customerFormatObj","nodeDragging","dropIndicator","nodeSelected","drawTreeNode","nodeCollapsing","fieldListData_1","childNodes_1","isDrag","liTextElement_1","prepend","append","createTypeContainer","input","data-ftxt","getAccordionData","cls.FLAT","cancelBtnClick","accordion","Accordion","expanding","accordionExpand","updateType","addBtnClick","radiobutton","RadioButton","onChange","checkbox","nodes","nodes_1","renderDialogLayout","keyboardEvents","moveRight","replaceFormula","cls.OK_BUTTON_CLASS","FieldList","initiateModule","aggregateCellInfo","enginePopulating","enginePopulated","onFieldDropped","updateControl","currentWidth","actualWidth","abs","Common","commonModule","initiateCommonModule","AxisFields","indentDiv","GroupingBar","touchObj","Touch","tapHold","tapHoldHandler","renderLayout","groupingTable","rowAxisPanel","cls.AXIS_ROW_CLASS","columnAxisPanel","cls.AXIS_COLUMN_CLASS","valueAxisPanel","cls.AXIS_VALUE_CLASS","filterAxisPanel","cls.AXIS_FILTER_CLASS","rowPanel","cls.GROUP_ROW_CLASS","columnPanel","cls.GROUP_COLUMN_CLASS","valuePanel","cls.GROUP_VALUE_CLASS","filterPanel","cls.GROUP_FILTER_CLASS","axisPanels_1","displayMode","groupingChartTable","appendToElement","emptyRowCount","emptyHeader","colGroupElement","rightAxisPanelWidth","rightPanelHeight","topLeftHeight","columnRows","trCell","colHeight","columnRows_1","rowHeader_1","rhElement","rightAxisWidth","emptyRowHeader","groupHeight","columnRows_2","rowHeader_2","handlerElement","actWidth","headerModule","lastButton","lastButtonWidth","buttonWidth","rowHeaderTable","rowContentTable","rowContent","colwidth","valueColWidth","setColWidth","dropIndicatorUpdate","originalEvent","ConditionalFormatting","fieldsDropDown","conditionsDropDown","fontNameDropDown","fontSizeDropDown","newFormat","addButtonClick","cls.FLAT_CLASS","refreshConditionValues","addFormat","createDialogElements","renderDropDowns","renderColorPicker","button","innerDiv","table","tRow","td","valuelabel","measureDropdown","measureInput","conditionDropdown","conditionInput","cls.INPUT","valuespan","formatlabel","fontNameDropdown","fontNameInput","fontSizeDropdown","fontSizeInput","colorPicker1","colorPicker2","valuePreview","popupHeight","popupWidth","measureChange","conditionChange","fontNames","fontNameChange","fontSizeChange","ColorPicker","fontColorChange","nextElementSibling","backColorChange","toggleBtn","toggleButtonClick","hex","h","charAt","exec","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","currentReport","createToolbar","renderDialog","tool","created","getItems","fetchReports","reports","fetchReportsArgs","callbackPromise","Deferred","resolve","v","toolbar_1","prefixIcon","cls.GRID_NEW","tooltipText","actionClick","cls.GRID_SAVE","cls.GRID_SAVEAS","cls.GRID_RENAME","cls.GRID_REMOVE","toDisable","cls.TOOLBAR_GRID","menuItemClick","cls.GRID_MDX","cls.GRID_FORMATTING","cls.FORMATTING_TOOLBAR","cls.TOOLBAR_FIELDLIST","align","toolbarArgs","customToolbar","reportChange","dropArgs","reportLoad","itemData","saveReport","saveArgs","dialogShow","mdxQueryDialog","mdxDialog","renderMDXDialog","textarea","cls.GRID_REPORT_INPUT","renameReport","createNewReport","showNumberFormattingDialog","okBtnClick","copyMDXQuery","textArea","execCommand","err","reportInput","isNew","renameArgs","updateReportList","okButtonClick","removeArgs","cls.TOOLBAR_CHART","chartMenu","cls.GRID_EXPORT","cls.GRID_PNG_EXPORT","cls.GRID_JPEG_EXPORT","cls.GRID_SVG_EXPORT","exportMenu","updateExportMenu","cls.GRID_SUB_TOTAL","cls.PIVOT_SELECT_ICON","subTotalMenu","updateSubtotalSelection","cls.GRID_GRAND_TOTAL","grandTotalMenu","updateGrandtotalSelection","cls.FORMATTING_MENU","cls.NUMBER_FORMATTING_MENU","cls.CONDITIONAL_FORMATTING_MENU","formattingMenu","cls.PIVOT_DISABLE_ICON","exportArgs","NumberFormatting","getDialogContent","updateFormatting","renderControls","outerElement","tValue","valueLable","valueDrop","formatLable","groupingLable","groupingDrop","decimalLable","decimalDrop","customLable","valuesDropDown","valueChange","formatDropDown","dropDownChange","groupingDropDown","decimalDropDown","first","fieldList_1","insertFormat","Grouping","isUpdate","createGroupSettings","updateUnGroupSettings","selectedCellsInfo_1","getGroupSettings","isInvalid","createGroupDialog","validateSettings","updateDateSource","removeGroupSettings","groupNames","modifyParentGroupItems","groupDialog","createGroupOptions","updateGroupSettings","groupInstance","groupWrapperDiv1","currentField","nextField","captionInputTextDiv1","captionInputDiv1","captionInputField1","captionInputObj1","startAtWrapper","startAtOptionDiv1","startAtInputField1","endAtWrapper","endAtOptionDiv1","endAtInputField1","intervalWrapper","intervalTextDiv1","intervalInputField1","selectedGroups","groupData","startAtInputObj","endAtInputObj","MultiSelect","CheckBoxSelection","intervalObj_1","showDropDownIcon","enableSelectionOrder","removed","checkBoxSelectionModule","activeLi","selectedInterval","intervalObj","min","startAtObj","endAtObj","groupType","inputInstance","captionInputInstance","splicedItems","newItems","mergeArray","selectedOptions_1","startCheckBoxInstance","endCheckBoxInstance","startInputInstance","endInputInstance","intervalInstance","getGroupBasedSettings","groupFields_1","getGroupByName","customFields","groupFields_2","validatedSettings","groupOrders","orderedGroups","reOrderSettings","groupFields_3","groupOrders_1","orderedSettings","isItemsUpdated","splicedItems_1","resultArray","array","assoc","index.PivotView","index.GroupingBar","index.FieldList","index.CalculatedField","index.ConditionalFormatting","index.VirtualScroll","index.DrillThrough","index.Toolbar","index.PivotChart","index.PDFExport","index.ExcelExport","index.NumberFormatting","index.Grouping"],"mappings":"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F,IACb64D,EAAev9F,UAAW,yBAAsB,IACnDijC,IACIY,WAAS,UACV05D,EAAev9F,UAAW,iBAAc,IAC3CijC,IACIY,cACD05D,EAAev9F,UAAW,aAAU,IACvCijC,IACIY,WAAS,KACV05D,EAAev9F,UAAW,eAAY,IACzCijC,IACIY,YAAS,IACV05D,EAAev9F,UAAW,2BAAwB,IACrDijC,IACIY,YAAS,IACV05D,EAAev9F,UAAW,uBAAoB,IACjDijC,IACIY,YAAS,IACV05D,EAAev9F,UAAW,6BAA0B,IACvDijC,IACIY,WAAS,MACV05D,EAAev9F,UAAW,iCAA8B,IAC3DijC,IACIY,YAAS,IACV05D,EAAev9F,UAAW,iCAA8B,IAC3DijC,IACIY,cACD05D,EAAev9F,UAAW,sBAAmB,IAChDijC,IACIiC,WACDq4D,EAAev9F,UAAW,WAAQ,IACrCijC,IACIiC,WACDq4D,EAAev9F,UAAW,uBAAoB,IACjDijC,IACIiC,WACDq4D,EAAev9F,UAAW,sBAAmB,IAChDijC,IACIiC,WACDq4D,EAAev9F,UAAW,sBAAmB,IAChDijC,IACIiC,WACDq4D,EAAev9F,UAAW,qBAAkB,IAC/CijC,IACIiC,WACDq4D,EAAev9F,UAAW,wBAAqB,IAClDijC,IACIiC,WACDq4D,EAAev9F,UAAW,gBAAa,IAC1CijC,IACIiC,WACDq4D,EAAev9F,UAAW,cAAW,IACxCijC,IACIiC,WACDq4D,EAAev9F,UAAW,gBAAa,IAC1Cu9F,EAAiBt6D,IACb2hD,yBACD2Y,IAELxzB,aCp4BE07B,GAAO,gBACPC,GAAO,kBAGPj6B,GAAiC,WAEjC,QAASA,GAAgBpmD,GAErB7wB,KAAKmxG,WAAY,EAEjBnxG,KAAK4nF,iBAAkB,EACvB5nF,KAAK6wB,OAASA,EACd7wB,KAAKoxG,eAAiB,KACtBpxG,KAAK6wB,OAAOsT,sBAAwBnkC,KACpCA,KAAKiwF,sBACLjwF,KAAKgwF,mBACLhwF,KAAKstE,SAAWttE,KAAK6wB,OAAOe,QAAQxc,GACpCpV,KAAKqxG,OAAS,KACdrxG,KAAKsxG,SAAW,KAChBtxG,KAAK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"}