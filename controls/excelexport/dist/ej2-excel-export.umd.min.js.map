{"version":3,"file":"ej2-excel-export.umd.min.js","sources":["../src/cell-style.js","../src/cell.js","../src/column.js","../src/row.js","../src/worksheets.js","../src/worksheet.js","../src/value-formatter.js","../src/csv-helper.js","../src/blob-helper.js","../src/workbook.js"],"sourcesContent":["/**\n * CellStyle class\n * @private\n */\nvar CellStyle = /** @class */ (function () {\n    function CellStyle() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 14;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.indent = 0;\n        this.rotation = 0;\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n    return CellStyle;\n}());\nexport { CellStyle };\n/**\n * Font Class\n * @private\n */\nvar Font = /** @class */ (function () {\n    function Font() {\n        this.sz = 14;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n    }\n    return Font;\n}());\nexport { Font };\n/**\n * CellXfs class\n * @private\n */\nvar CellXfs = /** @class */ (function () {\n    function CellXfs() {\n    }\n    return CellXfs;\n}());\nexport { CellXfs };\n/**\n * Alignment class\n * @private\n */\nvar Alignment = /** @class */ (function () {\n    function Alignment() {\n    }\n    return Alignment;\n}());\nexport { Alignment };\n/**\n * CellStyleXfs class\n * @private\n */\nvar CellStyleXfs = /** @class */ (function () {\n    function CellStyleXfs() {\n    }\n    return CellStyleXfs;\n}());\nexport { CellStyleXfs };\n/**\n * CellStyles class\n * @private\n */\nvar CellStyles = /** @class */ (function () {\n    function CellStyles() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n    return CellStyles;\n}());\nexport { CellStyles };\n/**\n * NumFmt class\n * @private\n */\nvar NumFmt = /** @class */ (function () {\n    function NumFmt(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n    return NumFmt;\n}());\nexport { NumFmt };\n/**\n * Border class\n * @private\n */\nvar Border = /** @class */ (function () {\n    function Border(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n    return Border;\n}());\nexport { Border };\n/**\n * Borders class\n * @private\n */\nvar Borders = /** @class */ (function () {\n    function Borders() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n    return Borders;\n}());\nexport { Borders };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Cell = /** @class */ (function () {\n    function Cell() {\n    }\n    return Cell;\n}());\nexport { Cell };\n/**\n * Cells class\n * @private\n */\nvar Cells = /** @class */ (function (_super) {\n    __extends(Cells, _super);\n    function Cells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (cell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var c = _a[_i];\n                if (c.index === cell.index) {\n                    _this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(cell);\n            }\n        };\n        return _this;\n    }\n    return Cells;\n}(Array));\nexport { Cells };\n","/**\n * Column class\n * @private\n */\nvar Column = /** @class */ (function () {\n    function Column() {\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Row class\n * @private\n */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    return Row;\n}());\nexport { Row };\n/**\n * Rows class\n * @private\n */\nvar Rows = /** @class */ (function (_super) {\n    __extends(Rows, _super);\n    function Rows() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (row) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var r = _a[_i];\n                if (r.index === row.index) {\n                    _this[count] = row;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(row);\n            }\n        };\n        return _this;\n    }\n    return Rows;\n}(Array));\nexport { Rows };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheets class\n * @private\n */\nvar Worksheets = /** @class */ (function (_super) {\n    __extends(Worksheets, _super);\n    function Worksheets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Worksheets;\n}(Array));\nexport { Worksheets };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Worksheet = /** @class */ (function () {\n    function Worksheet() {\n        this.isSummaryRowBelow = true;\n        this.showGridLines = true;\n    }\n    return Worksheet;\n}());\nexport { Worksheet };\n/**\n * Hyperlink class\n * @private\n */\nvar HyperLink = /** @class */ (function () {\n    function HyperLink() {\n    }\n    return HyperLink;\n}());\nexport { HyperLink };\n/**\n * Grouping class\n * @private\n */\nvar Grouping = /** @class */ (function () {\n    function Grouping() {\n    }\n    return Grouping;\n}());\nexport { Grouping };\n/**\n * FreezePane class\n * @private\n */\nvar FreezePane = /** @class */ (function () {\n    function FreezePane() {\n    }\n    return FreezePane;\n}());\nexport { FreezePane };\n/**\n * MergeCell\n * @private\n */\nvar MergeCell = /** @class */ (function () {\n    function MergeCell() {\n    }\n    return MergeCell;\n}());\nexport { MergeCell };\n/**\n * MergeCells class\n * @private\n */\nvar MergeCells = /** @class */ (function (_super) {\n    __extends(MergeCells, _super);\n    function MergeCells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (mergeCell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var mCell = _a[_i];\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    var intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    _this[count] = intersectingCell;\n                    mergeCell = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(mergeCell);\n            }\n            return mergeCell;\n        };\n        return _this;\n    }\n    MergeCells.isIntersecting = function (base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    };\n    return MergeCells;\n}(Array));\nexport { MergeCells };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @private\n */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    ValueFormatter.prototype.displayText = function (value, format) {\n        return this.toView(value, this.getFormatFunction(format));\n    };\n    return ValueFormatter;\n}());\nexport { ValueFormatter };\n","import { ValueFormatter } from './value-formatter';\n/**\n * CsvHelper class\n * @private\n */\nvar CsvHelper = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function CsvHelper(json) {\n        this.csvStr = '';\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (var i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    CsvHelper.prototype.parseWorksheet = function (json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRows = function (rows) {\n        var count = 1;\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRow = function (row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            var count = 1;\n            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += ',';\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseCell = function (cell) {\n        var csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: cell.style.numberFormat }));\n                    }\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: this.globalStyles.get(cell.style.name) }));\n                    }\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    };\n    CsvHelper.prototype.parseCellValue = function (value) {\n        if (value.indexOf(',') !== -1 || value.indexOf('\\n') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    CsvHelper.prototype.save = function (fileName) {\n        this.buffer = new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            var dataUrl_1 = window.URL.createObjectURL(this.buffer);\n            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n            });\n        }\n    };\n    CsvHelper.prototype.saveAsBlob = function () {\n        return new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n    };\n    return CsvHelper;\n}());\nexport { CsvHelper };\n","/**\n * BlobHelper class\n * @private\n */\nvar BlobHelper = /** @class */ (function () {\n    function BlobHelper() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    BlobHelper.prototype.append = function (part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    };\n    BlobHelper.prototype.getBlob = function () {\n        return new Blob(this.parts, { type: 'text/plain' });\n    };\n    return BlobHelper;\n}());\nexport { BlobHelper };\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\n/**\n * Workbook class\n */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture, currencyString) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    };\n    Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n        var _this = this;\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach(function (value, key) {\n                var row = sheet.rows.filter(function (item) {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    var cell = row.cells.filter(function (item) {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        var cells = row.cells.filter(function (item) {\n                            return item.index <= value.x;\n                        });\n                        var insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n                    }\n                }\n                else {\n                    var rows = sheet.rows.filter(function (item) {\n                        return item.index <= value.y;\n                    });\n                    var rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(_this.createCell(value, key));\n                    var insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    };\n    Workbook.prototype.createCell = function (value, key) {\n        var cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter(function (a) { return (a.name === json.name); })[0].index;\n            cellStyle.name = json.name;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency });\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            var compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.processNumFormatId = function (style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            var id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                if (!this.contains(this.sharedString, value)) {\n                    this.sharedString.push(value);\n                }\n                value = this.sharedString.indexOf(value);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.saveAsBlob = function (blobSaveType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheets += '<sheet name=\"' + this.worksheets[i].name + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n            this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" /></worksheet>');\n        sheetBlob.append(sheetString);\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + hLink.target + '\" TargetMode=\"External\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveSheetView = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                si += '<si><t>';\n                si += this.processString(this.sharedString[i]);\n                si += '</t></si>';\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.updateCellXfsStyleXfs = function () {\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                fontStyle += '<sz val=\"' + this.pixelsToRowHeight(font.sz) + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveAlignment = function (cellXf) {\n        var alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n        }\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            var mergedCell = mergeCells.add(mCell);\n            var start = { x: mCell.x, y: mCell.y };\n            var end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    };\n    Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n        for (var x = sCell.x; x <= eCell.x; x++) {\n            for (var y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"],"names":["CellStyle","this","numFmtId","backColor","fontName","fontSize","fontColor","italic","bold","underline","wrapText","hAlign","vAlign","indent","rotation","numberFormat","type","borders","Borders","isGlobalStyle","Font","sz","name","u","b","i","color","CellXfs","Alignment","CellStyleXfs","CellStyles","xfId","NumFmt","id","code","formatCode","Border","mLine","mColor","lineStyle","left","right","top","bottom","all","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Cell","Cells","_super","_this","apply","arguments","add","cell","inserted","count","_i","_a","length","index","push","Column","Row","Rows","row","Worksheets","Worksheet","isSummaryRowBelow","showGridLines","HyperLink","Grouping","FreezePane","MergeCell","MergeCells","mergeCell","mCell","isIntersecting","intersectingCell","x","Math","min","y","Y","width","max","Width","X","height","Height","ref","split","base","compare","ValueFormatter","cultureName","intl","Internationalization","getFormatFunction","format","getDateFormat","getNumberFormat","toView","value","result","isNullOrUndefined","displayText","CsvHelper","json","csvStr","formatter","isMicrosoftBrowser","navigator","msSaveBlob","styles","undefined","globalStyles","Map","set","worksheets","parseWorksheet","rows","parseRows","rows_1","Error","parseRow","cells","parseCell","csv","Date","style","parseCellValue","skeleton","error","has","get","indexOf","save","fileName","buffer","Blob","dataUrl_1","window","URL","createObjectURL","dwlLink","document","createElementNS","download","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","saveAsBlob","BlobHelper","parts","append","part","blob","getBlob","Workbook","saveType","culture","currencyString","sharedStringCount","unitsProportions","hyperlinkStyle","currency","mSaveType","mArchive","ZipArchive","sharedString","mFonts","mBorders","mStyles","printTitles","cellStyles","mNumFmt","mFills","mCellXfs","mCellStyleXfs","cellStyle","parserCellStyle","cellStylesIn","tFormat","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mergedCellsStyle","mHyperLinks","toString","columns","parserColumns","parserRows","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","hyperLinks","mergeOptions","fromJson","toJson","applyProperties","sourceJson","destJson","keys","getCellName","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","titleRowName","printTitleName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","rowsLength","rowId","r","parserRow","insertMergedCellsStyle","forEach","key","filter","item","rowToInsert","createCell","insertIndex","splice","styleIndex","cellToInsert","refName","rowIndex","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","cellId","jsonCell","rowSpan","colSpan","hyperlink","hyperLink","target","getCellValueType","rId","formula","parseCellType","processMergeCells","spans","applyGlobalStyle","a","cellType","defStyleIndex","parserBorder","leftBorder","rightBorder","topBorder","bottomBorder","toLowerCase","processCellStyle","switchNumberFormat","numFmt","cellStyleXfs","_b","_c","cellXfs","returnFormat","getNumberPattern","getDatePattern","border","processNumFormatId","compareResult","compareStyle","size","isNewFont","toCompareStyle","font","replace","isNewBorder","bStyle","isAllBorder","toCompareBorder","allBorderStyle","baseStyle","contains","array","toOADate","value_1","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","printTitle_1","addToArchive","saveWorksheet","sheetBlob","sheetString","saveSheetView","colString","pixelsToColumnWidth","rowString","pixelsToRowHeight","_d","_e","_f","_g","_h","_j","hLink","saveSheetRelations","pixels","val","dDigitWidth","trunc","n","relStr","paneString","sstStart","si","processString","updateCellXfsStyleXfs","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","compareFontResult","fontId","fillId","borderId","applyAlignment","alignment","horizontal","vertical","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","saveAlignment","cellXf","alignString","appString","coreString","toISOString","wbRelation","contentTypeString","sheetsOverride","xmlString","itemName","archiveItem","ZipArchiveItem","addItem","startCell","endCell","start","end","updatedMergedCellStyles","sCell","eCell","dateToTicks","year","month","day","isLeapYear","timeToTicks","hour","minute","second","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899"],"mappings":"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"}